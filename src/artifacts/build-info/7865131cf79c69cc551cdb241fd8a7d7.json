{"id":"7865131cf79c69cc551cdb241fd8a7d7","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@erc725/smart-contracts/contracts/constants.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n// ERC165 INTERFACE IDs\nbytes4 constant _INTERFACEID_ERC725X = 0x7545acac;\nbytes4 constant _INTERFACEID_ERC725Y = 0x629aa694;\n\n// ERC725X OPERATION TYPES\nuint256 constant OPERATION_0_CALL = 0;\nuint256 constant OPERATION_1_CREATE = 1;\nuint256 constant OPERATION_2_CREATE2 = 2;\nuint256 constant OPERATION_3_STATICCALL = 3;\nuint256 constant OPERATION_4_DELEGATECALL = 4;\n"},"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/**\n * @title OwnableUnset\n * @dev modified version of OpenZeppelin implementation, where:\n * - _setOwner(address) function is internal, so this function can be used in constructor\n * of contracts implementation (instead of using transferOwnership(address)\n * - the contract does not inherit from Context contract\n */\nabstract contract OwnableUnset {\n    address private _owner;\n\n    event OwnershipTransferred(\n        address indexed previousOwner,\n        address indexed newOwner\n    );\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _setOwner(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(\n            newOwner != address(0),\n            \"Ownable: new owner is the zero address\"\n        );\n        _setOwner(newOwner);\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == msg.sender, \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Changes the owner if `newOwner` and oldOwner are different\n     * This pattern is useful in inheritance.\n     */\n    function _setOwner(address newOwner) internal virtual {\n        if (newOwner != owner()) {\n            address oldOwner = _owner;\n            _owner = newOwner;\n            emit OwnershipTransferred(oldOwner, newOwner);\n        }\n    }\n}\n"},"@erc725/smart-contracts/contracts/ERC725XCore.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n// interfaces\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {IERC725X} from \"./interfaces/IERC725X.sol\";\n\n// libraries\nimport {Create2} from \"@openzeppelin/contracts/utils/Create2.sol\";\nimport {Address} from \"@openzeppelin/contracts/utils/Address.sol\";\nimport {BytesLib} from \"solidity-bytes-utils/contracts/BytesLib.sol\";\n\n// modules\nimport {ERC165} from \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\nimport {OwnableUnset} from \"./custom/OwnableUnset.sol\";\n\n// constants\nimport {\n    _INTERFACEID_ERC725X,\n    OPERATION_0_CALL,\n    OPERATION_1_CREATE,\n    OPERATION_2_CREATE2,\n    OPERATION_3_STATICCALL,\n    OPERATION_4_DELEGATECALL\n} from \"./constants.sol\";\n\nimport \"./errors.sol\";\n\n/**\n * @title Core implementation of ERC725X sub-standard, a generic executor.\n * @author Fabian Vogelsteller <fabian@lukso.network>\n * It allows to use different type of message calls to interact with addresses such as `call`, `staticcall` and `delegatecall`.\n * It also allows to deploy and create new contracts via both the `create` and `create2` opcodes.\n * This is the basis for a smart contract based account system, but could also be used as a proxy account system.\n */\nabstract contract ERC725XCore is OwnableUnset, ERC165, IERC725X {\n    /**\n     * @inheritdoc IERC725X\n     * @custom:requirements\n     * - SHOULD only be callable by the {owner} of the contract.\n     * - if a `value` is provided, the contract MUST have at least this amount to transfer to `target` from its balance and execute successfully.\n     * - if the operation type is `STATICCALL` (`3`) or `DELEGATECALL` (`4`), `value` transfer is disallowed and SHOULD be 0.\n     * - `target` SHOULD be `address(0)` when deploying a new contract via `operationType` `CREATE` (`1`), or `CREATE2` (`2`).\n     *\n     * @custom:events\n     * - {Executed} event when a call is made with `operationType` 0 (CALL), 3 (STATICCALL) or 4 (DELEGATECALL).\n     * - {ContractCreated} event when deploying a new contract with `operationType` 1 (CREATE) or 2 (CREATE2).\n     */\n    function execute(\n        uint256 operationType,\n        address target,\n        uint256 value,\n        bytes memory data\n    ) public payable virtual override onlyOwner returns (bytes memory) {\n        return _execute(operationType, target, value, data);\n    }\n\n    /**\n     * @inheritdoc IERC725X\n     * @custom:requirements\n     * - All the array parameters provided MUST be equal and have the same length.\n     * - SHOULD only be callable by the {owner} of the contract.\n     * - The contract MUST have in its balance **at least the sum of all the `values`** to transfer and execute successfully each calldata payloads.\n     *\n     * @custom:events\n     * - {Executed} event, when a call is made with `operationType` 0 (CALL), 3 (STATICCALL) or 4 (DELEGATECALL)\n     * - {ContractCreated} event, when deploying a contract with `operationType` 1 (CREATE) or 2 (CREATE2)\n     */\n    function executeBatch(\n        uint256[] memory operationsType,\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory datas\n    ) public payable virtual override onlyOwner returns (bytes[] memory) {\n        return _executeBatch(operationsType, targets, values, datas);\n    }\n\n    /**\n     * @inheritdoc ERC165\n     */\n    function supportsInterface(\n        bytes4 interfaceId\n    ) public view virtual override(IERC165, ERC165) returns (bool) {\n        return\n            interfaceId == _INTERFACEID_ERC725X ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev check the `operationType` provided and perform the associated low-level opcode after checking for requirements (see {execute}).\n     */\n    function _execute(\n        uint256 operationType,\n        address target,\n        uint256 value,\n        bytes memory data\n    ) internal virtual returns (bytes memory) {\n        // CALL\n        if (operationType == OPERATION_0_CALL) {\n            return _executeCall(target, value, data);\n        }\n\n        // Deploy with CREATE\n        if (operationType == OPERATION_1_CREATE) {\n            if (target != address(0))\n                revert ERC725X_CreateOperationsRequireEmptyRecipientAddress();\n            return _deployCreate(value, data);\n        }\n\n        // Deploy with CREATE2\n        if (operationType == OPERATION_2_CREATE2) {\n            if (target != address(0))\n                revert ERC725X_CreateOperationsRequireEmptyRecipientAddress();\n            return _deployCreate2(value, data);\n        }\n\n        // STATICCALL\n        if (operationType == OPERATION_3_STATICCALL) {\n            if (value != 0) revert ERC725X_MsgValueDisallowedInStaticCall();\n            return _executeStaticCall(target, data);\n        }\n\n        // DELEGATECALL\n        //\n        // WARNING! delegatecall is a dangerous operation type! use with EXTRA CAUTION\n        //\n        // delegate allows to call another deployed contract and use its functions\n        // to update the state of the current calling contract.\n        //\n        // this can lead to unexpected behaviour on the contract storage, such as:\n        // - updating any state variables (even if these are protected)\n        // - update the contract owner\n        // - run selfdestruct in the context of this contract\n        //\n        if (operationType == OPERATION_4_DELEGATECALL) {\n            if (value != 0) revert ERC725X_MsgValueDisallowedInDelegateCall();\n            return _executeDelegateCall(target, data);\n        }\n\n        revert ERC725X_UnknownOperationType(operationType);\n    }\n\n    /**\n     * @dev check each `operationType` provided in the batch and perform the associated low-level opcode after checking for requirements (see {executeBatch}).\n     */\n    function _executeBatch(\n        uint256[] memory operationsType,\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory datas\n    ) internal virtual returns (bytes[] memory) {\n        if (\n            operationsType.length != targets.length ||\n            (targets.length != values.length || values.length != datas.length)\n        ) {\n            revert ERC725X_ExecuteParametersLengthMismatch();\n        }\n\n        if (operationsType.length == 0) {\n            revert ERC725X_ExecuteParametersEmptyArray();\n        }\n\n        bytes[] memory result = new bytes[](operationsType.length);\n\n        for (uint256 i = 0; i < operationsType.length; ) {\n            result[i] = _execute(\n                operationsType[i],\n                targets[i],\n                values[i],\n                datas[i]\n            );\n\n            // Increment the iterator in unchecked block to save gas\n            unchecked {\n                ++i;\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @dev Perform low-level call (operation type = 0)\n     * @param target The address on which call is executed\n     * @param value The value to be sent with the call\n     * @param data The data to be sent with the call\n     * @return result The data from the call\n     */\n    function _executeCall(\n        address target,\n        uint256 value,\n        bytes memory data\n    ) internal virtual returns (bytes memory result) {\n        if (address(this).balance < value) {\n            revert ERC725X_InsufficientBalance(address(this).balance, value);\n        }\n\n        emit Executed(OPERATION_0_CALL, target, value, bytes4(data));\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returnData) = target.call{value: value}(\n            data\n        );\n        return\n            Address.verifyCallResult(\n                success,\n                returnData,\n                \"ERC725X: Unknown Error\"\n            );\n    }\n\n    /**\n     * @dev Perform low-level staticcall (operation type = 3)\n     * @param target The address on which staticcall is executed\n     * @param data The data to be sent with the staticcall\n     * @return result The data returned from the staticcall\n     */\n    function _executeStaticCall(\n        address target,\n        bytes memory data\n    ) internal virtual returns (bytes memory result) {\n        emit Executed(OPERATION_3_STATICCALL, target, 0, bytes4(data));\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returnData) = target.staticcall(data);\n        return\n            Address.verifyCallResult(\n                success,\n                returnData,\n                \"ERC725X: Unknown Error\"\n            );\n    }\n\n    /**\n     * @dev Perform low-level delegatecall (operation type = 4)\n     * @param target The address on which delegatecall is executed\n     * @param data The data to be sent with the delegatecall\n     * @return result The data returned from the delegatecall\n     */\n    function _executeDelegateCall(\n        address target,\n        bytes memory data\n    ) internal virtual returns (bytes memory result) {\n        emit Executed(OPERATION_4_DELEGATECALL, target, 0, bytes4(data));\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returnData) = target.delegatecall(data);\n        return\n            Address.verifyCallResult(\n                success,\n                returnData,\n                \"ERC725X: Unknown Error\"\n            );\n    }\n\n    /**\n     * @dev Deploy a contract using the `CREATE` opcode (operation type = 1)\n     * @param value The value to be sent to the contract created\n     * @param creationCode The contract creation bytecode to deploy appended with the constructor argument(s)\n     * @return newContract The address of the contract created as bytes\n     */\n    function _deployCreate(\n        uint256 value,\n        bytes memory creationCode\n    ) internal virtual returns (bytes memory newContract) {\n        if (address(this).balance < value) {\n            revert ERC725X_InsufficientBalance(address(this).balance, value);\n        }\n\n        if (creationCode.length == 0) {\n            revert ERC725X_NoContractBytecodeProvided();\n        }\n\n        address contractAddress;\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            contractAddress := create(\n                value,\n                add(creationCode, 0x20),\n                mload(creationCode)\n            )\n        }\n\n        if (contractAddress == address(0)) {\n            revert ERC725X_ContractDeploymentFailed();\n        }\n\n        emit ContractCreated(\n            OPERATION_1_CREATE,\n            contractAddress,\n            value,\n            bytes32(0)\n        );\n        return abi.encodePacked(contractAddress);\n    }\n\n    /**\n     * @dev Deploy a contract using the `CREATE2` opcode (operation type = 2)\n     * @param value The value to be sent to the contract created\n     * @param creationCode The contract creation bytecode to deploy appended with the constructor argument(s) and a bytes32 salt\n     * @return newContract The address of the contract created as bytes\n     */\n    function _deployCreate2(\n        uint256 value,\n        bytes memory creationCode\n    ) internal virtual returns (bytes memory newContract) {\n        if (creationCode.length == 0) {\n            revert ERC725X_NoContractBytecodeProvided();\n        }\n\n        bytes32 salt = BytesLib.toBytes32(\n            creationCode,\n            creationCode.length - 32\n        );\n        bytes memory bytecode = BytesLib.slice(\n            creationCode,\n            0,\n            creationCode.length - 32\n        );\n        address contractAddress = Create2.deploy(value, salt, bytecode);\n\n        emit ContractCreated(OPERATION_2_CREATE2, contractAddress, value, salt);\n        return abi.encodePacked(contractAddress);\n    }\n}\n"},"@erc725/smart-contracts/contracts/ERC725Y.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n// modules\nimport {ERC165} from \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\nimport {OwnableUnset} from \"./custom/OwnableUnset.sol\";\nimport {ERC725YCore} from \"./ERC725YCore.sol\";\n\n/**\n * @title Deployable implementation with `constructor` of ERC725Y, a generic data key/value store.\n * @author Fabian Vogelsteller <fabian@lukso.network>\n * @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n * It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\n */\ncontract ERC725Y is ERC725YCore {\n    /**\n     * @notice Deploying an ERC725Y smart contract and setting address `initialOwner` as the contract owner.\n     * @dev Deploy a new ERC725Y contract with the provided `initialOwner` as the contract {owner}.\n     * @param initialOwner the owner of the contract.\n     *\n     * @custom:requirements\n     * - `initialOwner` CANNOT be the zero address.\n     */\n    constructor(address initialOwner) payable {\n        require(\n            initialOwner != address(0),\n            \"Ownable: new owner is the zero address\"\n        );\n        OwnableUnset._setOwner(initialOwner);\n    }\n}\n"},"@erc725/smart-contracts/contracts/ERC725YCore.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n// interfaces\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {IERC725Y} from \"./interfaces/IERC725Y.sol\";\n\n// modules\nimport {ERC165} from \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\nimport {OwnableUnset} from \"./custom/OwnableUnset.sol\";\n\n// constants\nimport {_INTERFACEID_ERC725Y} from \"./constants.sol\";\n\nimport \"./errors.sol\";\n\n/**\n * @title Core implementation of ERC725Y sub-standard, a general data key/value store.\n * @author Fabian Vogelsteller <fabian@lukso.network>\n * @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n * It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\n */\nabstract contract ERC725YCore is OwnableUnset, ERC165, IERC725Y {\n    /**\n     * @dev Map `bytes32` data keys to their `bytes` data values.\n     */\n    mapping(bytes32 => bytes) internal _store;\n\n    /**\n     * @inheritdoc IERC725Y\n     */\n    function getData(\n        bytes32 dataKey\n    ) public view virtual override returns (bytes memory dataValue) {\n        dataValue = _getData(dataKey);\n    }\n\n    /**\n     * @inheritdoc IERC725Y\n     */\n    function getDataBatch(\n        bytes32[] memory dataKeys\n    ) public view virtual override returns (bytes[] memory dataValues) {\n        dataValues = new bytes[](dataKeys.length);\n\n        for (uint256 i = 0; i < dataKeys.length; ) {\n            dataValues[i] = _getData(dataKeys[i]);\n\n            // Increment the iterator in unchecked block to save gas\n            unchecked {\n                ++i;\n            }\n        }\n\n        return dataValues;\n    }\n\n    /**\n     * @inheritdoc IERC725Y\n     * @custom:requirements\n     * - SHOULD only be callable by the {owner}.\n     *\n     * @custom:warning\n     * **Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value\n     * (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\n     *\n     * @custom:events {DataChanged} event.\n     */\n    function setData(\n        bytes32 dataKey,\n        bytes memory dataValue\n    ) public payable virtual override onlyOwner {\n        if (msg.value != 0) revert ERC725Y_MsgValueDisallowed();\n        _setData(dataKey, dataValue);\n    }\n\n    /**\n     * @inheritdoc IERC725Y\n     * @custom:requirements\n     * - SHOULD only be callable by the {owner} of the contract.\n     *\n     * @custom:warning\n     * **Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value\n     * (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\n     *\n     * @custom:events {DataChanged} event **for each data key/value pair set**.\n     */\n    function setDataBatch(\n        bytes32[] memory dataKeys,\n        bytes[] memory dataValues\n    ) public payable virtual override onlyOwner {\n        /// @dev do not allow to send value by default when setting data in ERC725Y\n        if (msg.value != 0) revert ERC725Y_MsgValueDisallowed();\n\n        if (dataKeys.length != dataValues.length) {\n            revert ERC725Y_DataKeysValuesLengthMismatch();\n        }\n\n        if (dataKeys.length == 0) {\n            revert ERC725Y_DataKeysValuesEmptyArray();\n        }\n\n        for (uint256 i = 0; i < dataKeys.length; ) {\n            _setData(dataKeys[i], dataValues[i]);\n\n            // Increment the iterator in unchecked block to save gas\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    /**\n     * @dev Read the value stored under a specific `dataKey` inside the underlying ERC725Y storage,\n     *  represented as a mapping of `bytes32` data keys mapped to their `bytes` data values.\n     *\n     * ```solidity\n     * mapping(bytes32 => bytes) _store\n     * ```\n     *\n     * @param dataKey A bytes32 data key to read the associated `bytes` value from the store.\n     * @return dataValue The `bytes` value associated with the given `dataKey` in the ERC725Y storage.\n     */\n    function _getData(\n        bytes32 dataKey\n    ) internal view virtual returns (bytes memory dataValue) {\n        return _store[dataKey];\n    }\n\n    /**\n     * @dev Write a `dataValue` to the underlying ERC725Y storage, represented as a mapping of\n     * `bytes32` data keys mapped to their `bytes` data values.\n     *\n     * ```solidity\n     * mapping(bytes32 => bytes) _store\n     * ```\n     *\n     * @param dataKey A bytes32 data key to write the associated `bytes` value to the store.\n     * @param dataValue The `bytes` value to associate with the given `dataKey` in the ERC725Y storage.\n     *\n     * @custom:events {DataChanged} event emitted after a successful `setData` call.\n     */\n    function _setData(\n        bytes32 dataKey,\n        bytes memory dataValue\n    ) internal virtual {\n        _store[dataKey] = dataValue;\n        emit DataChanged(dataKey, dataValue);\n    }\n\n    /**\n     * @inheritdoc ERC165\n     */\n    function supportsInterface(\n        bytes4 interfaceId\n    ) public view virtual override(IERC165, ERC165) returns (bool) {\n        return\n            interfaceId == _INTERFACEID_ERC725Y ||\n            super.supportsInterface(interfaceId);\n    }\n}\n"},"@erc725/smart-contracts/contracts/errors.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n/**\n * @dev Reverts when trying to send more native tokens `value` than available in current `balance`.\n * @param balance The balance of native tokens of the ERC725X smart contract.\n * @param value The amount of native tokens sent via `ERC725X.execute(...)`/`ERC725X.executeBatch(...)` that is greater than the contract's `balance`.\n */\nerror ERC725X_InsufficientBalance(uint256 balance, uint256 value);\n\n/**\n * @dev Reverts when the `operationTypeProvided` is none of the default operation types available.\n * (CALL = 0; CREATE = 1; CREATE2 = 2; STATICCALL = 3; DELEGATECALL = 4)\n * @param operationTypeProvided The unrecognised operation type number provided to `ERC725X.execute(...)`/`ERC725X.executeBatch(...)`.\n */\nerror ERC725X_UnknownOperationType(uint256 operationTypeProvided);\n\n/**\n * @dev Reverts when trying to send native tokens (`value` / `values[]` parameter of {execute} or {executeBatch} functions) while making a `staticcall` (`operationType == 3`).\n * Sending native tokens via `staticcall` is not allowed because it is a state changing operation.\n */\nerror ERC725X_MsgValueDisallowedInStaticCall();\n\n/**\n * @dev Reverts when trying to send native tokens (`value` / `values[]` parameter of {execute} or {executeBatch} functions) while making a `delegatecall` (`operationType == 4`).\n * Sending native tokens via `staticcall` is not allowed because `msg.value` is persisting.\n */\nerror ERC725X_MsgValueDisallowedInDelegateCall();\n\n/**\n * @dev Reverts when passing a `to` address that is not `address(0)` (= address zero) while deploying a contract via {execute} or {executeBatch} functions.\n * This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`).\n */\nerror ERC725X_CreateOperationsRequireEmptyRecipientAddress();\n\n/**\n * @dev Reverts when contract deployment failed via {execute} or {executeBatch} functions,\n * This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`).\n */\nerror ERC725X_ContractDeploymentFailed();\n\n/**\n * @dev Reverts when no contract bytecode was provided as parameter when trying to deploy a contract via {execute} or {executeBatch}.\n * This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`).\n */\nerror ERC725X_NoContractBytecodeProvided();\n\n/**\n * @dev Reverts when there is not the same number of elements in the `operationTypes`, `targets` addresses, `values`, and `datas`\n * array parameters provided when calling the {executeBatch} function.\n */\nerror ERC725X_ExecuteParametersLengthMismatch();\n\n/**\n * @dev Reverts when one of the array parameter provided to the {executeBatch} function is an empty array.\n */\nerror ERC725X_ExecuteParametersEmptyArray();\n\n/**\n * @dev Reverts when there is not the same number of elements in the `datakeys` and `dataValues`\n * array parameters provided when calling the {setDataBatch} function.\n */\nerror ERC725Y_DataKeysValuesLengthMismatch();\n\n/**\n * @dev Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\n */\nerror ERC725Y_DataKeysValuesEmptyArray();\n\n/**\n * @dev Reverts when sending value to the {setData} or {setDataBatch} function.\n */\nerror ERC725Y_MsgValueDisallowed();\n"},"@erc725/smart-contracts/contracts/interfaces/IERC725X.sol":{"content":"// SPDX-License-Identifier: CC0-1.0\npragma solidity ^0.8.0;\n\n// interfaces\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\n\n/**\n * @title The interface for the ERC725X sub-standard, a generic executor.\n * @dev ERC725X provides the ability to call arbitrary functions on any other smart contract (including itself).\n * It allows to use different type of message calls to interact with addresses such as `call`, `staticcall` and `delegatecall`.\n * It also allows to deploy and create new contracts via both the `create` and `create2` opcodes.\n * This is the basis for a smart contract based account system, but could also be used as a proxy account system.\n */\ninterface IERC725X is IERC165 {\n    /**\n     * @notice Deployed new contract at address `contractAddress` and funded with `value` wei (deployed using opcode: `operationType`).\n     * @dev Emitted when a new contract was created and deployed.\n     * @param operationType The opcode used to deploy the contract (`CREATE` or `CREATE2`).\n     * @param contractAddress The created contract address.\n     * @param value The amount of native tokens (in Wei) sent to fund the created contract on deployment.\n     * @param salt The salt used to deterministically deploy the contract (`CREATE2` only). If `CREATE` opcode is used, the salt value will be `bytes32(0)`.\n     */\n    event ContractCreated(\n        uint256 indexed operationType,\n        address indexed contractAddress,\n        uint256 indexed value,\n        bytes32 salt\n    );\n\n    /**\n     * @notice Called address `target` using `operationType` with `value` wei and `data`.\n     * @dev Emitted when calling an address `target` (EOA or contract) with `value`.\n     * @param operationType The low-level call opcode used to call the `target` address (`CALL`, `STATICALL` or `DELEGATECALL`).\n     * @param target The address to call. `target` will be unused if a contract is created (operation types 1 and 2).\n     * @param value The amount of native tokens transferred along the call (in Wei).\n     * @param selector The first 4 bytes (= function selector) of the data sent with the call.\n     */\n    event Executed(\n        uint256 indexed operationType,\n        address indexed target,\n        uint256 indexed value,\n        bytes4 selector\n    );\n\n    /**\n     * @notice Calling address `target` using `operationType`, transferring `value` wei and data: `data`.\n     *\n     * @param operationType The operation type used: CALL = 0; CREATE = 1; CREATE2 = 2; STATICCALL = 3; DELEGATECALL = 4\n     * @param target The address of the EOA or smart contract.  (unused if a contract is created via operation type 1 or 2)\n     * @param value The amount of native tokens to transfer (in Wei)\n     * @param data The call data, or the creation bytecode of the contract to deploy if `operationType` is `1` or `2`.\n     *\n     * @dev Generic executor function to:\n     *\n     * - send native tokens to any address.\n     * - interact with any contract by passing an abi-encoded function call in the `data` parameter.\n     * - deploy a contract by providing its creation bytecode in the `data` parameter.\n     */\n    function execute(\n        uint256 operationType,\n        address target,\n        uint256 value,\n        bytes memory data\n    ) external payable returns (bytes memory);\n\n    /**\n     * @notice Calling multiple addresses `targets` using `operationsType`, transferring `values` wei and data: `datas`.\n     *\n     * @dev Batch executor function that behaves the same as {execute} but allowing multiple operations in the same transaction.\n     *\n     * @param operationsType The list of operations type used: `CALL = 0`; `CREATE = 1`; `CREATE2 = 2`; `STATICCALL = 3`; `DELEGATECALL = 4`\n     * @param targets The list of addresses to call. `targets` will be unused if a contract is created (operation types 1 and 2).\n     * @param values The list of native token amounts to transfer (in Wei).\n     * @param datas The list of calldata, or the creation bytecode of the contract to deploy if `operationType` is `1` or `2`.\n     */\n    function executeBatch(\n        uint256[] memory operationsType,\n        address[] memory targets,\n        uint256[] memory values,\n        bytes[] memory datas\n    ) external payable returns (bytes[] memory);\n}\n"},"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol":{"content":"// SPDX-License-Identifier: CC0-1.0\npragma solidity ^0.8.0;\n\n// interfaces\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\n\n/**\n * @title The interface for ERC725Y sub-standard, a generic data key/value store.\n * @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n * It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\n */\ninterface IERC725Y is IERC165 {\n    /**\n     * @notice The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\n     * @dev Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\n     * @param dataKey The data key for which a bytes value is set.\n     * @param dataValue The value to set for the given data key.\n     */\n    event DataChanged(bytes32 indexed dataKey, bytes dataValue);\n\n    /**\n     * @notice Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\n     * @dev Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\n     * @param dataKey The data key for which to retrieve the value.\n     * @return dataValue The bytes value stored under the specified data key.\n     */\n    function getData(\n        bytes32 dataKey\n    ) external view returns (bytes memory dataValue);\n\n    /**\n     * @notice Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\n     * @dev Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\n     * @param dataKeys The array of keys which values to retrieve\n     * @return dataValues The array of data stored at multiple keys\n     */\n    function getDataBatch(\n        bytes32[] memory dataKeys\n    ) external view returns (bytes[] memory dataValues);\n\n    /**\n     * @notice Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\n     *\n     * @dev Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`.\n     * The function is marked as payable to enable flexibility on child contracts. For instance to implement\n     * a fee mechanism for setting specific data.\n     *\n     * @param dataKey The data key for which to set a new value.\n     * @param dataValue The new bytes value to set.\n     */\n    function setData(bytes32 dataKey, bytes memory dataValue) external payable;\n\n    /**\n     * @notice Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\n     *\n     * @dev Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\n     *\n     * @param dataKeys An array of data keys to set bytes values for.\n     * @param dataValues An array of bytes values to set for each `dataKeys`.\n     */\n    function setDataBatch(\n        bytes32[] memory dataKeys,\n        bytes[] memory dataValues\n    ) external payable;\n}\n"},"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/ILSP0ERC725Account.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\nimport \"@lukso/lsp0-contracts/contracts/ILSP0ERC725Account.sol\";\n"},"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Constants.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\nimport \"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol\";\n"},"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Extension.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\nimport \"@lukso/lsp17contractextension-contracts/contracts/LSP17Extension.sol\";\n"},"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\nimport \"@lukso/lsp4-contracts/contracts/LSP4Constants.sol\";\n"},"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/extensions/LSP8Burnable.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.12;\n\nimport \"@lukso/lsp8-contracts/contracts/extensions/LSP8Burnable.sol\";\n"},"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\nimport \"@lukso/lsp8-contracts/contracts/ILSP8IdentifiableDigitalAsset.sol\";\n"},"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\nimport \"@lukso/lsp8-contracts/contracts/LSP8Constants.sol\";\n"},"@lukso/lsp0-contracts/contracts/ILSP0ERC725Account.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n/**\n * @title Interface of the [LSP-0-ERC725Account] standard, an account based smart contract that represents an identity on-chain.\n *\n * @author Fabian Vogelsteller <fabian@lukso.network>, Jean Cavallera (CJ42)\n */\ninterface ILSP0ERC725Account {\n    /**\n     * @notice Executing the following batch of abi-encoded function calls on the contract: `data`.\n     *\n     * @dev Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\n     * @param data An array of ABI encoded function calls to be called on the contract.\n     * @return results An array of abi-encoded data returned by the functions executed.\n     */\n    function batchCalls(\n        bytes[] calldata data\n    ) external returns (bytes[] memory results);\n}\n"},"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n/**\n * @title Interface of the LSP1 - Universal Receiver standard, an entry function for a contract to receive arbitrary information.\n * @dev LSP1UniversalReceiver allows to receive arbitrary messages and to be informed when assets are sent or received.\n */\ninterface ILSP1UniversalReceiver {\n    /**\n     * @dev Emitted when the {universalReceiver} function was called with a specific `typeId` and some `receivedData`\n     * @notice Address `from` called the `universalReceiver(...)` function while sending `value` LYX. Notification type (typeId): `typeId` - Data received: `receivedData`.\n     *\n     * @param from The address of the EOA or smart contract that called the {universalReceiver(...)} function.\n     * @param value The amount sent to the {universalReceiver(...)} function.\n     * @param typeId A `bytes32` unique identifier (= _\"hook\"_)that describe the type of notification, information or transaction received by the contract. Can be related to a specific standard or a hook.\n     * @param receivedData Any arbitrary data that was sent to the {universalReceiver(...)} function.\n     * @param returnedValue The value returned by the {universalReceiver(...)} function.\n     */\n    event UniversalReceiver(\n        address indexed from,\n        uint256 indexed value,\n        bytes32 indexed typeId,\n        bytes receivedData,\n        bytes returnedValue\n    );\n\n    /**\n     * @dev Generic function that can be used to notify the contract about specific incoming transactions or events like asset transfers, vault transfers, etc. Allows for custom on-chain and off-chain reactions based on the `typeId` and `data`.\n     * @notice Reacted on received notification with `typeId` & `data`.\n     *\n     * @param typeId The hash of a specific standard or a hook.\n     * @param data The arbitrary data received with the call.\n     *\n     * @custom:events {UniversalReceiver} event.\n     */\n    function universalReceiver(\n        bytes32 typeId,\n        bytes calldata data\n    ) external payable returns (bytes memory);\n}\n"},"@lukso/lsp1-contracts/contracts/LSP1Constants.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// --- ERC165 interface ids\nbytes4 constant _INTERFACEID_LSP1 = 0x6bb56a14;\nbytes4 constant _INTERFACEID_LSP1_DELEGATE = 0xa245bbda;\n\n// --- ERC725Y Data Keys\n\n// bytes10(keccak256('LSP1UniversalReceiverDelegate'))\nbytes10 constant _LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX = 0x0cfc51aec37c55a4d0b1;\n\n// keccak256('LSP1UniversalReceiverDelegate')\nbytes32 constant _LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY = 0x0cfc51aec37c55a4d0b1a65c6255c4bf2fbdf6277f3cc0730c45b828b6db8b47;\n"},"@lukso/lsp1-contracts/contracts/LSP1Utils.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// libraries\nimport {\n    ERC165Checker\n} from \"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\";\nimport {LSP2Utils} from \"@lukso/lsp2-contracts/contracts/LSP2Utils.sol\";\n\n// constants\nimport {ILSP1UniversalReceiver as ILSP1} from \"./ILSP1UniversalReceiver.sol\";\n\n// constants\nimport {\n    _INTERFACEID_LSP1,\n    _LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY,\n    _LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX\n} from \"./LSP1Constants.sol\";\n\n/**\n * @title LSP1 Utility library.\n * @author Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\n * @dev LSP1Utils is a library of utility functions that can be used to notify the `universalReceiver` function of a contract\n * that implements LSP1 and retrieve informations related to LSP1 `typeId`.\n * Based on LSP1 Universal Receiver standard.\n */\nlibrary LSP1Utils {\n    using ERC165Checker for address;\n\n    /**\n     * @dev Notify a contract at `lsp1Implementation` address by calling its `universalReceiver` function if this contract\n     * supports the LSP1 interface.\n     *\n     * @param lsp1Implementation The address of the contract to notify.\n     * @param typeId A `bytes32` typeId.\n     * @param data Any optional data to send to the `universalReceiver` function to the `lsp1Implementation` address.\n     */\n    function notifyUniversalReceiver(\n        address lsp1Implementation,\n        bytes32 typeId,\n        bytes memory data\n    ) internal {\n        if (\n            lsp1Implementation.supportsERC165InterfaceUnchecked(\n                _INTERFACEID_LSP1\n            )\n        ) {\n            ILSP1(lsp1Implementation).universalReceiver(typeId, data);\n        }\n    }\n\n    /**\n     * @notice Retrieving the value stored under the ERC725Y data key `LSP1UniversalReceiverDelegate`.\n     *\n     * @dev Query internally the ERC725Y storage of a `ERC725Y` smart contract to retrieve\n     * the value set under the `LSP1UniversalReceiverDelegate` data key.\n     *\n     * @param erc725YStorage A reference to the ERC725Y storage mapping of the contract.\n     * @return The bytes value stored under the `LSP1UniversalReceiverDelegate` data key.\n     */\n    function getLSP1DelegateValue(\n        mapping(bytes32 => bytes) storage erc725YStorage\n    ) internal view returns (bytes memory) {\n        return erc725YStorage[_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY];\n    }\n\n    /**\n     * @notice Retrieving the value stored under the ERC725Y data key `LSP1UniversalReceiverDelegate:<type-id>` for a specific `typeId`.\n     *\n     * @dev Query internally the ERC725Y storage of a `ERC725Y` smart contract to retrieve\n     * the value set under the `LSP1UniversalReceiverDelegate:<bytes32>` data key for a specific LSP1 `typeId`.\n     *\n     * @param erc725YStorage A reference to the ERC725Y storage mapping of the contract.\n     * @param typeId A bytes32 LSP1 `typeId`;\n     * @return The bytes value stored under the `LSP1UniversalReceiverDelegate:<bytes32>` data key.\n     */\n    function getLSP1DelegateValueForTypeId(\n        mapping(bytes32 => bytes) storage erc725YStorage,\n        bytes32 typeId\n    ) internal view returns (bytes memory) {\n        bytes32 lsp1TypeIdDataKey = LSP2Utils.generateMappingKey(\n            _LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX,\n            bytes20(typeId)\n        );\n        return erc725YStorage[lsp1TypeIdDataKey];\n    }\n}\n"},"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// --- ERC165 interface ids\n\n// bytes4(keccack256(\"LSP17Extendable\"))\nbytes4 constant _INTERFACEID_LSP17_EXTENDABLE = 0xa918fa6b;\n\n// bytes4(keccack256(\"LSP17Extension\"))\nbytes4 constant _INTERFACEID_LSP17_EXTENSION = 0xcee78b40;\n\n// --- ERC725Y Data Keys\n\n// Extension Handler Prefix\n\n// bytes10(keccak256('LSP17Extension'))\nbytes10 constant _LSP17_EXTENSION_PREFIX = 0xcee78b4094da86011096;\n"},"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n/**\n * @dev reverts when there is no extension for the function selector being called with\n */\nerror NoExtensionFoundForFunctionSelector(bytes4 functionSelector);\n\n/**\n * @dev reverts when the contract is called with a function selector not valid (less than 4 bytes of data)\n */\nerror InvalidFunctionSelector(bytes data);\n\n/**\n * @dev reverts when the bytes retrieved from the LSP17 data key is not a valid address (not 20 bytes)\n */\nerror InvalidExtensionAddress(bytes storedData);\n"},"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// modules\nimport {ERC165} from \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\nimport {\n    ERC165Checker\n} from \"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\";\n\n// constants\nimport {_INTERFACEID_LSP17_EXTENDABLE} from \"./LSP17Constants.sol\";\n\n// errors\nimport {NoExtensionFoundForFunctionSelector} from \"./LSP17Errors.sol\";\n\n/**\n * @title Module to add more functionalities to a contract using extensions.\n *\n * @dev Implementation of the `fallback(...)` logic according to LSP17 - Contract Extension standard.\n * This module can be inherited to extend the functionality of the parent contract when\n * calling a function that doesn't exist on the parent contract via forwarding the call\n * to an extension mapped to the function selector being called, set originally by the parent contract\n */\nabstract contract LSP17Extendable is ERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(\n        bytes4 interfaceId\n    ) public view virtual override returns (bool) {\n        return\n            interfaceId == _INTERFACEID_LSP17_EXTENDABLE ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns whether the interfaceId being checked is supported in the extension of the\n     * {supportsInterface} selector.\n     *\n     * To be used by extendable contracts wishing to extend the ERC165 interfaceIds originally\n     * supported by reading whether the interfaceId queried is supported in the `supportsInterface`\n     * extension if the extension is set, if not it returns false.\n     */\n    function _supportsInterfaceInERC165Extension(\n        bytes4 interfaceId\n    ) internal view virtual returns (bool) {\n        (address erc165Extension, ) = _getExtensionAndForwardValue(\n            ERC165.supportsInterface.selector\n        );\n        if (erc165Extension == address(0)) return false;\n\n        return\n            ERC165Checker.supportsERC165InterfaceUnchecked(\n                erc165Extension,\n                interfaceId\n            );\n    }\n\n    /**\n     * @dev Returns the extension mapped to a specific function selector\n     * If no extension was found, return the address(0)\n     * To be overrided.\n     * Up to the implementor contract to return an extension based on a function selector\n     */\n    function _getExtensionAndForwardValue(\n        bytes4 functionSelector\n    ) internal view virtual returns (address, bool);\n\n    /**\n     * @dev Forwards the call to an extension mapped to a function selector.\n     *\n     * Calls {_getExtensionAndForwardValue} to get the address of the extension mapped to the function selector being\n     * called on the account. If there is no extension, the `address(0)` will be returned.\n     * Forwards the value if the extension is payable.\n     *\n     * Reverts if there is no extension for the function being called.\n     *\n     * If there is an extension for the function selector being called, it calls the extension with the\n     * `CALL` opcode, passing the `msg.data` appended with the 20 bytes of the {msg.sender} and 32 bytes of the `msg.value`.\n     *\n     * @custom:hint This function does not forward to the extension contract the `msg.value` received by the contract that inherits `LSP17Extendable`.\n     * If you would like to forward the `msg.value` to the extension contract, you can override the code of this internal function as follow:\n     *\n     * ```solidity\n     * (bool success, bytes memory result) = extension.call{value: msg.value}(\n     *     abi.encodePacked(callData, msg.sender, msg.value)\n     * );\n     * ```\n     */\n    function _fallbackLSP17Extendable(\n        bytes calldata callData\n    ) internal virtual returns (bytes memory) {\n        // If there is a function selector\n        (\n            address extension,\n            bool shouldForwardValue\n        ) = _getExtensionAndForwardValue(msg.sig);\n\n        // if no extension was found, revert\n        if (extension == address(0))\n            revert NoExtensionFoundForFunctionSelector(msg.sig);\n\n        (bool success, bytes memory result) = extension.call{\n            value: shouldForwardValue ? msg.value : 0\n        }(abi.encodePacked(callData, msg.sender, msg.value));\n\n        if (success) {\n            return result;\n        } else {\n            // `mload(result)` -> offset in memory where `result.length` is located\n            // `add(result, 32)` -> offset in memory where `result` data starts\n            // solhint-disable no-inline-assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let resultdata_size := mload(result)\n                revert(add(result, 32), resultdata_size)\n            }\n        }\n    }\n}\n"},"@lukso/lsp17contractextension-contracts/contracts/LSP17Extension.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// modules\nimport {Version} from \"./Version.sol\";\nimport {ERC165} from \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\n\n// constants\nimport {_INTERFACEID_LSP17_EXTENSION} from \"./LSP17Constants.sol\";\n\n/**\n * @title Module to create a contract that can act as an extension.\n *\n * @dev Implementation of the extension logic according to LSP17ContractExtension.\n * This module can be inherited to provide context of the msg variable related to the extendable contract\n */\nabstract contract LSP17Extension is ERC165, Version {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(\n        bytes4 interfaceId\n    ) public view virtual override returns (bool) {\n        return\n            interfaceId == _INTERFACEID_LSP17_EXTENSION ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns the original `msg.data` passed to the extendable contract\n     * without the appended `msg.sender` and `msg.value`.\n     */\n    function _extendableMsgData()\n        internal\n        view\n        virtual\n        returns (bytes calldata)\n    {\n        return msg.data[:msg.data.length - 52];\n    }\n\n    /**\n     * @dev Returns the original `msg.sender` calling the extendable contract.\n     */\n    function _extendableMsgSender() internal view virtual returns (address) {\n        return\n            address(\n                bytes20(msg.data[msg.data.length - 52:msg.data.length - 32])\n            );\n    }\n\n    /**\n     * @dev Returns the original `msg.value` sent to the extendable contract.\n     */\n    function _extendableMsgValue() internal view virtual returns (uint256) {\n        return uint256(bytes32(msg.data[msg.data.length - 32:]));\n    }\n}\n"},"@lukso/lsp17contractextension-contracts/contracts/Version.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\nabstract contract Version {\n    /**\n     * @dev Get the version of the contract.\n     * @notice Contract version.\n     *\n     * @return The version of the the contract.\n     */\n    // DO NOT CHANGE\n    // Comments block below is used by release-please to automatically update the version in this file.\n    // x-release-please-start-version\n    string public constant VERSION = \"0.15.0\";\n\n    // x-release-please-end\n}\n"},"@lukso/lsp2-contracts/contracts/LSP2Utils.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// interfaces\nimport {\n    IERC725Y\n} from \"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\";\n\n/**\n * @title LSP2 Utility library.\n * @author Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\n * @dev LSP2Utils is a library of utility functions that can be used to encode data key of different key type\n * defined on the LSP2 standard.\n * Based on LSP2 ERC725Y JSON Schema standard.\n */\nlibrary LSP2Utils {\n    /**\n     * @dev Generates a data key of keyType Singleton by hashing the string `keyName`. As:\n     *\n     * ```\n     * keccak256(\"keyName\")\n     * ```\n     *\n     * @param keyName The string to hash to generate a Singleton data key.\n     *\n     * @return The generated `bytes32` data key of key type Singleton.\n     */\n    function generateSingletonKey(\n        string memory keyName\n    ) internal pure returns (bytes32) {\n        return keccak256(bytes(keyName));\n    }\n\n    /**\n     * @dev Generates a data key of keyType Array by hashing `arrayKeyName`. As:\n     *\n     * ```\n     * keccak256(\"arrayKeyName[]\")\n     * ```\n     *\n     * @param arrayKeyName The string that will be used to generate a data key of key type Array.\n     *\n     * @return The generated `bytes32` data key of key type Array.\n     *\n     * @custom:requirements\n     * - The `keyName` must include at the end of the string the square brackets `\"[]\"`.\n     */\n    function generateArrayKey(\n        string memory arrayKeyName\n    ) internal pure returns (bytes32) {\n        bytes memory dataKey = bytes(arrayKeyName);\n        require(dataKey.length >= 2, \"MUST be longer than 2 characters\");\n        require(\n            dataKey[dataKey.length - 2] == 0x5b && // \"[\" in utf8 encoded\n                dataKey[dataKey.length - 1] == 0x5d, // \"]\" in utf8\n            \"Missing empty square brackets '[]' at the end of the key name\"\n        );\n\n        return keccak256(dataKey);\n    }\n\n    /**\n     * @dev Generates an Array data key at a specific `index` by concatenating together the first 16 bytes of `arrayKey`\n     * with the 16 bytes of `index`. As:\n     *\n     * ```\n     * arrayKey[index]\n     * ```\n     *\n     * @param arrayKey The Array data key from which to generate the Array data key at a specific `index`.\n     * @param index The index number in the `arrayKey`.\n     *\n     * @return The generated `bytes32` data key of key type Array at a specific `index`.\n     */\n    function generateArrayElementKeyAtIndex(\n        bytes32 arrayKey,\n        uint128 index\n    ) internal pure returns (bytes32) {\n        bytes memory elementInArray = bytes.concat(\n            bytes16(arrayKey),\n            bytes16(index)\n        );\n        return bytes32(elementInArray);\n    }\n\n    /**\n     * @dev Generates a data key of key type Mapping that map `firstWord` to `lastWord`. This is done by hashing two strings words `firstWord` and `lastWord`. As:\n     *\n     * ```\n     * bytes10(firstWordHash):0000:bytes20(lastWordHash)\n     * ```\n     *\n     * @param firstWord The word to retrieve the first 10 bytes of its hash.\n     * @param lastWord The word to retrieve the first 10 bytes of its hash.\n     *\n     * @return The generated `bytes32` data key of key type Mapping that map `firstWord` to a specific `lastWord`.\n     */\n    function generateMappingKey(\n        string memory firstWord,\n        string memory lastWord\n    ) internal pure returns (bytes32) {\n        bytes32 firstWordHash = keccak256(bytes(firstWord));\n        bytes32 lastWordHash = keccak256(bytes(lastWord));\n\n        bytes memory temporaryBytes = bytes.concat(\n            bytes10(firstWordHash),\n            bytes2(0),\n            bytes20(lastWordHash)\n        );\n\n        return bytes32(temporaryBytes);\n    }\n\n    /**\n     * @dev Generates a data key of key type Mapping that map `firstWord` to an address `addr`.\n     * This is done by hashing the string word `firstWord` and concatenating its first 10 bytes with `addr`. As:\n     *\n     * ```\n     * bytes10(firstWordHash):0000:<address>\n     * ```\n     *\n     * @param firstWord The word to retrieve the first 10 bytes of its hash.\n     * @param addr An address to map `firstWord` to.\n     *\n     * @return The generated `bytes32` data key of key type Mapping that map `firstWord` to a specific address `addr`.\n     */\n    function generateMappingKey(\n        string memory firstWord,\n        address addr\n    ) internal pure returns (bytes32) {\n        bytes32 firstWordHash = keccak256(bytes(firstWord));\n\n        bytes memory temporaryBytes = bytes.concat(\n            bytes10(firstWordHash),\n            bytes2(0),\n            bytes20(addr)\n        );\n\n        return bytes32(temporaryBytes);\n    }\n\n    /**\n     * @dev Generate a data key of key type Mapping that map a 10 bytes `keyPrefix` to a `bytes20Value`. As:\n     *\n     * ```\n     * keyPrefix:bytes20Value\n     * ```\n     *\n     * @param keyPrefix The first part of the data key of key type Mapping.\n     * @param bytes20Value The second part of the data key of key type Mapping.\n     *\n     * @return The generated `bytes32` data key of key type Mapping that map a `keyPrefix` to a specific `bytes20Value`.\n     */\n    function generateMappingKey(\n        bytes10 keyPrefix,\n        bytes20 bytes20Value\n    ) internal pure returns (bytes32) {\n        bytes memory generatedKey = bytes.concat(\n            keyPrefix,\n            bytes2(0),\n            bytes20Value\n        );\n        return bytes32(generatedKey);\n    }\n\n    /**\n     * @dev Generate a data key of key type MappingWithGrouping by using two strings `firstWord`\n     * mapped to a `secondWord` mapped itself to a specific address `addr`. As:\n     *\n     * ```\n     * bytes6(keccak256(\"firstWord\")):bytes4(keccak256(\"secondWord\")):0000:<address>\n     * ```\n     *\n     * @param firstWord The word to retrieve the first 6 bytes of its hash.\n     * @param secondWord The word to retrieve the first 4 bytes of its hash.\n     * @param addr The address that makes the last part of the MappingWithGrouping.\n     *\n     * @return The generated `bytes32` data key of key type MappingWithGrouping that map a `firstWord` to a `secondWord` to a specific address `addr`.\n     */\n    function generateMappingWithGroupingKey(\n        string memory firstWord,\n        string memory secondWord,\n        address addr\n    ) internal pure returns (bytes32) {\n        bytes32 firstWordHash = keccak256(bytes(firstWord));\n        bytes32 secondWordHash = keccak256(bytes(secondWord));\n\n        bytes memory temporaryBytes = bytes.concat(\n            bytes6(firstWordHash),\n            bytes4(secondWordHash),\n            bytes2(0),\n            bytes20(addr)\n        );\n\n        return bytes32(temporaryBytes);\n    }\n\n    /**\n     * @dev Generate a data key of key type MappingWithGrouping that map a `keyPrefix` to an other `mapPrefix` to a specific `subMapKey`. As:\n     *\n     * ```\n     * keyPrefix:mapPrefix:0000:subMapKey\n     * ```\n     *\n     * @param keyPrefix The first part (6 bytes) of the data key of keyType MappingWithGrouping.\n     * @param mapPrefix The second part (4 bytes) of the data key of keyType MappingWithGrouping.\n     * @param subMapKey The last part (bytes20) of the data key of keyType MappingWithGrouping.\n     *\n     * @return The generated `bytes32` data key of key type MappingWithGrouping that map a `keyPrefix` to a `mapPrefix` to a specific `subMapKey`.\n     */\n    function generateMappingWithGroupingKey(\n        bytes6 keyPrefix,\n        bytes4 mapPrefix,\n        bytes20 subMapKey\n    ) internal pure returns (bytes32) {\n        bytes memory generatedKey = bytes.concat(\n            keyPrefix,\n            mapPrefix,\n            bytes2(0),\n            subMapKey\n        );\n        return bytes32(generatedKey);\n    }\n\n    /**\n     * @dev Generate a data key of key type MappingWithGrouping that map a 10 bytes `keyPrefix` to a specific `bytes20Value`. As:\n     *\n     * @param keyPrefix The first part of the data key of keyType MappingWithGrouping.\n     * @param bytes20Value The last of the data key of keyType MappingWithGrouping.\n     *\n     * @return The generated `bytes32` data key of key type MappingWithGrouping that map a `keyPrefix`\n     * (containing the first and second mapped word) to a specific `bytes20Value`.\n     */\n    function generateMappingWithGroupingKey(\n        bytes10 keyPrefix,\n        bytes20 bytes20Value\n    ) internal pure returns (bytes32) {\n        bytes memory generatedKey = bytes.concat(\n            keyPrefix,\n            bytes2(0),\n            bytes20Value\n        );\n        return bytes32(generatedKey);\n    }\n\n    /**\n     * @dev Generate a JSONURL value content.\n     * @param hashFunction The function used to hash the JSON file.\n     * @param json Bytes value of the JSON file.\n     * @param url The URL where the JSON file is hosted.\n     */\n    function generateJSONURLValue(\n        string memory hashFunction,\n        string memory json,\n        string memory url\n    ) internal pure returns (bytes memory) {\n        bytes32 hashFunctionDigest = keccak256(bytes(hashFunction));\n        bytes32 jsonDigest = keccak256(bytes(json));\n\n        return abi.encodePacked(bytes4(hashFunctionDigest), jsonDigest, url);\n    }\n\n    /**\n     * @dev Generate a ASSETURL value content.\n     *\n     * @param hashFunction The function used to hash the JSON file.\n     * @param assetBytes Bytes value of the JSON file.\n     * @param url The URL where the JSON file is hosted.\n     *\n     * @return The encoded value as an `ASSETURL`.\n     */\n    function generateASSETURLValue(\n        string memory hashFunction,\n        string memory assetBytes,\n        string memory url\n    ) internal pure returns (bytes memory) {\n        bytes32 hashFunctionDigest = keccak256(bytes(hashFunction));\n        bytes32 jsonDigest = keccak256(bytes(assetBytes));\n\n        return abi.encodePacked(bytes4(hashFunctionDigest), jsonDigest, url);\n    }\n\n    /**\n     * @dev Verify if `data` is a valid array of value encoded as a `CompactBytesArray` according to the LSP2 `CompactBytesArray` valueType specification.\n     *\n     * @param compactBytesArray The bytes value to verify.\n     *\n     * @return `true` if the `data` is correctly encoded CompactBytesArray, `false` otherwise.\n     */\n    function isCompactBytesArray(\n        bytes memory compactBytesArray\n    ) internal pure returns (bool) {\n        /**\n         * Pointer will always land on these values:\n         *\n         * ↓↓↓↓\n         * 0003 a00000\n         * 0005 fff83a0011\n         * 0020 aa0000000000000000000000000000000000000000000000000000000000cafe\n         * 0012 bb000000000000000000000000000000beef\n         * 0019 cc00000000000000000000000000000000000000000000deed\n         * ↑↑↑↑\n         *\n         * The pointer can only land on the length of the following bytes value.\n         */\n        uint256 pointer = 0;\n\n        /**\n         * Check each length byte and make sure that when you reach the last length byte.\n         * Make sure that the last length describes exactly the last bytes value and you do not get out of bounds.\n         */\n        while (pointer < compactBytesArray.length) {\n            if (pointer + 1 >= compactBytesArray.length) return false;\n            uint256 elementLength = uint16(\n                bytes2(\n                    abi.encodePacked(\n                        compactBytesArray[pointer],\n                        compactBytesArray[pointer + 1]\n                    )\n                )\n            );\n            pointer += elementLength + 2;\n        }\n        if (pointer == compactBytesArray.length) return true;\n        return false;\n    }\n\n    /**\n     * @dev Validates if the bytes `arrayLength` are exactly 16 bytes long, and are of the exact size of an LSP2 Array length value\n     *\n     * @param arrayLength Plain bytes that should be validated.\n     *\n     * @return `true` if the value is 16 bytes long, `false` otherwise.\n     */\n    function isValidLSP2ArrayLengthValue(\n        bytes memory arrayLength\n    ) internal pure returns (bool) {\n        if (arrayLength.length == 16) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @dev Generates Data Key/Value pairs for removing the last element from an LSP2 Array and a mapping Data Key.\n     *\n     * @param arrayKey The Data Key of Key Type Array.\n     * @param newArrayLength The new Array Length for the `arrayKey`.\n     * @param removedElementIndexKey The Data Key of Key Type Array Index for the removed element.\n     * @param removedElementMapKey The Data Key of a mapping to be removed.\n     */\n    function removeLastElementFromArrayAndMap(\n        bytes32 arrayKey,\n        uint128 newArrayLength,\n        bytes32 removedElementIndexKey,\n        bytes32 removedElementMapKey\n    )\n        internal\n        pure\n        returns (bytes32[] memory dataKeys, bytes[] memory dataValues)\n    {\n        dataKeys = new bytes32[](3);\n        dataValues = new bytes[](3);\n\n        // store the number of received assets decremented by 1\n        dataKeys[0] = arrayKey;\n        dataValues[0] = abi.encodePacked(newArrayLength);\n\n        // remove the data value for the map key of the element\n        dataKeys[1] = removedElementMapKey;\n        dataValues[1] = \"\";\n\n        // remove the data value for the map key of the element\n        dataKeys[2] = removedElementIndexKey;\n        dataValues[2] = \"\";\n    }\n\n    /**\n     * @dev Generates Data Key/Value pairs for removing an element from an LSP2 Array and a mapping Data Key.\n     *\n     * @custom:info The function assumes that the Data Value stored under the mapping Data Key is of length 20 where the last 16 bytes are the index of the element in the array.\n     *\n     * @param erc725YContract The ERC725Y contract.\n     * @param arrayKey The Data Key of Key Type Array.\n     * @param newArrayLength The new Array Length for the `arrayKey`.\n     * @param removedElementIndexKey The Data Key of Key Type Array Index for the removed element.\n     * @param removedElementIndex the index of the removed element.\n     * @param removedElementMapKey The Data Key of a mapping to be removed.\n     */\n    function removeElementFromArrayAndMap(\n        IERC725Y erc725YContract,\n        bytes32 arrayKey,\n        uint128 newArrayLength,\n        bytes32 removedElementIndexKey,\n        uint128 removedElementIndex,\n        bytes32 removedElementMapKey\n    )\n        internal\n        view\n        returns (bytes32[] memory dataKeys, bytes[] memory dataValues)\n    {\n        dataKeys = new bytes32[](5);\n        dataValues = new bytes[](5);\n\n        // store the number of received assets decremented by 1\n        dataKeys[0] = arrayKey;\n        dataValues[0] = abi.encodePacked(newArrayLength);\n\n        // remove the data value for the map key of the element\n        dataKeys[1] = removedElementMapKey;\n        dataValues[1] = \"\";\n\n        // Generate the key of the last element in the array\n        bytes32 lastElementIndexKey = LSP2Utils.generateArrayElementKeyAtIndex(\n            arrayKey,\n            newArrayLength\n        );\n\n        // Get the data value from the key of the last element in the array\n        bytes20 lastElementIndexValue = bytes20(\n            erc725YContract.getData(lastElementIndexKey)\n        );\n\n        // Set data value of the last element instead of the element from the array that will be removed\n        dataKeys[2] = removedElementIndexKey;\n        dataValues[2] = bytes.concat(lastElementIndexValue);\n\n        // Remove the data value for the swapped array element\n        dataKeys[3] = lastElementIndexKey;\n        dataValues[3] = \"\";\n\n        // Generate mapping key for the swapped array element\n        bytes32 lastElementMapKey = LSP2Utils.generateMappingKey(\n            bytes10(removedElementMapKey),\n            lastElementIndexValue\n        );\n\n        // Generate the mapping value for the swapped array element\n        bytes memory lastElementMapValue = abi.encodePacked(\n            bytes4(erc725YContract.getData(lastElementMapKey)),\n            removedElementIndex\n        );\n\n        // Update the map value of the swapped array element to the new index\n        dataKeys[4] = lastElementMapKey;\n        dataValues[4] = lastElementMapValue;\n    }\n}\n"},"@lukso/lsp4-contracts/contracts/LSP4Constants.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// Token types\nuint256 constant _LSP4_TOKEN_TYPE_TOKEN = 0;\nuint256 constant _LSP4_TOKEN_TYPE_NFT = 1;\nuint256 constant _LSP4_TOKEN_TYPE_COLLECTION = 2;\n\n// --- ERC725Y entries\n\n// bytes10(keccak256('SupportedStandards')) + bytes2(0) + bytes20(keccak256('LSP4DigitalAsset'))\nbytes32 constant _LSP4_SUPPORTED_STANDARDS_KEY = 0xeafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c;\n\n// bytes4(keccak256('LSP4DigitalAsset'))\nbytes constant _LSP4_SUPPORTED_STANDARDS_VALUE = hex\"a4d96624\";\n\n// keccak256('LSP4TokenName')\nbytes32 constant _LSP4_TOKEN_NAME_KEY = 0xdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af1;\n\n// keccak256('LSP4TokenSymbol')\nbytes32 constant _LSP4_TOKEN_SYMBOL_KEY = 0x2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db932756;\n\n// keccak256('LSP4TokenType')\nbytes32 constant _LSP4_TOKEN_TYPE_KEY = 0xe0261fa95db2eb3b5439bd033cda66d56b96f92f243a8228fd87550ed7bdfdb3;\n\n// keccak256('LSP4Creators[]')\nbytes32 constant _LSP4_CREATORS_ARRAY_KEY = 0x114bd03b3a46d48759680d81ebb2b414fda7d030a7105a851867accf1c2352e7;\n\n// bytes10(keccak256('LSP4CreatorsMap'))\nbytes10 constant _LSP4_CREATORS_MAP_KEY_PREFIX = 0x6de85eaf5d982b4e5da0;\n\n// keccak256('LSP4Metadata')\nbytes32 constant _LSP4_METADATA_KEY = 0x9afb95cacc9f95858ec44aa8c3b685511002e30ae54415823f406128b85b238e;\n"},"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// modules\nimport {ERC725Y} from \"@erc725/smart-contracts/contracts/ERC725Y.sol\";\nimport {ERC725YCore} from \"@erc725/smart-contracts/contracts/ERC725YCore.sol\";\nimport {LSP4DigitalAssetMetadataCore} from \"./LSP4DigitalAssetMetadataCore.sol\";\n\n// constants\nimport {\n    _LSP4_SUPPORTED_STANDARDS_KEY,\n    _LSP4_SUPPORTED_STANDARDS_VALUE,\n    _LSP4_TOKEN_NAME_KEY,\n    _LSP4_TOKEN_SYMBOL_KEY,\n    _LSP4_TOKEN_TYPE_KEY\n} from \"./LSP4Constants.sol\";\n\n/**\n * @title Implementation of a LSP4DigitalAssetMetadata contract that stores the **Token-Metadata** (`LSP4TokenName` and `LSP4TokenSymbol`) in its ERC725Y data store.\n * @author Matthew Stevens\n * @dev Standard Implementation of the LSP4 standard.\n */\nabstract contract LSP4DigitalAssetMetadata is\n    ERC725Y,\n    LSP4DigitalAssetMetadataCore\n{\n    /**\n     * @notice Deploying a digital asset `name_` with the `symbol_` symbol.\n     *\n     * @param name_ The name of the token.\n     * @param symbol_ The symbol of the token.\n     * @param initialOwner_ The owner of the token contract.\n     * @param lsp4TokenType_ The type of token this digital asset contract represents (`0` = Token, `1` = NFT, `2` = Collection).\n     */\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        address initialOwner_,\n        uint256 lsp4TokenType_\n    ) ERC725Y(initialOwner_) {\n        // set data key SupportedStandards:LSP4DigitalAsset\n        ERC725YCore._setData(\n            _LSP4_SUPPORTED_STANDARDS_KEY,\n            _LSP4_SUPPORTED_STANDARDS_VALUE\n        );\n\n        ERC725YCore._setData(_LSP4_TOKEN_NAME_KEY, bytes(name_));\n        ERC725YCore._setData(_LSP4_TOKEN_SYMBOL_KEY, bytes(symbol_));\n        ERC725YCore._setData(_LSP4_TOKEN_TYPE_KEY, abi.encode(lsp4TokenType_));\n    }\n\n    /**\n     * @dev The ERC725Y data keys `LSP4TokenName` and `LSP4TokenSymbol` cannot be changed\n     * via this function once the digital asset contract has been deployed.\n     */\n    function _setData(\n        bytes32 dataKey,\n        bytes memory dataValue\n    ) internal virtual override(ERC725YCore, LSP4DigitalAssetMetadataCore) {\n        LSP4DigitalAssetMetadataCore._setData(dataKey, dataValue);\n    }\n}\n"},"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadataCore.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// modules\nimport {ERC725YCore} from \"@erc725/smart-contracts/contracts/ERC725YCore.sol\";\n\n// constants\nimport {\n    _LSP4_TOKEN_NAME_KEY,\n    _LSP4_TOKEN_SYMBOL_KEY,\n    _LSP4_TOKEN_TYPE_KEY\n} from \"./LSP4Constants.sol\";\n\n// errors\nimport {\n    LSP4TokenNameNotEditable,\n    LSP4TokenSymbolNotEditable,\n    LSP4TokenTypeNotEditable\n} from \"./LSP4Errors.sol\";\n\n/**\n * @title Implementation of a LSP4DigitalAssetMetadata contract that stores the **Token-Metadata** (`LSP4TokenName` and `LSP4TokenSymbol`) in its ERC725Y data store.\n * @author Matthew Stevens\n * @dev Standard Implementation of the LSP4 standard.\n */\nabstract contract LSP4DigitalAssetMetadataCore is ERC725YCore {\n    /**\n     * @dev The ERC725Y data keys `LSP4TokenName` and `LSP4TokenSymbol` cannot be changed\n     * via this function once the digital asset contract has been deployed.\n     */\n    function _setData(\n        bytes32 dataKey,\n        bytes memory dataValue\n    ) internal virtual override {\n        if (dataKey == _LSP4_TOKEN_NAME_KEY) {\n            revert LSP4TokenNameNotEditable();\n        } else if (dataKey == _LSP4_TOKEN_SYMBOL_KEY) {\n            revert LSP4TokenSymbolNotEditable();\n        } else if (dataKey == _LSP4_TOKEN_TYPE_KEY) {\n            revert LSP4TokenTypeNotEditable();\n        } else {\n            _store[dataKey] = dataValue;\n\n            emit DataChanged(dataKey, dataValue);\n        }\n    }\n}\n"},"@lukso/lsp4-contracts/contracts/LSP4Errors.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n/**\n * @dev Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed / initialized.\n * The `LSP4TokenName` data key is located inside the ERC725Y data key-value store of the digital asset contract.\n * It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\n */\nerror LSP4TokenNameNotEditable();\n\n/**\n * @dev Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed / initialized.\n * The `LSP4TokenSymbol` data key is located inside the ERC725Y data key-value store of the digital asset contract.\n * It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\n */\nerror LSP4TokenSymbolNotEditable();\n\n/**\n * @dev Reverts when trying to edit the data key `LSP4TokenType` after the digital asset contract has been deployed / initialized.\n * The `LSP4TokenType` data key is located inside the ERC725Y data key-value store of the digital asset contract.\n * It can be set only once inside the constructor / initializer when the digital asset contract is being deployed / initialized.\n */\nerror LSP4TokenTypeNotEditable();\n"},"@lukso/lsp8-contracts/contracts/extensions/LSP8Burnable.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.12;\n\nimport {\n    LSP8IdentifiableDigitalAsset\n} from \"../LSP8IdentifiableDigitalAsset.sol\";\n\n// errors\nimport {LSP8NotTokenOperator} from \"../LSP8Errors.sol\";\n\n/**\n * @dev LSP8 token extension that allows token holders to destroy both\n * their own tokens and those that they have an allowance for as an operator.\n */\nabstract contract LSP8Burnable is LSP8IdentifiableDigitalAsset {\n    /**\n     * @notice Burning tokenId `tokenId`. This tokenId will not be recoverable! (additional data sent: `data`).\n     *\n     * @dev See internal {_burn} function for details.\n     *\n     * @param tokenId The tokenId to burn.\n     * @param data Any extra data to be sent alongside burning the tokenId.\n     */\n    function burn(bytes32 tokenId, bytes memory data) public virtual {\n        if (!_isOperatorOrOwner(msg.sender, tokenId)) {\n            revert LSP8NotTokenOperator(tokenId, msg.sender);\n        }\n        _burn(tokenId, data);\n    }\n}\n"},"@lukso/lsp8-contracts/contracts/ILSP8IdentifiableDigitalAsset.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// interfaces\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {\n    IERC725Y\n} from \"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\";\n\n/**\n * @title Interface of the LSP8 - Identifiable Digital Asset standard, a non-fungible digital asset.\n */\ninterface ILSP8IdentifiableDigitalAsset is IERC165, IERC725Y {\n    // --- Events\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from the `from` to the `to` address.\n     * @param operator The address of operator that sent the `tokenId`\n     * @param from The previous owner of the `tokenId`\n     * @param to The new owner of `tokenId`\n     * @param tokenId The tokenId that was transferred\n     * @param force If the token transfer enforces the `to` recipient address to be a contract that implements the LSP1 standard or not.\n     * @param data Any additional data the caller included by the caller during the transfer, and sent in the hooks to the `from` and `to` addresses.\n     */\n    event Transfer(\n        address operator,\n        address indexed from,\n        address indexed to,\n        bytes32 indexed tokenId,\n        bool force,\n        bytes data\n    );\n\n    /**\n     * @dev Emitted when `tokenOwner` enables `operator` to transfer or burn the `tokenId`.\n     * @param operator The address authorized as an operator.\n     * @param tokenOwner The owner of the `tokenId`.\n     * @param tokenId The tokenId `operator` address has access on behalf of `tokenOwner`.\n     * @param operatorNotificationData The data to notify the operator about via LSP1.\n     */\n    event OperatorAuthorizationChanged(\n        address indexed operator,\n        address indexed tokenOwner,\n        bytes32 indexed tokenId,\n        bytes operatorNotificationData\n    );\n\n    /**\n     * @dev Emitted when `tokenOwner` disables `operator` to transfer or burn `tokenId` on its behalf.\n     * @param operator The address revoked from the operator array ({getOperatorsOf}).\n     * @param tokenOwner The owner of the `tokenId`.\n     * @param tokenId The tokenId `operator` is revoked from operating on.\n     * @param notified Bool indicating whether the operator has been notified or not\n     * @param operatorNotificationData The data to notify the operator about via LSP1.\n     */\n    event OperatorRevoked(\n        address indexed operator,\n        address indexed tokenOwner,\n        bytes32 indexed tokenId,\n        bool notified,\n        bytes operatorNotificationData\n    );\n\n    /**\n     * @dev Emitted when setting data for `tokenId`.\n     * @param tokenId The tokenId which data is set for.\n     * @param dataKey The data key for which a bytes value is set.\n     * @param dataValue The value to set for the given data key.\n     */\n    event TokenIdDataChanged(\n        bytes32 indexed tokenId,\n        bytes32 indexed dataKey,\n        bytes dataValue\n    );\n\n    // --- Token queries\n\n    /**\n     * @dev Returns the number of existing tokens that have been minted in this contract.\n     * @return The number of existing tokens.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // --- Token owner queries\n\n    /**\n     * @dev Get the number of token IDs owned by `tokenOwner`.\n\n     * @param tokenOwner The address to query     *\n     * @return The total number of token IDs that `tokenOwner` owns.\n     */\n    function balanceOf(address tokenOwner) external view returns (uint256);\n\n    /**\n     * @dev Returns the address that owns a given `tokenId`.\n     *\n     * @param tokenId The token ID to query the owner for.\n     * @return The owner address of the given `tokenId`.\n     *\n     * @custom:requirements `tokenId` must exist.\n     * @custom:info if the `tokenId` is not owned by any address, the returned address will be `address(0)`\n     */\n    function tokenOwnerOf(bytes32 tokenId) external view returns (address);\n\n    /**\n     * @dev Returns the list of token IDs that the `tokenOwner` address owns.\n     * @param tokenOwner The address that we want to get the list of token IDs for.\n     * @return An array of `bytes32[] tokenIds` owned by `tokenOwner`.\n     */\n    function tokenIdsOf(\n        address tokenOwner\n    ) external view returns (bytes32[] memory);\n\n    // --- TokenId Metadata functionality\n\n    /**\n     * @notice Retrieves data for a specific `tokenId` and `dataKey`.\n     * @param tokenId The unique identifier for a token.\n     * @param dataKey The key for the data to retrieve.\n     * @return dataValues The data value associated with the given `tokenId` and `dataKey`.\n     */\n    function getDataForTokenId(\n        bytes32 tokenId,\n        bytes32 dataKey\n    ) external returns (bytes memory dataValues);\n\n    /**\n     * @notice Retrieves data in batch for multiple `tokenId` and `dataKey` pairs.\n     * @param tokenIds An array of token IDs.\n     * @param dataKeys An array of data keys corresponding to the token IDs.\n     * @return dataValues An array of data values for each pair of `tokenId` and `dataKey`.\n     */\n    function getDataBatchForTokenIds(\n        bytes32[] memory tokenIds,\n        bytes32[] memory dataKeys\n    ) external returns (bytes[] memory dataValues);\n\n    /**\n     * @notice Sets data for a specific `tokenId` and `dataKey`.\n     * @param tokenId The unique identifier for a token.\n     * @param dataKey The key for the data to set.\n     * @param dataValue The value to set for the given data key.\n     * @custom:events {TokenIdDataChanged} event.\n     */\n    function setDataForTokenId(\n        bytes32 tokenId,\n        bytes32 dataKey,\n        bytes memory dataValue\n    ) external;\n\n    /**\n     * @notice Sets data in batch for multiple `tokenId` and `dataKey` pairs.\n     * @param tokenIds An array of token IDs.\n     * @param dataKeys An array of data keys corresponding to the token IDs.\n     * @param dataValues An array of values to set for the given data keys.\n     * @custom:events {TokenIdDataChanged} event for each pair.\n     */\n    function setDataBatchForTokenIds(\n        bytes32[] memory tokenIds,\n        bytes32[] memory dataKeys,\n        bytes[] memory dataValues\n    ) external;\n\n    // --- Operator functionality\n\n    /**\n     * @dev Allow an `operator` address to transfer or burn a specific `tokenId` on behalf of its token owner. See {isOperatorFor}.\n     * Notify the operator based on the LSP1-UniversalReceiver standard\n     *\n     * @param operator The address to authorize as an operator.\n     * @param tokenId The token ID operator has access to.\n     * @param operatorNotificationData The data to notify the operator about via LSP1.\n     *\n     * @custom:requirements\n     * - `tokenId` must exist.\n     * - caller MUST be the {tokenOwnerOf} `tokenId`.\n     * - the owner of a `tokenId` cannot grant itself as an `operator` (`operator` cannot be the calling address).\n     * - `operator` cannot be the zero address.\n     *\n     * @custom:events {OperatorAuthorizationChanged} event.\n     */\n    function authorizeOperator(\n        address operator,\n        bytes32 tokenId,\n        bytes memory operatorNotificationData\n    ) external;\n\n    /**\n     * @dev Remove access of `operator` for a given `tokenId`, disallowing it to transfer `tokenId` on behalf of its owner.\n     * See also {isOperatorFor}.\n     *\n     * @param operator The address to revoke as an operator.\n     * @param tokenId The tokenId `operator` is revoked from operating on.\n     * @param notify Boolean indicating whether to notify the operator or not\n     * @param operatorNotificationData The data to notify the operator about via LSP1.\n     *\n     * @custom:requirements\n     * - `tokenId` must exist.\n     * - caller must be the {tokenOwnerOf} `tokenId`.\n     * - the owner of a `tokenId` cannot grant revoke itself as an `operator` (`operator` cannot be the calling address).\n     * - `operator` cannot be the zero address.\n     *\n     * @custom:events {OperatorRevoked} event with address of the operator being revoked for the caller (token owner)..\n     */\n    function revokeOperator(\n        address operator,\n        bytes32 tokenId,\n        bool notify,\n        bytes memory operatorNotificationData\n    ) external;\n\n    /**\n     * @dev Returns whether `operator` address is an operator for a given `tokenId`.\n     *\n     * @param operator The address to query operator status for.\n     * @param tokenId The token ID to check if `operator` is allowed to operate on.\n     *\n     * @return `true` if `operator` is an operator for `tokenId`, `false` otherwise.\n     *\n     * @custom:requirements\n     * - `tokenId` must exist.\n     * - caller must be the current {tokenOwnerOf} `tokenId`.\n     *\n     * @custom:info The tokenOwner is its own operator.\n     */\n    function isOperatorFor(\n        address operator,\n        bytes32 tokenId\n    ) external view returns (bool);\n\n    /**\n     * @dev Returns all `operator` addresses that are allowed to transfer or burn a specific `tokenId` on behalf of its owner.\n     *\n     * @param tokenId The token ID to get the operators for.\n     * @return An array of operators allowed to transfer or burn a specific `tokenId`.\n     *\n     * Requirements\n     * - `tokenId` must exist.\n     */\n    function getOperatorsOf(\n        bytes32 tokenId\n    ) external view returns (address[] memory);\n\n    // --- Transfer functionality\n\n    /**\n     * @dev Transfer a given `tokenId` token from the `from` address to the `to` address.\n     *\n     * If operators are set for a specific `tokenId`, all the operators are revoked after the tokenId have been transferred.\n     *\n     * The `force` parameter MUST be set to `true` when transferring tokens to Externally Owned Accounts (EOAs)\n     * or contracts that do not implement the LSP1 standard.\n     *\n     * @param from The address that owns the given `tokenId`.\n     * @param to The address that will receive the `tokenId`.\n     * @param tokenId The token ID to transfer.\n     * @param force When set to `true`, the `to` address CAN be any addres.\n     * When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\n     * @param data Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\n     *\n     * @custom:requirements\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` and `to` cannot be the same address (`from` cannot send the `tokenId` to itself).\n     * - `from` must own the given `tokenId`.\n     * - If the caller is not `from`, it must be an operator for the `tokenId`.\n     *\n     * @custom:events\n     * - {Transfer} event when the `tokenId` is successfully transferred.\n     *\n     * @custom:hint The `force` parameter **MUST be set to `true`** to transfer tokens to Externally Owned Accounts (EOAs)\n     * or contracts that do not implement the LSP1 Universal Receiver Standard. Otherwise the function will revert making the transfer fail.\n     *\n     * @custom:info if the `to` address is a contract that implements LSP1, it will always be notified via its `universalReceiver(...)` function, regardless if `force` is set to `true` or `false`.\n     *\n     * @custom:warning Be aware that when either the sender or the recipient can have logic that revert in their `universalReceiver(...)` function when being notified.\n     * This even if the `force` was set to `true`.\n     */\n    function transfer(\n        address from,\n        address to,\n        bytes32 tokenId,\n        bool force,\n        bytes memory data\n    ) external;\n\n    /**\n     * @dev Transfers multiple tokens at once based on the arrays of `from`, `to` and `tokenId`.\n     * If any transfer fails, the whole call will revert.\n     *\n     * @param from An array of sending addresses.\n     * @param to An array of recipient addresses.\n     * @param tokenId An array of token IDs to transfer.\n     * @param force When set to `true`, `to` may be any address.\n     * When set to `false`, `to` must be a contract that supports the LSP1 standard and not revert.\n     * @param data Any additional data the caller wants included in the emitted event, and sent in the hooks to the `from` and `to` addresses.\n     *\n     *\n     * @custom:requirements\n     * - The arrays of `from`, `to` and `tokenId` must have the same length.\n     * - no values in the `from` array can be the zero address.\n     * - no values in the `to` array can be the zero address.\n     * - `from` and `to` cannot be the same address at the same index on each arrays.\n     * - each `tokenId` must be owned by `from`.\n     * - If the caller is not `from`, it must be an operator of each `tokenId`.\n     *\n     * @custom:events\n     * - {Transfer} events on each successful token transfer.\n     */\n    function transferBatch(\n        address[] memory from,\n        address[] memory to,\n        bytes32[] memory tokenId,\n        bool[] memory force,\n        bytes[] memory data\n    ) external;\n\n    /**\n     * @notice Executing the following batch of abi-encoded function calls on the contract: `data`.\n     *\n     * @dev Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\n     * @param data An array of ABI encoded function calls to be called on the contract.\n     * @return results An array of abi-encoded data returned by the functions executed.\n     */\n    function batchCalls(\n        bytes[] calldata data\n    ) external returns (bytes[] memory results);\n}\n"},"@lukso/lsp8-contracts/contracts/LSP8Constants.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// --- ERC165 interface ids\nbytes4 constant _INTERFACEID_LSP8 = 0x3a271706;\n\n// --- ERC725Y Data Keys\n\n// keccak256('LSP8TokenIdFormat')\nbytes32 constant _LSP8_TOKENID_FORMAT_KEY = 0xf675e9361af1c1664c1868cfa3eb97672d6b1a513aa5b81dec34c9ee330e818d;\n\n// keccak256('LSP8TokenMetadataBaseURI')\nbytes32 constant _LSP8_TOKEN_METADATA_BASE_URI = 0x1a7628600c3bac7101f53697f48df381ddc36b9015e7d7c9c5633d1252aa2843;\n\n// keccak256('LSP8ReferenceContract')\nbytes32 constant _LSP8_REFERENCE_CONTRACT = 0x708e7b881795f2e6b6c2752108c177ec89248458de3bf69d0d43480b3e5034e6;\n\n// --- Token Hooks\n\n// keccak256('LSP8Tokens_SenderNotification')\nbytes32 constant _TYPEID_LSP8_TOKENSSENDER = 0xb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab00;\n\n// keccak256('LSP8Tokens_RecipientNotification')\nbytes32 constant _TYPEID_LSP8_TOKENSRECIPIENT = 0x0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d;\n\n// keccak256('LSP8Tokens_OperatorNotification')\nbytes32 constant _TYPEID_LSP8_TOKENOPERATOR = 0x8a1c15a8799f71b547e08e2bcb2e85257e81b0a07eee2ce6712549eef1f00970;\n\n// --- Token IDs Format\n\nuint256 constant _LSP8_TOKENID_FORMAT_NUMBER = 0;\nuint256 constant _LSP8_TOKENID_FORMAT_STRING = 1;\nuint256 constant _LSP8_TOKENID_FORMAT_ADDRESS = 2;\nuint256 constant _LSP8_TOKENID_FORMAT_UNIQUE_ID = 3;\nuint256 constant _LSP8_TOKENID_FORMAT_HASH = 4;\n\nuint256 constant _LSP8_TOKENID_FORMAT_MIXED_DEFAULT_NUMBER = 100;\nuint256 constant _LSP8_TOKENID_FORMAT_MIXED_DEFAULT_STRING = 101;\nuint256 constant _LSP8_TOKENID_FORMAT_MIXED_DEFAULT_ADDRESS = 102;\nuint256 constant _LSP8_TOKENID_FORMAT_MIXED_DEFAULT_UNIQUE_ID = 103;\nuint256 constant _LSP8_TOKENID_FORMAT_MIXED_DEFAULT_HASH = 104;\n"},"@lukso/lsp8-contracts/contracts/LSP8Errors.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.4;\n\n// --- Errors\n\n/**\n * @dev Reverts when `tokenId` has not been minted.\n */\nerror LSP8NonExistentTokenId(bytes32 tokenId);\n\n/**\n * @dev Reverts when `caller` is not the `tokenOwner` of the `tokenId`.\n */\nerror LSP8NotTokenOwner(address tokenOwner, bytes32 tokenId, address caller);\n\n/**\n * @dev Reverts when `caller` is not an allowed operator for `tokenId`.\n */\nerror LSP8NotTokenOperator(bytes32 tokenId, address caller);\n\n/**\n * @dev Reverts when `operator` is already authorized for the `tokenId`.\n */\nerror LSP8OperatorAlreadyAuthorized(address operator, bytes32 tokenId);\n\n/**\n * @dev Reverts when trying to set the zero address as an operator.\n */\nerror LSP8CannotUseAddressZeroAsOperator();\n\n/**\n * @dev Reverts when trying to send token to the zero address.\n */\nerror LSP8CannotSendToAddressZero();\n\n/**\n * @dev Reverts when `operator` is not an operator for the `tokenId`.\n */\nerror LSP8NonExistingOperator(address operator, bytes32 tokenId);\n\n/**\n * @dev Reverts when `tokenId` has already been minted.\n */\nerror LSP8TokenIdAlreadyMinted(bytes32 tokenId);\n\n/**\n * @dev Reverts when the parameters used for `transferBatch` have different lengths.\n */\nerror LSP8InvalidTransferBatch();\n\n/**\n * @dev Reverts if the `tokenReceiver` does not implement LSP1\n * when minting or transferring tokens with `bool force` set as `false`.\n */\nerror LSP8NotifyTokenReceiverContractMissingLSP1Interface(\n    address tokenReceiver\n);\n\n/**\n * @dev Reverts if the `tokenReceiver` is an EOA\n * when minting or transferring tokens with `bool force` set as `false`.\n */\nerror LSP8NotifyTokenReceiverIsEOA(address tokenReceiver);\n\n/**\n * @dev Reverts when trying to authorize or revoke the token's owner as an operator.\n */\nerror LSP8TokenOwnerCannotBeOperator();\n\n/**\n * @dev Error occurs when sending native tokens to the LSP8 contract without sending any data.\n *\n * E.g. Sending value without passing a bytes4 function selector to call a LSP17 Extension.\n *\n * @notice LSP8 contract cannot receive native tokens.\n */\nerror LSP8TokenContractCannotHoldValue();\n\n/**\n * @dev Reverts when trying to edit the data key `LSP8TokenIdFormat` after the identifiable digital asset contract has been deployed.\n * The `LSP8TokenIdFormat` data key is located inside the ERC725Y Data key-value store of the identifiable digital asset contract.\n * It can be set only once inside the constructor/initializer when the identifiable digital asset contract is being deployed.\n */\nerror LSP8TokenIdFormatNotEditable();\n\n/**\n * @dev Reverts when the length of the token IDs data arrays is not equal\n */\nerror LSP8TokenIdsDataLengthMismatch();\n\n/**\n * @dev Reverts when empty arrays is passed to the function\n */\nerror LSP8TokenIdsDataEmptyArray();\n\n/**\n * @dev Reverts when a batch call failed.\n * @notice Batch call failed.\n */\nerror LSP8BatchCallFailed(uint256 callIndex);\n\n/**\n * @dev Reverts when the token owner changed inside the {_beforeTokenTransfer} hook.\n */\nerror LSP8TokenOwnerChanged(\n    bytes32 tokenId,\n    address oldOwner,\n    address newOwner\n);\n\n/**\n * @dev Reverts when the call to revoke operator is not authorized.\n */\nerror LSP8RevokeOperatorNotAuthorized(\n    address caller,\n    address tokenOwner,\n    bytes32 tokenId\n);\n"},"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAsset.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.12;\n\n// interfaces\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\n\n// modules\nimport {ERC725YCore} from \"@erc725/smart-contracts/contracts/ERC725YCore.sol\";\nimport {\n    LSP8IdentifiableDigitalAssetCore\n} from \"./LSP8IdentifiableDigitalAssetCore.sol\";\nimport {\n    LSP4DigitalAssetMetadata\n} from \"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol\";\n\nimport {\n    LSP4DigitalAssetMetadataCore\n} from \"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadataCore.sol\";\n\nimport {\n    LSP17Extendable\n} from \"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol\";\n\n// libraries\nimport {LSP2Utils} from \"@lukso/lsp2-contracts/contracts/LSP2Utils.sol\";\n\n// constants\nimport {_INTERFACEID_LSP8, _LSP8_TOKENID_FORMAT_KEY} from \"./LSP8Constants.sol\";\n\n// errors\nimport {\n    LSP8TokenContractCannotHoldValue,\n    LSP8TokenIdFormatNotEditable\n} from \"./LSP8Errors.sol\";\n\nimport {\n    _LSP17_EXTENSION_PREFIX\n} from \"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol\";\n\n// errors\n\nimport {\n    NoExtensionFoundForFunctionSelector,\n    InvalidFunctionSelector,\n    InvalidExtensionAddress\n} from \"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol\";\n\n/**\n * @title Implementation of a LSP8 Identifiable Digital Asset, a contract that represents a non-fungible token.\n * @author Matthew Stevens\n *\n * @dev Standard implementation contract of the LSP8 standard.\n *\n * Minting and transferring are done by providing a unique `tokenId`.\n * This implementation is agnostic to the way tokens are created.\n * A supply mechanism has to be added in a derived contract using {_mint}\n * For a generic mechanism, see {LSP7Mintable}.\n */\nabstract contract LSP8IdentifiableDigitalAsset is\n    LSP4DigitalAssetMetadata,\n    LSP8IdentifiableDigitalAssetCore,\n    LSP17Extendable\n{\n    /**\n     * @notice Deploying a LSP8IdentifiableDigitalAsset with name `name_`, symbol `symbol_`, owned by address `newOwner_`\n     * with tokenId format `lsp8TokenIdFormat_`.\n     *\n     * @dev Deploy a `LSP8IdentifiableDigitalAsset` contract and set the tokenId format inside the ERC725Y storage of the contract.\n     * This will also set the token `name_` and `symbol_` under the ERC725Y data keys `LSP4TokenName` and `LSP4TokenSymbol`.\n     *\n     * @param name_ The name of the token\n     * @param symbol_ The symbol of the token\n     * @param newOwner_ The owner of the the token-Metadata\n     * @param lsp4TokenType_ The type of token this digital asset contract represents (`0` = Token, `1` = NFT, `2` = Collection).\n     * @param lsp8TokenIdFormat_ The format of tokenIds (= NFTs) that this contract will create.\n     *\n     * @custom:warning Make sure the tokenId format provided on deployment is correct, as it can only be set once\n     * and cannot be changed in the ERC725Y storage after the contract has been deployed.\n     */\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        address newOwner_,\n        uint256 lsp4TokenType_,\n        uint256 lsp8TokenIdFormat_\n    ) LSP4DigitalAssetMetadata(name_, symbol_, newOwner_, lsp4TokenType_) {\n        LSP4DigitalAssetMetadata._setData(\n            _LSP8_TOKENID_FORMAT_KEY,\n            abi.encode(lsp8TokenIdFormat_)\n        );\n    }\n\n    // fallback function\n\n    /**\n     * @notice The `fallback` function was called with the following amount of native tokens: `msg.value`; and the following calldata: `callData`.\n     *\n     * @dev Achieves the goal of [LSP-17-ContractExtension] standard by extending the contract to handle calls of functions that do not exist natively,\n     * forwarding the function call to the extension address mapped to the function being called.\n     *\n     * This function is executed when:\n     *    - Sending data of length less than 4 bytes to the contract.\n     *    - The first 4 bytes of the calldata do not match any publicly callable functions from the contract ABI.\n     *    - Receiving native tokens\n     *\n     * 1. If the data is equal or longer than 4 bytes, the [ERC-725Y] storage is queried with the following data key: [_LSP17_EXTENSION_PREFIX] + `bytes4(msg.sig)` (Check [LSP-2-ERC725YJSONSchema] for encoding the data key)\n     *\n     *   - If there is no address stored under the following data key, revert with {NoExtensionFoundForFunctionSelector(bytes4)}. The data key relative to `bytes4(0)` is an exception, where no reverts occurs if there is no extension address stored under. This exception is made to allow users to send random data (graffiti) to the account and to be able to react on it.\n     *\n     *   - If there is an address, forward the `msg.data` to the extension using the CALL opcode, appending 52 bytes (20 bytes of `msg.sender` and 32 bytes of `msg.value`). Return what the calls returns, or revert if the call failed.\n     *\n     * 2. If the data sent to this function is of length less than 4 bytes (not a function selector), revert.\n     */\n    // solhint-disable-next-line no-complex-fallback\n    fallback(\n        bytes calldata callData\n    ) external payable virtual returns (bytes memory) {\n        if (msg.data.length < 4) {\n            revert InvalidFunctionSelector(callData);\n        }\n        return _fallbackLSP17Extendable(callData);\n    }\n\n    /**\n     * @dev Reverts whenever someone tries to send native tokens to a LSP8 contract.\n     * @notice LSP8 contract cannot receive native tokens.\n     */\n    receive() external payable virtual {\n        // revert on empty calls with no value\n        if (msg.value == 0) {\n            revert InvalidFunctionSelector(hex\"00000000\");\n        }\n\n        revert LSP8TokenContractCannotHoldValue();\n    }\n\n    /**\n     * @dev Forwards the call with the received value to an extension mapped to a function selector.\n     *\n     * Calls {_getExtensionAndForwardValue} to get the address of the extension mapped to the function selector being\n     * called on the account. If there is no extension, the address(0) will be returned.\n     * We will always forward the value to the extension, as the LSP8 contract is not supposed to hold any native tokens.\n     *\n     * Reverts if there is no extension for the function being called.\n     *\n     * If there is an extension for the function selector being called, it calls the extension with the\n     * CALL opcode, passing the {msg.data} appended with the 20 bytes of the {msg.sender} and\n     * 32 bytes of the {msg.value}\n     *\n     * @custom:info The LSP8 Token contract should not hold any native tokens. Any native tokens received by the contract\n     * will be forwarded to the extension address mapped to the selector from `msg.sig`.\n     */\n    function _fallbackLSP17Extendable(\n        bytes calldata callData\n    ) internal virtual override returns (bytes memory) {\n        // If there is a function selector\n        (address extension, ) = _getExtensionAndForwardValue(msg.sig);\n\n        // if no extension was found, revert\n        if (extension == address(0))\n            revert NoExtensionFoundForFunctionSelector(msg.sig);\n\n        (bool success, bytes memory result) = extension.call{value: msg.value}(\n            abi.encodePacked(callData, msg.sender, msg.value)\n        );\n\n        if (success) {\n            return result;\n        } else {\n            // `mload(result)` -> offset in memory where `result.length` is located\n            // `add(result, 32)` -> offset in memory where `result` data starts\n            // solhint-disable no-inline-assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let resultdata_size := mload(result)\n                revert(add(result, 32), resultdata_size)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the extension address stored under the following data key:\n     * - {_LSP17_EXTENSION_PREFIX} + `<bytes4>` (Check [LSP2-ERC725YJSONSchema] for encoding the data key).\n     * - If no extension is stored, returns the address(0).\n     */\n    function _getExtensionAndForwardValue(\n        bytes4 functionSelector\n    ) internal view virtual override returns (address, bool) {\n        // Generate the data key relevant for the functionSelector being called\n        bytes32 mappedExtensionDataKey = LSP2Utils.generateMappingKey(\n            _LSP17_EXTENSION_PREFIX,\n            functionSelector\n        );\n\n        // Check if there is an extension stored under the generated data key\n        bytes memory extensionAddress = ERC725YCore._getData(\n            mappedExtensionDataKey\n        );\n        if (extensionAddress.length != 20 && extensionAddress.length != 0)\n            revert InvalidExtensionAddress(extensionAddress);\n\n        return (address(bytes20(extensionAddress)), true);\n    }\n\n    /**\n     * @inheritdoc IERC165\n     */\n    function supportsInterface(\n        bytes4 interfaceId\n    )\n        public\n        view\n        virtual\n        override(IERC165, ERC725YCore, LSP17Extendable)\n        returns (bool)\n    {\n        return\n            interfaceId == _INTERFACEID_LSP8 ||\n            super.supportsInterface(interfaceId) ||\n            LSP17Extendable._supportsInterfaceInERC165Extension(interfaceId);\n    }\n\n    /**\n     * @inheritdoc LSP4DigitalAssetMetadata\n     * @dev The ERC725Y data key `_LSP8_TOKENID_FORMAT_KEY` cannot be changed\n     * once the identifiable digital asset contract has been deployed.\n     */\n    function _setData(\n        bytes32 dataKey,\n        bytes memory dataValue\n    )\n        internal\n        virtual\n        override(LSP4DigitalAssetMetadata, LSP4DigitalAssetMetadataCore)\n    {\n        if (dataKey == _LSP8_TOKENID_FORMAT_KEY) {\n            revert LSP8TokenIdFormatNotEditable();\n        }\n        LSP4DigitalAssetMetadata._setData(dataKey, dataValue);\n    }\n}\n"},"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAssetCore.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.12;\n\n// interfaces\nimport {\n    ILSP1UniversalReceiver as ILSP1\n} from \"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol\";\nimport {\n    ILSP8IdentifiableDigitalAsset\n} from \"./ILSP8IdentifiableDigitalAsset.sol\";\n\n// modules\n\nimport {\n    LSP4DigitalAssetMetadataCore\n} from \"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadataCore.sol\";\n\n// libraries\nimport {\n    EnumerableSet\n} from \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\nimport {\n    ERC165Checker\n} from \"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\";\nimport {LSP1Utils} from \"@lukso/lsp1-contracts/contracts/LSP1Utils.sol\";\n\n// errors\nimport {\n    LSP8NonExistentTokenId,\n    LSP8NotTokenOwner,\n    LSP8CannotUseAddressZeroAsOperator,\n    LSP8TokenOwnerCannotBeOperator,\n    LSP8OperatorAlreadyAuthorized,\n    LSP8NotTokenOperator,\n    LSP8InvalidTransferBatch,\n    LSP8NonExistingOperator,\n    LSP8CannotSendToAddressZero,\n    LSP8TokenIdAlreadyMinted,\n    LSP8NotifyTokenReceiverContractMissingLSP1Interface,\n    LSP8NotifyTokenReceiverIsEOA,\n    LSP8TokenIdsDataLengthMismatch,\n    LSP8TokenIdsDataEmptyArray,\n    LSP8BatchCallFailed,\n    LSP8TokenOwnerChanged,\n    LSP8RevokeOperatorNotAuthorized\n} from \"./LSP8Errors.sol\";\n\n// constants\nimport {\n    _INTERFACEID_LSP1\n} from \"@lukso/lsp1-contracts/contracts/LSP1Constants.sol\";\nimport {\n    _TYPEID_LSP8_TOKENOPERATOR,\n    _TYPEID_LSP8_TOKENSSENDER,\n    _TYPEID_LSP8_TOKENSRECIPIENT\n} from \"./LSP8Constants.sol\";\n\n/**\n * @title LSP8IdentifiableDigitalAsset contract\n * @author Matthew Stevens\n * @dev Core Implementation of a LSP8 compliant contract.\n */\nabstract contract LSP8IdentifiableDigitalAssetCore is\n    LSP4DigitalAssetMetadataCore,\n    ILSP8IdentifiableDigitalAsset\n{\n    using EnumerableSet for EnumerableSet.AddressSet;\n    using EnumerableSet for EnumerableSet.Bytes32Set;\n\n    // --- Storage\n\n    uint256 internal _existingTokens;\n\n    // Mapping from `tokenId` to `tokenOwner`\n    mapping(bytes32 => address) internal _tokenOwners;\n\n    // Mapping `tokenOwner` to owned tokenIds\n    mapping(address => EnumerableSet.Bytes32Set) internal _ownedTokens;\n\n    // Mapping a `tokenId` to its authorized operator addresses.\n    mapping(bytes32 => EnumerableSet.AddressSet) internal _operators;\n\n    // Mapping from `tokenId` to `dataKey` to `dataValue`\n    mapping(bytes32 => mapping(bytes32 => bytes)) internal _tokenIdData;\n\n    // --- Token queries\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _existingTokens;\n    }\n\n    // --- Token owner queries\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function balanceOf(\n        address tokenOwner\n    ) public view virtual override returns (uint256) {\n        return _ownedTokens[tokenOwner].length();\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function tokenOwnerOf(\n        bytes32 tokenId\n    ) public view virtual override returns (address) {\n        address tokenOwner = _tokenOwners[tokenId];\n\n        if (tokenOwner == address(0)) {\n            revert LSP8NonExistentTokenId(tokenId);\n        }\n\n        return tokenOwner;\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function tokenIdsOf(\n        address tokenOwner\n    ) public view virtual override returns (bytes32[] memory) {\n        return _ownedTokens[tokenOwner].values();\n    }\n\n    // --- TokenId Metadata functionality\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function getDataForTokenId(\n        bytes32 tokenId,\n        bytes32 dataKey\n    ) public view virtual override returns (bytes memory dataValue) {\n        return _getDataForTokenId(tokenId, dataKey);\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function getDataBatchForTokenIds(\n        bytes32[] memory tokenIds,\n        bytes32[] memory dataKeys\n    ) public view virtual override returns (bytes[] memory dataValues) {\n        if (tokenIds.length != dataKeys.length) {\n            revert LSP8TokenIdsDataLengthMismatch();\n        }\n\n        dataValues = new bytes[](tokenIds.length);\n\n        for (uint256 i; i < tokenIds.length; ) {\n            dataValues[i] = _getDataForTokenId(tokenIds[i], dataKeys[i]);\n\n            // Increment the iterator in unchecked block to save gas\n            unchecked {\n                ++i;\n            }\n        }\n\n        return dataValues;\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function setDataForTokenId(\n        bytes32 tokenId,\n        bytes32 dataKey,\n        bytes memory dataValue\n    ) public virtual override onlyOwner {\n        _setDataForTokenId(tokenId, dataKey, dataValue);\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function setDataBatchForTokenIds(\n        bytes32[] memory tokenIds,\n        bytes32[] memory dataKeys,\n        bytes[] memory dataValues\n    ) public virtual override onlyOwner {\n        if (\n            tokenIds.length != dataKeys.length ||\n            dataKeys.length != dataValues.length\n        ) {\n            revert LSP8TokenIdsDataLengthMismatch();\n        }\n\n        if (tokenIds.length == 0) {\n            revert LSP8TokenIdsDataEmptyArray();\n        }\n\n        for (uint256 i; i < tokenIds.length; ) {\n            _setDataForTokenId(tokenIds[i], dataKeys[i], dataValues[i]);\n\n            // Increment the iterator in unchecked block to save gas\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    // --- General functionality\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     *\n     * @custom:info It's not possible to send value along the functions call due to the use of `delegatecall`.\n     */\n    function batchCalls(\n        bytes[] calldata data\n    ) public virtual override returns (bytes[] memory results) {\n        results = new bytes[](data.length);\n        for (uint256 i; i < data.length; ) {\n            (bool success, bytes memory result) = address(this).delegatecall(\n                data[i]\n            );\n\n            if (!success) {\n                // Look for revert reason and bubble it up if present\n                if (result.length != 0) {\n                    // The easiest way to bubble the revert reason is using memory via assembly\n                    // solhint-disable no-inline-assembly\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        let returndata_size := mload(result)\n                        revert(add(32, result), returndata_size)\n                    }\n                } else {\n                    revert LSP8BatchCallFailed({callIndex: i});\n                }\n            }\n\n            results[i] = result;\n\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    // --- Operator functionality\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function authorizeOperator(\n        address operator,\n        bytes32 tokenId,\n        bytes memory operatorNotificationData\n    ) public virtual override {\n        address tokenOwner = tokenOwnerOf(tokenId);\n\n        if (tokenOwner != msg.sender) {\n            revert LSP8NotTokenOwner(tokenOwner, tokenId, msg.sender);\n        }\n\n        if (operator == address(0)) {\n            revert LSP8CannotUseAddressZeroAsOperator();\n        }\n\n        if (tokenOwner == operator) {\n            revert LSP8TokenOwnerCannotBeOperator();\n        }\n\n        bool isAdded = _operators[tokenId].add(operator);\n        if (!isAdded) revert LSP8OperatorAlreadyAuthorized(operator, tokenId);\n\n        emit OperatorAuthorizationChanged(\n            operator,\n            tokenOwner,\n            tokenId,\n            operatorNotificationData\n        );\n\n        bytes memory lsp1Data = abi.encode(\n            msg.sender,\n            tokenId,\n            true, // authorized\n            operatorNotificationData\n        );\n\n        _notifyTokenOperator(operator, lsp1Data);\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function revokeOperator(\n        address operator,\n        bytes32 tokenId,\n        bool notify,\n        bytes memory operatorNotificationData\n    ) public virtual override {\n        address tokenOwner = tokenOwnerOf(tokenId);\n\n        if (msg.sender != tokenOwner) {\n            if (operator != msg.sender) {\n                revert LSP8RevokeOperatorNotAuthorized(\n                    msg.sender,\n                    tokenOwner,\n                    tokenId\n                );\n            }\n        }\n\n        if (operator == address(0)) {\n            revert LSP8CannotUseAddressZeroAsOperator();\n        }\n\n        if (tokenOwner == operator) {\n            revert LSP8TokenOwnerCannotBeOperator();\n        }\n\n        _revokeOperator(\n            operator,\n            tokenOwner,\n            tokenId,\n            notify,\n            operatorNotificationData\n        );\n\n        if (notify) {\n            bytes memory lsp1Data = abi.encode(\n                tokenOwner,\n                tokenId,\n                false, // unauthorized\n                operatorNotificationData\n            );\n\n            _notifyTokenOperator(operator, lsp1Data);\n        }\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function isOperatorFor(\n        address operator,\n        bytes32 tokenId\n    ) public view virtual override returns (bool) {\n        return _isOperatorOrOwner(operator, tokenId);\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function getOperatorsOf(\n        bytes32 tokenId\n    ) public view virtual override returns (address[] memory) {\n        _existsOrError(tokenId);\n\n        return _operators[tokenId].values();\n    }\n\n    /**\n     * @dev verifies if the `caller` is operator or owner for the `tokenId`\n     * @return true if `caller` is either operator or owner\n     */\n    function _isOperatorOrOwner(\n        address caller,\n        bytes32 tokenId\n    ) internal view virtual returns (bool) {\n        return (caller == tokenOwnerOf(tokenId) ||\n            _operators[tokenId].contains(caller));\n    }\n\n    // --- Transfer functionality\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function transfer(\n        address from,\n        address to,\n        bytes32 tokenId,\n        bool force,\n        bytes memory data\n    ) public virtual override {\n        if (!_isOperatorOrOwner(msg.sender, tokenId)) {\n            revert LSP8NotTokenOperator(tokenId, msg.sender);\n        }\n\n        _transfer(from, to, tokenId, force, data);\n    }\n\n    /**\n     * @inheritdoc ILSP8IdentifiableDigitalAsset\n     */\n    function transferBatch(\n        address[] memory from,\n        address[] memory to,\n        bytes32[] memory tokenId,\n        bool[] memory force,\n        bytes[] memory data\n    ) public virtual override {\n        uint256 fromLength = from.length;\n        if (\n            fromLength != to.length ||\n            fromLength != tokenId.length ||\n            fromLength != force.length ||\n            fromLength != data.length\n        ) {\n            revert LSP8InvalidTransferBatch();\n        }\n\n        for (uint256 i; i < fromLength; ) {\n            transfer(from[i], to[i], tokenId[i], force[i], data[i]);\n\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    /**\n     * @dev removes `operator` from the list of operators for the `tokenId`\n     */\n    function _revokeOperator(\n        address operator,\n        address tokenOwner,\n        bytes32 tokenId,\n        bool notified,\n        bytes memory operatorNotificationData\n    ) internal virtual {\n        bool isRemoved = _operators[tokenId].remove(operator);\n        if (!isRemoved) revert LSP8NonExistingOperator(operator, tokenId);\n\n        emit OperatorRevoked(\n            operator,\n            tokenOwner,\n            tokenId,\n            notified,\n            operatorNotificationData\n        );\n    }\n\n    /**\n     * @dev revoke all the current operators for a specific `tokenId` token which belongs to `tokenOwner`.\n     *\n     * @param tokenOwner The address that is the owner of the `tokenId`.\n     * @param tokenId The token to remove the associated operators for.\n     */\n    function _clearOperators(\n        address tokenOwner,\n        bytes32 tokenId\n    ) internal virtual {\n        // here is a good example of why having multiple operators will be expensive.. we\n        // need to clear them on token transfer\n        //\n        // NOTE: this may cause a tx to fail if there is too many operators to clear, in which case\n        // the tokenOwner needs to call `revokeOperator` until there is less operators to clear and\n        // the desired `transfer` or `burn` call can succeed.\n        EnumerableSet.AddressSet storage operatorsForTokenId = _operators[\n            tokenId\n        ];\n\n        uint256 operatorListLength = operatorsForTokenId.length();\n        address operator;\n        for (uint256 i; i < operatorListLength; ) {\n            // we are emptying the list, always remove from index 0\n            operator = operatorsForTokenId.at(0);\n            _revokeOperator(operator, tokenOwner, tokenId, false, \"\");\n\n            unchecked {\n                ++i;\n            }\n        }\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens start existing when they are minted ({_mint}), and stop existing when they are burned ({_burn}).\n     */\n    function _exists(bytes32 tokenId) internal view virtual returns (bool) {\n        return _tokenOwners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev When `tokenId` does not exist then revert with an error.\n     */\n    function _existsOrError(bytes32 tokenId) internal view virtual {\n        if (!_exists(tokenId)) {\n            revert LSP8NonExistentTokenId(tokenId);\n        }\n    }\n\n    /**\n     * @dev Create `tokenId` by minting it and transfers it to `to`.\n     *\n     * @custom:info Any logic in the:\n     * - {_beforeTokenTransfer} function will run before updating the balances and ownership of `tokenId`s.\n     * - {_afterTokenTransfer} function will run after updating the balances and ownership of `tokenId`s, **but before notifying the recipient via LSP1**.\n     *\n     * @param to The address that will receive the minted `tokenId`.\n     * @param tokenId The token ID to create (= mint).\n     * @param force When set to `true`, `to` may be any address. When set to `false`, `to` must be a contract that supports the LSP1 standard.\n     * @param data Any additional data the caller wants included in the emitted event, and sent in the hook of the `to` address.\n     *\n     * @custom:requirements\n     * - `tokenId` must not exist and not have been already minted.\n     * - `to` cannot be the zero address.\n\n     * @custom:events {Transfer} event with `address(0)` as `from` address.\n     */\n    function _mint(\n        address to,\n        bytes32 tokenId,\n        bool force,\n        bytes memory data\n    ) internal virtual {\n        if (to == address(0)) {\n            revert LSP8CannotSendToAddressZero();\n        }\n\n        // Check that `tokenId` is not already minted\n        if (_exists(tokenId)) {\n            revert LSP8TokenIdAlreadyMinted(tokenId);\n        }\n\n        _beforeTokenTransfer(address(0), to, tokenId, data);\n\n        // Check that `tokenId` was not minted inside the `_beforeTokenTransfer` hook\n        if (_exists(tokenId)) {\n            revert LSP8TokenIdAlreadyMinted(tokenId);\n        }\n\n        // token being minted\n        ++_existingTokens;\n\n        _ownedTokens[to].add(tokenId);\n        _tokenOwners[tokenId] = to;\n\n        emit Transfer(msg.sender, address(0), to, tokenId, force, data);\n\n        _afterTokenTransfer(address(0), to, tokenId, data);\n\n        bytes memory lsp1Data = abi.encode(\n            msg.sender,\n            address(0),\n            to,\n            tokenId,\n            data\n        );\n        _notifyTokenReceiver(to, force, lsp1Data);\n    }\n\n    /**\n     * @dev Burn a specific `tokenId`, removing the `tokenId` from the {tokenIdsOf} the caller and decreasing its {balanceOf} by -1.\n     * This will also clear all the operators allowed to transfer the `tokenId`.\n     *\n     * The owner of the `tokenId` will be notified about the `tokenId` being transferred through its LSP1 {universalReceiver}\n     * function, if it is a contract that supports the LSP1 interface. Its {universalReceiver} function will receive\n     * all the parameters in the calldata packed encoded.\n     *\n     * @custom:info Any logic in the:\n     * - {_beforeTokenTransfer} function will run before updating the balances and ownership of `tokenId`s.\n     * - {_afterTokenTransfer} function will run after updating the balances and ownership of `tokenId`s, **but before notifying the sender via LSP1**.\n     *\n     * @param tokenId The token to burn.\n     * @param data Any additional data the caller wants included in the emitted event, and sent in the LSP1 hook on the token owner's address.\n     *\n     * @custom:hint In dApps, you can know which addresses are burning tokens by listening for the `Transfer` event and filter with the zero address as `to`.\n     *\n     * @custom:requirements\n     * - `tokenId` must exist.\n     *\n     * @custom:events {Transfer} event with `address(0)` as the `to` address.\n     */\n    function _burn(bytes32 tokenId, bytes memory data) internal virtual {\n        address tokenOwner = tokenOwnerOf(tokenId);\n\n        _beforeTokenTransfer(tokenOwner, address(0), tokenId, data);\n\n        // Re-fetch and update `tokenOwner` in case `tokenId`\n        // was transferred inside the `_beforeTokenTransfer` hook\n        tokenOwner = tokenOwnerOf(tokenId);\n\n        // token being burned\n        --_existingTokens;\n\n        _clearOperators(tokenOwner, tokenId);\n\n        _ownedTokens[tokenOwner].remove(tokenId);\n        delete _tokenOwners[tokenId];\n\n        emit Transfer(msg.sender, tokenOwner, address(0), tokenId, false, data);\n\n        _afterTokenTransfer(tokenOwner, address(0), tokenId, data);\n\n        bytes memory lsp1Data = abi.encode(\n            msg.sender,\n            tokenOwner,\n            address(0),\n            tokenId,\n            data\n        );\n\n        _notifyTokenSender(tokenOwner, lsp1Data);\n    }\n\n    /**\n     * @dev Change the owner of the `tokenId` from `from` to `to`.\n     *\n     * Both the sender and recipient will be notified of the `tokenId` being transferred through their LSP1 {universalReceiver}\n     * function, if they are contracts that support the LSP1 interface. Their `universalReceiver` function will receive\n     * all the parameters in the calldata packed encoded.\n     *\n     * @custom:info Any logic in the:\n     * - {_beforeTokenTransfer} function will run before updating the balances and ownership of `tokenId`s.\n     * - {_afterTokenTransfer} function will run after updating the balances and ownership of `tokenId`s, **but before notifying the sender/recipient via LSP1**.\n     *\n     * @param from The sender address.\n     * @param to The recipient address.\n     * @param tokenId The token to transfer.\n     * @param force When set to `true`, `to` may be any address. When set to `false`, `to` must be a contract that supports the LSP1 standard.\n     * @param data Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\n     *\n     * @custom:requirements\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * @custom:events {Transfer} event.\n     *\n     * @custom:danger This internal function does not check if the sender is authorized or not to operate on the `tokenId`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        bytes32 tokenId,\n        bool force,\n        bytes memory data\n    ) internal virtual {\n        address tokenOwner = tokenOwnerOf(tokenId);\n        if (tokenOwner != from) {\n            revert LSP8NotTokenOwner(tokenOwner, tokenId, from);\n        }\n\n        if (to == address(0)) {\n            revert LSP8CannotSendToAddressZero();\n        }\n\n        _beforeTokenTransfer(from, to, tokenId, data);\n\n        // Check that `tokenId`'s owner was not changed inside the `_beforeTokenTransfer` hook\n        address currentTokenOwner = tokenOwnerOf(tokenId);\n        if (tokenOwner != currentTokenOwner) {\n            revert LSP8TokenOwnerChanged(\n                tokenId,\n                tokenOwner,\n                currentTokenOwner\n            );\n        }\n\n        _clearOperators(from, tokenId);\n\n        _ownedTokens[from].remove(tokenId);\n        _ownedTokens[to].add(tokenId);\n        _tokenOwners[tokenId] = to;\n\n        emit Transfer(msg.sender, from, to, tokenId, force, data);\n\n        _afterTokenTransfer(from, to, tokenId, data);\n\n        bytes memory lsp1Data = abi.encode(msg.sender, from, to, tokenId, data);\n\n        _notifyTokenSender(from, lsp1Data);\n        _notifyTokenReceiver(to, force, lsp1Data);\n    }\n\n    /**\n     * @dev Sets data for a specific `tokenId` and `dataKey` in the ERC725Y storage\n     * The ERC725Y data key is the hash of the `tokenId` and `dataKey` concatenated\n     * @param tokenId The unique identifier for a token.\n     * @param dataKey The key for the data to set.\n     * @param dataValue The value to set for the given data key.\n     * @custom:events {TokenIdDataChanged} event.\n     */\n    function _setDataForTokenId(\n        bytes32 tokenId,\n        bytes32 dataKey,\n        bytes memory dataValue\n    ) internal virtual {\n        _tokenIdData[tokenId][dataKey] = dataValue;\n        emit TokenIdDataChanged(tokenId, dataKey, dataValue);\n    }\n\n    /**\n     * @dev Retrieves data for a specific `tokenId` and `dataKey` from the ERC725Y storage\n     * The ERC725Y data key is the hash of the `tokenId` and `dataKey` concatenated\n     * @param tokenId The unique identifier for a token.\n     * @param dataKey The key for the data to retrieve.\n     * @return dataValues The data value associated with the given `tokenId` and `dataKey`.\n     */\n    function _getDataForTokenId(\n        bytes32 tokenId,\n        bytes32 dataKey\n    ) internal view virtual returns (bytes memory dataValues) {\n        return _tokenIdData[tokenId][dataKey];\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer, including minting and burning.\n     * Allows to run custom logic before updating balances and notifiying sender/recipient by overriding this function.\n     *\n     * @param from The sender address\n     * @param to The recipient address\n     * @param tokenId The tokenId to transfer\n     * @param data The data sent alongside the transfer\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        bytes32 tokenId,\n        bytes memory data // solhint-disable-next-line no-empty-blocks\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer, including minting and burning.\n     * Allows to run custom logic after updating balances, but **before notifiying sender/recipient via LSP1** by overriding this function.\n     *\n     * @param from The sender address\n     * @param to The recipient address\n     * @param tokenId The tokenId to transfer\n     * @param data The data sent alongside the transfer\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        bytes32 tokenId,\n        bytes memory data // solhint-disable-next-line no-empty-blocks\n    ) internal virtual {}\n\n    /**\n     * @dev Attempt to notify the operator `operator` about the `tokenId` being authorized.\n     * This is done by calling its {universalReceiver} function with the `_TYPEID_LSP8_TOKENOPERATOR` as typeId, if `operator` is a contract that supports the LSP1 interface.\n     * If `operator` is an EOA or a contract that does not support the LSP1 interface, nothing will happen and no notification will be sent.\n\n     * @param operator The address to call the {universalReceiver} function on.\n     * @param lsp1Data the data to be sent to the `operator` address in the `universalReceiver` call.\n     */\n    function _notifyTokenOperator(\n        address operator,\n        bytes memory lsp1Data\n    ) internal virtual {\n        LSP1Utils.notifyUniversalReceiver(\n            operator,\n            _TYPEID_LSP8_TOKENOPERATOR,\n            lsp1Data\n        );\n    }\n\n    /**\n     * @dev Attempt to notify the token sender `from` about the `tokenId` being transferred.\n     * This is done by calling its {universalReceiver} function with the `_TYPEID_LSP8_TOKENSSENDER` as typeId, if `from` is a contract that supports the LSP1 interface.\n     * If `from` is an EOA or a contract that does not support the LSP1 interface, nothing will happen and no notification will be sent.\n\n     * @param from The address to call the {universalReceiver} function on.\n     * @param lsp1Data the data to be sent to the `from` address in the `universalReceiver` call.\n     */\n    function _notifyTokenSender(\n        address from,\n        bytes memory lsp1Data\n    ) internal virtual {\n        LSP1Utils.notifyUniversalReceiver(\n            from,\n            _TYPEID_LSP8_TOKENSSENDER,\n            lsp1Data\n        );\n    }\n\n    /**\n     * @dev Attempt to notify the token receiver `to` about the `tokenId` being received.\n     * This is done by calling its {universalReceiver} function with the `_TYPEID_LSP8_TOKENSRECIPIENT` as typeId, if `to` is a contract that supports the LSP1 interface.\n     *\n     * If `to` is is an EOA or a contract that does not support the LSP1 interface, the behaviour will depend on the `force` boolean flag.\n     * - if `force` is set to `true`, nothing will happen and no notification will be sent.\n     * - if `force` is set to `false, the transaction will revert.\n     *\n     * @param to The address to call the {universalReceiver} function on.\n     * @param force A boolean that describe if transfer to a `to` address that does not support LSP1 is allowed or not.\n     * @param lsp1Data The data to be sent to the `to` address in the `universalReceiver(...)` call.\n     */\n    function _notifyTokenReceiver(\n        address to,\n        bool force,\n        bytes memory lsp1Data\n    ) internal virtual {\n        if (\n            ERC165Checker.supportsERC165InterfaceUnchecked(\n                to,\n                _INTERFACEID_LSP1\n            )\n        ) {\n            ILSP1(to).universalReceiver(_TYPEID_LSP8_TOKENSRECIPIENT, lsp1Data);\n        } else if (!force) {\n            if (to.code.length != 0) {\n                revert LSP8NotifyTokenReceiverContractMissingLSP1Interface(to);\n            } else {\n                revert LSP8NotifyTokenReceiverIsEOA(to);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/IERC1271.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC1271.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC1271 standard signature validation method for\n * contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n *\n * _Available since v4.1._\n */\ninterface IERC1271 {\n    /**\n     * @dev Should return whether the signature provided is valid for the provided data\n     * @param hash      Hash of the data to be signed\n     * @param signature Signature byte array associated with _data\n     */\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/Create2.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Create2.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n * `CREATE2` can be used to compute in advance the address where a smart\n * contract will be deployed, which allows for interesting new mechanisms known\n * as 'counterfactual interactions'.\n *\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n * information.\n */\nlibrary Create2 {\n    /**\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\n     * will be deployed can be known in advance via {computeAddress}.\n     *\n     * The bytecode for a contract can be obtained from Solidity with\n     * `type(contractName).creationCode`.\n     *\n     * Requirements:\n     *\n     * - `bytecode` must not be empty.\n     * - `salt` must have not been used for `bytecode` already.\n     * - the factory must have a balance of at least `amount`.\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\n     */\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\n        require(address(this).balance >= amount, \"Create2: insufficient balance\");\n        require(bytecode.length != 0, \"Create2: bytecode length is zero\");\n        /// @solidity memory-safe-assembly\n        assembly {\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\n        }\n        require(addr != address(0), \"Create2: Failed on deploy\");\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n     * `bytecodeHash` or `salt` will result in a new destination address.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\n        return computeAddress(salt, bytecodeHash, address(this));\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40) // Get free memory pointer\n\n            // |                   | ↓ ptr ...  ↓ ptr + 0x0B (start) ...  ↓ ptr + 0x20 ...  ↓ ptr + 0x40 ...   |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\n            // | 0xFF              |            FF                                                             |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\n            // | keccak(start, 85) |            ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ |\n\n            mstore(add(ptr, 0x40), bytecodeHash)\n            mstore(add(ptr, 0x20), salt)\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\n            mstore8(start, 0xff)\n            addr := keccak256(start, 85)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\")\n            mstore(0x1c, hash)\n            message := keccak256(0x00, 0x3c)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, \"\\x19\\x01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            data := keccak256(ptr, 0x42)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\n     * `validator` and `data` according to the version 0 of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x00\", validator, data));\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/introspection/ERC165Checker.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Library used to query support of an interface declared via {IERC165}.\n *\n * Note that these functions return the actual result of the query: they do not\n * `revert` if an interface is not supported. It is up to the caller to decide\n * what to do in these cases.\n */\nlibrary ERC165Checker {\n    // As per the EIP-165 spec, no interface should ever match 0xffffffff\n    bytes4 private constant _INTERFACE_ID_INVALID = 0xffffffff;\n\n    /**\n     * @dev Returns true if `account` supports the {IERC165} interface.\n     */\n    function supportsERC165(address account) internal view returns (bool) {\n        // Any contract that implements ERC165 must explicitly indicate support of\n        // InterfaceId_ERC165 and explicitly indicate non-support of InterfaceId_Invalid\n        return\n            supportsERC165InterfaceUnchecked(account, type(IERC165).interfaceId) &&\n            !supportsERC165InterfaceUnchecked(account, _INTERFACE_ID_INVALID);\n    }\n\n    /**\n     * @dev Returns true if `account` supports the interface defined by\n     * `interfaceId`. Support for {IERC165} itself is queried automatically.\n     *\n     * See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(address account, bytes4 interfaceId) internal view returns (bool) {\n        // query support of both ERC165 as per the spec and support of _interfaceId\n        return supportsERC165(account) && supportsERC165InterfaceUnchecked(account, interfaceId);\n    }\n\n    /**\n     * @dev Returns a boolean array where each value corresponds to the\n     * interfaces passed in and whether they're supported or not. This allows\n     * you to batch check interfaces for a contract where your expectation\n     * is that some interfaces may not be supported.\n     *\n     * See {IERC165-supportsInterface}.\n     *\n     * _Available since v3.4._\n     */\n    function getSupportedInterfaces(\n        address account,\n        bytes4[] memory interfaceIds\n    ) internal view returns (bool[] memory) {\n        // an array of booleans corresponding to interfaceIds and whether they're supported or not\n        bool[] memory interfaceIdsSupported = new bool[](interfaceIds.length);\n\n        // query support of ERC165 itself\n        if (supportsERC165(account)) {\n            // query support of each interface in interfaceIds\n            for (uint256 i = 0; i < interfaceIds.length; i++) {\n                interfaceIdsSupported[i] = supportsERC165InterfaceUnchecked(account, interfaceIds[i]);\n            }\n        }\n\n        return interfaceIdsSupported;\n    }\n\n    /**\n     * @dev Returns true if `account` supports all the interfaces defined in\n     * `interfaceIds`. Support for {IERC165} itself is queried automatically.\n     *\n     * Batch-querying can lead to gas savings by skipping repeated checks for\n     * {IERC165} support.\n     *\n     * See {IERC165-supportsInterface}.\n     */\n    function supportsAllInterfaces(address account, bytes4[] memory interfaceIds) internal view returns (bool) {\n        // query support of ERC165 itself\n        if (!supportsERC165(account)) {\n            return false;\n        }\n\n        // query support of each interface in interfaceIds\n        for (uint256 i = 0; i < interfaceIds.length; i++) {\n            if (!supportsERC165InterfaceUnchecked(account, interfaceIds[i])) {\n                return false;\n            }\n        }\n\n        // all interfaces supported\n        return true;\n    }\n\n    /**\n     * @notice Query if a contract implements an interface, does not check ERC165 support\n     * @param account The address of the contract to query for support of an interface\n     * @param interfaceId The interface identifier, as specified in ERC-165\n     * @return true if the contract at account indicates support of the interface with\n     * identifier interfaceId, false otherwise\n     * @dev Assumes that account contains a contract that supports ERC165, otherwise\n     * the behavior of this method is undefined. This precondition can be checked\n     * with {supportsERC165}.\n     *\n     * Some precompiled contracts will falsely indicate support for a given interface, so caution\n     * should be exercised when using this function.\n     *\n     * Interface identification is specified in ERC-165.\n     */\n    function supportsERC165InterfaceUnchecked(address account, bytes4 interfaceId) internal view returns (bool) {\n        // prepare call\n        bytes memory encodedParams = abi.encodeWithSelector(IERC165.supportsInterface.selector, interfaceId);\n\n        // perform static call\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly {\n            success := staticcall(30000, account, add(encodedParams, 0x20), mload(encodedParams), 0x00, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0x00)\n        }\n\n        return success && returnSize >= 0x20 && returnValue > 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/constants.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.9;\n\nimport \"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol\";\nimport \"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol\";\nimport \"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Constants.sol\";\n\nbytes4 constant _INTERFACEID_CAPPED_LSP8 = 0x52058d8a;\nbytes4 constant _INTERFACEID_IDENTIFIABLE_PHYTIGAL_ASSET = 0x7b03ca1d;\n\nbytes10 constant _LSP8_TOKEN_METADATA_KEY_PREFIX = 0x1339e76a390b7b9ec901;\n\nbytes32 constant _DATAKEY_TOKENID_TYPE = 0x715f248956de7ce65e94d9d836bfead479f7e70d69b718d47bfe7b00e05b4fe4;\n\nbytes28 constant _MSG_HASH_PREFIX = 0x19457468657265756d205369676e6564204d6573736167653a0a3232;\n\nbytes4 constant _ERC1271_MAGICVALUE = 0x1626ba7e;\nbytes4 constant _ERC1271_FAILVALUE = 0xffffffff;\n\n// bytes10(keccak256('SupportedStandards')) + bytes2(0) + bytes20(keccak256('LSP3Profile'))\nbytes32 constant _LSP3_SUPPORTED_STANDARDS_KEY = 0xeafec4d89fa9619884b600005ef83ad9559033e6e941db7d7c495acdce616347;\n\n// bytes4(keccak256('LSP3UniversalProfile'))\nbytes constant _LSP3_SUPPORTED_STANDARDS_VALUE = hex\"5ef83ad9\";\n\nbytes32 constant _PERMISSION_SIGN = 0x0000000000000000000000000000000000000000000000000000000000200000;\n"},"contracts/OrderExtension.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.9;\n\nimport \"./constants.sol\";\n// import \"hardhat/console.sol\";\n\nimport {IERC1271} from \"@openzeppelin/contracts/interfaces/IERC1271.sol\";\nimport {ECDSA} from \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport {IERC725X} from \"@erc725/smart-contracts/contracts/ERC725XCore.sol\";\n\nimport {LSP17Extension} from \"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Extension.sol\";\nimport {ILSP0ERC725Account} from \"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/ILSP0ERC725Account.sol\";\nimport {ILSP8IdentifiableDigitalAsset} from \"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol\";\nimport {LSP2Utils} from \"@lukso/lsp2-contracts/contracts/LSP2Utils.sol\";\nimport {LSP8Burnable} from \"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/extensions/LSP8Burnable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {EnumerableSet} from \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\n\nbytes2 constant _BURN_AFTER_USE = 0xffff;\n\ncontract OrderExtension is LSP17Extension, Ownable {\n    using EnumerableSet for EnumerableSet.Bytes32Set;\n\n    address target;\n\n    error BlockAlreadyConfirmed();\n    error InvalidSignature();\n    error IncorrectValue();\n    error InvalidNonce();\n    error CallerNotTarget();\n    error CallerNotPerkOwner();\n    error PerkAlreadyClaimed();\n\n    mapping(bytes32 => bool) _nonces;\n\n    mapping(address => EnumerableSet.Bytes32Set) perkClaims;\n\n    event TargetChanged(address newTarget);\n    event OrderCreated(bytes orderId);\n\n    constructor(address target_) {\n        target = target_;\n    }\n\n    function getOrderHash(\n        address collection,\n        uint256 value,\n        uint256 maxBlockNumber,\n        bytes32 nonce,\n        bytes memory data,\n        bytes memory orderId\n    ) public pure returns (bytes memory message) {\n        message = bytes.concat(\n            bytes20(collection),\n            abi.encodePacked(value),\n            abi.encodePacked(maxBlockNumber),\n            nonce,\n            data,\n            orderId\n        );\n    }\n\n    function getRedeemPerkHash(\n        address collection,\n        uint256 value,\n        uint256 maxBlockNumber,\n        address perkAddress,\n        bytes32 perkTokenId,\n        bytes32 nonce,\n        bytes memory data,\n        bytes memory orderId\n    ) public pure returns (bytes memory message) {\n        message = bytes.concat(\n            bytes20(collection),\n            abi.encodePacked(value),\n            abi.encodePacked(maxBlockNumber),\n            bytes20(perkAddress),\n            perkTokenId,\n            orderId,\n            nonce,\n            data\n        );\n    }\n\n    function redeemPerk(\n        address collection,\n        address perkAddress,\n        bytes32 perkTokenId,\n        uint256 value,\n        uint256 maxBlockNumber,\n        bytes32 nonce,\n        bytes memory data,\n        bytes memory signature,\n        bytes memory orderId\n    ) public {\n        bytes memory message = bytes.concat(\n            bytes20(collection),\n            abi.encodePacked(value),\n            abi.encodePacked(maxBlockNumber),\n            bytes20(perkAddress),\n            perkTokenId,\n            orderId,\n            nonce,\n            data\n        );\n        bytes32 messageHash = ECDSA.toEthSignedMessageHash(keccak256(message));\n\n        if (msg.sender != target) {\n            revert CallerNotTarget();\n        }\n\n        if (block.number > maxBlockNumber) {\n            revert BlockAlreadyConfirmed();\n        }\n\n        if (_isValidSignature(messageHash, signature) != _ERC1271_MAGICVALUE) {\n            revert InvalidSignature();\n        }\n\n        if (_extendableMsgValue() != value) {\n            revert IncorrectValue();\n        }\n\n        if (_nonces[nonce] != false) {\n            revert InvalidNonce();\n        }\n\n        address perkOwner = ILSP8IdentifiableDigitalAsset(perkAddress)\n            .tokenOwnerOf(perkTokenId);\n\n        if (perkOwner != _extendableMsgSender()){\n            revert CallerNotPerkOwner();\n        }\n\n        bytes32 claimIdentifier = keccak256(abi.encodePacked([bytes20(collection), perkTokenId]));\n        if (perkClaims[perkAddress].contains(claimIdentifier)) {\n            revert PerkAlreadyClaimed();\n        }\n\n        perkClaims[perkAddress].add(claimIdentifier);\n\n        IERC725X(target).execute(0, collection, 0, data);\n\n        _nonces[nonce] = true;\n        emit OrderCreated(orderId);\n\n        bytes32 dataKey = LSP2Utils.generateSingletonKey('BurnAfterUse');\n        bytes memory burnAfterUse = ILSP8IdentifiableDigitalAsset(perkAddress).getData(dataKey);\n\n        if (bytes2(burnAfterUse) == _BURN_AFTER_USE) {\n            LSP8Burnable(payable(perkAddress)).burn(perkTokenId, orderId);\n        }\n    }\n\n    function placeOrder(\n        address collection,\n        uint256 value,\n        uint256 maxBlockNumber,\n        bytes32 nonce,\n        bytes memory data,\n        bytes memory signature,\n        bytes memory orderId\n    ) public {\n        bytes memory message = bytes.concat(\n            bytes20(collection),\n            abi.encodePacked(value),\n            abi.encodePacked(maxBlockNumber),\n            nonce,\n            data,\n            orderId\n        );\n        bytes32 messageHash = ECDSA.toEthSignedMessageHash(keccak256(message));\n\n        if (msg.sender != target) {\n            revert CallerNotTarget();\n        }\n\n        if (block.number > maxBlockNumber) {\n            revert BlockAlreadyConfirmed();\n        }\n\n        if (_isValidSignature(messageHash, signature) != _ERC1271_MAGICVALUE) {\n            revert InvalidSignature();\n        }\n\n        if (_extendableMsgValue() != value) {\n            revert IncorrectValue();\n        }\n\n        if (_nonces[nonce] != false) {\n            revert InvalidNonce();\n        }\n\n        IERC725X(target).execute(0, collection, 0, data);\n\n        _nonces[nonce] = true;\n        emit OrderCreated(orderId);\n    }\n\n    function updateTarget(address _newTarget) public onlyOwner {\n        target = _newTarget;\n\n        emit TargetChanged(_newTarget);\n    }\n\n    function isPerkClaimed(address perkAddress, address collection, bytes32 perkTokenId) public view returns (bool) {\n        bytes32 claimIdentifier = keccak256(abi.encodePacked([bytes20(collection), perkTokenId]));\n\n        return perkClaims[perkAddress].contains(claimIdentifier);\n    }\n\n    function _isValidSignature(\n        bytes32 dataHash,\n        bytes memory signature\n    ) internal view returns (bytes4 magicValue) {\n        // If owner is a contract\n        if (target.code.length > 0) {\n            (bool success, bytes memory result) = target.staticcall(\n                abi.encodeWithSelector(\n                    IERC1271.isValidSignature.selector,\n                    dataHash,\n                    signature\n                )\n            );\n\n            bool isValid = (success &&\n                result.length == 32 &&\n                abi.decode(result, (bytes32)) == bytes32(_ERC1271_MAGICVALUE));\n\n            return isValid ? _ERC1271_MAGICVALUE : _ERC1271_FAILVALUE;\n        }\n        // If owner is an EOA\n        else {\n            // if isValidSignature fail, the error is catched in returnedError\n            (address recoveredAddress, ECDSA.RecoverError returnedError) = ECDSA\n                .tryRecover(dataHash, signature);\n\n            // if recovering throws an error, return the fail value\n            if (returnedError != ECDSA.RecoverError.NoError)\n                return _ERC1271_FAILVALUE;\n\n            // if recovering is successful and the recovered address matches the owner's address,\n            // return the ERC1271 magic value. Otherwise, return the ERC1271 fail value\n            // matches the address of the owner, otherwise return fail value\n            return\n                recoveredAddress == target\n                    ? _ERC1271_MAGICVALUE\n                    : _ERC1271_FAILVALUE;\n        }\n    }\n}\n"},"solidity-bytes-utils/contracts/BytesLib.sol":{"content":"// SPDX-License-Identifier: Unlicense\n/*\n * @title Solidity Bytes Arrays Utils\n * @author Gonçalo Sá <goncalo.sa@consensys.net>\n *\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\n */\npragma solidity >=0.8.0 <0.9.0;\n\n\nlibrary BytesLib {\n    function concat(\n        bytes memory _preBytes,\n        bytes memory _postBytes\n    )\n        internal\n        pure\n        returns (bytes memory)\n    {\n        bytes memory tempBytes;\n\n        assembly {\n            // Get a location of some free memory and store it in tempBytes as\n            // Solidity does for memory variables.\n            tempBytes := mload(0x40)\n\n            // Store the length of the first bytes array at the beginning of\n            // the memory for tempBytes.\n            let length := mload(_preBytes)\n            mstore(tempBytes, length)\n\n            // Maintain a memory counter for the current write location in the\n            // temp bytes array by adding the 32 bytes for the array length to\n            // the starting location.\n            let mc := add(tempBytes, 0x20)\n            // Stop copying when the memory counter reaches the length of the\n            // first bytes array.\n            let end := add(mc, length)\n\n            for {\n                // Initialize a copy counter to the start of the _preBytes data,\n                // 32 bytes into its memory.\n                let cc := add(_preBytes, 0x20)\n            } lt(mc, end) {\n                // Increase both counters by 32 bytes each iteration.\n                mc := add(mc, 0x20)\n                cc := add(cc, 0x20)\n            } {\n                // Write the _preBytes data into the tempBytes memory 32 bytes\n                // at a time.\n                mstore(mc, mload(cc))\n            }\n\n            // Add the length of _postBytes to the current length of tempBytes\n            // and store it as the new length in the first 32 bytes of the\n            // tempBytes memory.\n            length := mload(_postBytes)\n            mstore(tempBytes, add(length, mload(tempBytes)))\n\n            // Move the memory counter back from a multiple of 0x20 to the\n            // actual end of the _preBytes data.\n            mc := end\n            // Stop copying when the memory counter reaches the new combined\n            // length of the arrays.\n            end := add(mc, length)\n\n            for {\n                let cc := add(_postBytes, 0x20)\n            } lt(mc, end) {\n                mc := add(mc, 0x20)\n                cc := add(cc, 0x20)\n            } {\n                mstore(mc, mload(cc))\n            }\n\n            // Update the free-memory pointer by padding our last write location\n            // to 32 bytes: add 31 bytes to the end of tempBytes to move to the\n            // next 32 byte block, then round down to the nearest multiple of\n            // 32. If the sum of the length of the two arrays is zero then add\n            // one before rounding down to leave a blank 32 bytes (the length block with 0).\n            mstore(0x40, and(\n              add(add(end, iszero(add(length, mload(_preBytes)))), 31),\n              not(31) // Round down to the nearest 32 bytes.\n            ))\n        }\n\n        return tempBytes;\n    }\n\n    function concatStorage(bytes storage _preBytes, bytes memory _postBytes) internal {\n        assembly {\n            // Read the first 32 bytes of _preBytes storage, which is the length\n            // of the array. (We don't need to use the offset into the slot\n            // because arrays use the entire slot.)\n            let fslot := sload(_preBytes.slot)\n            // Arrays of 31 bytes or less have an even value in their slot,\n            // while longer arrays have an odd value. The actual length is\n            // the slot divided by two for odd values, and the lowest order\n            // byte divided by two for even values.\n            // If the slot is even, bitwise and the slot with 255 and divide by\n            // two to get the length. If the slot is odd, bitwise and the slot\n            // with -1 and divide by two.\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\n            let mlength := mload(_postBytes)\n            let newlength := add(slength, mlength)\n            // slength can contain both the length and contents of the array\n            // if length < 32 bytes so let's prepare for that\n            // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\n            switch add(lt(slength, 32), lt(newlength, 32))\n            case 2 {\n                // Since the new array still fits in the slot, we just need to\n                // update the contents of the slot.\n                // uint256(bytes_storage) = uint256(bytes_storage) + uint256(bytes_memory) + new_length\n                sstore(\n                    _preBytes.slot,\n                    // all the modifications to the slot are inside this\n                    // next block\n                    add(\n                        // we can just add to the slot contents because the\n                        // bytes we want to change are the LSBs\n                        fslot,\n                        add(\n                            mul(\n                                div(\n                                    // load the bytes from memory\n                                    mload(add(_postBytes, 0x20)),\n                                    // zero all bytes to the right\n                                    exp(0x100, sub(32, mlength))\n                                ),\n                                // and now shift left the number of bytes to\n                                // leave space for the length in the slot\n                                exp(0x100, sub(32, newlength))\n                            ),\n                            // increase length by the double of the memory\n                            // bytes length\n                            mul(mlength, 2)\n                        )\n                    )\n                )\n            }\n            case 1 {\n                // The stored value fits in the slot, but the combined value\n                // will exceed it.\n                // get the keccak hash to get the contents of the array\n                mstore(0x0, _preBytes.slot)\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\n\n                // save new length\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\n\n                // The contents of the _postBytes array start 32 bytes into\n                // the structure. Our first read should obtain the `submod`\n                // bytes that can fit into the unused space in the last word\n                // of the stored array. To get this, we read 32 bytes starting\n                // from `submod`, so the data we read overlaps with the array\n                // contents by `submod` bytes. Masking the lowest-order\n                // `submod` bytes allows us to add that value directly to the\n                // stored value.\n\n                let submod := sub(32, slength)\n                let mc := add(_postBytes, submod)\n                let end := add(_postBytes, mlength)\n                let mask := sub(exp(0x100, submod), 1)\n\n                sstore(\n                    sc,\n                    add(\n                        and(\n                            fslot,\n                            0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n                        ),\n                        and(mload(mc), mask)\n                    )\n                )\n\n                for {\n                    mc := add(mc, 0x20)\n                    sc := add(sc, 1)\n                } lt(mc, end) {\n                    sc := add(sc, 1)\n                    mc := add(mc, 0x20)\n                } {\n                    sstore(sc, mload(mc))\n                }\n\n                mask := exp(0x100, sub(mc, end))\n\n                sstore(sc, mul(div(mload(mc), mask), mask))\n            }\n            default {\n                // get the keccak hash to get the contents of the array\n                mstore(0x0, _preBytes.slot)\n                // Start copying to the last used word of the stored array.\n                let sc := add(keccak256(0x0, 0x20), div(slength, 32))\n\n                // save new length\n                sstore(_preBytes.slot, add(mul(newlength, 2), 1))\n\n                // Copy over the first `submod` bytes of the new data as in\n                // case 1 above.\n                let slengthmod := mod(slength, 32)\n                let mlengthmod := mod(mlength, 32)\n                let submod := sub(32, slengthmod)\n                let mc := add(_postBytes, submod)\n                let end := add(_postBytes, mlength)\n                let mask := sub(exp(0x100, submod), 1)\n\n                sstore(sc, add(sload(sc), and(mload(mc), mask)))\n\n                for {\n                    sc := add(sc, 1)\n                    mc := add(mc, 0x20)\n                } lt(mc, end) {\n                    sc := add(sc, 1)\n                    mc := add(mc, 0x20)\n                } {\n                    sstore(sc, mload(mc))\n                }\n\n                mask := exp(0x100, sub(mc, end))\n\n                sstore(sc, mul(div(mload(mc), mask), mask))\n            }\n        }\n    }\n\n    function slice(\n        bytes memory _bytes,\n        uint256 _start,\n        uint256 _length\n    )\n        internal\n        pure\n        returns (bytes memory)\n    {\n        require(_length + 31 >= _length, \"slice_overflow\");\n        require(_bytes.length >= _start + _length, \"slice_outOfBounds\");\n\n        bytes memory tempBytes;\n\n        assembly {\n            switch iszero(_length)\n            case 0 {\n                // Get a location of some free memory and store it in tempBytes as\n                // Solidity does for memory variables.\n                tempBytes := mload(0x40)\n\n                // The first word of the slice result is potentially a partial\n                // word read from the original array. To read it, we calculate\n                // the length of that partial word and start copying that many\n                // bytes into the array. The first word we copy will start with\n                // data we don't care about, but the last `lengthmod` bytes will\n                // land at the beginning of the contents of the new array. When\n                // we're done copying, we overwrite the full first word with\n                // the actual length of the slice.\n                let lengthmod := and(_length, 31)\n\n                // The multiplication in the next line is necessary\n                // because when slicing multiples of 32 bytes (lengthmod == 0)\n                // the following copy loop was copying the origin's length\n                // and then ending prematurely not copying everything it should.\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\n                let end := add(mc, _length)\n\n                for {\n                    // The multiplication in the next line has the same exact purpose\n                    // as the one above.\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\n                } lt(mc, end) {\n                    mc := add(mc, 0x20)\n                    cc := add(cc, 0x20)\n                } {\n                    mstore(mc, mload(cc))\n                }\n\n                mstore(tempBytes, _length)\n\n                //update free-memory pointer\n                //allocating the array padded to 32 bytes like the compiler does now\n                mstore(0x40, and(add(mc, 31), not(31)))\n            }\n            //if we want a zero-length slice let's just return a zero-length array\n            default {\n                tempBytes := mload(0x40)\n                //zero out the 32 bytes slice we are about to return\n                //we need to do it because Solidity does not garbage collect\n                mstore(tempBytes, 0)\n\n                mstore(0x40, add(tempBytes, 0x20))\n            }\n        }\n\n        return tempBytes;\n    }\n\n    function toAddress(bytes memory _bytes, uint256 _start) internal pure returns (address) {\n        require(_bytes.length >= _start + 20, \"toAddress_outOfBounds\");\n        address tempAddress;\n\n        assembly {\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\n        }\n\n        return tempAddress;\n    }\n\n    function toUint8(bytes memory _bytes, uint256 _start) internal pure returns (uint8) {\n        require(_bytes.length >= _start + 1 , \"toUint8_outOfBounds\");\n        uint8 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x1), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint16(bytes memory _bytes, uint256 _start) internal pure returns (uint16) {\n        require(_bytes.length >= _start + 2, \"toUint16_outOfBounds\");\n        uint16 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x2), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint32(bytes memory _bytes, uint256 _start) internal pure returns (uint32) {\n        require(_bytes.length >= _start + 4, \"toUint32_outOfBounds\");\n        uint32 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x4), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint64(bytes memory _bytes, uint256 _start) internal pure returns (uint64) {\n        require(_bytes.length >= _start + 8, \"toUint64_outOfBounds\");\n        uint64 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x8), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint96(bytes memory _bytes, uint256 _start) internal pure returns (uint96) {\n        require(_bytes.length >= _start + 12, \"toUint96_outOfBounds\");\n        uint96 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0xc), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint128(bytes memory _bytes, uint256 _start) internal pure returns (uint128) {\n        require(_bytes.length >= _start + 16, \"toUint128_outOfBounds\");\n        uint128 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x10), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toUint256(bytes memory _bytes, uint256 _start) internal pure returns (uint256) {\n        require(_bytes.length >= _start + 32, \"toUint256_outOfBounds\");\n        uint256 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x20), _start))\n        }\n\n        return tempUint;\n    }\n\n    function toBytes32(bytes memory _bytes, uint256 _start) internal pure returns (bytes32) {\n        require(_bytes.length >= _start + 32, \"toBytes32_outOfBounds\");\n        bytes32 tempBytes32;\n\n        assembly {\n            tempBytes32 := mload(add(add(_bytes, 0x20), _start))\n        }\n\n        return tempBytes32;\n    }\n\n    function equal(bytes memory _preBytes, bytes memory _postBytes) internal pure returns (bool) {\n        bool success = true;\n\n        assembly {\n            let length := mload(_preBytes)\n\n            // if lengths don't match the arrays are not equal\n            switch eq(length, mload(_postBytes))\n            case 1 {\n                // cb is a circuit breaker in the for loop since there's\n                //  no said feature for inline assembly loops\n                // cb = 1 - don't breaker\n                // cb = 0 - break\n                let cb := 1\n\n                let mc := add(_preBytes, 0x20)\n                let end := add(mc, length)\n\n                for {\n                    let cc := add(_postBytes, 0x20)\n                // the next line is the loop condition:\n                // while(uint256(mc < end) + cb == 2)\n                } eq(add(lt(mc, end), cb), 2) {\n                    mc := add(mc, 0x20)\n                    cc := add(cc, 0x20)\n                } {\n                    // if any of these checks fails then arrays are not equal\n                    if iszero(eq(mload(mc), mload(cc))) {\n                        // unsuccess:\n                        success := 0\n                        cb := 0\n                    }\n                }\n            }\n            default {\n                // unsuccess:\n                success := 0\n            }\n        }\n\n        return success;\n    }\n\n    function equalStorage(\n        bytes storage _preBytes,\n        bytes memory _postBytes\n    )\n        internal\n        view\n        returns (bool)\n    {\n        bool success = true;\n\n        assembly {\n            // we know _preBytes_offset is 0\n            let fslot := sload(_preBytes.slot)\n            // Decode the length of the stored array like in concatStorage().\n            let slength := div(and(fslot, sub(mul(0x100, iszero(and(fslot, 1))), 1)), 2)\n            let mlength := mload(_postBytes)\n\n            // if lengths don't match the arrays are not equal\n            switch eq(slength, mlength)\n            case 1 {\n                // slength can contain both the length and contents of the array\n                // if length < 32 bytes so let's prepare for that\n                // v. http://solidity.readthedocs.io/en/latest/miscellaneous.html#layout-of-state-variables-in-storage\n                if iszero(iszero(slength)) {\n                    switch lt(slength, 32)\n                    case 1 {\n                        // blank the last byte which is the length\n                        fslot := mul(div(fslot, 0x100), 0x100)\n\n                        if iszero(eq(fslot, mload(add(_postBytes, 0x20)))) {\n                            // unsuccess:\n                            success := 0\n                        }\n                    }\n                    default {\n                        // cb is a circuit breaker in the for loop since there's\n                        //  no said feature for inline assembly loops\n                        // cb = 1 - don't breaker\n                        // cb = 0 - break\n                        let cb := 1\n\n                        // get the keccak hash to get the contents of the array\n                        mstore(0x0, _preBytes.slot)\n                        let sc := keccak256(0x0, 0x20)\n\n                        let mc := add(_postBytes, 0x20)\n                        let end := add(mc, mlength)\n\n                        // the next line is the loop condition:\n                        // while(uint256(mc < end) + cb == 2)\n                        for {} eq(add(lt(mc, end), cb), 2) {\n                            sc := add(sc, 1)\n                            mc := add(mc, 0x20)\n                        } {\n                            if iszero(eq(sload(sc), mload(mc))) {\n                                // unsuccess:\n                                success := 0\n                                cb := 0\n                            }\n                        }\n                    }\n                }\n            }\n            default {\n                // unsuccess:\n                success := 0\n            }\n        }\n\n        return success;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":100},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@erc725/smart-contracts/contracts/ERC725XCore.sol":{"ast":{"absolutePath":"@erc725/smart-contracts/contracts/ERC725XCore.sol","exportedSymbols":{"Address":[4984],"BytesLib":[8495],"Create2":[5087],"ERC165":[5706],"ERC725XCore":[575],"ERC725X_ContractDeploymentFailed":[997],"ERC725X_CreateOperationsRequireEmptyRecipientAddress":[994],"ERC725X_ExecuteParametersEmptyArray":[1006],"ERC725X_ExecuteParametersLengthMismatch":[1003],"ERC725X_InsufficientBalance":[980],"ERC725X_MsgValueDisallowedInDelegateCall":[991],"ERC725X_MsgValueDisallowedInStaticCall":[988],"ERC725X_NoContractBytecodeProvided":[1000],"ERC725X_UnknownOperationType":[985],"ERC725Y_DataKeysValuesEmptyArray":[1012],"ERC725Y_DataKeysValuesLengthMismatch":[1009],"ERC725Y_MsgValueDisallowed":[1015],"IERC165":[5912],"IERC725X":[1078],"OPERATION_0_CALL":[853],"OPERATION_1_CREATE":[856],"OPERATION_2_CREATE2":[859],"OPERATION_3_STATICCALL":[862],"OPERATION_4_DELEGATECALL":[865],"OwnableUnset":[971],"_INTERFACEID_ERC725X":[847]},"id":576,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"39:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":576,"sourceUnit":5913,"src":"78:80:0","symbolAliases":[{"foreign":{"id":2,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"86:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/interfaces/IERC725X.sol","file":"./interfaces/IERC725X.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":576,"sourceUnit":1079,"src":"159:51:0","symbolAliases":[{"foreign":{"id":4,"name":"IERC725X","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"167:8:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Create2.sol","file":"@openzeppelin/contracts/utils/Create2.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":576,"sourceUnit":5088,"src":"225:66:0","symbolAliases":[{"foreign":{"id":6,"name":"Create2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5087,"src":"233:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"@openzeppelin/contracts/utils/Address.sol","id":9,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":576,"sourceUnit":4985,"src":"292:66:0","symbolAliases":[{"foreign":{"id":8,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"300:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"solidity-bytes-utils/contracts/BytesLib.sol","file":"solidity-bytes-utils/contracts/BytesLib.sol","id":11,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":576,"sourceUnit":8496,"src":"359:69:0","symbolAliases":[{"foreign":{"id":10,"name":"BytesLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8495,"src":"367:8:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165.sol","id":13,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":576,"sourceUnit":5707,"src":"441:78:0","symbolAliases":[{"foreign":{"id":12,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5706,"src":"449:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol","file":"./custom/OwnableUnset.sol","id":15,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":576,"sourceUnit":972,"src":"520:55:0","symbolAliases":[{"foreign":{"id":14,"name":"OwnableUnset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"528:12:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/constants.sol","file":"./constants.sol","id":22,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":576,"sourceUnit":866,"src":"590:188:0","symbolAliases":[{"foreign":{"id":16,"name":"_INTERFACEID_ERC725X","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"603:20:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":17,"name":"OPERATION_0_CALL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"629:16:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":18,"name":"OPERATION_1_CREATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"651:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":19,"name":"OPERATION_2_CREATE2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"675:19:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":20,"name":"OPERATION_3_STATICCALL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"700:22:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":21,"name":"OPERATION_4_DELEGATECALL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"728:24:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/errors.sol","file":"./errors.sol","id":23,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":576,"sourceUnit":1016,"src":"780:22:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":25,"name":"OwnableUnset","nameLocations":["1314:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":971,"src":"1314:12:0"},"id":26,"nodeType":"InheritanceSpecifier","src":"1314:12:0"},{"baseName":{"id":27,"name":"ERC165","nameLocations":["1328:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":5706,"src":"1328:6:0"},"id":28,"nodeType":"InheritanceSpecifier","src":"1328:6:0"},{"baseName":{"id":29,"name":"IERC725X","nameLocations":["1336:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":1078,"src":"1336:8:0"},"id":30,"nodeType":"InheritanceSpecifier","src":"1336:8:0"}],"canonicalName":"ERC725XCore","contractDependencies":[],"contractKind":"contract","documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"804:476:0","text":" @title Core implementation of ERC725X sub-standard, a generic executor.\n @author Fabian Vogelsteller <fabian@lukso.network>\n It allows to use different type of message calls to interact with addresses such as `call`, `staticcall` and `delegatecall`.\n It also allows to deploy and create new contracts via both the `create` and `create2` opcodes.\n This is the basis for a smart contract based account system, but could also be used as a proxy account system."},"fullyImplemented":true,"id":575,"linearizedBaseContracts":[575,1078,5706,5912,971],"name":"ERC725XCore","nameLocation":"1299:11:0","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1058],"body":{"id":54,"nodeType":"Block","src":"2333:68:0","statements":[{"expression":{"arguments":[{"id":48,"name":"operationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"2359:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":49,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"2374:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":50,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"2382:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":51,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"2389:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":47,"name":"_execute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"2350:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,address,uint256,bytes memory) returns (bytes memory)"}},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2350:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":46,"id":53,"nodeType":"Return","src":"2343:51:0"}]},"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1351:784:0","text":" @inheritdoc IERC725X\n @custom:requirements\n - SHOULD only be callable by the {owner} of the contract.\n - if a `value` is provided, the contract MUST have at least this amount to transfer to `target` from its balance and execute successfully.\n - if the operation type is `STATICCALL` (`3`) or `DELEGATECALL` (`4`), `value` transfer is disallowed and SHOULD be 0.\n - `target` SHOULD be `address(0)` when deploying a new contract via `operationType` `CREATE` (`1`), or `CREATE2` (`2`).\n @custom:events\n - {Executed} event when a call is made with `operationType` 0 (CALL), 3 (STATICCALL) or 4 (DELEGATECALL).\n - {ContractCreated} event when deploying a new contract with `operationType` 1 (CREATE) or 2 (CREATE2)."},"functionSelector":"44c028fe","id":55,"implemented":true,"kind":"function","modifiers":[{"id":43,"kind":"modifierInvocation","modifierName":{"id":42,"name":"onlyOwner","nameLocations":["2300:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":893,"src":"2300:9:0"},"nodeType":"ModifierInvocation","src":"2300:9:0"}],"name":"execute","nameLocation":"2149:7:0","nodeType":"FunctionDefinition","overrides":{"id":41,"nodeType":"OverrideSpecifier","overrides":[],"src":"2291:8:0"},"parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"operationType","nameLocation":"2174:13:0","nodeType":"VariableDeclaration","scope":55,"src":"2166:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32,"name":"uint256","nodeType":"ElementaryTypeName","src":"2166:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":35,"mutability":"mutable","name":"target","nameLocation":"2205:6:0","nodeType":"VariableDeclaration","scope":55,"src":"2197:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"2197:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":37,"mutability":"mutable","name":"value","nameLocation":"2229:5:0","nodeType":"VariableDeclaration","scope":55,"src":"2221:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36,"name":"uint256","nodeType":"ElementaryTypeName","src":"2221:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":39,"mutability":"mutable","name":"data","nameLocation":"2257:4:0","nodeType":"VariableDeclaration","scope":55,"src":"2244:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":38,"name":"bytes","nodeType":"ElementaryTypeName","src":"2244:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2156:111:0"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":55,"src":"2319:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":44,"name":"bytes","nodeType":"ElementaryTypeName","src":"2319:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2318:14:0"},"scope":575,"src":"2140:261:0","stateMutability":"payable","virtual":true,"visibility":"public"},{"baseFunctions":[1077],"body":{"id":84,"nodeType":"Block","src":"3258:77:0","statements":[{"expression":{"arguments":[{"id":78,"name":"operationsType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59,"src":"3289:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":79,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62,"src":"3305:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":80,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"3314:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":81,"name":"datas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"3322:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}],"id":77,"name":"_executeBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"3275:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,address[] memory,uint256[] memory,bytes memory[] memory) returns (bytes memory[] memory)"}},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3275:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"functionReturnParameters":76,"id":83,"nodeType":"Return","src":"3268:60:0"}]},"documentation":{"id":56,"nodeType":"StructuredDocumentation","src":"2407:613:0","text":" @inheritdoc IERC725X\n @custom:requirements\n - All the array parameters provided MUST be equal and have the same length.\n - SHOULD only be callable by the {owner} of the contract.\n - The contract MUST have in its balance **at least the sum of all the `values`** to transfer and execute successfully each calldata payloads.\n @custom:events\n - {Executed} event, when a call is made with `operationType` 0 (CALL), 3 (STATICCALL) or 4 (DELEGATECALL)\n - {ContractCreated} event, when deploying a contract with `operationType` 1 (CREATE) or 2 (CREATE2)"},"functionSelector":"31858452","id":85,"implemented":true,"kind":"function","modifiers":[{"id":72,"kind":"modifierInvocation","modifierName":{"id":71,"name":"onlyOwner","nameLocations":["3223:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":893,"src":"3223:9:0"},"nodeType":"ModifierInvocation","src":"3223:9:0"}],"name":"executeBatch","nameLocation":"3034:12:0","nodeType":"FunctionDefinition","overrides":{"id":70,"nodeType":"OverrideSpecifier","overrides":[],"src":"3214:8:0"},"parameters":{"id":69,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59,"mutability":"mutable","name":"operationsType","nameLocation":"3073:14:0","nodeType":"VariableDeclaration","scope":85,"src":"3056:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":57,"name":"uint256","nodeType":"ElementaryTypeName","src":"3056:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":58,"nodeType":"ArrayTypeName","src":"3056:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":62,"mutability":"mutable","name":"targets","nameLocation":"3114:7:0","nodeType":"VariableDeclaration","scope":85,"src":"3097:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":60,"name":"address","nodeType":"ElementaryTypeName","src":"3097:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":61,"nodeType":"ArrayTypeName","src":"3097:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"values","nameLocation":"3148:6:0","nodeType":"VariableDeclaration","scope":85,"src":"3131:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":63,"name":"uint256","nodeType":"ElementaryTypeName","src":"3131:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":64,"nodeType":"ArrayTypeName","src":"3131:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":68,"mutability":"mutable","name":"datas","nameLocation":"3179:5:0","nodeType":"VariableDeclaration","scope":85,"src":"3164:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":66,"name":"bytes","nodeType":"ElementaryTypeName","src":"3164:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":67,"nodeType":"ArrayTypeName","src":"3164:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"3046:144:0"},"returnParameters":{"id":76,"nodeType":"ParameterList","parameters":[{"constant":false,"id":75,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":85,"src":"3242:14:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":73,"name":"bytes","nodeType":"ElementaryTypeName","src":"3242:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":74,"nodeType":"ArrayTypeName","src":"3242:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"3241:16:0"},"scope":575,"src":"3025:310:0","stateMutability":"payable","virtual":true,"visibility":"public"},{"baseFunctions":[5705,5911],"body":{"id":105,"nodeType":"Block","src":"3505:123:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":98,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":96,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"3534:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":97,"name":"_INTERFACEID_ERC725X","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"3549:20:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3534:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":101,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"3609:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":99,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3585:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC725XCore_$575_$","typeString":"type(contract super ERC725XCore)"}},"id":100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3591:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":5705,"src":"3585:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3534:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":95,"id":104,"nodeType":"Return","src":"3515:106:0"}]},"documentation":{"id":86,"nodeType":"StructuredDocumentation","src":"3341:37:0","text":" @inheritdoc ERC165"},"functionSelector":"01ffc9a7","id":106,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3392:17:0","nodeType":"FunctionDefinition","overrides":{"id":92,"nodeType":"OverrideSpecifier","overrides":[{"id":90,"name":"IERC165","nameLocations":["3473:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":5912,"src":"3473:7:0"},{"id":91,"name":"ERC165","nameLocations":["3482:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":5706,"src":"3482:6:0"}],"src":"3464:25:0"},"parameters":{"id":89,"nodeType":"ParameterList","parameters":[{"constant":false,"id":88,"mutability":"mutable","name":"interfaceId","nameLocation":"3426:11:0","nodeType":"VariableDeclaration","scope":106,"src":"3419:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":87,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3419:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3409:34:0"},"returnParameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":106,"src":"3499:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":93,"name":"bool","nodeType":"ElementaryTypeName","src":"3499:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3498:6:0"},"scope":575,"src":"3383:245:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":209,"nodeType":"Block","src":"3959:1690:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":120,"name":"operationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"3989:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":121,"name":"OPERATION_0_CALL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"4006:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3989:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":130,"nodeType":"IfStatement","src":"3985:104:0","trueBody":{"id":129,"nodeType":"Block","src":"4024:65:0","statements":[{"expression":{"arguments":[{"id":124,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"4058:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"4066:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":126,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"4073:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":123,"name":"_executeCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"4045:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,uint256,bytes memory) returns (bytes memory)"}},"id":127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4045:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":119,"id":128,"nodeType":"Return","src":"4038:40:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":131,"name":"operationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"4133:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":132,"name":"OPERATION_1_CREATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"4150:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4133:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":150,"nodeType":"IfStatement","src":"4129:216:0","trueBody":{"id":149,"nodeType":"Block","src":"4170:175:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":134,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"4188:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4206:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4198:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":135,"name":"address","nodeType":"ElementaryTypeName","src":"4198:7:0","typeDescriptions":{}}},"id":138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4198:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4188:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":143,"nodeType":"IfStatement","src":"4184:103:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":140,"name":"ERC725X_CreateOperationsRequireEmptyRecipientAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"4233:52:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4233:54:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":142,"nodeType":"RevertStatement","src":"4226:61:0"}},{"expression":{"arguments":[{"id":145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"4322:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":146,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"4329:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":144,"name":"_deployCreate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"4308:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,bytes memory) returns (bytes memory)"}},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4308:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":119,"id":148,"nodeType":"Return","src":"4301:33:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":151,"name":"operationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"4390:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":152,"name":"OPERATION_2_CREATE2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"4407:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4390:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":170,"nodeType":"IfStatement","src":"4386:218:0","trueBody":{"id":169,"nodeType":"Block","src":"4428:176:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":154,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"4446:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4464:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4456:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":155,"name":"address","nodeType":"ElementaryTypeName","src":"4456:7:0","typeDescriptions":{}}},"id":158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4456:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4446:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":163,"nodeType":"IfStatement","src":"4442:103:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":160,"name":"ERC725X_CreateOperationsRequireEmptyRecipientAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"4491:52:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4491:54:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"RevertStatement","src":"4484:61:0"}},{"expression":{"arguments":[{"id":165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"4581:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":166,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"4588:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":164,"name":"_deployCreate2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"4566:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,bytes memory) returns (bytes memory)"}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4566:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":119,"id":168,"nodeType":"Return","src":"4559:34:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":171,"name":"operationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"4640:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":172,"name":"OPERATION_3_STATICCALL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"4657:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":187,"nodeType":"IfStatement","src":"4636:186:0","trueBody":{"id":186,"nodeType":"Block","src":"4681:141:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"4699:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4708:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4699:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":180,"nodeType":"IfStatement","src":"4695:63:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":177,"name":"ERC725X_MsgValueDisallowedInStaticCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"4718:38:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4718:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":179,"nodeType":"RevertStatement","src":"4711:47:0"}},{"expression":{"arguments":[{"id":182,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"4798:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":183,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"4806:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":181,"name":"_executeStaticCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"4779:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4779:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":119,"id":185,"nodeType":"Return","src":"4772:39:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":188,"name":"operationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"5394:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":189,"name":"OPERATION_4_DELEGATECALL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"5411:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5394:41:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":204,"nodeType":"IfStatement","src":"5390:192:0","trueBody":{"id":203,"nodeType":"Block","src":"5437:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"5455:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5464:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5455:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":197,"nodeType":"IfStatement","src":"5451:65:0","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":194,"name":"ERC725X_MsgValueDisallowedInDelegateCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"5474:40:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5474:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":196,"nodeType":"RevertStatement","src":"5467:49:0"}},{"expression":{"arguments":[{"id":199,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"5558:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":200,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"5566:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":198,"name":"_executeDelegateCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"5537:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5537:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":119,"id":202,"nodeType":"Return","src":"5530:41:0"}]}},{"errorCall":{"arguments":[{"id":206,"name":"operationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"5628:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":205,"name":"ERC725X_UnknownOperationType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"5599:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5599:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":208,"nodeType":"RevertStatement","src":"5592:50:0"}]},"documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"3634:151:0","text":" @dev check the `operationType` provided and perform the associated low-level opcode after checking for requirements (see {execute})."},"id":210,"implemented":true,"kind":"function","modifiers":[],"name":"_execute","nameLocation":"3799:8:0","nodeType":"FunctionDefinition","parameters":{"id":116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"mutability":"mutable","name":"operationType","nameLocation":"3825:13:0","nodeType":"VariableDeclaration","scope":210,"src":"3817:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":108,"name":"uint256","nodeType":"ElementaryTypeName","src":"3817:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":111,"mutability":"mutable","name":"target","nameLocation":"3856:6:0","nodeType":"VariableDeclaration","scope":210,"src":"3848:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":110,"name":"address","nodeType":"ElementaryTypeName","src":"3848:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":113,"mutability":"mutable","name":"value","nameLocation":"3880:5:0","nodeType":"VariableDeclaration","scope":210,"src":"3872:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":112,"name":"uint256","nodeType":"ElementaryTypeName","src":"3872:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":115,"mutability":"mutable","name":"data","nameLocation":"3908:4:0","nodeType":"VariableDeclaration","scope":210,"src":"3895:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":114,"name":"bytes","nodeType":"ElementaryTypeName","src":"3895:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3807:111:0"},"returnParameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":210,"src":"3945:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":117,"name":"bytes","nodeType":"ElementaryTypeName","src":"3945:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3944:14:0"},"scope":575,"src":"3790:1859:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":308,"nodeType":"Block","src":"6039:805:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":229,"name":"operationsType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6066:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6081:6:0","memberName":"length","nodeType":"MemberAccess","src":"6066:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":231,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"6091:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6099:6:0","memberName":"length","nodeType":"MemberAccess","src":"6091:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6066:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":234,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"6122:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6130:6:0","memberName":"length","nodeType":"MemberAccess","src":"6122:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":236,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6140:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6147:6:0","memberName":"length","nodeType":"MemberAccess","src":"6140:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6122:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":239,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6157:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6164:6:0","memberName":"length","nodeType":"MemberAccess","src":"6157:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":241,"name":"datas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6174:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6180:6:0","memberName":"length","nodeType":"MemberAccess","src":"6174:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6157:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6122:64:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":245,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6121:66:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6066:121:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":251,"nodeType":"IfStatement","src":"6049:222:0","trueBody":{"id":250,"nodeType":"Block","src":"6198:73:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":247,"name":"ERC725X_ExecuteParametersLengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"6219:39:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6219:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":249,"nodeType":"RevertStatement","src":"6212:48:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":252,"name":"operationsType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6285:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6300:6:0","memberName":"length","nodeType":"MemberAccess","src":"6285:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6310:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6285:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":260,"nodeType":"IfStatement","src":"6281:101:0","trueBody":{"id":259,"nodeType":"Block","src":"6313:69:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":256,"name":"ERC725X_ExecuteParametersEmptyArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"6334:35:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6334:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":258,"nodeType":"RevertStatement","src":"6327:44:0"}]}},{"assignments":[265],"declarations":[{"constant":false,"id":265,"mutability":"mutable","name":"result","nameLocation":"6407:6:0","nodeType":"VariableDeclaration","scope":308,"src":"6392:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":263,"name":"bytes","nodeType":"ElementaryTypeName","src":"6392:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":264,"nodeType":"ArrayTypeName","src":"6392:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"id":272,"initialValue":{"arguments":[{"expression":{"id":269,"name":"operationsType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6428:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6443:6:0","memberName":"length","nodeType":"MemberAccess","src":"6428:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6416:11:0","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":266,"name":"bytes","nodeType":"ElementaryTypeName","src":"6420:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":267,"nodeType":"ArrayTypeName","src":"6420:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6416:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6392:58:0"},{"body":{"id":304,"nodeType":"Block","src":"6510:304:0","statements":[{"expression":{"id":298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":281,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"6524:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":283,"indexExpression":{"id":282,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"6531:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6524:9:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":285,"name":"operationsType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6562:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":287,"indexExpression":{"id":286,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"6577:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6562:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":288,"name":"targets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"6597:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":290,"indexExpression":{"id":289,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"6605:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6597:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":291,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6625:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":293,"indexExpression":{"id":292,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"6632:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6625:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":294,"name":"datas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6652:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":296,"indexExpression":{"id":295,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"6658:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6652:8:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":284,"name":"_execute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"6536:8:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,address,uint256,bytes memory) returns (bytes memory)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6536:138:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"6524:150:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":299,"nodeType":"ExpressionStatement","src":"6524:150:0"},{"id":303,"nodeType":"UncheckedBlock","src":"6758:46:0","statements":[{"expression":{"id":301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6786:3:0","subExpression":{"id":300,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"6788:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":302,"nodeType":"ExpressionStatement","src":"6786:3:0"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":277,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":274,"src":"6481:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":278,"name":"operationsType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6485:14:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6500:6:0","memberName":"length","nodeType":"MemberAccess","src":"6485:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6481:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":305,"initializationExpression":{"assignments":[274],"declarations":[{"constant":false,"id":274,"mutability":"mutable","name":"i","nameLocation":"6474:1:0","nodeType":"VariableDeclaration","scope":305,"src":"6466:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":273,"name":"uint256","nodeType":"ElementaryTypeName","src":"6466:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":276,"initialValue":{"hexValue":"30","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6478:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6466:13:0"},"nodeType":"ForStatement","src":"6461:353:0"},{"expression":{"id":306,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"6831:6:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"functionReturnParameters":228,"id":307,"nodeType":"Return","src":"6824:13:0"}]},"documentation":{"id":211,"nodeType":"StructuredDocumentation","src":"5655:170:0","text":" @dev check each `operationType` provided in the batch and perform the associated low-level opcode after checking for requirements (see {executeBatch})."},"id":309,"implemented":true,"kind":"function","modifiers":[],"name":"_executeBatch","nameLocation":"5839:13:0","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"operationsType","nameLocation":"5879:14:0","nodeType":"VariableDeclaration","scope":309,"src":"5862:31:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":212,"name":"uint256","nodeType":"ElementaryTypeName","src":"5862:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":213,"nodeType":"ArrayTypeName","src":"5862:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":217,"mutability":"mutable","name":"targets","nameLocation":"5920:7:0","nodeType":"VariableDeclaration","scope":309,"src":"5903:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":215,"name":"address","nodeType":"ElementaryTypeName","src":"5903:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":216,"nodeType":"ArrayTypeName","src":"5903:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":220,"mutability":"mutable","name":"values","nameLocation":"5954:6:0","nodeType":"VariableDeclaration","scope":309,"src":"5937:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"5937:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":219,"nodeType":"ArrayTypeName","src":"5937:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"datas","nameLocation":"5985:5:0","nodeType":"VariableDeclaration","scope":309,"src":"5970:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":221,"name":"bytes","nodeType":"ElementaryTypeName","src":"5970:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":222,"nodeType":"ArrayTypeName","src":"5970:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"5852:144:0"},"returnParameters":{"id":228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":309,"src":"6023:14:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":225,"name":"bytes","nodeType":"ElementaryTypeName","src":"6023:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":226,"nodeType":"ArrayTypeName","src":"6023:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"6022:16:0"},"scope":575,"src":"5830:1014:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":367,"nodeType":"Block","src":"7283:538:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":323,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7305:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC725XCore_$575","typeString":"contract ERC725XCore"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC725XCore_$575","typeString":"contract ERC725XCore"}],"id":322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7297:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"7297:7:0","typeDescriptions":{}}},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7297:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7311:7:0","memberName":"balance","nodeType":"MemberAccess","src":"7297:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"7321:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7297:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":338,"nodeType":"IfStatement","src":"7293:124:0","trueBody":{"id":337,"nodeType":"Block","src":"7328:89:0","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":331,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7385:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC725XCore_$575","typeString":"contract ERC725XCore"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC725XCore_$575","typeString":"contract ERC725XCore"}],"id":330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7377:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"7377:7:0","typeDescriptions":{}}},"id":332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7377:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7391:7:0","memberName":"balance","nodeType":"MemberAccess","src":"7377:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"7400:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":328,"name":"ERC725X_InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"7349:27:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7349:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":336,"nodeType":"RevertStatement","src":"7342:64:0"}]}},{"eventCall":{"arguments":[{"id":340,"name":"OPERATION_0_CALL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"7441:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":341,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"7459:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"7467:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":345,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"7481:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7474:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":343,"name":"bytes4","nodeType":"ElementaryTypeName","src":"7474:6:0","typeDescriptions":{}}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7474:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":339,"name":"Executed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"7432:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_bytes4_$returns$__$","typeString":"function (uint256,address,uint256,bytes4)"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7432:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":348,"nodeType":"EmitStatement","src":"7427:60:0"},{"assignments":[350,352],"declarations":[{"constant":false,"id":350,"mutability":"mutable","name":"success","nameLocation":"7563:7:0","nodeType":"VariableDeclaration","scope":367,"src":"7558:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":349,"name":"bool","nodeType":"ElementaryTypeName","src":"7558:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":352,"mutability":"mutable","name":"returnData","nameLocation":"7585:10:0","nodeType":"VariableDeclaration","scope":367,"src":"7572:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":351,"name":"bytes","nodeType":"ElementaryTypeName","src":"7572:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":359,"initialValue":{"arguments":[{"id":357,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"7638:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":353,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"7599:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7606:4:0","memberName":"call","nodeType":"MemberAccess","src":"7599:11:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"7618:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"7599:25:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7599:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7557:95:0"},{"expression":{"arguments":[{"id":362,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"7723:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":363,"name":"returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"7748:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"455243373235583a20556e6b6e6f776e204572726f72","id":364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7776:24:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_03c4ecf988bc0006d195a835ffe64c442944d37d94b40319eaaa416797a259fd","typeString":"literal_string \"ERC725X: Unknown Error\""},"value":"ERC725X: Unknown Error"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_03c4ecf988bc0006d195a835ffe64c442944d37d94b40319eaaa416797a259fd","typeString":"literal_string \"ERC725X: Unknown Error\""}],"expression":{"id":360,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"7681:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$4984_$","typeString":"type(library Address)"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7689:16:0","memberName":"verifyCallResult","nodeType":"MemberAccess","referencedDeclaration":4963,"src":"7681:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7681:133:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":320,"id":366,"nodeType":"Return","src":"7662:152:0"}]},"documentation":{"id":310,"nodeType":"StructuredDocumentation","src":"6850:279:0","text":" @dev Perform low-level call (operation type = 0)\n @param target The address on which call is executed\n @param value The value to be sent with the call\n @param data The data to be sent with the call\n @return result The data from the call"},"id":368,"implemented":true,"kind":"function","modifiers":[],"name":"_executeCall","nameLocation":"7143:12:0","nodeType":"FunctionDefinition","parameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"target","nameLocation":"7173:6:0","nodeType":"VariableDeclaration","scope":368,"src":"7165:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":311,"name":"address","nodeType":"ElementaryTypeName","src":"7165:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":314,"mutability":"mutable","name":"value","nameLocation":"7197:5:0","nodeType":"VariableDeclaration","scope":368,"src":"7189:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":313,"name":"uint256","nodeType":"ElementaryTypeName","src":"7189:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":316,"mutability":"mutable","name":"data","nameLocation":"7225:4:0","nodeType":"VariableDeclaration","scope":368,"src":"7212:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":315,"name":"bytes","nodeType":"ElementaryTypeName","src":"7212:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7155:80:0"},"returnParameters":{"id":320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":319,"mutability":"mutable","name":"result","nameLocation":"7275:6:0","nodeType":"VariableDeclaration","scope":368,"src":"7262:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":318,"name":"bytes","nodeType":"ElementaryTypeName","src":"7262:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7261:21:0"},"scope":575,"src":"7134:687:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":404,"nodeType":"Block","src":"8221:376:0","statements":[{"eventCall":{"arguments":[{"id":379,"name":"OPERATION_3_STATICCALL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"8245:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":380,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"8269:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8277:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"arguments":[{"id":384,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"8287:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8280:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":382,"name":"bytes4","nodeType":"ElementaryTypeName","src":"8280:6:0","typeDescriptions":{}}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8280:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":378,"name":"Executed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"8236:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_bytes4_$returns$__$","typeString":"function (uint256,address,uint256,bytes4)"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8236:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":387,"nodeType":"EmitStatement","src":"8231:62:0"},{"assignments":[389,391],"declarations":[{"constant":false,"id":389,"mutability":"mutable","name":"success","nameLocation":"8369:7:0","nodeType":"VariableDeclaration","scope":404,"src":"8364:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":388,"name":"bool","nodeType":"ElementaryTypeName","src":"8364:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":391,"mutability":"mutable","name":"returnData","nameLocation":"8391:10:0","nodeType":"VariableDeclaration","scope":404,"src":"8378:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":390,"name":"bytes","nodeType":"ElementaryTypeName","src":"8378:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":396,"initialValue":{"arguments":[{"id":394,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"8423:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":392,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"8405:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8412:10:0","memberName":"staticcall","nodeType":"MemberAccess","src":"8405:17:0","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8405:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"8363:65:0"},{"expression":{"arguments":[{"id":399,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"8499:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":400,"name":"returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"8524:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"455243373235583a20556e6b6e6f776e204572726f72","id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8552:24:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_03c4ecf988bc0006d195a835ffe64c442944d37d94b40319eaaa416797a259fd","typeString":"literal_string \"ERC725X: Unknown Error\""},"value":"ERC725X: Unknown Error"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_03c4ecf988bc0006d195a835ffe64c442944d37d94b40319eaaa416797a259fd","typeString":"literal_string \"ERC725X: Unknown Error\""}],"expression":{"id":397,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"8457:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$4984_$","typeString":"type(library Address)"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8465:16:0","memberName":"verifyCallResult","nodeType":"MemberAccess","referencedDeclaration":4963,"src":"8457:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8457:133:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":377,"id":403,"nodeType":"Return","src":"8438:152:0"}]},"documentation":{"id":369,"nodeType":"StructuredDocumentation","src":"7827:257:0","text":" @dev Perform low-level staticcall (operation type = 3)\n @param target The address on which staticcall is executed\n @param data The data to be sent with the staticcall\n @return result The data returned from the staticcall"},"id":405,"implemented":true,"kind":"function","modifiers":[],"name":"_executeStaticCall","nameLocation":"8098:18:0","nodeType":"FunctionDefinition","parameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":371,"mutability":"mutable","name":"target","nameLocation":"8134:6:0","nodeType":"VariableDeclaration","scope":405,"src":"8126:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":370,"name":"address","nodeType":"ElementaryTypeName","src":"8126:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":373,"mutability":"mutable","name":"data","nameLocation":"8163:4:0","nodeType":"VariableDeclaration","scope":405,"src":"8150:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":372,"name":"bytes","nodeType":"ElementaryTypeName","src":"8150:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8116:57:0"},"returnParameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"mutability":"mutable","name":"result","nameLocation":"8213:6:0","nodeType":"VariableDeclaration","scope":405,"src":"8200:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":375,"name":"bytes","nodeType":"ElementaryTypeName","src":"8200:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8199:21:0"},"scope":575,"src":"8089:508:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":441,"nodeType":"Block","src":"9007:380:0","statements":[{"eventCall":{"arguments":[{"id":416,"name":"OPERATION_4_DELEGATECALL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"9031:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":417,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9057:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9065:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"arguments":[{"id":421,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"9075:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9068:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":419,"name":"bytes4","nodeType":"ElementaryTypeName","src":"9068:6:0","typeDescriptions":{}}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9068:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":415,"name":"Executed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"9022:8:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_bytes4_$returns$__$","typeString":"function (uint256,address,uint256,bytes4)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9022:59:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":424,"nodeType":"EmitStatement","src":"9017:64:0"},{"assignments":[426,428],"declarations":[{"constant":false,"id":426,"mutability":"mutable","name":"success","nameLocation":"9157:7:0","nodeType":"VariableDeclaration","scope":441,"src":"9152:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":425,"name":"bool","nodeType":"ElementaryTypeName","src":"9152:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":428,"mutability":"mutable","name":"returnData","nameLocation":"9179:10:0","nodeType":"VariableDeclaration","scope":441,"src":"9166:23:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":427,"name":"bytes","nodeType":"ElementaryTypeName","src":"9166:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":433,"initialValue":{"arguments":[{"id":431,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"9213:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":429,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9193:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9200:12:0","memberName":"delegatecall","nodeType":"MemberAccess","src":"9193:19:0","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9193:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"9151:67:0"},{"expression":{"arguments":[{"id":436,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"9289:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":437,"name":"returnData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"9314:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"455243373235583a20556e6b6e6f776e204572726f72","id":438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9342:24:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_03c4ecf988bc0006d195a835ffe64c442944d37d94b40319eaaa416797a259fd","typeString":"literal_string \"ERC725X: Unknown Error\""},"value":"ERC725X: Unknown Error"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_03c4ecf988bc0006d195a835ffe64c442944d37d94b40319eaaa416797a259fd","typeString":"literal_string \"ERC725X: Unknown Error\""}],"expression":{"id":434,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"9247:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$4984_$","typeString":"type(library Address)"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9255:16:0","memberName":"verifyCallResult","nodeType":"MemberAccess","referencedDeclaration":4963,"src":"9247:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9247:133:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":414,"id":440,"nodeType":"Return","src":"9228:152:0"}]},"documentation":{"id":406,"nodeType":"StructuredDocumentation","src":"8603:265:0","text":" @dev Perform low-level delegatecall (operation type = 4)\n @param target The address on which delegatecall is executed\n @param data The data to be sent with the delegatecall\n @return result The data returned from the delegatecall"},"id":442,"implemented":true,"kind":"function","modifiers":[],"name":"_executeDelegateCall","nameLocation":"8882:20:0","nodeType":"FunctionDefinition","parameters":{"id":411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":408,"mutability":"mutable","name":"target","nameLocation":"8920:6:0","nodeType":"VariableDeclaration","scope":442,"src":"8912:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":407,"name":"address","nodeType":"ElementaryTypeName","src":"8912:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":410,"mutability":"mutable","name":"data","nameLocation":"8949:4:0","nodeType":"VariableDeclaration","scope":442,"src":"8936:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":409,"name":"bytes","nodeType":"ElementaryTypeName","src":"8936:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8902:57:0"},"returnParameters":{"id":414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":413,"mutability":"mutable","name":"result","nameLocation":"8999:6:0","nodeType":"VariableDeclaration","scope":442,"src":"8986:19:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":412,"name":"bytes","nodeType":"ElementaryTypeName","src":"8986:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8985:21:0"},"scope":575,"src":"8873:514:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":509,"nodeType":"Block","src":"9872:826:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":454,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9894:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC725XCore_$575","typeString":"contract ERC725XCore"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC725XCore_$575","typeString":"contract ERC725XCore"}],"id":453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9886:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"9886:7:0","typeDescriptions":{}}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9886:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9900:7:0","memberName":"balance","nodeType":"MemberAccess","src":"9886:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"9910:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9886:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":469,"nodeType":"IfStatement","src":"9882:124:0","trueBody":{"id":468,"nodeType":"Block","src":"9917:89:0","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":462,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9974:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_ERC725XCore_$575","typeString":"contract ERC725XCore"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC725XCore_$575","typeString":"contract ERC725XCore"}],"id":461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9966:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":460,"name":"address","nodeType":"ElementaryTypeName","src":"9966:7:0","typeDescriptions":{}}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9966:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9980:7:0","memberName":"balance","nodeType":"MemberAccess","src":"9966:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"9989:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":459,"name":"ERC725X_InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"9938:27:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9938:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":467,"nodeType":"RevertStatement","src":"9931:64:0"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":470,"name":"creationCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"10020:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10033:6:0","memberName":"length","nodeType":"MemberAccess","src":"10020:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10043:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10020:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":478,"nodeType":"IfStatement","src":"10016:98:0","trueBody":{"id":477,"nodeType":"Block","src":"10046:68:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":474,"name":"ERC725X_NoContractBytecodeProvided","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"10067:34:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10067:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":476,"nodeType":"RevertStatement","src":"10060:43:0"}]}},{"assignments":[480],"declarations":[{"constant":false,"id":480,"mutability":"mutable","name":"contractAddress","nameLocation":"10132:15:0","nodeType":"VariableDeclaration","scope":509,"src":"10124:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":481,"nodeType":"VariableDeclarationStatement","src":"10124:23:0"},{"AST":{"nodeType":"YulBlock","src":"10222:164:0","statements":[{"nodeType":"YulAssignment","src":"10236:140:0","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10279:5:0"},{"arguments":[{"name":"creationCode","nodeType":"YulIdentifier","src":"10306:12:0"},{"kind":"number","nodeType":"YulLiteral","src":"10320:4:0","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10302:3:0"},"nodeType":"YulFunctionCall","src":"10302:23:0"},{"arguments":[{"name":"creationCode","nodeType":"YulIdentifier","src":"10349:12:0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10343:5:0"},"nodeType":"YulFunctionCall","src":"10343:19:0"}],"functionName":{"name":"create","nodeType":"YulIdentifier","src":"10255:6:0"},"nodeType":"YulFunctionCall","src":"10255:121:0"},"variableNames":[{"name":"contractAddress","nodeType":"YulIdentifier","src":"10236:15:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":480,"isOffset":false,"isSlot":false,"src":"10236:15:0","valueSize":1},{"declaration":447,"isOffset":false,"isSlot":false,"src":"10306:12:0","valueSize":1},{"declaration":447,"isOffset":false,"isSlot":false,"src":"10349:12:0","valueSize":1},{"declaration":445,"isOffset":false,"isSlot":false,"src":"10279:5:0","valueSize":1}],"id":482,"nodeType":"InlineAssembly","src":"10213:173:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":483,"name":"contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"10400:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10427:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10419:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":484,"name":"address","nodeType":"ElementaryTypeName","src":"10419:7:0","typeDescriptions":{}}},"id":487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10419:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10400:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":493,"nodeType":"IfStatement","src":"10396:101:0","trueBody":{"id":492,"nodeType":"Block","src":"10431:66:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":489,"name":"ERC725X_ContractDeploymentFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"10452:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10452:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":491,"nodeType":"RevertStatement","src":"10445:41:0"}]}},{"eventCall":{"arguments":[{"id":495,"name":"OPERATION_1_CREATE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"10541:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":496,"name":"contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"10573:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"10602:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10629:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10621:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":498,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10621:7:0","typeDescriptions":{}}},"id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10621:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":494,"name":"ContractCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"10512:15:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (uint256,address,uint256,bytes32)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10512:129:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"EmitStatement","src":"10507:134:0"},{"expression":{"arguments":[{"id":506,"name":"contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"10675:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":504,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10658:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10662:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"10658:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10658:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":451,"id":508,"nodeType":"Return","src":"10651:40:0"}]},"documentation":{"id":443,"nodeType":"StructuredDocumentation","src":"9393:335:0","text":" @dev Deploy a contract using the `CREATE` opcode (operation type = 1)\n @param value The value to be sent to the contract created\n @param creationCode The contract creation bytecode to deploy appended with the constructor argument(s)\n @return newContract The address of the contract created as bytes"},"id":510,"implemented":true,"kind":"function","modifiers":[],"name":"_deployCreate","nameLocation":"9742:13:0","nodeType":"FunctionDefinition","parameters":{"id":448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":445,"mutability":"mutable","name":"value","nameLocation":"9773:5:0","nodeType":"VariableDeclaration","scope":510,"src":"9765:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":444,"name":"uint256","nodeType":"ElementaryTypeName","src":"9765:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":447,"mutability":"mutable","name":"creationCode","nameLocation":"9801:12:0","nodeType":"VariableDeclaration","scope":510,"src":"9788:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":446,"name":"bytes","nodeType":"ElementaryTypeName","src":"9788:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9755:64:0"},"returnParameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":450,"mutability":"mutable","name":"newContract","nameLocation":"9859:11:0","nodeType":"VariableDeclaration","scope":510,"src":"9846:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":449,"name":"bytes","nodeType":"ElementaryTypeName","src":"9846:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9845:26:0"},"scope":575,"src":"9733:965:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":573,"nodeType":"Block","src":"11204:574:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":520,"name":"creationCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"11218:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11231:6:0","memberName":"length","nodeType":"MemberAccess","src":"11218:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11241:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11218:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":528,"nodeType":"IfStatement","src":"11214:98:0","trueBody":{"id":527,"nodeType":"Block","src":"11244:68:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":524,"name":"ERC725X_NoContractBytecodeProvided","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"11265:34:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11265:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":526,"nodeType":"RevertStatement","src":"11258:43:0"}]}},{"assignments":[530],"declarations":[{"constant":false,"id":530,"mutability":"mutable","name":"salt","nameLocation":"11330:4:0","nodeType":"VariableDeclaration","scope":573,"src":"11322:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":529,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11322:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":539,"initialValue":{"arguments":[{"id":533,"name":"creationCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"11369:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":534,"name":"creationCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"11395:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11408:6:0","memberName":"length","nodeType":"MemberAccess","src":"11395:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3332","id":536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11417:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11395:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":531,"name":"BytesLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8495,"src":"11337:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BytesLib_$8495_$","typeString":"type(library BytesLib)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11346:9:0","memberName":"toBytes32","nodeType":"MemberAccess","referencedDeclaration":8460,"src":"11337:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11337:92:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"11322:107:0"},{"assignments":[541],"declarations":[{"constant":false,"id":541,"mutability":"mutable","name":"bytecode","nameLocation":"11452:8:0","nodeType":"VariableDeclaration","scope":573,"src":"11439:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":540,"name":"bytes","nodeType":"ElementaryTypeName","src":"11439:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":551,"initialValue":{"arguments":[{"id":544,"name":"creationCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"11491:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11517:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":546,"name":"creationCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"11532:12:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11545:6:0","memberName":"length","nodeType":"MemberAccess","src":"11532:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3332","id":548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11554:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11532:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":542,"name":"BytesLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8495,"src":"11463:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BytesLib_$8495_$","typeString":"type(library BytesLib)"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11472:5:0","memberName":"slice","nodeType":"MemberAccess","referencedDeclaration":8226,"src":"11463:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,uint256,uint256) pure returns (bytes memory)"}},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11463:103:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"11439:127:0"},{"assignments":[553],"declarations":[{"constant":false,"id":553,"mutability":"mutable","name":"contractAddress","nameLocation":"11584:15:0","nodeType":"VariableDeclaration","scope":573,"src":"11576:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":552,"name":"address","nodeType":"ElementaryTypeName","src":"11576:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":560,"initialValue":{"arguments":[{"id":556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"11617:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":557,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"11624:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":558,"name":"bytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"11630:8:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":554,"name":"Create2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5087,"src":"11602:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Create2_$5087_$","typeString":"type(library Create2)"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11610:6:0","memberName":"deploy","nodeType":"MemberAccess","referencedDeclaration":5052,"src":"11602:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (uint256,bytes32,bytes memory) returns (address)"}},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11602:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11576:63:0"},{"eventCall":{"arguments":[{"id":562,"name":"OPERATION_2_CREATE2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"11671:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":563,"name":"contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"11692:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":564,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"11709:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":565,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"11716:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":561,"name":"ContractCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"11655:15:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (uint256,address,uint256,bytes32)"}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11655:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":567,"nodeType":"EmitStatement","src":"11650:71:0"},{"expression":{"arguments":[{"id":570,"name":"contractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"11755:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":568,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11738:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11742:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"11738:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11738:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":519,"id":572,"nodeType":"Return","src":"11731:40:0"}]},"documentation":{"id":511,"nodeType":"StructuredDocumentation","src":"10704:355:0","text":" @dev Deploy a contract using the `CREATE2` opcode (operation type = 2)\n @param value The value to be sent to the contract created\n @param creationCode The contract creation bytecode to deploy appended with the constructor argument(s) and a bytes32 salt\n @return newContract The address of the contract created as bytes"},"id":574,"implemented":true,"kind":"function","modifiers":[],"name":"_deployCreate2","nameLocation":"11073:14:0","nodeType":"FunctionDefinition","parameters":{"id":516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":513,"mutability":"mutable","name":"value","nameLocation":"11105:5:0","nodeType":"VariableDeclaration","scope":574,"src":"11097:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":512,"name":"uint256","nodeType":"ElementaryTypeName","src":"11097:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":515,"mutability":"mutable","name":"creationCode","nameLocation":"11133:12:0","nodeType":"VariableDeclaration","scope":574,"src":"11120:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":514,"name":"bytes","nodeType":"ElementaryTypeName","src":"11120:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11087:64:0"},"returnParameters":{"id":519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":518,"mutability":"mutable","name":"newContract","nameLocation":"11191:11:0","nodeType":"VariableDeclaration","scope":574,"src":"11178:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":517,"name":"bytes","nodeType":"ElementaryTypeName","src":"11178:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11177:26:0"},"scope":575,"src":"11064:714:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":576,"src":"1281:10499:0","usedErrors":[980,985,988,991,994,997,1000,1003,1006],"usedEvents":[876,1033,1044]}],"src":"39:11742:0"},"id":0},"@erc725/smart-contracts/contracts/ERC725Y.sol":{"ast":{"absolutePath":"@erc725/smart-contracts/contracts/ERC725Y.sol","exportedSymbols":{"ERC165":[5706],"ERC725Y":[610],"ERC725YCore":[842],"OwnableUnset":[971]},"id":611,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":577,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"39:23:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165.sol","id":579,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":611,"sourceUnit":5707,"src":"75:78:1","symbolAliases":[{"foreign":{"id":578,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5706,"src":"83:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol","file":"./custom/OwnableUnset.sol","id":581,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":611,"sourceUnit":972,"src":"154:55:1","symbolAliases":[{"foreign":{"id":580,"name":"OwnableUnset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"162:12:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/ERC725YCore.sol","file":"./ERC725YCore.sol","id":583,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":611,"sourceUnit":843,"src":"210:46:1","symbolAliases":[{"foreign":{"id":582,"name":"ERC725YCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"218:11:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":585,"name":"ERC725YCore","nameLocations":["672:11:1"],"nodeType":"IdentifierPath","referencedDeclaration":842,"src":"672:11:1"},"id":586,"nodeType":"InheritanceSpecifier","src":"672:11:1"}],"canonicalName":"ERC725Y","contractDependencies":[],"contractKind":"contract","documentation":{"id":584,"nodeType":"StructuredDocumentation","src":"258:393:1","text":" @title Deployable implementation with `constructor` of ERC725Y, a generic data key/value store.\n @author Fabian Vogelsteller <fabian@lukso.network>\n @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage."},"fullyImplemented":true,"id":610,"linearizedBaseContracts":[610,842,1129,5706,5912,971],"name":"ERC725Y","nameLocation":"661:7:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":608,"nodeType":"Block","src":"1098:174:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":593,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"1129:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1153:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1145:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":594,"name":"address","nodeType":"ElementaryTypeName","src":"1145:7:1","typeDescriptions":{}}},"id":597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1145:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1129:26:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1169:40:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":592,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1108:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1108:111:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":601,"nodeType":"ExpressionStatement","src":"1108:111:1"},{"expression":{"arguments":[{"id":605,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"1252:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":602,"name":"OwnableUnset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"1229:12:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_OwnableUnset_$971_$","typeString":"type(contract OwnableUnset)"}},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1242:9:1","memberName":"_setOwner","nodeType":"MemberAccess","referencedDeclaration":970,"src":"1229:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1229:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"ExpressionStatement","src":"1229:36:1"}]},"documentation":{"id":587,"nodeType":"StructuredDocumentation","src":"690:361:1","text":" @notice Deploying an ERC725Y smart contract and setting address `initialOwner` as the contract owner.\n @dev Deploy a new ERC725Y contract with the provided `initialOwner` as the contract {owner}.\n @param initialOwner the owner of the contract.\n @custom:requirements\n - `initialOwner` CANNOT be the zero address."},"id":609,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":589,"mutability":"mutable","name":"initialOwner","nameLocation":"1076:12:1","nodeType":"VariableDeclaration","scope":609,"src":"1068:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":588,"name":"address","nodeType":"ElementaryTypeName","src":"1068:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1067:22:1"},"returnParameters":{"id":591,"nodeType":"ParameterList","parameters":[],"src":"1098:0:1"},"scope":610,"src":"1056:216:1","stateMutability":"payable","virtual":false,"visibility":"public"}],"scope":611,"src":"652:622:1","usedErrors":[1009,1012,1015],"usedEvents":[876,1092]}],"src":"39:1236:1"},"id":1},"@erc725/smart-contracts/contracts/ERC725YCore.sol":{"ast":{"absolutePath":"@erc725/smart-contracts/contracts/ERC725YCore.sol","exportedSymbols":{"ERC165":[5706],"ERC725X_ContractDeploymentFailed":[997],"ERC725X_CreateOperationsRequireEmptyRecipientAddress":[994],"ERC725X_ExecuteParametersEmptyArray":[1006],"ERC725X_ExecuteParametersLengthMismatch":[1003],"ERC725X_InsufficientBalance":[980],"ERC725X_MsgValueDisallowedInDelegateCall":[991],"ERC725X_MsgValueDisallowedInStaticCall":[988],"ERC725X_NoContractBytecodeProvided":[1000],"ERC725X_UnknownOperationType":[985],"ERC725YCore":[842],"ERC725Y_DataKeysValuesEmptyArray":[1012],"ERC725Y_DataKeysValuesLengthMismatch":[1009],"ERC725Y_MsgValueDisallowed":[1015],"IERC165":[5912],"IERC725Y":[1129],"OwnableUnset":[971],"_INTERFACEID_ERC725Y":[850]},"id":843,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":612,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"39:23:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":614,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":843,"sourceUnit":5913,"src":"78:80:2","symbolAliases":[{"foreign":{"id":613,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"86:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol","file":"./interfaces/IERC725Y.sol","id":616,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":843,"sourceUnit":1130,"src":"159:51:2","symbolAliases":[{"foreign":{"id":615,"name":"IERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"167:8:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165.sol","id":618,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":843,"sourceUnit":5707,"src":"223:78:2","symbolAliases":[{"foreign":{"id":617,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5706,"src":"231:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol","file":"./custom/OwnableUnset.sol","id":620,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":843,"sourceUnit":972,"src":"302:55:2","symbolAliases":[{"foreign":{"id":619,"name":"OwnableUnset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"310:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/constants.sol","file":"./constants.sol","id":622,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":843,"sourceUnit":866,"src":"372:53:2","symbolAliases":[{"foreign":{"id":621,"name":"_INTERFACEID_ERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"380:20:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/errors.sol","file":"./errors.sol","id":623,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":843,"sourceUnit":1016,"src":"427:22:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":625,"name":"OwnableUnset","nameLocations":["866:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":971,"src":"866:12:2"},"id":626,"nodeType":"InheritanceSpecifier","src":"866:12:2"},{"baseName":{"id":627,"name":"ERC165","nameLocations":["880:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":5706,"src":"880:6:2"},"id":628,"nodeType":"InheritanceSpecifier","src":"880:6:2"},{"baseName":{"id":629,"name":"IERC725Y","nameLocations":["888:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":1129,"src":"888:8:2"},"id":630,"nodeType":"InheritanceSpecifier","src":"888:8:2"}],"canonicalName":"ERC725YCore","contractDependencies":[],"contractKind":"contract","documentation":{"id":624,"nodeType":"StructuredDocumentation","src":"451:381:2","text":" @title Core implementation of ERC725Y sub-standard, a general data key/value store.\n @author Fabian Vogelsteller <fabian@lukso.network>\n @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage."},"fullyImplemented":true,"id":842,"linearizedBaseContracts":[842,1129,5706,5912,971],"name":"ERC725YCore","nameLocation":"851:11:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":631,"nodeType":"StructuredDocumentation","src":"903:77:2","text":" @dev Map `bytes32` data keys to their `bytes` data values."},"id":635,"mutability":"mutable","name":"_store","nameLocation":"1020:6:2","nodeType":"VariableDeclaration","scope":842,"src":"985:41:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"typeName":{"id":634,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":632,"name":"bytes32","nodeType":"ElementaryTypeName","src":"993:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"985:25:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":633,"name":"bytes","nodeType":"ElementaryTypeName","src":"1004:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"visibility":"internal"},{"baseFunctions":[1100],"body":{"id":650,"nodeType":"Block","src":"1187:46:2","statements":[{"expression":{"id":648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":644,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"1197:9:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":646,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"1218:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":645,"name":"_getData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"1209:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) view returns (bytes memory)"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1209:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1197:29:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":649,"nodeType":"ExpressionStatement","src":"1197:29:2"}]},"documentation":{"id":636,"nodeType":"StructuredDocumentation","src":"1033:39:2","text":" @inheritdoc IERC725Y"},"functionSelector":"54f6127f","id":651,"implemented":true,"kind":"function","modifiers":[],"name":"getData","nameLocation":"1086:7:2","nodeType":"FunctionDefinition","overrides":{"id":640,"nodeType":"OverrideSpecifier","overrides":[],"src":"1145:8:2"},"parameters":{"id":639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":638,"mutability":"mutable","name":"dataKey","nameLocation":"1111:7:2","nodeType":"VariableDeclaration","scope":651,"src":"1103:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":637,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1103:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1093:31:2"},"returnParameters":{"id":643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"mutability":"mutable","name":"dataValue","nameLocation":"1176:9:2","nodeType":"VariableDeclaration","scope":651,"src":"1163:22:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":641,"name":"bytes","nodeType":"ElementaryTypeName","src":"1163:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1162:24:2"},"scope":842,"src":"1077:156:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1110],"body":{"id":697,"nodeType":"Block","src":"1411:330:2","statements":[{"expression":{"id":669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":662,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"1421:10:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":666,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"1446:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1455:6:2","memberName":"length","nodeType":"MemberAccess","src":"1446:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1434:11:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":663,"name":"bytes","nodeType":"ElementaryTypeName","src":"1438:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":664,"nodeType":"ArrayTypeName","src":"1438:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1434:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"1421:41:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":670,"nodeType":"ExpressionStatement","src":"1421:41:2"},{"body":{"id":693,"nodeType":"Block","src":"1516:191:2","statements":[{"expression":{"id":687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":679,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"1530:10:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":681,"indexExpression":{"id":680,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"1541:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1530:13:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":683,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"1555:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":685,"indexExpression":{"id":684,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"1564:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1555:11:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":682,"name":"_getData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"1546:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) view returns (bytes memory)"}},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1546:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1530:37:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":688,"nodeType":"ExpressionStatement","src":"1530:37:2"},{"id":692,"nodeType":"UncheckedBlock","src":"1651:46:2","statements":[{"expression":{"id":690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"1679:3:2","subExpression":{"id":689,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"1681:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":691,"nodeType":"ExpressionStatement","src":"1679:3:2"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":675,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"1493:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":676,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"1497:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1506:6:2","memberName":"length","nodeType":"MemberAccess","src":"1497:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1493:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":694,"initializationExpression":{"assignments":[672],"declarations":[{"constant":false,"id":672,"mutability":"mutable","name":"i","nameLocation":"1486:1:2","nodeType":"VariableDeclaration","scope":694,"src":"1478:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":671,"name":"uint256","nodeType":"ElementaryTypeName","src":"1478:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":674,"initialValue":{"hexValue":"30","id":673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1490:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1478:13:2"},"nodeType":"ForStatement","src":"1473:234:2"},{"expression":{"id":695,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"1724:10:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"functionReturnParameters":661,"id":696,"nodeType":"Return","src":"1717:17:2"}]},"documentation":{"id":652,"nodeType":"StructuredDocumentation","src":"1239:39:2","text":" @inheritdoc IERC725Y"},"functionSelector":"dedff9c6","id":698,"implemented":true,"kind":"function","modifiers":[],"name":"getDataBatch","nameLocation":"1292:12:2","nodeType":"FunctionDefinition","overrides":{"id":657,"nodeType":"OverrideSpecifier","overrides":[],"src":"1366:8:2"},"parameters":{"id":656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":655,"mutability":"mutable","name":"dataKeys","nameLocation":"1331:8:2","nodeType":"VariableDeclaration","scope":698,"src":"1314:25:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":653,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1314:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":654,"nodeType":"ArrayTypeName","src":"1314:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"1304:41:2"},"returnParameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":660,"mutability":"mutable","name":"dataValues","nameLocation":"1399:10:2","nodeType":"VariableDeclaration","scope":698,"src":"1384:25:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":658,"name":"bytes","nodeType":"ElementaryTypeName","src":"1384:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":659,"nodeType":"ArrayTypeName","src":"1384:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"1383:27:2"},"scope":842,"src":"1283:458:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1118],"body":{"id":722,"nodeType":"Block","src":"2328:110:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":709,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2342:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2346:5:2","memberName":"value","nodeType":"MemberAccess","src":"2342:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2355:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2342:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":716,"nodeType":"IfStatement","src":"2338:55:2","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":713,"name":"ERC725Y_MsgValueDisallowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"2365:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2365:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":715,"nodeType":"RevertStatement","src":"2358:35:2"}},{"expression":{"arguments":[{"id":718,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"2412:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":719,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"2421:9:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":717,"name":"_setData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"2403:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2403:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":721,"nodeType":"ExpressionStatement","src":"2403:28:2"}]},"documentation":{"id":699,"nodeType":"StructuredDocumentation","src":"1747:454:2","text":" @inheritdoc IERC725Y\n @custom:requirements\n - SHOULD only be callable by the {owner}.\n @custom:warning\n **Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value\n (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\n @custom:events {DataChanged} event."},"functionSelector":"7f23690c","id":723,"implemented":true,"kind":"function","modifiers":[{"id":707,"kind":"modifierInvocation","modifierName":{"id":706,"name":"onlyOwner","nameLocations":["2318:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":893,"src":"2318:9:2"},"nodeType":"ModifierInvocation","src":"2318:9:2"}],"name":"setData","nameLocation":"2215:7:2","nodeType":"FunctionDefinition","overrides":{"id":705,"nodeType":"OverrideSpecifier","overrides":[],"src":"2309:8:2"},"parameters":{"id":704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":701,"mutability":"mutable","name":"dataKey","nameLocation":"2240:7:2","nodeType":"VariableDeclaration","scope":723,"src":"2232:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":700,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2232:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":703,"mutability":"mutable","name":"dataValue","nameLocation":"2270:9:2","nodeType":"VariableDeclaration","scope":723,"src":"2257:22:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":702,"name":"bytes","nodeType":"ElementaryTypeName","src":"2257:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2222:63:2"},"returnParameters":{"id":708,"nodeType":"ParameterList","parameters":[],"src":"2328:0:2"},"scope":842,"src":"2206:232:2","stateMutability":"payable","virtual":true,"visibility":"public"},{"baseFunctions":[1128],"body":{"id":786,"nodeType":"Block","src":"3096:623:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":736,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3194:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3198:5:2","memberName":"value","nodeType":"MemberAccess","src":"3194:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3207:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3194:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"documentation":"@dev do not allow to send value by default when setting data in ERC725Y","id":743,"nodeType":"IfStatement","src":"3190:55:2","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":740,"name":"ERC725Y_MsgValueDisallowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"3217:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3217:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":742,"nodeType":"RevertStatement","src":"3210:35:2"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":744,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"3260:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3269:6:2","memberName":"length","nodeType":"MemberAccess","src":"3260:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":746,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"3279:10:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3290:6:2","memberName":"length","nodeType":"MemberAccess","src":"3279:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3260:36:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":753,"nodeType":"IfStatement","src":"3256:112:2","trueBody":{"id":752,"nodeType":"Block","src":"3298:70:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":749,"name":"ERC725Y_DataKeysValuesLengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"3319:36:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3319:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":751,"nodeType":"RevertStatement","src":"3312:45:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":754,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"3382:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3391:6:2","memberName":"length","nodeType":"MemberAccess","src":"3382:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3401:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3382:20:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":762,"nodeType":"IfStatement","src":"3378:92:2","trueBody":{"id":761,"nodeType":"Block","src":"3404:66:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":758,"name":"ERC725Y_DataKeysValuesEmptyArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"3425:32:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3425:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":760,"nodeType":"RevertStatement","src":"3418:41:2"}]}},{"body":{"id":784,"nodeType":"Block","src":"3523:190:2","statements":[{"expression":{"arguments":[{"baseExpression":{"id":772,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"3546:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":774,"indexExpression":{"id":773,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"3555:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3546:11:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":775,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"3559:10:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":777,"indexExpression":{"id":776,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"3570:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3559:13:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":771,"name":"_setData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"3537:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3537:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":779,"nodeType":"ExpressionStatement","src":"3537:36:2"},{"id":783,"nodeType":"UncheckedBlock","src":"3657:46:2","statements":[{"expression":{"id":781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"3685:3:2","subExpression":{"id":780,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"3687:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":782,"nodeType":"ExpressionStatement","src":"3685:3:2"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":767,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"3500:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":768,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"3504:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3513:6:2","memberName":"length","nodeType":"MemberAccess","src":"3504:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3500:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":785,"initializationExpression":{"assignments":[764],"declarations":[{"constant":false,"id":764,"mutability":"mutable","name":"i","nameLocation":"3493:1:2","nodeType":"VariableDeclaration","scope":785,"src":"3485:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":763,"name":"uint256","nodeType":"ElementaryTypeName","src":"3485:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":766,"initialValue":{"hexValue":"30","id":765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3497:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3485:13:2"},"nodeType":"ForStatement","src":"3480:233:2"}]},"documentation":{"id":724,"nodeType":"StructuredDocumentation","src":"2444:507:2","text":" @inheritdoc IERC725Y\n @custom:requirements\n - SHOULD only be callable by the {owner} of the contract.\n @custom:warning\n **Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value\n (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\n @custom:events {DataChanged} event **for each data key/value pair set**."},"functionSelector":"97902421","id":787,"implemented":true,"kind":"function","modifiers":[{"id":734,"kind":"modifierInvocation","modifierName":{"id":733,"name":"onlyOwner","nameLocations":["3086:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":893,"src":"3086:9:2"},"nodeType":"ModifierInvocation","src":"3086:9:2"}],"name":"setDataBatch","nameLocation":"2965:12:2","nodeType":"FunctionDefinition","overrides":{"id":732,"nodeType":"OverrideSpecifier","overrides":[],"src":"3077:8:2"},"parameters":{"id":731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":727,"mutability":"mutable","name":"dataKeys","nameLocation":"3004:8:2","nodeType":"VariableDeclaration","scope":787,"src":"2987:25:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":725,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2987:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":726,"nodeType":"ArrayTypeName","src":"2987:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":730,"mutability":"mutable","name":"dataValues","nameLocation":"3037:10:2","nodeType":"VariableDeclaration","scope":787,"src":"3022:25:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":728,"name":"bytes","nodeType":"ElementaryTypeName","src":"3022:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":729,"nodeType":"ArrayTypeName","src":"3022:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"2977:76:2"},"returnParameters":{"id":735,"nodeType":"ParameterList","parameters":[],"src":"3096:0:2"},"scope":842,"src":"2956:763:2","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":799,"nodeType":"Block","src":"4319:39:2","statements":[{"expression":{"baseExpression":{"id":795,"name":"_store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"4336:6:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":797,"indexExpression":{"id":796,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"4343:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4336:15:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"functionReturnParameters":794,"id":798,"nodeType":"Return","src":"4329:22:2"}]},"documentation":{"id":788,"nodeType":"StructuredDocumentation","src":"3725:485:2","text":" @dev Read the value stored under a specific `dataKey` inside the underlying ERC725Y storage,\n  represented as a mapping of `bytes32` data keys mapped to their `bytes` data values.\n ```solidity\n mapping(bytes32 => bytes) _store\n ```\n @param dataKey A bytes32 data key to read the associated `bytes` value from the store.\n @return dataValue The `bytes` value associated with the given `dataKey` in the ERC725Y storage."},"id":800,"implemented":true,"kind":"function","modifiers":[],"name":"_getData","nameLocation":"4224:8:2","nodeType":"FunctionDefinition","parameters":{"id":791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":790,"mutability":"mutable","name":"dataKey","nameLocation":"4250:7:2","nodeType":"VariableDeclaration","scope":800,"src":"4242:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":789,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4242:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4232:31:2"},"returnParameters":{"id":794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":793,"mutability":"mutable","name":"dataValue","nameLocation":"4308:9:2","nodeType":"VariableDeclaration","scope":800,"src":"4295:22:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":792,"name":"bytes","nodeType":"ElementaryTypeName","src":"4295:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4294:24:2"},"scope":842,"src":"4215:143:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":819,"nodeType":"Block","src":"5010:90:2","statements":[{"expression":{"id":812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":808,"name":"_store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"5020:6:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":810,"indexExpression":{"id":809,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"5027:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5020:15:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":811,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"5038:9:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"5020:27:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":813,"nodeType":"ExpressionStatement","src":"5020:27:2"},{"eventCall":{"arguments":[{"id":815,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"5074:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":816,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"5083:9:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":814,"name":"DataChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"5062:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5062:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":818,"nodeType":"EmitStatement","src":"5057:36:2"}]},"documentation":{"id":801,"nodeType":"StructuredDocumentation","src":"4364:543:2","text":" @dev Write a `dataValue` to the underlying ERC725Y storage, represented as a mapping of\n `bytes32` data keys mapped to their `bytes` data values.\n ```solidity\n mapping(bytes32 => bytes) _store\n ```\n @param dataKey A bytes32 data key to write the associated `bytes` value to the store.\n @param dataValue The `bytes` value to associate with the given `dataKey` in the ERC725Y storage.\n @custom:events {DataChanged} event emitted after a successful `setData` call."},"id":820,"implemented":true,"kind":"function","modifiers":[],"name":"_setData","nameLocation":"4921:8:2","nodeType":"FunctionDefinition","parameters":{"id":806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":803,"mutability":"mutable","name":"dataKey","nameLocation":"4947:7:2","nodeType":"VariableDeclaration","scope":820,"src":"4939:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":802,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4939:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":805,"mutability":"mutable","name":"dataValue","nameLocation":"4977:9:2","nodeType":"VariableDeclaration","scope":820,"src":"4964:22:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":804,"name":"bytes","nodeType":"ElementaryTypeName","src":"4964:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4929:63:2"},"returnParameters":{"id":807,"nodeType":"ParameterList","parameters":[],"src":"5010:0:2"},"scope":842,"src":"4912:188:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[5705,5911],"body":{"id":840,"nodeType":"Block","src":"5270:123:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":831,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"5299:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":832,"name":"_INTERFACEID_ERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"5314:20:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"5299:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":836,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"5374:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":834,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"5350:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC725YCore_$842_$","typeString":"type(contract super ERC725YCore)"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5356:17:2","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":5705,"src":"5350:23:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5350:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5299:87:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":830,"id":839,"nodeType":"Return","src":"5280:106:2"}]},"documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"5106:37:2","text":" @inheritdoc ERC165"},"functionSelector":"01ffc9a7","id":841,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"5157:17:2","nodeType":"FunctionDefinition","overrides":{"id":827,"nodeType":"OverrideSpecifier","overrides":[{"id":825,"name":"IERC165","nameLocations":["5238:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":5912,"src":"5238:7:2"},{"id":826,"name":"ERC165","nameLocations":["5247:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":5706,"src":"5247:6:2"}],"src":"5229:25:2"},"parameters":{"id":824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":823,"mutability":"mutable","name":"interfaceId","nameLocation":"5191:11:2","nodeType":"VariableDeclaration","scope":841,"src":"5184:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":822,"name":"bytes4","nodeType":"ElementaryTypeName","src":"5184:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"5174:34:2"},"returnParameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":841,"src":"5264:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":828,"name":"bool","nodeType":"ElementaryTypeName","src":"5264:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5263:6:2"},"scope":842,"src":"5148:245:2","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":843,"src":"833:4562:2","usedErrors":[1009,1012,1015],"usedEvents":[876,1092]}],"src":"39:5357:2"},"id":2},"@erc725/smart-contracts/contracts/constants.sol":{"ast":{"absolutePath":"@erc725/smart-contracts/contracts/constants.sol","exportedSymbols":{"OPERATION_0_CALL":[853],"OPERATION_1_CREATE":[856],"OPERATION_2_CREATE2":[859],"OPERATION_3_STATICCALL":[862],"OPERATION_4_DELEGATECALL":[865],"_INTERFACEID_ERC725X":[847],"_INTERFACEID_ERC725Y":[850]},"id":866,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":844,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"39:23:3"},{"constant":true,"id":847,"mutability":"constant","name":"_INTERFACEID_ERC725X","nameLocation":"104:20:3","nodeType":"VariableDeclaration","scope":866,"src":"88:49:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":845,"name":"bytes4","nodeType":"ElementaryTypeName","src":"88:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783735343561636163","id":846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"127:10:3","typeDescriptions":{"typeIdentifier":"t_rational_1967500460_by_1","typeString":"int_const 1967500460"},"value":"0x7545acac"},"visibility":"internal"},{"constant":true,"id":850,"mutability":"constant","name":"_INTERFACEID_ERC725Y","nameLocation":"155:20:3","nodeType":"VariableDeclaration","scope":866,"src":"139:49:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":848,"name":"bytes4","nodeType":"ElementaryTypeName","src":"139:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783632396161363934","id":849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"178:10:3","typeDescriptions":{"typeIdentifier":"t_rational_1654302356_by_1","typeString":"int_const 1654302356"},"value":"0x629aa694"},"visibility":"internal"},{"constant":true,"id":853,"mutability":"constant","name":"OPERATION_0_CALL","nameLocation":"235:16:3","nodeType":"VariableDeclaration","scope":866,"src":"218:37:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":851,"name":"uint256","nodeType":"ElementaryTypeName","src":"218:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"254:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"constant":true,"id":856,"mutability":"constant","name":"OPERATION_1_CREATE","nameLocation":"274:18:3","nodeType":"VariableDeclaration","scope":866,"src":"257:39:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":854,"name":"uint256","nodeType":"ElementaryTypeName","src":"257:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"295:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":true,"id":859,"mutability":"constant","name":"OPERATION_2_CREATE2","nameLocation":"315:19:3","nodeType":"VariableDeclaration","scope":866,"src":"298:40:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":857,"name":"uint256","nodeType":"ElementaryTypeName","src":"298:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"337:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"internal"},{"constant":true,"id":862,"mutability":"constant","name":"OPERATION_3_STATICCALL","nameLocation":"357:22:3","nodeType":"VariableDeclaration","scope":866,"src":"340:43:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":860,"name":"uint256","nodeType":"ElementaryTypeName","src":"340:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33","id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"382:1:3","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"internal"},{"constant":true,"id":865,"mutability":"constant","name":"OPERATION_4_DELEGATECALL","nameLocation":"402:24:3","nodeType":"VariableDeclaration","scope":866,"src":"385:45:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":863,"name":"uint256","nodeType":"ElementaryTypeName","src":"385:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"34","id":864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"429:1:3","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"visibility":"internal"}],"src":"39:393:3"},"id":3},"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol":{"ast":{"absolutePath":"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol","exportedSymbols":{"OwnableUnset":[971]},"id":972,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":867,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:4"},{"abstract":true,"baseContracts":[],"canonicalName":"OwnableUnset","contractDependencies":[],"contractKind":"contract","documentation":{"id":868,"nodeType":"StructuredDocumentation","src":"57:317:4","text":" @title OwnableUnset\n @dev modified version of OpenZeppelin implementation, where:\n - _setOwner(address) function is internal, so this function can be used in constructor\n of contracts implementation (instead of using transferOwnership(address)\n - the contract does not inherit from Context contract"},"fullyImplemented":true,"id":971,"linearizedBaseContracts":[971],"name":"OwnableUnset","nameLocation":"393:12:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":870,"mutability":"mutable","name":"_owner","nameLocation":"428:6:4","nodeType":"VariableDeclaration","scope":971,"src":"412:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"412:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":876,"name":"OwnershipTransferred","nameLocation":"447:20:4","nodeType":"EventDefinition","parameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":872,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"493:13:4","nodeType":"VariableDeclaration","scope":876,"src":"477:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"477:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":874,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"532:8:4","nodeType":"VariableDeclaration","scope":876,"src":"516:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":873,"name":"address","nodeType":"ElementaryTypeName","src":"516:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"467:79:4"},"src":"441:106:4"},{"body":{"id":884,"nodeType":"Block","src":"678:30:4","statements":[{"expression":{"id":882,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"695:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":881,"id":883,"nodeType":"Return","src":"688:13:4"}]},"documentation":{"id":877,"nodeType":"StructuredDocumentation","src":"553:65:4","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":885,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"632:5:4","nodeType":"FunctionDefinition","parameters":{"id":878,"nodeType":"ParameterList","parameters":[],"src":"637:2:4"},"returnParameters":{"id":881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":885,"src":"669:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":879,"name":"address","nodeType":"ElementaryTypeName","src":"669:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"668:9:4"},"scope":971,"src":"623:85:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":892,"nodeType":"Block","src":"817:41:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":888,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"827:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"827:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":890,"nodeType":"ExpressionStatement","src":"827:13:4"},{"id":891,"nodeType":"PlaceholderStatement","src":"850:1:4"}]},"documentation":{"id":886,"nodeType":"StructuredDocumentation","src":"714:77:4","text":" @dev Throws if called by any account other than the owner."},"id":893,"name":"onlyOwner","nameLocation":"805:9:4","nodeType":"ModifierDefinition","parameters":{"id":887,"nodeType":"ParameterList","parameters":[],"src":"814:2:4"},"src":"796:62:4","virtual":false,"visibility":"internal"},{"body":{"id":906,"nodeType":"Block","src":"1254:38:4","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1282:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1274:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":900,"name":"address","nodeType":"ElementaryTypeName","src":"1274:7:4","typeDescriptions":{}}},"id":903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1274:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":899,"name":"_setOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"1264:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1264:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":905,"nodeType":"ExpressionStatement","src":"1264:21:4"}]},"documentation":{"id":894,"nodeType":"StructuredDocumentation","src":"864:331:4","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":907,"implemented":true,"kind":"function","modifiers":[{"id":897,"kind":"modifierInvocation","modifierName":{"id":896,"name":"onlyOwner","nameLocations":["1244:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":893,"src":"1244:9:4"},"nodeType":"ModifierInvocation","src":"1244:9:4"}],"name":"renounceOwnership","nameLocation":"1209:17:4","nodeType":"FunctionDefinition","parameters":{"id":895,"nodeType":"ParameterList","parameters":[],"src":"1226:2:4"},"returnParameters":{"id":898,"nodeType":"ParameterList","parameters":[],"src":"1254:0:4"},"scope":971,"src":"1200:92:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":929,"nodeType":"Block","src":"1511:153:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":916,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"1542:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1562:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1554:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":917,"name":"address","nodeType":"ElementaryTypeName","src":"1554:7:4","typeDescriptions":{}}},"id":920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1554:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1542:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1578:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":915,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1521:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1521:107:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":924,"nodeType":"ExpressionStatement","src":"1521:107:4"},{"expression":{"arguments":[{"id":926,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"1648:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":925,"name":"_setOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"1638:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1638:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":928,"nodeType":"ExpressionStatement","src":"1638:19:4"}]},"documentation":{"id":908,"nodeType":"StructuredDocumentation","src":"1298:138:4","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":930,"implemented":true,"kind":"function","modifiers":[{"id":913,"kind":"modifierInvocation","modifierName":{"id":912,"name":"onlyOwner","nameLocations":["1501:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":893,"src":"1501:9:4"},"nodeType":"ModifierInvocation","src":"1501:9:4"}],"name":"transferOwnership","nameLocation":"1450:17:4","nodeType":"FunctionDefinition","parameters":{"id":911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":910,"mutability":"mutable","name":"newOwner","nameLocation":"1476:8:4","nodeType":"VariableDeclaration","scope":930,"src":"1468:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":909,"name":"address","nodeType":"ElementaryTypeName","src":"1468:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1467:18:4"},"returnParameters":{"id":914,"nodeType":"ParameterList","parameters":[],"src":"1511:0:4"},"scope":971,"src":"1441:223:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":943,"nodeType":"Block","src":"1782:83:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":935,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"1800:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1800:7:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":937,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1811:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1815:6:4","memberName":"sender","nodeType":"MemberAccess","src":"1811:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1800:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1823:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":934,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1792:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1792:66:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":942,"nodeType":"ExpressionStatement","src":"1792:66:4"}]},"documentation":{"id":931,"nodeType":"StructuredDocumentation","src":"1670:62:4","text":" @dev Throws if the sender is not the owner."},"id":944,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1746:11:4","nodeType":"FunctionDefinition","parameters":{"id":932,"nodeType":"ParameterList","parameters":[],"src":"1757:2:4"},"returnParameters":{"id":933,"nodeType":"ParameterList","parameters":[],"src":"1782:0:4"},"scope":971,"src":"1737:128:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":969,"nodeType":"Block","src":"2058:181:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":950,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"2072:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":951,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"2084:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2084:7:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2072:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":968,"nodeType":"IfStatement","src":"2068:165:4","trueBody":{"id":967,"nodeType":"Block","src":"2093:140:4","statements":[{"assignments":[955],"declarations":[{"constant":false,"id":955,"mutability":"mutable","name":"oldOwner","nameLocation":"2115:8:4","nodeType":"VariableDeclaration","scope":967,"src":"2107:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":954,"name":"address","nodeType":"ElementaryTypeName","src":"2107:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":957,"initialValue":{"id":956,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"2126:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2107:25:4"},{"expression":{"id":960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":958,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"2146:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":959,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"2155:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2146:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":961,"nodeType":"ExpressionStatement","src":"2146:17:4"},{"eventCall":{"arguments":[{"id":963,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"2203:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":964,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"2213:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":962,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"2182:20:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2182:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":966,"nodeType":"EmitStatement","src":"2177:45:4"}]}}]},"documentation":{"id":945,"nodeType":"StructuredDocumentation","src":"1871:128:4","text":" @dev Changes the owner if `newOwner` and oldOwner are different\n This pattern is useful in inheritance."},"id":970,"implemented":true,"kind":"function","modifiers":[],"name":"_setOwner","nameLocation":"2013:9:4","nodeType":"FunctionDefinition","parameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"newOwner","nameLocation":"2031:8:4","nodeType":"VariableDeclaration","scope":970,"src":"2023:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":946,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:18:4"},"returnParameters":{"id":949,"nodeType":"ParameterList","parameters":[],"src":"2058:0:4"},"scope":971,"src":"2004:235:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":972,"src":"375:1866:4","usedErrors":[],"usedEvents":[876]}],"src":"32:2210:4"},"id":4},"@erc725/smart-contracts/contracts/errors.sol":{"ast":{"absolutePath":"@erc725/smart-contracts/contracts/errors.sol","exportedSymbols":{"ERC725X_ContractDeploymentFailed":[997],"ERC725X_CreateOperationsRequireEmptyRecipientAddress":[994],"ERC725X_ExecuteParametersEmptyArray":[1006],"ERC725X_ExecuteParametersLengthMismatch":[1003],"ERC725X_InsufficientBalance":[980],"ERC725X_MsgValueDisallowedInDelegateCall":[991],"ERC725X_MsgValueDisallowedInStaticCall":[988],"ERC725X_NoContractBytecodeProvided":[1000],"ERC725X_UnknownOperationType":[985],"ERC725Y_DataKeysValuesEmptyArray":[1012],"ERC725Y_DataKeysValuesLengthMismatch":[1009],"ERC725Y_MsgValueDisallowed":[1015]},"id":1016,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":973,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"39:23:5"},{"documentation":{"id":974,"nodeType":"StructuredDocumentation","src":"64:336:5","text":" @dev Reverts when trying to send more native tokens `value` than available in current `balance`.\n @param balance The balance of native tokens of the ERC725X smart contract.\n @param value The amount of native tokens sent via `ERC725X.execute(...)`/`ERC725X.executeBatch(...)` that is greater than the contract's `balance`."},"errorSelector":"0df9a8f8","id":980,"name":"ERC725X_InsufficientBalance","nameLocation":"407:27:5","nodeType":"ErrorDefinition","parameters":{"id":979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":976,"mutability":"mutable","name":"balance","nameLocation":"443:7:5","nodeType":"VariableDeclaration","scope":980,"src":"435:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":975,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":978,"mutability":"mutable","name":"value","nameLocation":"460:5:5","nodeType":"VariableDeclaration","scope":980,"src":"452:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":977,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"434:32:5"},"src":"401:66:5"},{"documentation":{"id":981,"nodeType":"StructuredDocumentation","src":"469:314:5","text":" @dev Reverts when the `operationTypeProvided` is none of the default operation types available.\n (CALL = 0; CREATE = 1; CREATE2 = 2; STATICCALL = 3; DELEGATECALL = 4)\n @param operationTypeProvided The unrecognised operation type number provided to `ERC725X.execute(...)`/`ERC725X.executeBatch(...)`."},"errorSelector":"7583b3bc","id":985,"name":"ERC725X_UnknownOperationType","nameLocation":"790:28:5","nodeType":"ErrorDefinition","parameters":{"id":984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":983,"mutability":"mutable","name":"operationTypeProvided","nameLocation":"827:21:5","nodeType":"VariableDeclaration","scope":985,"src":"819:29:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":982,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:31:5"},"src":"784:66:5"},{"documentation":{"id":986,"nodeType":"StructuredDocumentation","src":"852:282:5","text":" @dev Reverts when trying to send native tokens (`value` / `values[]` parameter of {execute} or {executeBatch} functions) while making a `staticcall` (`operationType == 3`).\n Sending native tokens via `staticcall` is not allowed because it is a state changing operation."},"errorSelector":"72f2bc6a","id":988,"name":"ERC725X_MsgValueDisallowedInStaticCall","nameLocation":"1141:38:5","nodeType":"ErrorDefinition","parameters":{"id":987,"nodeType":"ParameterList","parameters":[],"src":"1179:2:5"},"src":"1135:47:5"},{"documentation":{"id":989,"nodeType":"StructuredDocumentation","src":"1184:277:5","text":" @dev Reverts when trying to send native tokens (`value` / `values[]` parameter of {execute} or {executeBatch} functions) while making a `delegatecall` (`operationType == 4`).\n Sending native tokens via `staticcall` is not allowed because `msg.value` is persisting."},"errorSelector":"5ac83135","id":991,"name":"ERC725X_MsgValueDisallowedInDelegateCall","nameLocation":"1468:40:5","nodeType":"ErrorDefinition","parameters":{"id":990,"nodeType":"ParameterList","parameters":[],"src":"1508:2:5"},"src":"1462:49:5"},{"documentation":{"id":992,"nodeType":"StructuredDocumentation","src":"1513:246:5","text":" @dev Reverts when passing a `to` address that is not `address(0)` (= address zero) while deploying a contract via {execute} or {executeBatch} functions.\n This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`)."},"errorSelector":"3041824a","id":994,"name":"ERC725X_CreateOperationsRequireEmptyRecipientAddress","nameLocation":"1766:52:5","nodeType":"ErrorDefinition","parameters":{"id":993,"nodeType":"ParameterList","parameters":[],"src":"1818:2:5"},"src":"1760:61:5"},{"documentation":{"id":995,"nodeType":"StructuredDocumentation","src":"1823:181:5","text":" @dev Reverts when contract deployment failed via {execute} or {executeBatch} functions,\n This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`)."},"errorSelector":"0b07489b","id":997,"name":"ERC725X_ContractDeploymentFailed","nameLocation":"2011:32:5","nodeType":"ErrorDefinition","parameters":{"id":996,"nodeType":"ParameterList","parameters":[],"src":"2043:2:5"},"src":"2005:41:5"},{"documentation":{"id":998,"nodeType":"StructuredDocumentation","src":"2048:224:5","text":" @dev Reverts when no contract bytecode was provided as parameter when trying to deploy a contract via {execute} or {executeBatch}.\n This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`)."},"errorSelector":"b81cd8d9","id":1000,"name":"ERC725X_NoContractBytecodeProvided","nameLocation":"2279:34:5","nodeType":"ErrorDefinition","parameters":{"id":999,"nodeType":"ParameterList","parameters":[],"src":"2313:2:5"},"src":"2273:43:5"},{"documentation":{"id":1001,"nodeType":"StructuredDocumentation","src":"2318:208:5","text":" @dev Reverts when there is not the same number of elements in the `operationTypes`, `targets` addresses, `values`, and `datas`\n array parameters provided when calling the {executeBatch} function."},"errorSelector":"3ff55f4d","id":1003,"name":"ERC725X_ExecuteParametersLengthMismatch","nameLocation":"2533:39:5","nodeType":"ErrorDefinition","parameters":{"id":1002,"nodeType":"ParameterList","parameters":[],"src":"2572:2:5"},"src":"2527:48:5"},{"documentation":{"id":1004,"nodeType":"StructuredDocumentation","src":"2577:114:5","text":" @dev Reverts when one of the array parameter provided to the {executeBatch} function is an empty array."},"errorSelector":"e9ad2b5f","id":1006,"name":"ERC725X_ExecuteParametersEmptyArray","nameLocation":"2698:35:5","nodeType":"ErrorDefinition","parameters":{"id":1005,"nodeType":"ParameterList","parameters":[],"src":"2733:2:5"},"src":"2692:44:5"},{"documentation":{"id":1007,"nodeType":"StructuredDocumentation","src":"2738:175:5","text":" @dev Reverts when there is not the same number of elements in the `datakeys` and `dataValues`\n array parameters provided when calling the {setDataBatch} function."},"errorSelector":"3bcc8979","id":1009,"name":"ERC725Y_DataKeysValuesLengthMismatch","nameLocation":"2920:36:5","nodeType":"ErrorDefinition","parameters":{"id":1008,"nodeType":"ParameterList","parameters":[],"src":"2956:2:5"},"src":"2914:45:5"},{"documentation":{"id":1010,"nodeType":"StructuredDocumentation","src":"2961:110:5","text":" @dev Reverts when one of the array parameter provided to {setDataBatch} function is an empty array."},"errorSelector":"97da5f95","id":1012,"name":"ERC725Y_DataKeysValuesEmptyArray","nameLocation":"3078:32:5","nodeType":"ErrorDefinition","parameters":{"id":1011,"nodeType":"ParameterList","parameters":[],"src":"3110:2:5"},"src":"3072:41:5"},{"documentation":{"id":1013,"nodeType":"StructuredDocumentation","src":"3115:87:5","text":" @dev Reverts when sending value to the {setData} or {setDataBatch} function."},"errorSelector":"f36ba737","id":1015,"name":"ERC725Y_MsgValueDisallowed","nameLocation":"3209:26:5","nodeType":"ErrorDefinition","parameters":{"id":1014,"nodeType":"ParameterList","parameters":[],"src":"3235:2:5"},"src":"3203:35:5"}],"src":"39:3200:5"},"id":5},"@erc725/smart-contracts/contracts/interfaces/IERC725X.sol":{"ast":{"absolutePath":"@erc725/smart-contracts/contracts/interfaces/IERC725X.sol","exportedSymbols":{"IERC165":[5912],"IERC725X":[1078]},"id":1079,"license":"CC0-1.0","nodeType":"SourceUnit","nodes":[{"id":1017,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"36:23:6"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":1019,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1079,"sourceUnit":5913,"src":"75:80:6","symbolAliases":[{"foreign":{"id":1018,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"83:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1021,"name":"IERC165","nameLocations":["714:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":5912,"src":"714:7:6"},"id":1022,"nodeType":"InheritanceSpecifier","src":"714:7:6"}],"canonicalName":"IERC725X","contractDependencies":[],"contractKind":"interface","documentation":{"id":1020,"nodeType":"StructuredDocumentation","src":"157:534:6","text":" @title The interface for the ERC725X sub-standard, a generic executor.\n @dev ERC725X provides the ability to call arbitrary functions on any other smart contract (including itself).\n It allows to use different type of message calls to interact with addresses such as `call`, `staticcall` and `delegatecall`.\n It also allows to deploy and create new contracts via both the `create` and `create2` opcodes.\n This is the basis for a smart contract based account system, but could also be used as a proxy account system."},"fullyImplemented":false,"id":1078,"linearizedBaseContracts":[1078,5912],"name":"IERC725X","nameLocation":"702:8:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1023,"nodeType":"StructuredDocumentation","src":"728:628:6","text":" @notice Deployed new contract at address `contractAddress` and funded with `value` wei (deployed using opcode: `operationType`).\n @dev Emitted when a new contract was created and deployed.\n @param operationType The opcode used to deploy the contract (`CREATE` or `CREATE2`).\n @param contractAddress The created contract address.\n @param value The amount of native tokens (in Wei) sent to fund the created contract on deployment.\n @param salt The salt used to deterministically deploy the contract (`CREATE2` only). If `CREATE` opcode is used, the salt value will be `bytes32(0)`."},"eventSelector":"a1fb700aaee2ae4a2ff6f91ce7eba292f89c2f5488b8ec4c5c5c8150692595c3","id":1033,"name":"ContractCreated","nameLocation":"1367:15:6","nodeType":"EventDefinition","parameters":{"id":1032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1025,"indexed":true,"mutability":"mutable","name":"operationType","nameLocation":"1408:13:6","nodeType":"VariableDeclaration","scope":1033,"src":"1392:29:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1024,"name":"uint256","nodeType":"ElementaryTypeName","src":"1392:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1027,"indexed":true,"mutability":"mutable","name":"contractAddress","nameLocation":"1447:15:6","nodeType":"VariableDeclaration","scope":1033,"src":"1431:31:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1026,"name":"address","nodeType":"ElementaryTypeName","src":"1431:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1029,"indexed":true,"mutability":"mutable","name":"value","nameLocation":"1488:5:6","nodeType":"VariableDeclaration","scope":1033,"src":"1472:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1028,"name":"uint256","nodeType":"ElementaryTypeName","src":"1472:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1031,"indexed":false,"mutability":"mutable","name":"salt","nameLocation":"1511:4:6","nodeType":"VariableDeclaration","scope":1033,"src":"1503:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1030,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1503:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1382:139:6"},"src":"1361:161:6"},{"anonymous":false,"documentation":{"id":1034,"nodeType":"StructuredDocumentation","src":"1528:613:6","text":" @notice Called address `target` using `operationType` with `value` wei and `data`.\n @dev Emitted when calling an address `target` (EOA or contract) with `value`.\n @param operationType The low-level call opcode used to call the `target` address (`CALL`, `STATICALL` or `DELEGATECALL`).\n @param target The address to call. `target` will be unused if a contract is created (operation types 1 and 2).\n @param value The amount of native tokens transferred along the call (in Wei).\n @param selector The first 4 bytes (= function selector) of the data sent with the call."},"eventSelector":"4810874456b8e6487bd861375cf6abd8e1c8bb5858c8ce36a86a04dabfac199e","id":1044,"name":"Executed","nameLocation":"2152:8:6","nodeType":"EventDefinition","parameters":{"id":1043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1036,"indexed":true,"mutability":"mutable","name":"operationType","nameLocation":"2186:13:6","nodeType":"VariableDeclaration","scope":1044,"src":"2170:29:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1035,"name":"uint256","nodeType":"ElementaryTypeName","src":"2170:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1038,"indexed":true,"mutability":"mutable","name":"target","nameLocation":"2225:6:6","nodeType":"VariableDeclaration","scope":1044,"src":"2209:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1037,"name":"address","nodeType":"ElementaryTypeName","src":"2209:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1040,"indexed":true,"mutability":"mutable","name":"value","nameLocation":"2257:5:6","nodeType":"VariableDeclaration","scope":1044,"src":"2241:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1039,"name":"uint256","nodeType":"ElementaryTypeName","src":"2241:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1042,"indexed":false,"mutability":"mutable","name":"selector","nameLocation":"2279:8:6","nodeType":"VariableDeclaration","scope":1044,"src":"2272:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1041,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2272:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2160:133:6"},"src":"2146:148:6"},{"documentation":{"id":1045,"nodeType":"StructuredDocumentation","src":"2300:845:6","text":" @notice Calling address `target` using `operationType`, transferring `value` wei and data: `data`.\n @param operationType The operation type used: CALL = 0; CREATE = 1; CREATE2 = 2; STATICCALL = 3; DELEGATECALL = 4\n @param target The address of the EOA or smart contract.  (unused if a contract is created via operation type 1 or 2)\n @param value The amount of native tokens to transfer (in Wei)\n @param data The call data, or the creation bytecode of the contract to deploy if `operationType` is `1` or `2`.\n @dev Generic executor function to:\n - send native tokens to any address.\n - interact with any contract by passing an abi-encoded function call in the `data` parameter.\n - deploy a contract by providing its creation bytecode in the `data` parameter."},"functionSelector":"44c028fe","id":1058,"implemented":false,"kind":"function","modifiers":[],"name":"execute","nameLocation":"3159:7:6","nodeType":"FunctionDefinition","parameters":{"id":1054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1047,"mutability":"mutable","name":"operationType","nameLocation":"3184:13:6","nodeType":"VariableDeclaration","scope":1058,"src":"3176:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1046,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1049,"mutability":"mutable","name":"target","nameLocation":"3215:6:6","nodeType":"VariableDeclaration","scope":1058,"src":"3207:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1048,"name":"address","nodeType":"ElementaryTypeName","src":"3207:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1051,"mutability":"mutable","name":"value","nameLocation":"3239:5:6","nodeType":"VariableDeclaration","scope":1058,"src":"3231:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1050,"name":"uint256","nodeType":"ElementaryTypeName","src":"3231:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1053,"mutability":"mutable","name":"data","nameLocation":"3267:4:6","nodeType":"VariableDeclaration","scope":1058,"src":"3254:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1052,"name":"bytes","nodeType":"ElementaryTypeName","src":"3254:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3166:111:6"},"returnParameters":{"id":1057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1058,"src":"3304:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1055,"name":"bytes","nodeType":"ElementaryTypeName","src":"3304:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3303:14:6"},"scope":1078,"src":"3150:168:6","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":1059,"nodeType":"StructuredDocumentation","src":"3324:749:6","text":" @notice Calling multiple addresses `targets` using `operationsType`, transferring `values` wei and data: `datas`.\n @dev Batch executor function that behaves the same as {execute} but allowing multiple operations in the same transaction.\n @param operationsType The list of operations type used: `CALL = 0`; `CREATE = 1`; `CREATE2 = 2`; `STATICCALL = 3`; `DELEGATECALL = 4`\n @param targets The list of addresses to call. `targets` will be unused if a contract is created (operation types 1 and 2).\n @param values The list of native token amounts to transfer (in Wei).\n @param datas The list of calldata, or the creation bytecode of the contract to deploy if `operationType` is `1` or `2`."},"functionSelector":"31858452","id":1077,"implemented":false,"kind":"function","modifiers":[],"name":"executeBatch","nameLocation":"4087:12:6","nodeType":"FunctionDefinition","parameters":{"id":1072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"mutability":"mutable","name":"operationsType","nameLocation":"4126:14:6","nodeType":"VariableDeclaration","scope":1077,"src":"4109:31:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1060,"name":"uint256","nodeType":"ElementaryTypeName","src":"4109:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1061,"nodeType":"ArrayTypeName","src":"4109:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1065,"mutability":"mutable","name":"targets","nameLocation":"4167:7:6","nodeType":"VariableDeclaration","scope":1077,"src":"4150:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1063,"name":"address","nodeType":"ElementaryTypeName","src":"4150:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1064,"nodeType":"ArrayTypeName","src":"4150:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1068,"mutability":"mutable","name":"values","nameLocation":"4201:6:6","nodeType":"VariableDeclaration","scope":1077,"src":"4184:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1066,"name":"uint256","nodeType":"ElementaryTypeName","src":"4184:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1067,"nodeType":"ArrayTypeName","src":"4184:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1071,"mutability":"mutable","name":"datas","nameLocation":"4232:5:6","nodeType":"VariableDeclaration","scope":1077,"src":"4217:20:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1069,"name":"bytes","nodeType":"ElementaryTypeName","src":"4217:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1070,"nodeType":"ArrayTypeName","src":"4217:7:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"4099:144:6"},"returnParameters":{"id":1076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1077,"src":"4270:14:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1073,"name":"bytes","nodeType":"ElementaryTypeName","src":"4270:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1074,"nodeType":"ArrayTypeName","src":"4270:7:6","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"4269:16:6"},"scope":1078,"src":"4078:208:6","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":1079,"src":"692:3596:6","usedErrors":[],"usedEvents":[1033,1044]}],"src":"36:4253:6"},"id":6},"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol":{"ast":{"absolutePath":"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol","exportedSymbols":{"IERC165":[5912],"IERC725Y":[1129]},"id":1130,"license":"CC0-1.0","nodeType":"SourceUnit","nodes":[{"id":1080,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"36:23:7"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":1082,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1130,"sourceUnit":5913,"src":"75:80:7","symbolAliases":[{"foreign":{"id":1081,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"83:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1084,"name":"IERC165","nameLocations":["502:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":5912,"src":"502:7:7"},"id":1085,"nodeType":"InheritanceSpecifier","src":"502:7:7"}],"canonicalName":"IERC725Y","contractDependencies":[],"contractKind":"interface","documentation":{"id":1083,"nodeType":"StructuredDocumentation","src":"157:322:7","text":" @title The interface for ERC725Y sub-standard, a generic data key/value store.\n @dev ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time.\n It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage."},"fullyImplemented":false,"id":1129,"linearizedBaseContracts":[1129,5912],"name":"IERC725Y","nameLocation":"490:8:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1086,"nodeType":"StructuredDocumentation","src":"516:373:7","text":" @notice The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\n @dev Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\n @param dataKey The data key for which a bytes value is set.\n @param dataValue The value to set for the given data key."},"eventSelector":"ece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2","id":1092,"name":"DataChanged","nameLocation":"900:11:7","nodeType":"EventDefinition","parameters":{"id":1091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1088,"indexed":true,"mutability":"mutable","name":"dataKey","nameLocation":"928:7:7","nodeType":"VariableDeclaration","scope":1092,"src":"912:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1087,"name":"bytes32","nodeType":"ElementaryTypeName","src":"912:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1090,"indexed":false,"mutability":"mutable","name":"dataValue","nameLocation":"943:9:7","nodeType":"VariableDeclaration","scope":1092,"src":"937:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1089,"name":"bytes","nodeType":"ElementaryTypeName","src":"937:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"911:42:7"},"src":"894:60:7"},{"documentation":{"id":1093,"nodeType":"StructuredDocumentation","src":"960:361:7","text":" @notice Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\n @dev Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\n @param dataKey The data key for which to retrieve the value.\n @return dataValue The bytes value stored under the specified data key."},"functionSelector":"54f6127f","id":1100,"implemented":false,"kind":"function","modifiers":[],"name":"getData","nameLocation":"1335:7:7","nodeType":"FunctionDefinition","parameters":{"id":1096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1095,"mutability":"mutable","name":"dataKey","nameLocation":"1360:7:7","nodeType":"VariableDeclaration","scope":1100,"src":"1352:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1094,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1352:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1342:31:7"},"returnParameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1098,"mutability":"mutable","name":"dataValue","nameLocation":"1410:9:7","nodeType":"VariableDeclaration","scope":1100,"src":"1397:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1097,"name":"bytes","nodeType":"ElementaryTypeName","src":"1397:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1396:24:7"},"scope":1129,"src":"1326:95:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1101,"nodeType":"StructuredDocumentation","src":"1427:353:7","text":" @notice Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\n @dev Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\n @param dataKeys The array of keys which values to retrieve\n @return dataValues The array of data stored at multiple keys"},"functionSelector":"dedff9c6","id":1110,"implemented":false,"kind":"function","modifiers":[],"name":"getDataBatch","nameLocation":"1794:12:7","nodeType":"FunctionDefinition","parameters":{"id":1105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"mutability":"mutable","name":"dataKeys","nameLocation":"1833:8:7","nodeType":"VariableDeclaration","scope":1110,"src":"1816:25:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1102,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1816:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1103,"nodeType":"ArrayTypeName","src":"1816:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"1806:41:7"},"returnParameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1108,"mutability":"mutable","name":"dataValues","nameLocation":"1886:10:7","nodeType":"VariableDeclaration","scope":1110,"src":"1871:25:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1106,"name":"bytes","nodeType":"ElementaryTypeName","src":"1871:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1107,"nodeType":"ArrayTypeName","src":"1871:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"1870:27:7"},"scope":1129,"src":"1785:113:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1111,"nodeType":"StructuredDocumentation","src":"1904:536:7","text":" @notice Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\n @dev Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`.\n The function is marked as payable to enable flexibility on child contracts. For instance to implement\n a fee mechanism for setting specific data.\n @param dataKey The data key for which to set a new value.\n @param dataValue The new bytes value to set."},"functionSelector":"7f23690c","id":1118,"implemented":false,"kind":"function","modifiers":[],"name":"setData","nameLocation":"2454:7:7","nodeType":"FunctionDefinition","parameters":{"id":1116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1113,"mutability":"mutable","name":"dataKey","nameLocation":"2470:7:7","nodeType":"VariableDeclaration","scope":1118,"src":"2462:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1112,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2462:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1115,"mutability":"mutable","name":"dataValue","nameLocation":"2492:9:7","nodeType":"VariableDeclaration","scope":1118,"src":"2479:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1114,"name":"bytes","nodeType":"ElementaryTypeName","src":"2479:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2461:41:7"},"returnParameters":{"id":1117,"nodeType":"ParameterList","parameters":[],"src":"2519:0:7"},"scope":1129,"src":"2445:75:7","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":1119,"nodeType":"StructuredDocumentation","src":"2526:478:7","text":" @notice Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\n @dev Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\n @param dataKeys An array of data keys to set bytes values for.\n @param dataValues An array of bytes values to set for each `dataKeys`."},"functionSelector":"97902421","id":1128,"implemented":false,"kind":"function","modifiers":[],"name":"setDataBatch","nameLocation":"3018:12:7","nodeType":"FunctionDefinition","parameters":{"id":1126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1122,"mutability":"mutable","name":"dataKeys","nameLocation":"3057:8:7","nodeType":"VariableDeclaration","scope":1128,"src":"3040:25:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3040:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1121,"nodeType":"ArrayTypeName","src":"3040:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1125,"mutability":"mutable","name":"dataValues","nameLocation":"3090:10:7","nodeType":"VariableDeclaration","scope":1128,"src":"3075:25:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1123,"name":"bytes","nodeType":"ElementaryTypeName","src":"3075:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1124,"nodeType":"ArrayTypeName","src":"3075:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"3030:76:7"},"returnParameters":{"id":1127,"nodeType":"ParameterList","parameters":[],"src":"3123:0:7"},"scope":1129,"src":"3009:115:7","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":1130,"src":"480:2646:7","usedErrors":[],"usedEvents":[1092]}],"src":"36:3091:7"},"id":7},"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/ILSP0ERC725Account.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/ILSP0ERC725Account.sol","exportedSymbols":{"ILSP0ERC725Account":[1164]},"id":1133,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1131,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:8"},{"absolutePath":"@lukso/lsp0-contracts/contracts/ILSP0ERC725Account.sol","file":"@lukso/lsp0-contracts/contracts/ILSP0ERC725Account.sol","id":1132,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1133,"sourceUnit":1165,"src":"64:64:8","symbolAliases":[],"unitAlias":""}],"src":"39:90:8"},"id":8},"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Constants.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Constants.sol","exportedSymbols":{"_INTERFACEID_LSP17_EXTENDABLE":[1295],"_INTERFACEID_LSP17_EXTENSION":[1298],"_LSP17_EXTENSION_PREFIX":[1301]},"id":1136,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1134,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:9"},{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol","file":"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol","id":1135,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1136,"sourceUnit":1302,"src":"64:78:9","symbolAliases":[],"unitAlias":""}],"src":"39:104:9"},"id":9},"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Extension.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Extension.sol","exportedSymbols":{"ERC165":[5706],"LSP17Extension":[1550],"Version":[1557],"_INTERFACEID_LSP17_EXTENSION":[1298]},"id":1139,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1137,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:10"},{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Extension.sol","file":"@lukso/lsp17contractextension-contracts/contracts/LSP17Extension.sol","id":1138,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1139,"sourceUnit":1551,"src":"64:78:10","symbolAliases":[],"unitAlias":""}],"src":"39:104:10"},"id":10},"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol","exportedSymbols":{"_LSP4_CREATORS_ARRAY_KEY":[2323],"_LSP4_CREATORS_MAP_KEY_PREFIX":[2326],"_LSP4_METADATA_KEY":[2329],"_LSP4_SUPPORTED_STANDARDS_KEY":[2308],"_LSP4_SUPPORTED_STANDARDS_VALUE":[2311],"_LSP4_TOKEN_NAME_KEY":[2314],"_LSP4_TOKEN_SYMBOL_KEY":[2317],"_LSP4_TOKEN_TYPE_COLLECTION":[2305],"_LSP4_TOKEN_TYPE_KEY":[2320],"_LSP4_TOKEN_TYPE_NFT":[2302],"_LSP4_TOKEN_TYPE_TOKEN":[2299]},"id":1142,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1140,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:11"},{"absolutePath":"@lukso/lsp4-contracts/contracts/LSP4Constants.sol","file":"@lukso/lsp4-contracts/contracts/LSP4Constants.sol","id":1141,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1142,"sourceUnit":2330,"src":"64:59:11","symbolAliases":[],"unitAlias":""}],"src":"39:85:11"},"id":11},"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol","exportedSymbols":{"IERC165":[5912],"IERC725Y":[1129],"ILSP8IdentifiableDigitalAsset":[2715]},"id":1145,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1143,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:12"},{"absolutePath":"@lukso/lsp8-contracts/contracts/ILSP8IdentifiableDigitalAsset.sol","file":"@lukso/lsp8-contracts/contracts/ILSP8IdentifiableDigitalAsset.sol","id":1144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1145,"sourceUnit":2716,"src":"64:75:12","symbolAliases":[],"unitAlias":""}],"src":"39:101:12"},"id":12},"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol","exportedSymbols":{"_INTERFACEID_LSP8":[2720],"_LSP8_REFERENCE_CONTRACT":[2729],"_LSP8_TOKENID_FORMAT_ADDRESS":[2747],"_LSP8_TOKENID_FORMAT_HASH":[2753],"_LSP8_TOKENID_FORMAT_KEY":[2723],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_ADDRESS":[2762],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_HASH":[2768],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_NUMBER":[2756],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_STRING":[2759],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_UNIQUE_ID":[2765],"_LSP8_TOKENID_FORMAT_NUMBER":[2741],"_LSP8_TOKENID_FORMAT_STRING":[2744],"_LSP8_TOKENID_FORMAT_UNIQUE_ID":[2750],"_LSP8_TOKEN_METADATA_BASE_URI":[2726],"_TYPEID_LSP8_TOKENOPERATOR":[2738],"_TYPEID_LSP8_TOKENSRECIPIENT":[2735],"_TYPEID_LSP8_TOKENSSENDER":[2732]},"id":1148,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1146,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:13"},{"absolutePath":"@lukso/lsp8-contracts/contracts/LSP8Constants.sol","file":"@lukso/lsp8-contracts/contracts/LSP8Constants.sol","id":1147,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1148,"sourceUnit":2769,"src":"64:59:13","symbolAliases":[],"unitAlias":""}],"src":"39:85:13"},"id":13},"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/extensions/LSP8Burnable.sol":{"ast":{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/extensions/LSP8Burnable.sol","exportedSymbols":{"LSP8Burnable":[4527],"LSP8IdentifiableDigitalAsset":[3136],"LSP8NotTokenOperator":[2791]},"id":1151,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1149,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"39:24:14"},{"absolutePath":"@lukso/lsp8-contracts/contracts/extensions/LSP8Burnable.sol","file":"@lukso/lsp8-contracts/contracts/extensions/LSP8Burnable.sol","id":1150,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1151,"sourceUnit":4528,"src":"65:69:14","symbolAliases":[],"unitAlias":""}],"src":"39:96:14"},"id":14},"@lukso/lsp0-contracts/contracts/ILSP0ERC725Account.sol":{"ast":{"absolutePath":"@lukso/lsp0-contracts/contracts/ILSP0ERC725Account.sol","exportedSymbols":{"ILSP0ERC725Account":[1164]},"id":1165,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1152,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"ILSP0ERC725Account","contractDependencies":[],"contractKind":"interface","documentation":{"id":1153,"nodeType":"StructuredDocumentation","src":"64:216:15","text":" @title Interface of the [LSP-0-ERC725Account] standard, an account based smart contract that represents an identity on-chain.\n @author Fabian Vogelsteller <fabian@lukso.network>, Jean Cavallera (CJ42)"},"fullyImplemented":false,"id":1164,"linearizedBaseContracts":[1164],"name":"ILSP0ERC725Account","nameLocation":"291:18:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1154,"nodeType":"StructuredDocumentation","src":"316:460:15","text":" @notice Executing the following batch of abi-encoded function calls on the contract: `data`.\n @dev Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\n @param data An array of ABI encoded function calls to be called on the contract.\n @return results An array of abi-encoded data returned by the functions executed."},"functionSelector":"6963d438","id":1163,"implemented":false,"kind":"function","modifiers":[],"name":"batchCalls","nameLocation":"790:10:15","nodeType":"FunctionDefinition","parameters":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1157,"mutability":"mutable","name":"data","nameLocation":"827:4:15","nodeType":"VariableDeclaration","scope":1163,"src":"810:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1155,"name":"bytes","nodeType":"ElementaryTypeName","src":"810:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1156,"nodeType":"ArrayTypeName","src":"810:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"800:37:15"},"returnParameters":{"id":1162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1161,"mutability":"mutable","name":"results","nameLocation":"871:7:15","nodeType":"VariableDeclaration","scope":1163,"src":"856:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1159,"name":"bytes","nodeType":"ElementaryTypeName","src":"856:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1160,"nodeType":"ArrayTypeName","src":"856:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"855:24:15"},"scope":1164,"src":"781:99:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1165,"src":"281:601:15","usedErrors":[],"usedEvents":[]}],"src":"39:844:15"},"id":15},"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol":{"ast":{"absolutePath":"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol","exportedSymbols":{"ILSP1UniversalReceiver":[1191]},"id":1192,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1166,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"ILSP1UniversalReceiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1167,"nodeType":"StructuredDocumentation","src":"64:257:16","text":" @title Interface of the LSP1 - Universal Receiver standard, an entry function for a contract to receive arbitrary information.\n @dev LSP1UniversalReceiver allows to receive arbitrary messages and to be informed when assets are sent or received."},"fullyImplemented":false,"id":1191,"linearizedBaseContracts":[1191],"name":"ILSP1UniversalReceiver","nameLocation":"332:22:16","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1168,"nodeType":"StructuredDocumentation","src":"361:893:16","text":" @dev Emitted when the {universalReceiver} function was called with a specific `typeId` and some `receivedData`\n @notice Address `from` called the `universalReceiver(...)` function while sending `value` LYX. Notification type (typeId): `typeId` - Data received: `receivedData`.\n @param from The address of the EOA or smart contract that called the {universalReceiver(...)} function.\n @param value The amount sent to the {universalReceiver(...)} function.\n @param typeId A `bytes32` unique identifier (= _\"hook\"_)that describe the type of notification, information or transaction received by the contract. Can be related to a specific standard or a hook.\n @param receivedData Any arbitrary data that was sent to the {universalReceiver(...)} function.\n @param returnedValue The value returned by the {universalReceiver(...)} function."},"eventSelector":"9c3ba68eb5742b8e3961aea0afc7371a71bf433c8a67a831803b64c064a178c2","id":1180,"name":"UniversalReceiver","nameLocation":"1265:17:16","nodeType":"EventDefinition","parameters":{"id":1179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1170,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"1308:4:16","nodeType":"VariableDeclaration","scope":1180,"src":"1292:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1169,"name":"address","nodeType":"ElementaryTypeName","src":"1292:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1172,"indexed":true,"mutability":"mutable","name":"value","nameLocation":"1338:5:16","nodeType":"VariableDeclaration","scope":1180,"src":"1322:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1171,"name":"uint256","nodeType":"ElementaryTypeName","src":"1322:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1174,"indexed":true,"mutability":"mutable","name":"typeId","nameLocation":"1369:6:16","nodeType":"VariableDeclaration","scope":1180,"src":"1353:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1173,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1353:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1176,"indexed":false,"mutability":"mutable","name":"receivedData","nameLocation":"1391:12:16","nodeType":"VariableDeclaration","scope":1180,"src":"1385:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1175,"name":"bytes","nodeType":"ElementaryTypeName","src":"1385:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1178,"indexed":false,"mutability":"mutable","name":"returnedValue","nameLocation":"1419:13:16","nodeType":"VariableDeclaration","scope":1180,"src":"1413:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1177,"name":"bytes","nodeType":"ElementaryTypeName","src":"1413:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1282:156:16"},"src":"1259:180:16"},{"documentation":{"id":1181,"nodeType":"StructuredDocumentation","src":"1445:517:16","text":" @dev Generic function that can be used to notify the contract about specific incoming transactions or events like asset transfers, vault transfers, etc. Allows for custom on-chain and off-chain reactions based on the `typeId` and `data`.\n @notice Reacted on received notification with `typeId` & `data`.\n @param typeId The hash of a specific standard or a hook.\n @param data The arbitrary data received with the call.\n @custom:events {UniversalReceiver} event."},"functionSelector":"6bb56a14","id":1190,"implemented":false,"kind":"function","modifiers":[],"name":"universalReceiver","nameLocation":"1976:17:16","nodeType":"FunctionDefinition","parameters":{"id":1186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1183,"mutability":"mutable","name":"typeId","nameLocation":"2011:6:16","nodeType":"VariableDeclaration","scope":1190,"src":"2003:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1182,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2003:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1185,"mutability":"mutable","name":"data","nameLocation":"2042:4:16","nodeType":"VariableDeclaration","scope":1190,"src":"2027:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1184,"name":"bytes","nodeType":"ElementaryTypeName","src":"2027:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1993:59:16"},"returnParameters":{"id":1189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1190,"src":"2079:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1187,"name":"bytes","nodeType":"ElementaryTypeName","src":"2079:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2078:14:16"},"scope":1191,"src":"1967:126:16","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":1192,"src":"322:1773:16","usedErrors":[],"usedEvents":[1180]}],"src":"39:2057:16"},"id":16},"@lukso/lsp1-contracts/contracts/LSP1Constants.sol":{"ast":{"absolutePath":"@lukso/lsp1-contracts/contracts/LSP1Constants.sol","exportedSymbols":{"_INTERFACEID_LSP1":[1196],"_INTERFACEID_LSP1_DELEGATE":[1199],"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY":[1205],"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX":[1202]},"id":1206,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1193,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:17"},{"constant":true,"id":1196,"mutability":"constant","name":"_INTERFACEID_LSP1","nameLocation":"108:17:17","nodeType":"VariableDeclaration","scope":1206,"src":"92:46:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1194,"name":"bytes4","nodeType":"ElementaryTypeName","src":"92:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783662623536613134","id":1195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"128:10:17","typeDescriptions":{"typeIdentifier":"t_rational_1807051284_by_1","typeString":"int_const 1807051284"},"value":"0x6bb56a14"},"visibility":"internal"},{"constant":true,"id":1199,"mutability":"constant","name":"_INTERFACEID_LSP1_DELEGATE","nameLocation":"156:26:17","nodeType":"VariableDeclaration","scope":1206,"src":"140:55:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1197,"name":"bytes4","nodeType":"ElementaryTypeName","src":"140:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786132343562626461","id":1198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"185:10:17","typeDescriptions":{"typeIdentifier":"t_rational_2722479066_by_1","typeString":"int_const 2722479066"},"value":"0xa245bbda"},"visibility":"internal"},{"constant":true,"id":1202,"mutability":"constant","name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX","nameLocation":"296:40:17","nodeType":"VariableDeclaration","scope":1206,"src":"279:82:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"},"typeName":{"id":1200,"name":"bytes10","nodeType":"ElementaryTypeName","src":"279:7:17","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},"value":{"hexValue":"30783063666335316165633337633535613464306231","id":1201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"339:22:17","typeDescriptions":{"typeIdentifier":"t_rational_61322863157712349614257_by_1","typeString":"int_const 61322863157712349614257"},"value":"0x0cfc51aec37c55a4d0b1"},"visibility":"internal"},{"constant":true,"id":1205,"mutability":"constant","name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY","nameLocation":"427:37:17","nodeType":"VariableDeclaration","scope":1206,"src":"410:123:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1203,"name":"bytes32","nodeType":"ElementaryTypeName","src":"410:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830636663353161656333376335356134643062316136356336323535633462663266626466363237376633636330373330633435623832386236646238623437","id":1204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"467:66:17","typeDescriptions":{"typeIdentifier":"t_rational_5873563396395204772354203425660447968463963513255343663932314865640255753031_by_1","typeString":"int_const 5873...(68 digits omitted)...3031"},"value":"0x0cfc51aec37c55a4d0b1a65c6255c4bf2fbdf6277f3cc0730c45b828b6db8b47"},"visibility":"internal"}],"src":"39:496:17"},"id":17},"@lukso/lsp1-contracts/contracts/LSP1Utils.sol":{"ast":{"absolutePath":"@lukso/lsp1-contracts/contracts/LSP1Utils.sol","exportedSymbols":{"ERC165Checker":[5900],"ILSP1":[1191],"LSP1Utils":[1290],"LSP2Utils":[2294],"_INTERFACEID_LSP1":[1196],"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY":[1205],"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX":[1202]},"id":1291,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1207,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:18"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","id":1209,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1291,"sourceUnit":5901,"src":"77:98:18","symbolAliases":[{"foreign":{"id":1208,"name":"ERC165Checker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"90:13:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp2-contracts/contracts/LSP2Utils.sol","file":"@lukso/lsp2-contracts/contracts/LSP2Utils.sol","id":1211,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1291,"sourceUnit":2295,"src":"176:72:18","symbolAliases":[{"foreign":{"id":1210,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"184:9:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol","file":"./ILSP1UniversalReceiver.sol","id":1213,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1291,"sourceUnit":1192,"src":"263:77:18","symbolAliases":[{"foreign":{"id":1212,"name":"ILSP1UniversalReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"271:22:18","typeDescriptions":{}},"local":"ILSP1","nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp1-contracts/contracts/LSP1Constants.sol","file":"./LSP1Constants.sol","id":1217,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1291,"sourceUnit":1206,"src":"355:149:18","symbolAliases":[{"foreign":{"id":1214,"name":"_INTERFACEID_LSP1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"368:17:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1215,"name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"391:37:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1216,"name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"434:40:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"LSP1Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1218,"nodeType":"StructuredDocumentation","src":"506:370:18","text":" @title LSP1 Utility library.\n @author Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\n @dev LSP1Utils is a library of utility functions that can be used to notify the `universalReceiver` function of a contract\n that implements LSP1 and retrieve informations related to LSP1 `typeId`.\n Based on LSP1 Universal Receiver standard."},"fullyImplemented":true,"id":1290,"linearizedBaseContracts":[1290],"name":"LSP1Utils","nameLocation":"885:9:18","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1221,"libraryName":{"id":1219,"name":"ERC165Checker","nameLocations":["907:13:18"],"nodeType":"IdentifierPath","referencedDeclaration":5900,"src":"907:13:18"},"nodeType":"UsingForDirective","src":"901:32:18","typeName":{"id":1220,"name":"address","nodeType":"ElementaryTypeName","src":"925:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":1245,"nodeType":"Block","src":"1487:226:18","statements":[{"condition":{"arguments":[{"id":1233,"name":"_INTERFACEID_LSP1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"1583:17:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1231,"name":"lsp1Implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"1514:18:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1533:32:18","memberName":"supportsERC165InterfaceUnchecked","nodeType":"MemberAccess","referencedDeclaration":5899,"src":"1514:51:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$attached_to$_t_address_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1514:100:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1244,"nodeType":"IfStatement","src":"1497:210:18","trueBody":{"id":1243,"nodeType":"Block","src":"1625:82:18","statements":[{"expression":{"arguments":[{"id":1239,"name":"typeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"1683:6:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1240,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"1691:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1236,"name":"lsp1Implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"1645:18:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1235,"name":"ILSP1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"1639:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILSP1UniversalReceiver_$1191_$","typeString":"type(contract ILSP1UniversalReceiver)"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1639:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILSP1UniversalReceiver_$1191","typeString":"contract ILSP1UniversalReceiver"}},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1665:17:18","memberName":"universalReceiver","nodeType":"MemberAccess","referencedDeclaration":1190,"src":"1639:43:18","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32,bytes memory) payable external returns (bytes memory)"}},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1639:57:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1242,"nodeType":"ExpressionStatement","src":"1639:57:18"}]}}]},"documentation":{"id":1222,"nodeType":"StructuredDocumentation","src":"939:408:18","text":" @dev Notify a contract at `lsp1Implementation` address by calling its `universalReceiver` function if this contract\n supports the LSP1 interface.\n @param lsp1Implementation The address of the contract to notify.\n @param typeId A `bytes32` typeId.\n @param data Any optional data to send to the `universalReceiver` function to the `lsp1Implementation` address."},"id":1246,"implemented":true,"kind":"function","modifiers":[],"name":"notifyUniversalReceiver","nameLocation":"1361:23:18","nodeType":"FunctionDefinition","parameters":{"id":1229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1224,"mutability":"mutable","name":"lsp1Implementation","nameLocation":"1402:18:18","nodeType":"VariableDeclaration","scope":1246,"src":"1394:26:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1223,"name":"address","nodeType":"ElementaryTypeName","src":"1394:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1226,"mutability":"mutable","name":"typeId","nameLocation":"1438:6:18","nodeType":"VariableDeclaration","scope":1246,"src":"1430:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1430:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1228,"mutability":"mutable","name":"data","nameLocation":"1467:4:18","nodeType":"VariableDeclaration","scope":1246,"src":"1454:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1227,"name":"bytes","nodeType":"ElementaryTypeName","src":"1454:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1384:93:18"},"returnParameters":{"id":1230,"nodeType":"ParameterList","parameters":[],"src":"1487:0:18"},"scope":1290,"src":"1352:361:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1260,"nodeType":"Block","src":"2326:77:18","statements":[{"expression":{"baseExpression":{"id":1256,"name":"erc725YStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"2343:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":1258,"indexExpression":{"id":1257,"name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"2358:37:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2343:53:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"functionReturnParameters":1255,"id":1259,"nodeType":"Return","src":"2336:60:18"}]},"documentation":{"id":1247,"nodeType":"StructuredDocumentation","src":"1719:471:18","text":" @notice Retrieving the value stored under the ERC725Y data key `LSP1UniversalReceiverDelegate`.\n @dev Query internally the ERC725Y storage of a `ERC725Y` smart contract to retrieve\n the value set under the `LSP1UniversalReceiverDelegate` data key.\n @param erc725YStorage A reference to the ERC725Y storage mapping of the contract.\n @return The bytes value stored under the `LSP1UniversalReceiverDelegate` data key."},"id":1261,"implemented":true,"kind":"function","modifiers":[],"name":"getLSP1DelegateValue","nameLocation":"2204:20:18","nodeType":"FunctionDefinition","parameters":{"id":1252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1251,"mutability":"mutable","name":"erc725YStorage","nameLocation":"2268:14:18","nodeType":"VariableDeclaration","scope":1261,"src":"2234:48:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"typeName":{"id":1250,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2242:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2234:25:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1249,"name":"bytes","nodeType":"ElementaryTypeName","src":"2253:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"visibility":"internal"}],"src":"2224:64:18"},"returnParameters":{"id":1255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1261,"src":"2312:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1253,"name":"bytes","nodeType":"ElementaryTypeName","src":"2312:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2311:14:18"},"scope":1290,"src":"2195:208:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1288,"nodeType":"Block","src":"3178:216:18","statements":[{"assignments":[1274],"declarations":[{"constant":false,"id":1274,"mutability":"mutable","name":"lsp1TypeIdDataKey","nameLocation":"3196:17:18","nodeType":"VariableDeclaration","scope":1288,"src":"3188:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1273,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3188:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1283,"initialValue":{"arguments":[{"id":1277,"name":"_LSP1_UNIVERSAL_RECEIVER_DELEGATE_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"3258:40:18","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"arguments":[{"id":1280,"name":"typeId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"3320:6:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3312:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":1278,"name":"bytes20","nodeType":"ElementaryTypeName","src":"3312:7:18","typeDescriptions":{}}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3312:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":1275,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"3216:9:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP2Utils_$2294_$","typeString":"type(library LSP2Utils)"}},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3226:18:18","memberName":"generateMappingKey","nodeType":"MemberAccess","referencedDeclaration":1784,"src":"3216:28:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes10_$_t_bytes20_$returns$_t_bytes32_$","typeString":"function (bytes10,bytes20) pure returns (bytes32)"}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3216:121:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3188:149:18"},{"expression":{"baseExpression":{"id":1284,"name":"erc725YStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"3354:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":1286,"indexExpression":{"id":1285,"name":"lsp1TypeIdDataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"3369:17:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3354:33:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"functionReturnParameters":1272,"id":1287,"nodeType":"Return","src":"3347:40:18"}]},"documentation":{"id":1262,"nodeType":"StructuredDocumentation","src":"2409:600:18","text":" @notice Retrieving the value stored under the ERC725Y data key `LSP1UniversalReceiverDelegate:<type-id>` for a specific `typeId`.\n @dev Query internally the ERC725Y storage of a `ERC725Y` smart contract to retrieve\n the value set under the `LSP1UniversalReceiverDelegate:<bytes32>` data key for a specific LSP1 `typeId`.\n @param erc725YStorage A reference to the ERC725Y storage mapping of the contract.\n @param typeId A bytes32 LSP1 `typeId`;\n @return The bytes value stored under the `LSP1UniversalReceiverDelegate:<bytes32>` data key."},"id":1289,"implemented":true,"kind":"function","modifiers":[],"name":"getLSP1DelegateValueForTypeId","nameLocation":"3023:29:18","nodeType":"FunctionDefinition","parameters":{"id":1269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"erc725YStorage","nameLocation":"3096:14:18","nodeType":"VariableDeclaration","scope":1289,"src":"3062:48:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"typeName":{"id":1265,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1263,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3070:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"3062:25:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1264,"name":"bytes","nodeType":"ElementaryTypeName","src":"3081:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"visibility":"internal"},{"constant":false,"id":1268,"mutability":"mutable","name":"typeId","nameLocation":"3128:6:18","nodeType":"VariableDeclaration","scope":1289,"src":"3120:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1267,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3120:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3052:88:18"},"returnParameters":{"id":1272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1289,"src":"3164:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1270,"name":"bytes","nodeType":"ElementaryTypeName","src":"3164:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3163:14:18"},"scope":1290,"src":"3014:380:18","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1291,"src":"877:2519:18","usedErrors":[],"usedEvents":[]}],"src":"39:3358:18"},"id":18},"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol":{"ast":{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol","exportedSymbols":{"_INTERFACEID_LSP17_EXTENDABLE":[1295],"_INTERFACEID_LSP17_EXTENSION":[1298],"_LSP17_EXTENSION_PREFIX":[1301]},"id":1302,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1292,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:19"},{"constant":true,"id":1295,"mutability":"constant","name":"_INTERFACEID_LSP17_EXTENDABLE","nameLocation":"150:29:19","nodeType":"VariableDeclaration","scope":1302,"src":"134:58:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1293,"name":"bytes4","nodeType":"ElementaryTypeName","src":"134:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786139313866613662","id":1294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"182:10:19","typeDescriptions":{"typeIdentifier":"t_rational_2836986475_by_1","typeString":"int_const 2836986475"},"value":"0xa918fa6b"},"visibility":"internal"},{"constant":true,"id":1298,"mutability":"constant","name":"_INTERFACEID_LSP17_EXTENSION","nameLocation":"251:28:19","nodeType":"VariableDeclaration","scope":1302,"src":"235:57:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1296,"name":"bytes4","nodeType":"ElementaryTypeName","src":"235:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786365653738623430","id":1297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"282:10:19","typeDescriptions":{"typeIdentifier":"t_rational_3471280960_by_1","typeString":"int_const 3471280960"},"value":"0xcee78b40"},"visibility":"internal"},{"constant":true,"id":1301,"mutability":"constant","name":"_LSP17_EXTENSION_PREFIX","nameLocation":"407:23:19","nodeType":"VariableDeclaration","scope":1302,"src":"390:65:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"},"typeName":{"id":1299,"name":"bytes10","nodeType":"ElementaryTypeName","src":"390:7:19","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},"value":{"hexValue":"30786365653738623430393464613836303131303936","id":1300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"433:22:19","typeDescriptions":{"typeIdentifier":"t_rational_977078727535809873907862_by_1","typeString":"int_const 977078727535809873907862"},"value":"0xcee78b4094da86011096"},"visibility":"internal"}],"src":"39:418:19"},"id":19},"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol":{"ast":{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol","exportedSymbols":{"InvalidExtensionAddress":[1318],"InvalidFunctionSelector":[1313],"NoExtensionFoundForFunctionSelector":[1308]},"id":1319,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1303,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:20"},{"documentation":{"id":1304,"nodeType":"StructuredDocumentation","src":"64:94:20","text":" @dev reverts when there is no extension for the function selector being called with"},"errorSelector":"bb370b2b","id":1308,"name":"NoExtensionFoundForFunctionSelector","nameLocation":"165:35:20","nodeType":"ErrorDefinition","parameters":{"id":1307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"mutability":"mutable","name":"functionSelector","nameLocation":"208:16:20","nodeType":"VariableDeclaration","scope":1308,"src":"201:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1305,"name":"bytes4","nodeType":"ElementaryTypeName","src":"201:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"200:25:20"},"src":"159:67:20"},{"documentation":{"id":1309,"nodeType":"StructuredDocumentation","src":"228:114:20","text":" @dev reverts when the contract is called with a function selector not valid (less than 4 bytes of data)"},"errorSelector":"e5099ee3","id":1313,"name":"InvalidFunctionSelector","nameLocation":"349:23:20","nodeType":"ErrorDefinition","parameters":{"id":1312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1311,"mutability":"mutable","name":"data","nameLocation":"379:4:20","nodeType":"VariableDeclaration","scope":1313,"src":"373:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1310,"name":"bytes","nodeType":"ElementaryTypeName","src":"373:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"372:12:20"},"src":"343:42:20"},{"documentation":{"id":1314,"nodeType":"StructuredDocumentation","src":"387:110:20","text":" @dev reverts when the bytes retrieved from the LSP17 data key is not a valid address (not 20 bytes)"},"errorSelector":"42bfe79f","id":1318,"name":"InvalidExtensionAddress","nameLocation":"504:23:20","nodeType":"ErrorDefinition","parameters":{"id":1317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"storedData","nameLocation":"534:10:20","nodeType":"VariableDeclaration","scope":1318,"src":"528:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1315,"name":"bytes","nodeType":"ElementaryTypeName","src":"528:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"527:18:20"},"src":"498:48:20"}],"src":"39:508:20"},"id":20},"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol":{"ast":{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol","exportedSymbols":{"ERC165":[5706],"ERC165Checker":[5900],"LSP17Extendable":[1452],"NoExtensionFoundForFunctionSelector":[1308],"_INTERFACEID_LSP17_EXTENDABLE":[1295]},"id":1453,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1320,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:21"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165.sol","id":1322,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1453,"sourceUnit":5707,"src":"75:78:21","symbolAliases":[{"foreign":{"id":1321,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5706,"src":"83:6:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","id":1324,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1453,"sourceUnit":5901,"src":"154:98:21","symbolAliases":[{"foreign":{"id":1323,"name":"ERC165Checker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"167:13:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol","file":"./LSP17Constants.sol","id":1326,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1453,"sourceUnit":1302,"src":"267:67:21","symbolAliases":[{"foreign":{"id":1325,"name":"_INTERFACEID_LSP17_EXTENDABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"275:29:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol","file":"./LSP17Errors.sol","id":1328,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1453,"sourceUnit":1319,"src":"346:70:21","symbolAliases":[{"foreign":{"id":1327,"name":"NoExtensionFoundForFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"354:35:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1330,"name":"ERC165","nameLocations":["924:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":5706,"src":"924:6:21"},"id":1331,"nodeType":"InheritanceSpecifier","src":"924:6:21"}],"canonicalName":"LSP17Extendable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1329,"nodeType":"StructuredDocumentation","src":"418:468:21","text":" @title Module to add more functionalities to a contract using extensions.\n @dev Implementation of the `fallback(...)` logic according to LSP17 - Contract Extension standard.\n This module can be inherited to extend the functionality of the parent contract when\n calling a function that doesn't exist on the parent contract via forwarding the call\n to an extension mapped to the function selector being called, set originally by the parent contract"},"fullyImplemented":false,"id":1452,"linearizedBaseContracts":[1452,5706,5912],"name":"LSP17Extendable","nameLocation":"905:15:21","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[5705],"body":{"id":1349,"nodeType":"Block","src":"1103:132:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1340,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"1132:11:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1341,"name":"_INTERFACEID_LSP17_EXTENDABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"1147:29:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1132:44:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1345,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"1216:11:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1343,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1192:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_LSP17Extendable_$1452_$","typeString":"type(contract super LSP17Extendable)"}},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1198:17:21","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":5705,"src":"1192:23:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1192:36:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1132:96:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1339,"id":1348,"nodeType":"Return","src":"1113:115:21"}]},"documentation":{"id":1332,"nodeType":"StructuredDocumentation","src":"937:56:21","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1350,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1007:17:21","nodeType":"FunctionDefinition","overrides":{"id":1336,"nodeType":"OverrideSpecifier","overrides":[],"src":"1079:8:21"},"parameters":{"id":1335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1334,"mutability":"mutable","name":"interfaceId","nameLocation":"1041:11:21","nodeType":"VariableDeclaration","scope":1350,"src":"1034:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1333,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1034:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1024:34:21"},"returnParameters":{"id":1339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1338,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1350,"src":"1097:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1337,"name":"bool","nodeType":"ElementaryTypeName","src":"1097:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1096:6:21"},"scope":1452,"src":"998:237:21","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1381,"nodeType":"Block","src":"1774:341:21","statements":[{"assignments":[1359,null],"declarations":[{"constant":false,"id":1359,"mutability":"mutable","name":"erc165Extension","nameLocation":"1793:15:21","nodeType":"VariableDeclaration","scope":1381,"src":"1785:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1358,"name":"address","nodeType":"ElementaryTypeName","src":"1785:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},null],"id":1365,"initialValue":{"arguments":[{"expression":{"expression":{"id":1361,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5706,"src":"1856:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC165_$5706_$","typeString":"type(contract ERC165)"}},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1863:17:21","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":5705,"src":"1856:24:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1881:8:21","memberName":"selector","nodeType":"MemberAccess","src":"1856:33:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":1360,"name":"_getExtensionAndForwardValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"1814:28:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_address_$_t_bool_$","typeString":"function (bytes4) view returns (address,bool)"}},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1814:85:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"nodeType":"VariableDeclarationStatement","src":"1784:115:21"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1366,"name":"erc165Extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"1913:15:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1940:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1932:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1367,"name":"address","nodeType":"ElementaryTypeName","src":"1932:7:21","typeDescriptions":{}}},"id":1370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1932:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1913:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1374,"nodeType":"IfStatement","src":"1909:47:21","trueBody":{"expression":{"hexValue":"66616c7365","id":1372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1951:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1357,"id":1373,"nodeType":"Return","src":"1944:12:21"}},{"expression":{"arguments":[{"id":1377,"name":"erc165Extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"2050:15:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1378,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"2083:11:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1375,"name":"ERC165Checker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"1986:13:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC165Checker_$5900_$","typeString":"type(library ERC165Checker)"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2000:32:21","memberName":"supportsERC165InterfaceUnchecked","nodeType":"MemberAccess","referencedDeclaration":5899,"src":"1986:46:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1986:122:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1357,"id":1380,"nodeType":"Return","src":"1967:141:21"}]},"documentation":{"id":1351,"nodeType":"StructuredDocumentation","src":"1241:412:21","text":" @dev Returns whether the interfaceId being checked is supported in the extension of the\n {supportsInterface} selector.\n To be used by extendable contracts wishing to extend the ERC165 interfaceIds originally\n supported by reading whether the interfaceId queried is supported in the `supportsInterface`\n extension if the extension is set, if not it returns false."},"id":1382,"implemented":true,"kind":"function","modifiers":[],"name":"_supportsInterfaceInERC165Extension","nameLocation":"1667:35:21","nodeType":"FunctionDefinition","parameters":{"id":1354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1353,"mutability":"mutable","name":"interfaceId","nameLocation":"1719:11:21","nodeType":"VariableDeclaration","scope":1382,"src":"1712:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1352,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1712:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1702:34:21"},"returnParameters":{"id":1357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1382,"src":"1768:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1355,"name":"bool","nodeType":"ElementaryTypeName","src":"1768:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1767:6:21"},"scope":1452,"src":"1658:457:21","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":1383,"nodeType":"StructuredDocumentation","src":"2121:254:21","text":" @dev Returns the extension mapped to a specific function selector\n If no extension was found, return the address(0)\n To be overrided.\n Up to the implementor contract to return an extension based on a function selector"},"id":1392,"implemented":false,"kind":"function","modifiers":[],"name":"_getExtensionAndForwardValue","nameLocation":"2389:28:21","nodeType":"FunctionDefinition","parameters":{"id":1386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1385,"mutability":"mutable","name":"functionSelector","nameLocation":"2434:16:21","nodeType":"VariableDeclaration","scope":1392,"src":"2427:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1384,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2427:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2417:39:21"},"returnParameters":{"id":1391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1392,"src":"2488:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1387,"name":"address","nodeType":"ElementaryTypeName","src":"2488:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1392,"src":"2497:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1389,"name":"bool","nodeType":"ElementaryTypeName","src":"2497:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2487:15:21"},"scope":1452,"src":"2380:123:21","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1450,"nodeType":"Block","src":"3787:991:21","statements":[{"assignments":[1401,1403],"declarations":[{"constant":false,"id":1401,"mutability":"mutable","name":"extension","nameLocation":"3862:9:21","nodeType":"VariableDeclaration","scope":1450,"src":"3854:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1400,"name":"address","nodeType":"ElementaryTypeName","src":"3854:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1403,"mutability":"mutable","name":"shouldForwardValue","nameLocation":"3890:18:21","nodeType":"VariableDeclaration","scope":1450,"src":"3885:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1402,"name":"bool","nodeType":"ElementaryTypeName","src":"3885:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1408,"initialValue":{"arguments":[{"expression":{"id":1405,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3950:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3954:3:21","memberName":"sig","nodeType":"MemberAccess","src":"3950:7:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":1404,"name":"_getExtensionAndForwardValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"3921:28:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_address_$_t_bool_$","typeString":"function (bytes4) view returns (address,bool)"}},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:37:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"nodeType":"VariableDeclarationStatement","src":"3840:118:21"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1409,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"4018:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4039:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4031:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1410,"name":"address","nodeType":"ElementaryTypeName","src":"4031:7:21","typeDescriptions":{}}},"id":1413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4031:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4018:23:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1420,"nodeType":"IfStatement","src":"4014:92:21","trueBody":{"errorCall":{"arguments":[{"expression":{"id":1416,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4098:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4102:3:21","memberName":"sig","nodeType":"MemberAccess","src":"4098:7:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":1415,"name":"NoExtensionFoundForFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"4062:35:21","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4062:44:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1419,"nodeType":"RevertStatement","src":"4055:51:21"}},{"assignments":[1422,1424],"declarations":[{"constant":false,"id":1422,"mutability":"mutable","name":"success","nameLocation":"4123:7:21","nodeType":"VariableDeclaration","scope":1450,"src":"4118:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1421,"name":"bool","nodeType":"ElementaryTypeName","src":"4118:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1424,"mutability":"mutable","name":"result","nameLocation":"4145:6:21","nodeType":"VariableDeclaration","scope":1450,"src":"4132:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1423,"name":"bytes","nodeType":"ElementaryTypeName","src":"4132:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1442,"initialValue":{"arguments":[{"arguments":[{"id":1435,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"4252:8:21","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"expression":{"id":1436,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4262:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4266:6:21","memberName":"sender","nodeType":"MemberAccess","src":"4262:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1438,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4274:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4278:5:21","memberName":"value","nodeType":"MemberAccess","src":"4274:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1433,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4235:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4239:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"4235:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4235:49:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1425,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"4155:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4165:4:21","memberName":"call","nodeType":"MemberAccess","src":"4155:14:21","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"condition":{"id":1427,"name":"shouldForwardValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"4190:18:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4223:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4190:34:21","trueExpression":{"expression":{"id":1428,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4211:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4215:5:21","memberName":"value","nodeType":"MemberAccess","src":"4211:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4155:79:21","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4155:130:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4117:168:21"},{"condition":{"id":1443,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"4300:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1448,"nodeType":"Block","src":"4353:419:21","statements":[{"AST":{"nodeType":"YulBlock","src":"4637:125:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4655:36:21","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"4684:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4678:5:21"},"nodeType":"YulFunctionCall","src":"4678:13:21"},"variables":[{"name":"resultdata_size","nodeType":"YulTypedName","src":"4659:15:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"4719:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4727:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4715:3:21"},"nodeType":"YulFunctionCall","src":"4715:15:21"},{"name":"resultdata_size","nodeType":"YulIdentifier","src":"4732:15:21"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4708:6:21"},"nodeType":"YulFunctionCall","src":"4708:40:21"},"nodeType":"YulExpressionStatement","src":"4708:40:21"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1424,"isOffset":false,"isSlot":false,"src":"4684:6:21","valueSize":1},{"declaration":1424,"isOffset":false,"isSlot":false,"src":"4719:6:21","valueSize":1}],"id":1447,"nodeType":"InlineAssembly","src":"4628:134:21"}]},"id":1449,"nodeType":"IfStatement","src":"4296:476:21","trueBody":{"id":1446,"nodeType":"Block","src":"4309:38:21","statements":[{"expression":{"id":1444,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"4330:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1399,"id":1445,"nodeType":"Return","src":"4323:13:21"}]}}]},"documentation":{"id":1393,"nodeType":"StructuredDocumentation","src":"2509:1160:21","text":" @dev Forwards the call to an extension mapped to a function selector.\n Calls {_getExtensionAndForwardValue} to get the address of the extension mapped to the function selector being\n called on the account. If there is no extension, the `address(0)` will be returned.\n Forwards the value if the extension is payable.\n Reverts if there is no extension for the function being called.\n If there is an extension for the function selector being called, it calls the extension with the\n `CALL` opcode, passing the `msg.data` appended with the 20 bytes of the {msg.sender} and 32 bytes of the `msg.value`.\n @custom:hint This function does not forward to the extension contract the `msg.value` received by the contract that inherits `LSP17Extendable`.\n If you would like to forward the `msg.value` to the extension contract, you can override the code of this internal function as follow:\n ```solidity\n (bool success, bytes memory result) = extension.call{value: msg.value}(\n     abi.encodePacked(callData, msg.sender, msg.value)\n );\n ```"},"id":1451,"implemented":true,"kind":"function","modifiers":[],"name":"_fallbackLSP17Extendable","nameLocation":"3683:24:21","nodeType":"FunctionDefinition","parameters":{"id":1396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1395,"mutability":"mutable","name":"callData","nameLocation":"3732:8:21","nodeType":"VariableDeclaration","scope":1451,"src":"3717:23:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1394,"name":"bytes","nodeType":"ElementaryTypeName","src":"3717:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3707:39:21"},"returnParameters":{"id":1399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1451,"src":"3773:12:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1397,"name":"bytes","nodeType":"ElementaryTypeName","src":"3773:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3772:14:21"},"scope":1452,"src":"3674:1104:21","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1453,"src":"887:3893:21","usedErrors":[],"usedEvents":[]}],"src":"39:4742:21"},"id":21},"@lukso/lsp17contractextension-contracts/contracts/LSP17Extension.sol":{"ast":{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Extension.sol","exportedSymbols":{"ERC165":[5706],"LSP17Extension":[1550],"Version":[1557],"_INTERFACEID_LSP17_EXTENSION":[1298]},"id":1551,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1454,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:22"},{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/Version.sol","file":"./Version.sol","id":1456,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1551,"sourceUnit":1558,"src":"75:38:22","symbolAliases":[{"foreign":{"id":1455,"name":"Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"83:7:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165.sol","id":1458,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1551,"sourceUnit":5707,"src":"114:78:22","symbolAliases":[{"foreign":{"id":1457,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5706,"src":"122:6:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol","file":"./LSP17Constants.sol","id":1460,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1551,"sourceUnit":1302,"src":"207:66:22","symbolAliases":[{"foreign":{"id":1459,"name":"_INTERFACEID_LSP17_EXTENSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"215:28:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1462,"name":"ERC165","nameLocations":["579:6:22"],"nodeType":"IdentifierPath","referencedDeclaration":5706,"src":"579:6:22"},"id":1463,"nodeType":"InheritanceSpecifier","src":"579:6:22"},{"baseName":{"id":1464,"name":"Version","nameLocations":["587:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":1557,"src":"587:7:22"},"id":1465,"nodeType":"InheritanceSpecifier","src":"587:7:22"}],"canonicalName":"LSP17Extension","contractDependencies":[],"contractKind":"contract","documentation":{"id":1461,"nodeType":"StructuredDocumentation","src":"275:267:22","text":" @title Module to create a contract that can act as an extension.\n @dev Implementation of the extension logic according to LSP17ContractExtension.\n This module can be inherited to provide context of the msg variable related to the extendable contract"},"fullyImplemented":true,"id":1550,"linearizedBaseContracts":[1550,1557,5706,5912],"name":"LSP17Extension","nameLocation":"561:14:22","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[5705],"body":{"id":1483,"nodeType":"Block","src":"767:131:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1474,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"796:11:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1475,"name":"_INTERFACEID_LSP17_EXTENSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"811:28:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"796:43:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1479,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"879:11:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1477,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"855:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_LSP17Extension_$1550_$","typeString":"type(contract super LSP17Extension)"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"861:17:22","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":5705,"src":"855:23:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"855:36:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"796:95:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1473,"id":1482,"nodeType":"Return","src":"777:114:22"}]},"documentation":{"id":1466,"nodeType":"StructuredDocumentation","src":"601:56:22","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1484,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"671:17:22","nodeType":"FunctionDefinition","overrides":{"id":1470,"nodeType":"OverrideSpecifier","overrides":[],"src":"743:8:22"},"parameters":{"id":1469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1468,"mutability":"mutable","name":"interfaceId","nameLocation":"705:11:22","nodeType":"VariableDeclaration","scope":1484,"src":"698:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1467,"name":"bytes4","nodeType":"ElementaryTypeName","src":"698:6:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"688:34:22"},"returnParameters":{"id":1473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1484,"src":"761:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1471,"name":"bool","nodeType":"ElementaryTypeName","src":"761:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"760:6:22"},"scope":1550,"src":"662:236:22","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1499,"nodeType":"Block","src":"1169:55:22","statements":[{"expression":{"baseExpression":{"expression":{"id":1490,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1186:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1190:4:22","memberName":"data","nodeType":"MemberAccess","src":"1186:8:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1492,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1196:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1200:4:22","memberName":"data","nodeType":"MemberAccess","src":"1196:8:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1205:6:22","memberName":"length","nodeType":"MemberAccess","src":"1196:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3532","id":1495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1214:2:22","typeDescriptions":{"typeIdentifier":"t_rational_52_by_1","typeString":"int_const 52"},"value":"52"},"src":"1196:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"1186:31:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},"functionReturnParameters":1489,"id":1498,"nodeType":"Return","src":"1179:38:22"}]},"documentation":{"id":1485,"nodeType":"StructuredDocumentation","src":"904:147:22","text":" @dev Returns the original `msg.data` passed to the extendable contract\n without the appended `msg.sender` and `msg.value`."},"id":1500,"implemented":true,"kind":"function","modifiers":[],"name":"_extendableMsgData","nameLocation":"1065:18:22","nodeType":"FunctionDefinition","parameters":{"id":1486,"nodeType":"ParameterList","parameters":[],"src":"1083:2:22"},"returnParameters":{"id":1489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1500,"src":"1149:14:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1487,"name":"bytes","nodeType":"ElementaryTypeName","src":"1149:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1148:16:22"},"scope":1550,"src":"1056:168:22","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1526,"nodeType":"Block","src":"1397:135:22","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"expression":{"id":1510,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1459:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1463:4:22","memberName":"data","nodeType":"MemberAccess","src":"1459:8:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1517,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1489:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1493:4:22","memberName":"data","nodeType":"MemberAccess","src":"1489:8:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1498:6:22","memberName":"length","nodeType":"MemberAccess","src":"1489:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3332","id":1520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1507:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"1489:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"1459:51:22","startExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1512,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1468:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1472:4:22","memberName":"data","nodeType":"MemberAccess","src":"1468:8:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1477:6:22","memberName":"length","nodeType":"MemberAccess","src":"1468:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3532","id":1515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1486:2:22","typeDescriptions":{"typeIdentifier":"t_rational_52_by_1","typeString":"int_const 52"},"value":"52"},"src":"1468:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":1509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1451:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":1508,"name":"bytes20","nodeType":"ElementaryTypeName","src":"1451:7:22","typeDescriptions":{}}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1451:60:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":1507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1426:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1506,"name":"address","nodeType":"ElementaryTypeName","src":"1426:7:22","typeDescriptions":{}}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1426:99:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1505,"id":1525,"nodeType":"Return","src":"1407:118:22"}]},"documentation":{"id":1501,"nodeType":"StructuredDocumentation","src":"1230:90:22","text":" @dev Returns the original `msg.sender` calling the extendable contract."},"id":1527,"implemented":true,"kind":"function","modifiers":[],"name":"_extendableMsgSender","nameLocation":"1334:20:22","nodeType":"FunctionDefinition","parameters":{"id":1502,"nodeType":"ParameterList","parameters":[],"src":"1354:2:22"},"returnParameters":{"id":1505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1527,"src":"1388:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1503,"name":"address","nodeType":"ElementaryTypeName","src":"1388:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1387:9:22"},"scope":1550,"src":"1325:207:22","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1548,"nodeType":"Block","src":"1703:73:22","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"expression":{"id":1537,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1736:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1740:4:22","memberName":"data","nodeType":"MemberAccess","src":"1736:8:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"1736:31:22","startExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1539,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1745:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1749:4:22","memberName":"data","nodeType":"MemberAccess","src":"1745:8:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1754:6:22","memberName":"length","nodeType":"MemberAccess","src":"1745:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3332","id":1542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1763:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"1745:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":1536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1728:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1535,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1728:7:22","typeDescriptions":{}}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1728:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1720:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1533,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:22","typeDescriptions":{}}},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1720:49:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1532,"id":1547,"nodeType":"Return","src":"1713:56:22"}]},"documentation":{"id":1528,"nodeType":"StructuredDocumentation","src":"1538:89:22","text":" @dev Returns the original `msg.value` sent to the extendable contract."},"id":1549,"implemented":true,"kind":"function","modifiers":[],"name":"_extendableMsgValue","nameLocation":"1641:19:22","nodeType":"FunctionDefinition","parameters":{"id":1529,"nodeType":"ParameterList","parameters":[],"src":"1660:2:22"},"returnParameters":{"id":1532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1549,"src":"1694:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1530,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1693:9:22"},"scope":1550,"src":"1632:144:22","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1551,"src":"543:1235:22","usedErrors":[],"usedEvents":[]}],"src":"39:1740:22"},"id":22},"@lukso/lsp17contractextension-contracts/contracts/Version.sol":{"ast":{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/Version.sol","exportedSymbols":{"Version":[1557]},"id":1558,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1552,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:23"},{"abstract":true,"baseContracts":[],"canonicalName":"Version","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1557,"linearizedBaseContracts":[1557],"name":"Version","nameLocation":"82:7:23","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1553,"nodeType":"StructuredDocumentation","src":"96:144:23","text":" @dev Get the version of the contract.\n @notice Contract version.\n @return The version of the the contract."},"functionSelector":"ffa1ad74","id":1556,"mutability":"constant","name":"VERSION","nameLocation":"431:7:23","nodeType":"VariableDeclaration","scope":1557,"src":"408:41:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1554,"name":"string","nodeType":"ElementaryTypeName","src":"408:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"302e31352e30","id":1555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"441:8:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_fed1f171222133b7f8c821cadcb8060e693552c57ad69e08493dd1cb93260d1c","typeString":"literal_string \"0.15.0\""},"value":"0.15.0"},"visibility":"public"}],"scope":1558,"src":"64:417:23","usedErrors":[],"usedEvents":[]}],"src":"39:443:23"},"id":23},"@lukso/lsp2-contracts/contracts/LSP2Utils.sol":{"ast":{"absolutePath":"@lukso/lsp2-contracts/contracts/LSP2Utils.sol","exportedSymbols":{"IERC725Y":[1129],"LSP2Utils":[2294]},"id":2295,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1559,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:24"},{"absolutePath":"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol","file":"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol","id":1561,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2295,"sourceUnit":1130,"src":"78:89:24","symbolAliases":[{"foreign":{"id":1560,"name":"IERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"91:8:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"LSP2Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1562,"nodeType":"StructuredDocumentation","src":"169:312:24","text":" @title LSP2 Utility library.\n @author Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\n @dev LSP2Utils is a library of utility functions that can be used to encode data key of different key type\n defined on the LSP2 standard.\n Based on LSP2 ERC725Y JSON Schema standard."},"fullyImplemented":true,"id":2294,"linearizedBaseContracts":[2294],"name":"LSP2Utils","nameLocation":"490:9:24","nodeType":"ContractDefinition","nodes":[{"body":{"id":1577,"nodeType":"Block","src":"929:49:24","statements":[{"expression":{"arguments":[{"arguments":[{"id":1573,"name":"keyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"962:7:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"956:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1571,"name":"bytes","nodeType":"ElementaryTypeName","src":"956:5:24","typeDescriptions":{}}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"956:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1570,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"946:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"946:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1569,"id":1576,"nodeType":"Return","src":"939:32:24"}]},"documentation":{"id":1563,"nodeType":"StructuredDocumentation","src":"506:319:24","text":" @dev Generates a data key of keyType Singleton by hashing the string `keyName`. As:\n ```\n keccak256(\"keyName\")\n ```\n @param keyName The string to hash to generate a Singleton data key.\n @return The generated `bytes32` data key of key type Singleton."},"id":1578,"implemented":true,"kind":"function","modifiers":[],"name":"generateSingletonKey","nameLocation":"839:20:24","nodeType":"FunctionDefinition","parameters":{"id":1566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1565,"mutability":"mutable","name":"keyName","nameLocation":"883:7:24","nodeType":"VariableDeclaration","scope":1578,"src":"869:21:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1564,"name":"string","nodeType":"ElementaryTypeName","src":"869:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"859:37:24"},"returnParameters":{"id":1569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1578,"src":"920:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1567,"name":"bytes32","nodeType":"ElementaryTypeName","src":"920:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"919:9:24"},"scope":2294,"src":"830:148:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1626,"nodeType":"Block","src":"1548:415:24","statements":[{"assignments":[1587],"declarations":[{"constant":false,"id":1587,"mutability":"mutable","name":"dataKey","nameLocation":"1571:7:24","nodeType":"VariableDeclaration","scope":1626,"src":"1558:20:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1586,"name":"bytes","nodeType":"ElementaryTypeName","src":"1558:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1592,"initialValue":{"arguments":[{"id":1590,"name":"arrayKeyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"1587:12:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1581:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1588,"name":"bytes","nodeType":"ElementaryTypeName","src":"1581:5:24","typeDescriptions":{}}},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1581:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1558:42:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1594,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"1618:7:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1626:6:24","memberName":"length","nodeType":"MemberAccess","src":"1618:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"32","id":1596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1636:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1618:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d555354206265206c6f6e676572207468616e20322063686172616374657273","id":1598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1639:34:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_1330e5505d03eb8c2f3c566a974e84b491f709354814e0b84c5b75865f42fea2","typeString":"literal_string \"MUST be longer than 2 characters\""},"value":"MUST be longer than 2 characters"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1330e5505d03eb8c2f3c566a974e84b491f709354814e0b84c5b75865f42fea2","typeString":"literal_string \"MUST be longer than 2 characters\""}],"id":1593,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1610:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1610:64:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1600,"nodeType":"ExpressionStatement","src":"1610:64:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1602,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"1705:7:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1607,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1603,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"1713:7:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1721:6:24","memberName":"length","nodeType":"MemberAccess","src":"1713:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":1605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1730:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1713:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1705:27:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783562","id":1608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1736:4:24","typeDescriptions":{"typeIdentifier":"t_rational_91_by_1","typeString":"int_const 91"},"value":"0x5b"},"src":"1705:35:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1610,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"1783:7:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1615,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1611,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"1791:7:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1799:6:24","memberName":"length","nodeType":"MemberAccess","src":"1791:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1791:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1783:27:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783564","id":1616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1814:4:24","typeDescriptions":{"typeIdentifier":"t_rational_93_by_1","typeString":"int_const 93"},"value":"0x5d"},"src":"1783:35:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1705:113:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d697373696e6720656d7074792073717561726520627261636b65747320275b5d272061742074686520656e64206f6620746865206b6579206e616d65","id":1619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1847:63:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_5e3b6aa919fe1aff12eb32ef9916d0e70635ca417f19f845d5b01296b02b93b3","typeString":"literal_string \"Missing empty square brackets '[]' at the end of the key name\""},"value":"Missing empty square brackets '[]' at the end of the key name"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5e3b6aa919fe1aff12eb32ef9916d0e70635ca417f19f845d5b01296b02b93b3","typeString":"literal_string \"Missing empty square brackets '[]' at the end of the key name\""}],"id":1601,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1684:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1684:236:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1621,"nodeType":"ExpressionStatement","src":"1684:236:24"},{"expression":{"arguments":[{"id":1623,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"1948:7:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1622,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1938:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1938:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1585,"id":1625,"nodeType":"Return","src":"1931:25:24"}]},"documentation":{"id":1579,"nodeType":"StructuredDocumentation","src":"984:459:24","text":" @dev Generates a data key of keyType Array by hashing `arrayKeyName`. As:\n ```\n keccak256(\"arrayKeyName[]\")\n ```\n @param arrayKeyName The string that will be used to generate a data key of key type Array.\n @return The generated `bytes32` data key of key type Array.\n @custom:requirements\n - The `keyName` must include at the end of the string the square brackets `\"[]\"`."},"id":1627,"implemented":true,"kind":"function","modifiers":[],"name":"generateArrayKey","nameLocation":"1457:16:24","nodeType":"FunctionDefinition","parameters":{"id":1582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1581,"mutability":"mutable","name":"arrayKeyName","nameLocation":"1497:12:24","nodeType":"VariableDeclaration","scope":1627,"src":"1483:26:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1580,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1473:42:24"},"returnParameters":{"id":1585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1627,"src":"1539:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1583,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1539:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1538:9:24"},"scope":2294,"src":"1448:515:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1657,"nodeType":"Block","src":"2592:168:24","statements":[{"assignments":[1638],"declarations":[{"constant":false,"id":1638,"mutability":"mutable","name":"elementInArray","nameLocation":"2615:14:24","nodeType":"VariableDeclaration","scope":1657,"src":"2602:27:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1637,"name":"bytes","nodeType":"ElementaryTypeName","src":"2602:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1651,"initialValue":{"arguments":[{"arguments":[{"id":1644,"name":"arrayKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"2666:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2658:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":1642,"name":"bytes16","nodeType":"ElementaryTypeName","src":"2658:7:24","typeDescriptions":{}}},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2658:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},{"arguments":[{"id":1648,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"2697:5:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":1647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2689:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":1646,"name":"bytes16","nodeType":"ElementaryTypeName","src":"2689:7:24","typeDescriptions":{}}},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2689:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes16","typeString":"bytes16"},{"typeIdentifier":"t_bytes16","typeString":"bytes16"}],"expression":{"id":1640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2632:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1639,"name":"bytes","nodeType":"ElementaryTypeName","src":"2632:5:24","typeDescriptions":{}}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2638:6:24","memberName":"concat","nodeType":"MemberAccess","src":"2632:12:24","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2632:81:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2602:111:24"},{"expression":{"arguments":[{"id":1654,"name":"elementInArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"2738:14:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2730:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1652,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2730:7:24","typeDescriptions":{}}},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1636,"id":1656,"nodeType":"Return","src":"2723:30:24"}]},"documentation":{"id":1628,"nodeType":"StructuredDocumentation","src":"1969:491:24","text":" @dev Generates an Array data key at a specific `index` by concatenating together the first 16 bytes of `arrayKey`\n with the 16 bytes of `index`. As:\n ```\n arrayKey[index]\n ```\n @param arrayKey The Array data key from which to generate the Array data key at a specific `index`.\n @param index The index number in the `arrayKey`.\n @return The generated `bytes32` data key of key type Array at a specific `index`."},"id":1658,"implemented":true,"kind":"function","modifiers":[],"name":"generateArrayElementKeyAtIndex","nameLocation":"2474:30:24","nodeType":"FunctionDefinition","parameters":{"id":1633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1630,"mutability":"mutable","name":"arrayKey","nameLocation":"2522:8:24","nodeType":"VariableDeclaration","scope":1658,"src":"2514:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1629,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2514:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1632,"mutability":"mutable","name":"index","nameLocation":"2548:5:24","nodeType":"VariableDeclaration","scope":1658,"src":"2540:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1631,"name":"uint128","nodeType":"ElementaryTypeName","src":"2540:7:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2504:55:24"},"returnParameters":{"id":1636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1658,"src":"2583:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1634,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2583:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2582:9:24"},"scope":2294,"src":"2465:295:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1710,"nodeType":"Block","src":"3444:325:24","statements":[{"assignments":[1669],"declarations":[{"constant":false,"id":1669,"mutability":"mutable","name":"firstWordHash","nameLocation":"3462:13:24","nodeType":"VariableDeclaration","scope":1710,"src":"3454:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1668,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3454:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1676,"initialValue":{"arguments":[{"arguments":[{"id":1673,"name":"firstWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"3494:9:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3488:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1671,"name":"bytes","nodeType":"ElementaryTypeName","src":"3488:5:24","typeDescriptions":{}}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3488:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1670,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3478:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3478:27:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3454:51:24"},{"assignments":[1678],"declarations":[{"constant":false,"id":1678,"mutability":"mutable","name":"lastWordHash","nameLocation":"3523:12:24","nodeType":"VariableDeclaration","scope":1710,"src":"3515:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1677,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3515:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1685,"initialValue":{"arguments":[{"arguments":[{"id":1682,"name":"lastWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"3554:8:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3548:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1680,"name":"bytes","nodeType":"ElementaryTypeName","src":"3548:5:24","typeDescriptions":{}}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3548:15:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1679,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3538:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3538:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3515:49:24"},{"assignments":[1687],"declarations":[{"constant":false,"id":1687,"mutability":"mutable","name":"temporaryBytes","nameLocation":"3588:14:24","nodeType":"VariableDeclaration","scope":1710,"src":"3575:27:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1686,"name":"bytes","nodeType":"ElementaryTypeName","src":"3575:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1704,"initialValue":{"arguments":[{"arguments":[{"id":1693,"name":"firstWordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"3639:13:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3631:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes10_$","typeString":"type(bytes10)"},"typeName":{"id":1691,"name":"bytes10","nodeType":"ElementaryTypeName","src":"3631:7:24","typeDescriptions":{}}},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3631:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"arguments":[{"hexValue":"30","id":1697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3674:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3667:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1695,"name":"bytes2","nodeType":"ElementaryTypeName","src":"3667:6:24","typeDescriptions":{}}},"id":1698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3667:9:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"arguments":[{"id":1701,"name":"lastWordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"3698:12:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3690:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":1699,"name":"bytes20","nodeType":"ElementaryTypeName","src":"3690:7:24","typeDescriptions":{}}},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3690:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":1689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3605:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1688,"name":"bytes","nodeType":"ElementaryTypeName","src":"3605:5:24","typeDescriptions":{}}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3611:6:24","memberName":"concat","nodeType":"MemberAccess","src":"3605:12:24","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3605:116:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3575:146:24"},{"expression":{"arguments":[{"id":1707,"name":"temporaryBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"3747:14:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1705,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3739:7:24","typeDescriptions":{}}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1667,"id":1709,"nodeType":"Return","src":"3732:30:24"}]},"documentation":{"id":1659,"nodeType":"StructuredDocumentation","src":"2766:542:24","text":" @dev Generates a data key of key type Mapping that map `firstWord` to `lastWord`. This is done by hashing two strings words `firstWord` and `lastWord`. As:\n ```\n bytes10(firstWordHash):0000:bytes20(lastWordHash)\n ```\n @param firstWord The word to retrieve the first 10 bytes of its hash.\n @param lastWord The word to retrieve the first 10 bytes of its hash.\n @return The generated `bytes32` data key of key type Mapping that map `firstWord` to a specific `lastWord`."},"id":1711,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingKey","nameLocation":"3322:18:24","nodeType":"FunctionDefinition","parameters":{"id":1664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1661,"mutability":"mutable","name":"firstWord","nameLocation":"3364:9:24","nodeType":"VariableDeclaration","scope":1711,"src":"3350:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1660,"name":"string","nodeType":"ElementaryTypeName","src":"3350:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1663,"mutability":"mutable","name":"lastWord","nameLocation":"3397:8:24","nodeType":"VariableDeclaration","scope":1711,"src":"3383:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1662,"name":"string","nodeType":"ElementaryTypeName","src":"3383:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3340:71:24"},"returnParameters":{"id":1667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1711,"src":"3435:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1665,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3435:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3434:9:24"},"scope":2294,"src":"3313:456:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1754,"nodeType":"Block","src":"4458:258:24","statements":[{"assignments":[1722],"declarations":[{"constant":false,"id":1722,"mutability":"mutable","name":"firstWordHash","nameLocation":"4476:13:24","nodeType":"VariableDeclaration","scope":1754,"src":"4468:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1721,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4468:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1729,"initialValue":{"arguments":[{"arguments":[{"id":1726,"name":"firstWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"4508:9:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4502:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1724,"name":"bytes","nodeType":"ElementaryTypeName","src":"4502:5:24","typeDescriptions":{}}},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1723,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4492:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4492:27:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4468:51:24"},{"assignments":[1731],"declarations":[{"constant":false,"id":1731,"mutability":"mutable","name":"temporaryBytes","nameLocation":"4543:14:24","nodeType":"VariableDeclaration","scope":1754,"src":"4530:27:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1730,"name":"bytes","nodeType":"ElementaryTypeName","src":"4530:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1748,"initialValue":{"arguments":[{"arguments":[{"id":1737,"name":"firstWordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"4594:13:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes10_$","typeString":"type(bytes10)"},"typeName":{"id":1735,"name":"bytes10","nodeType":"ElementaryTypeName","src":"4586:7:24","typeDescriptions":{}}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"arguments":[{"hexValue":"30","id":1741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4629:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4622:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1739,"name":"bytes2","nodeType":"ElementaryTypeName","src":"4622:6:24","typeDescriptions":{}}},"id":1742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4622:9:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"arguments":[{"id":1745,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"4653:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4645:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":1743,"name":"bytes20","nodeType":"ElementaryTypeName","src":"4645:7:24","typeDescriptions":{}}},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4645:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":1733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4560:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1732,"name":"bytes","nodeType":"ElementaryTypeName","src":"4560:5:24","typeDescriptions":{}}},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4566:6:24","memberName":"concat","nodeType":"MemberAccess","src":"4560:12:24","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4560:108:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4530:138:24"},{"expression":{"arguments":[{"id":1751,"name":"temporaryBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"4694:14:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4686:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1749,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4686:7:24","typeDescriptions":{}}},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4686:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1720,"id":1753,"nodeType":"Return","src":"4679:30:24"}]},"documentation":{"id":1712,"nodeType":"StructuredDocumentation","src":"3775:557:24","text":" @dev Generates a data key of key type Mapping that map `firstWord` to an address `addr`.\n This is done by hashing the string word `firstWord` and concatenating its first 10 bytes with `addr`. As:\n ```\n bytes10(firstWordHash):0000:<address>\n ```\n @param firstWord The word to retrieve the first 10 bytes of its hash.\n @param addr An address to map `firstWord` to.\n @return The generated `bytes32` data key of key type Mapping that map `firstWord` to a specific address `addr`."},"id":1755,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingKey","nameLocation":"4346:18:24","nodeType":"FunctionDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"firstWord","nameLocation":"4388:9:24","nodeType":"VariableDeclaration","scope":1755,"src":"4374:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1713,"name":"string","nodeType":"ElementaryTypeName","src":"4374:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1716,"mutability":"mutable","name":"addr","nameLocation":"4415:4:24","nodeType":"VariableDeclaration","scope":1755,"src":"4407:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1715,"name":"address","nodeType":"ElementaryTypeName","src":"4407:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4364:61:24"},"returnParameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1755,"src":"4449:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1718,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4449:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4448:9:24"},"scope":2294,"src":"4337:379:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1783,"nodeType":"Block","src":"5320:177:24","statements":[{"assignments":[1766],"declarations":[{"constant":false,"id":1766,"mutability":"mutable","name":"generatedKey","nameLocation":"5343:12:24","nodeType":"VariableDeclaration","scope":1783,"src":"5330:25:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1765,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1777,"initialValue":{"arguments":[{"id":1770,"name":"keyPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"5384:9:24","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"arguments":[{"hexValue":"30","id":1773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5414:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5407:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1771,"name":"bytes2","nodeType":"ElementaryTypeName","src":"5407:6:24","typeDescriptions":{}}},"id":1774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5407:9:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"id":1775,"name":"bytes20Value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"5430:12:24","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":1768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5358:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1767,"name":"bytes","nodeType":"ElementaryTypeName","src":"5358:5:24","typeDescriptions":{}}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5364:6:24","memberName":"concat","nodeType":"MemberAccess","src":"5358:12:24","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5358:94:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5330:122:24"},{"expression":{"arguments":[{"id":1780,"name":"generatedKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"5477:12:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5469:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1778,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5469:7:24","typeDescriptions":{}}},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5469:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1764,"id":1782,"nodeType":"Return","src":"5462:28:24"}]},"documentation":{"id":1756,"nodeType":"StructuredDocumentation","src":"4722:470:24","text":" @dev Generate a data key of key type Mapping that map a 10 bytes `keyPrefix` to a `bytes20Value`. As:\n ```\n keyPrefix:bytes20Value\n ```\n @param keyPrefix The first part of the data key of key type Mapping.\n @param bytes20Value The second part of the data key of key type Mapping.\n @return The generated `bytes32` data key of key type Mapping that map a `keyPrefix` to a specific `bytes20Value`."},"id":1784,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingKey","nameLocation":"5206:18:24","nodeType":"FunctionDefinition","parameters":{"id":1761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1758,"mutability":"mutable","name":"keyPrefix","nameLocation":"5242:9:24","nodeType":"VariableDeclaration","scope":1784,"src":"5234:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"},"typeName":{"id":1757,"name":"bytes10","nodeType":"ElementaryTypeName","src":"5234:7:24","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},"visibility":"internal"},{"constant":false,"id":1760,"mutability":"mutable","name":"bytes20Value","nameLocation":"5269:12:24","nodeType":"VariableDeclaration","scope":1784,"src":"5261:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"},"typeName":{"id":1759,"name":"bytes20","nodeType":"ElementaryTypeName","src":"5261:7:24","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"visibility":"internal"}],"src":"5224:63:24"},"returnParameters":{"id":1764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1784,"src":"5311:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1762,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5311:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5310:9:24"},"scope":2294,"src":"5197:300:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1842,"nodeType":"Block","src":"6379:356:24","statements":[{"assignments":[1797],"declarations":[{"constant":false,"id":1797,"mutability":"mutable","name":"firstWordHash","nameLocation":"6397:13:24","nodeType":"VariableDeclaration","scope":1842,"src":"6389:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1796,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6389:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1804,"initialValue":{"arguments":[{"arguments":[{"id":1801,"name":"firstWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"6429:9:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6423:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1799,"name":"bytes","nodeType":"ElementaryTypeName","src":"6423:5:24","typeDescriptions":{}}},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6423:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1798,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6413:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6413:27:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6389:51:24"},{"assignments":[1806],"declarations":[{"constant":false,"id":1806,"mutability":"mutable","name":"secondWordHash","nameLocation":"6458:14:24","nodeType":"VariableDeclaration","scope":1842,"src":"6450:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1805,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6450:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1813,"initialValue":{"arguments":[{"arguments":[{"id":1810,"name":"secondWord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"6491:10:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6485:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1808,"name":"bytes","nodeType":"ElementaryTypeName","src":"6485:5:24","typeDescriptions":{}}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6485:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1807,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6475:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6475:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6450:53:24"},{"assignments":[1815],"declarations":[{"constant":false,"id":1815,"mutability":"mutable","name":"temporaryBytes","nameLocation":"6527:14:24","nodeType":"VariableDeclaration","scope":1842,"src":"6514:27:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1814,"name":"bytes","nodeType":"ElementaryTypeName","src":"6514:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1836,"initialValue":{"arguments":[{"arguments":[{"id":1821,"name":"firstWordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"6577:13:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6570:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes6_$","typeString":"type(bytes6)"},"typeName":{"id":1819,"name":"bytes6","nodeType":"ElementaryTypeName","src":"6570:6:24","typeDescriptions":{}}},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6570:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"}},{"arguments":[{"id":1825,"name":"secondWordHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"6612:14:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6605:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":1823,"name":"bytes4","nodeType":"ElementaryTypeName","src":"6605:6:24","typeDescriptions":{}}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6605:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"arguments":[{"hexValue":"30","id":1829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6648:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6641:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1827,"name":"bytes2","nodeType":"ElementaryTypeName","src":"6641:6:24","typeDescriptions":{}}},"id":1830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6641:9:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"arguments":[{"id":1833,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"6672:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6664:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":1831,"name":"bytes20","nodeType":"ElementaryTypeName","src":"6664:7:24","typeDescriptions":{}}},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6664:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes6","typeString":"bytes6"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":1817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6544:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1816,"name":"bytes","nodeType":"ElementaryTypeName","src":"6544:5:24","typeDescriptions":{}}},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6550:6:24","memberName":"concat","nodeType":"MemberAccess","src":"6544:12:24","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6544:143:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6514:173:24"},{"expression":{"arguments":[{"id":1839,"name":"temporaryBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"6713:14:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6705:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1837,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6705:7:24","typeDescriptions":{}}},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6705:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1795,"id":1841,"nodeType":"Return","src":"6698:30:24"}]},"documentation":{"id":1785,"nodeType":"StructuredDocumentation","src":"5503:704:24","text":" @dev Generate a data key of key type MappingWithGrouping by using two strings `firstWord`\n mapped to a `secondWord` mapped itself to a specific address `addr`. As:\n ```\n bytes6(keccak256(\"firstWord\")):bytes4(keccak256(\"secondWord\")):0000:<address>\n ```\n @param firstWord The word to retrieve the first 6 bytes of its hash.\n @param secondWord The word to retrieve the first 4 bytes of its hash.\n @param addr The address that makes the last part of the MappingWithGrouping.\n @return The generated `bytes32` data key of key type MappingWithGrouping that map a `firstWord` to a `secondWord` to a specific address `addr`."},"id":1843,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingWithGroupingKey","nameLocation":"6221:30:24","nodeType":"FunctionDefinition","parameters":{"id":1792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1787,"mutability":"mutable","name":"firstWord","nameLocation":"6275:9:24","nodeType":"VariableDeclaration","scope":1843,"src":"6261:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1786,"name":"string","nodeType":"ElementaryTypeName","src":"6261:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1789,"mutability":"mutable","name":"secondWord","nameLocation":"6308:10:24","nodeType":"VariableDeclaration","scope":1843,"src":"6294:24:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1788,"name":"string","nodeType":"ElementaryTypeName","src":"6294:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1791,"mutability":"mutable","name":"addr","nameLocation":"6336:4:24","nodeType":"VariableDeclaration","scope":1843,"src":"6328:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1790,"name":"address","nodeType":"ElementaryTypeName","src":"6328:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6251:95:24"},"returnParameters":{"id":1795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1843,"src":"6370:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1793,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6370:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6369:9:24"},"scope":2294,"src":"6212:523:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1874,"nodeType":"Block","src":"7579:197:24","statements":[{"assignments":[1856],"declarations":[{"constant":false,"id":1856,"mutability":"mutable","name":"generatedKey","nameLocation":"7602:12:24","nodeType":"VariableDeclaration","scope":1874,"src":"7589:25:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1855,"name":"bytes","nodeType":"ElementaryTypeName","src":"7589:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1868,"initialValue":{"arguments":[{"id":1860,"name":"keyPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"7643:9:24","typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"}},{"id":1861,"name":"mapPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"7666:9:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"arguments":[{"hexValue":"30","id":1864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7696:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7689:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1862,"name":"bytes2","nodeType":"ElementaryTypeName","src":"7689:6:24","typeDescriptions":{}}},"id":1865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7689:9:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"id":1866,"name":"subMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"7712:9:24","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes6","typeString":"bytes6"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":1858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7617:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1857,"name":"bytes","nodeType":"ElementaryTypeName","src":"7617:5:24","typeDescriptions":{}}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7623:6:24","memberName":"concat","nodeType":"MemberAccess","src":"7617:12:24","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7617:114:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"7589:142:24"},{"expression":{"arguments":[{"id":1871,"name":"generatedKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"7756:12:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7748:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1869,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7748:7:24","typeDescriptions":{}}},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7748:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1854,"id":1873,"nodeType":"Return","src":"7741:28:24"}]},"documentation":{"id":1844,"nodeType":"StructuredDocumentation","src":"6741:676:24","text":" @dev Generate a data key of key type MappingWithGrouping that map a `keyPrefix` to an other `mapPrefix` to a specific `subMapKey`. As:\n ```\n keyPrefix:mapPrefix:0000:subMapKey\n ```\n @param keyPrefix The first part (6 bytes) of the data key of keyType MappingWithGrouping.\n @param mapPrefix The second part (4 bytes) of the data key of keyType MappingWithGrouping.\n @param subMapKey The last part (bytes20) of the data key of keyType MappingWithGrouping.\n @return The generated `bytes32` data key of key type MappingWithGrouping that map a `keyPrefix` to a `mapPrefix` to a specific `subMapKey`."},"id":1875,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingWithGroupingKey","nameLocation":"7431:30:24","nodeType":"FunctionDefinition","parameters":{"id":1851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1846,"mutability":"mutable","name":"keyPrefix","nameLocation":"7478:9:24","nodeType":"VariableDeclaration","scope":1875,"src":"7471:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"},"typeName":{"id":1845,"name":"bytes6","nodeType":"ElementaryTypeName","src":"7471:6:24","typeDescriptions":{"typeIdentifier":"t_bytes6","typeString":"bytes6"}},"visibility":"internal"},{"constant":false,"id":1848,"mutability":"mutable","name":"mapPrefix","nameLocation":"7504:9:24","nodeType":"VariableDeclaration","scope":1875,"src":"7497:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1847,"name":"bytes4","nodeType":"ElementaryTypeName","src":"7497:6:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":1850,"mutability":"mutable","name":"subMapKey","nameLocation":"7531:9:24","nodeType":"VariableDeclaration","scope":1875,"src":"7523:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"},"typeName":{"id":1849,"name":"bytes20","nodeType":"ElementaryTypeName","src":"7523:7:24","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"visibility":"internal"}],"src":"7461:85:24"},"returnParameters":{"id":1854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1875,"src":"7570:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1852,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7570:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7569:9:24"},"scope":2294,"src":"7422:354:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1903,"nodeType":"Block","src":"8434:177:24","statements":[{"assignments":[1886],"declarations":[{"constant":false,"id":1886,"mutability":"mutable","name":"generatedKey","nameLocation":"8457:12:24","nodeType":"VariableDeclaration","scope":1903,"src":"8444:25:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1885,"name":"bytes","nodeType":"ElementaryTypeName","src":"8444:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1897,"initialValue":{"arguments":[{"id":1890,"name":"keyPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"8498:9:24","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"arguments":[{"hexValue":"30","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8528:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8521:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1891,"name":"bytes2","nodeType":"ElementaryTypeName","src":"8521:6:24","typeDescriptions":{}}},"id":1894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8521:9:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},{"id":1895,"name":"bytes20Value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"8544:12:24","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes2","typeString":"bytes2"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":1888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8472:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1887,"name":"bytes","nodeType":"ElementaryTypeName","src":"8472:5:24","typeDescriptions":{}}},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8478:6:24","memberName":"concat","nodeType":"MemberAccess","src":"8472:12:24","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8472:94:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"8444:122:24"},{"expression":{"arguments":[{"id":1900,"name":"generatedKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"8591:12:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1898,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8583:7:24","typeDescriptions":{}}},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1884,"id":1902,"nodeType":"Return","src":"8576:28:24"}]},"documentation":{"id":1876,"nodeType":"StructuredDocumentation","src":"7782:512:24","text":" @dev Generate a data key of key type MappingWithGrouping that map a 10 bytes `keyPrefix` to a specific `bytes20Value`. As:\n @param keyPrefix The first part of the data key of keyType MappingWithGrouping.\n @param bytes20Value The last of the data key of keyType MappingWithGrouping.\n @return The generated `bytes32` data key of key type MappingWithGrouping that map a `keyPrefix`\n (containing the first and second mapped word) to a specific `bytes20Value`."},"id":1904,"implemented":true,"kind":"function","modifiers":[],"name":"generateMappingWithGroupingKey","nameLocation":"8308:30:24","nodeType":"FunctionDefinition","parameters":{"id":1881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1878,"mutability":"mutable","name":"keyPrefix","nameLocation":"8356:9:24","nodeType":"VariableDeclaration","scope":1904,"src":"8348:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"},"typeName":{"id":1877,"name":"bytes10","nodeType":"ElementaryTypeName","src":"8348:7:24","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},"visibility":"internal"},{"constant":false,"id":1880,"mutability":"mutable","name":"bytes20Value","nameLocation":"8383:12:24","nodeType":"VariableDeclaration","scope":1904,"src":"8375:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"},"typeName":{"id":1879,"name":"bytes20","nodeType":"ElementaryTypeName","src":"8375:7:24","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"visibility":"internal"}],"src":"8338:63:24"},"returnParameters":{"id":1884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1904,"src":"8425:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1882,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8425:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8424:9:24"},"scope":2294,"src":"8299:312:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1944,"nodeType":"Block","src":"9017:208:24","statements":[{"assignments":[1917],"declarations":[{"constant":false,"id":1917,"mutability":"mutable","name":"hashFunctionDigest","nameLocation":"9035:18:24","nodeType":"VariableDeclaration","scope":1944,"src":"9027:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1916,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9027:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1924,"initialValue":{"arguments":[{"arguments":[{"id":1921,"name":"hashFunction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"9072:12:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9066:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1919,"name":"bytes","nodeType":"ElementaryTypeName","src":"9066:5:24","typeDescriptions":{}}},"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9066:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1918,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9056:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9056:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9027:59:24"},{"assignments":[1926],"declarations":[{"constant":false,"id":1926,"mutability":"mutable","name":"jsonDigest","nameLocation":"9104:10:24","nodeType":"VariableDeclaration","scope":1944,"src":"9096:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1925,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9096:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1933,"initialValue":{"arguments":[{"arguments":[{"id":1930,"name":"json","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"9133:4:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9127:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1928,"name":"bytes","nodeType":"ElementaryTypeName","src":"9127:5:24","typeDescriptions":{}}},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9127:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1927,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9117:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9117:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9096:43:24"},{"expression":{"arguments":[{"arguments":[{"id":1938,"name":"hashFunctionDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"9181:18:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9174:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":1936,"name":"bytes4","nodeType":"ElementaryTypeName","src":"9174:6:24","typeDescriptions":{}}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9174:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1940,"name":"jsonDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"9202:10:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1941,"name":"url","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"9214:3:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1934,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9157:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9161:12:24","memberName":"encodePacked","nodeType":"MemberAccess","src":"9157:16:24","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9157:61:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1915,"id":1943,"nodeType":"Return","src":"9150:68:24"}]},"documentation":{"id":1905,"nodeType":"StructuredDocumentation","src":"8617:231:24","text":" @dev Generate a JSONURL value content.\n @param hashFunction The function used to hash the JSON file.\n @param json Bytes value of the JSON file.\n @param url The URL where the JSON file is hosted."},"id":1945,"implemented":true,"kind":"function","modifiers":[],"name":"generateJSONURLValue","nameLocation":"8862:20:24","nodeType":"FunctionDefinition","parameters":{"id":1912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1907,"mutability":"mutable","name":"hashFunction","nameLocation":"8906:12:24","nodeType":"VariableDeclaration","scope":1945,"src":"8892:26:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1906,"name":"string","nodeType":"ElementaryTypeName","src":"8892:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1909,"mutability":"mutable","name":"json","nameLocation":"8942:4:24","nodeType":"VariableDeclaration","scope":1945,"src":"8928:18:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1908,"name":"string","nodeType":"ElementaryTypeName","src":"8928:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1911,"mutability":"mutable","name":"url","nameLocation":"8970:3:24","nodeType":"VariableDeclaration","scope":1945,"src":"8956:17:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1910,"name":"string","nodeType":"ElementaryTypeName","src":"8956:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8882:97:24"},"returnParameters":{"id":1915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1945,"src":"9003:12:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1913,"name":"bytes","nodeType":"ElementaryTypeName","src":"9003:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9002:14:24"},"scope":2294,"src":"8853:372:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1985,"nodeType":"Block","src":"9710:214:24","statements":[{"assignments":[1958],"declarations":[{"constant":false,"id":1958,"mutability":"mutable","name":"hashFunctionDigest","nameLocation":"9728:18:24","nodeType":"VariableDeclaration","scope":1985,"src":"9720:26:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1957,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9720:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1965,"initialValue":{"arguments":[{"arguments":[{"id":1962,"name":"hashFunction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"9765:12:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9759:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1960,"name":"bytes","nodeType":"ElementaryTypeName","src":"9759:5:24","typeDescriptions":{}}},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9759:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1959,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9749:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9749:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9720:59:24"},{"assignments":[1967],"declarations":[{"constant":false,"id":1967,"mutability":"mutable","name":"jsonDigest","nameLocation":"9797:10:24","nodeType":"VariableDeclaration","scope":1985,"src":"9789:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1966,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9789:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1974,"initialValue":{"arguments":[{"arguments":[{"id":1971,"name":"assetBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"9826:10:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9820:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1969,"name":"bytes","nodeType":"ElementaryTypeName","src":"9820:5:24","typeDescriptions":{}}},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9820:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1968,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9810:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9810:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9789:49:24"},{"expression":{"arguments":[{"arguments":[{"id":1979,"name":"hashFunctionDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"9880:18:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9873:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":1977,"name":"bytes4","nodeType":"ElementaryTypeName","src":"9873:6:24","typeDescriptions":{}}},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9873:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":1981,"name":"jsonDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"9901:10:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1982,"name":"url","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"9913:3:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1975,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9856:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9860:12:24","memberName":"encodePacked","nodeType":"MemberAccess","src":"9856:16:24","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9856:61:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1956,"id":1984,"nodeType":"Return","src":"9849:68:24"}]},"documentation":{"id":1946,"nodeType":"StructuredDocumentation","src":"9231:303:24","text":" @dev Generate a ASSETURL value content.\n @param hashFunction The function used to hash the JSON file.\n @param assetBytes Bytes value of the JSON file.\n @param url The URL where the JSON file is hosted.\n @return The encoded value as an `ASSETURL`."},"id":1986,"implemented":true,"kind":"function","modifiers":[],"name":"generateASSETURLValue","nameLocation":"9548:21:24","nodeType":"FunctionDefinition","parameters":{"id":1953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1948,"mutability":"mutable","name":"hashFunction","nameLocation":"9593:12:24","nodeType":"VariableDeclaration","scope":1986,"src":"9579:26:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1947,"name":"string","nodeType":"ElementaryTypeName","src":"9579:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1950,"mutability":"mutable","name":"assetBytes","nameLocation":"9629:10:24","nodeType":"VariableDeclaration","scope":1986,"src":"9615:24:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1949,"name":"string","nodeType":"ElementaryTypeName","src":"9615:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1952,"mutability":"mutable","name":"url","nameLocation":"9663:3:24","nodeType":"VariableDeclaration","scope":1986,"src":"9649:17:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1951,"name":"string","nodeType":"ElementaryTypeName","src":"9649:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9569:103:24"},"returnParameters":{"id":1956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1986,"src":"9696:12:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1954,"name":"bytes","nodeType":"ElementaryTypeName","src":"9696:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9695:14:24"},"scope":2294,"src":"9539:385:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2049,"nodeType":"Block","src":"10373:1273:24","statements":[{"assignments":[1996],"declarations":[{"constant":false,"id":1996,"mutability":"mutable","name":"pointer","nameLocation":"10870:7:24","nodeType":"VariableDeclaration","scope":2049,"src":"10862:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1995,"name":"uint256","nodeType":"ElementaryTypeName","src":"10862:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"documentation":" Pointer will always land on these values:\n ↓↓↓↓\n 0003 a00000\n 0005 fff83a0011\n 0020 aa0000000000000000000000000000000000000000000000000000000000cafe\n 0012 bb000000000000000000000000000000beef\n 0019 cc00000000000000000000000000000000000000000000deed\n ↑↑↑↑\n The pointer can only land on the length of the following bytes value.","id":1998,"initialValue":{"hexValue":"30","id":1997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10880:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10862:19:24"},{"body":{"id":2038,"nodeType":"Block","src":"11164:392:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2003,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"11182:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11192:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11182:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":2006,"name":"compactBytesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"11197:17:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11215:6:24","memberName":"length","nodeType":"MemberAccess","src":"11197:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11182:39:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2011,"nodeType":"IfStatement","src":"11178:57:24","trueBody":{"expression":{"hexValue":"66616c7365","id":2009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11230:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1993,"id":2010,"nodeType":"Return","src":"11223:12:24"}},{"assignments":[2013],"declarations":[{"constant":false,"id":2013,"mutability":"mutable","name":"elementLength","nameLocation":"11257:13:24","nodeType":"VariableDeclaration","scope":2038,"src":"11249:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2012,"name":"uint256","nodeType":"ElementaryTypeName","src":"11249:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2031,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"baseExpression":{"id":2020,"name":"compactBytesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"11367:17:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2022,"indexExpression":{"id":2021,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"11385:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11367:26:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},{"baseExpression":{"id":2023,"name":"compactBytesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"11419:17:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2027,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2024,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"11437:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11447:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11437:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11419:30:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"},{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"expression":{"id":2018,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"11325:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11329:12:24","memberName":"encodePacked","nodeType":"MemberAccess","src":"11325:16:24","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11325:146:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11297:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2016,"name":"bytes2","nodeType":"ElementaryTypeName","src":"11297:6:24","typeDescriptions":{}}},"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11297:192:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes2","typeString":"bytes2"}],"id":2015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11273:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":2014,"name":"uint16","nodeType":"ElementaryTypeName","src":"11273:6:24","typeDescriptions":{}}},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11273:230:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"VariableDeclarationStatement","src":"11249:254:24"},{"expression":{"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2032,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"11517:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2033,"name":"elementLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"11528:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11544:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11528:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11517:28:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2037,"nodeType":"ExpressionStatement","src":"11517:28:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1999,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"11128:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2000,"name":"compactBytesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"11138:17:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11156:6:24","memberName":"length","nodeType":"MemberAccess","src":"11138:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11128:34:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"documentation":" Check each length byte and make sure that when you reach the last length byte.\n Make sure that the last length describes exactly the last bytes value and you do not get out of bounds.","id":2039,"nodeType":"WhileStatement","src":"11121:435:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2040,"name":"pointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"11569:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2041,"name":"compactBytesArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"11580:17:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11598:6:24","memberName":"length","nodeType":"MemberAccess","src":"11580:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11569:35:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2046,"nodeType":"IfStatement","src":"11565:52:24","trueBody":{"expression":{"hexValue":"74727565","id":2044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11613:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1993,"id":2045,"nodeType":"Return","src":"11606:11:24"}},{"expression":{"hexValue":"66616c7365","id":2047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11634:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1993,"id":2048,"nodeType":"Return","src":"11627:12:24"}]},"documentation":{"id":1987,"nodeType":"StructuredDocumentation","src":"9930:334:24","text":" @dev Verify if `data` is a valid array of value encoded as a `CompactBytesArray` according to the LSP2 `CompactBytesArray` valueType specification.\n @param compactBytesArray The bytes value to verify.\n @return `true` if the `data` is correctly encoded CompactBytesArray, `false` otherwise."},"id":2050,"implemented":true,"kind":"function","modifiers":[],"name":"isCompactBytesArray","nameLocation":"10278:19:24","nodeType":"FunctionDefinition","parameters":{"id":1990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1989,"mutability":"mutable","name":"compactBytesArray","nameLocation":"10320:17:24","nodeType":"VariableDeclaration","scope":2050,"src":"10307:30:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1988,"name":"bytes","nodeType":"ElementaryTypeName","src":"10307:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10297:46:24"},"returnParameters":{"id":1993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1992,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2050,"src":"10367:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1991,"name":"bool","nodeType":"ElementaryTypeName","src":"10367:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10366:6:24"},"scope":2294,"src":"10269:1377:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2068,"nodeType":"Block","src":"12056:104:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2058,"name":"arrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"12070:11:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12082:6:24","memberName":"length","nodeType":"MemberAccess","src":"12070:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3136","id":2060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12092:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12070:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2065,"nodeType":"IfStatement","src":"12066:66:24","trueBody":{"id":2064,"nodeType":"Block","src":"12096:36:24","statements":[{"expression":{"hexValue":"74727565","id":2062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12117:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2057,"id":2063,"nodeType":"Return","src":"12110:11:24"}]}},{"expression":{"hexValue":"66616c7365","id":2066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12148:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2057,"id":2067,"nodeType":"Return","src":"12141:12:24"}]},"documentation":{"id":2051,"nodeType":"StructuredDocumentation","src":"11652:293:24","text":" @dev Validates if the bytes `arrayLength` are exactly 16 bytes long, and are of the exact size of an LSP2 Array length value\n @param arrayLength Plain bytes that should be validated.\n @return `true` if the value is 16 bytes long, `false` otherwise."},"id":2069,"implemented":true,"kind":"function","modifiers":[],"name":"isValidLSP2ArrayLengthValue","nameLocation":"11959:27:24","nodeType":"FunctionDefinition","parameters":{"id":2054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2053,"mutability":"mutable","name":"arrayLength","nameLocation":"12009:11:24","nodeType":"VariableDeclaration","scope":2069,"src":"11996:24:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2052,"name":"bytes","nodeType":"ElementaryTypeName","src":"11996:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11986:40:24"},"returnParameters":{"id":2057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2069,"src":"12050:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2055,"name":"bool","nodeType":"ElementaryTypeName","src":"12050:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12049:6:24"},"scope":2294,"src":"11950:210:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2142,"nodeType":"Block","src":"12894:512:24","statements":[{"expression":{"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2087,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"12904:8:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"33","id":2091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12929:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}],"id":2090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12915:13:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":2088,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12919:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2089,"nodeType":"ArrayTypeName","src":"12919:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":2092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12915:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"src":"12904:27:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2094,"nodeType":"ExpressionStatement","src":"12904:27:24"},{"expression":{"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2095,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"12941:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"33","id":2099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12966:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}],"id":2098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12954:11:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":2096,"name":"bytes","nodeType":"ElementaryTypeName","src":"12958:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2097,"nodeType":"ArrayTypeName","src":"12958:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":2100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12954:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"12941:27:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2102,"nodeType":"ExpressionStatement","src":"12941:27:24"},{"expression":{"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2103,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"13043:8:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2105,"indexExpression":{"hexValue":"30","id":2104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13052:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13043:11:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2106,"name":"arrayKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"13057:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"13043:22:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2108,"nodeType":"ExpressionStatement","src":"13043:22:24"},{"expression":{"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2109,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"13075:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2111,"indexExpression":{"hexValue":"30","id":2110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13086:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13075:13:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2114,"name":"newArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"13108:14:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":2112,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"13091:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13095:12:24","memberName":"encodePacked","nodeType":"MemberAccess","src":"13091:16:24","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13091:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"13075:48:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2117,"nodeType":"ExpressionStatement","src":"13075:48:24"},{"expression":{"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2118,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"13198:8:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2120,"indexExpression":{"hexValue":"31","id":2119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13207:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13198:11:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2121,"name":"removedElementMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"13212:20:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"13198:34:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2123,"nodeType":"ExpressionStatement","src":"13198:34:24"},{"expression":{"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2124,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"13242:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2126,"indexExpression":{"hexValue":"31","id":2125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13253:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13242:13:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"","id":2127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13258:2:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"src":"13242:18:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2129,"nodeType":"ExpressionStatement","src":"13242:18:24"},{"expression":{"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2130,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"13335:8:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2132,"indexExpression":{"hexValue":"32","id":2131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13344:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13335:11:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2133,"name":"removedElementIndexKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"13349:22:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"13335:36:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2135,"nodeType":"ExpressionStatement","src":"13335:36:24"},{"expression":{"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2136,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"13381:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2138,"indexExpression":{"hexValue":"32","id":2137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13392:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13381:13:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"","id":2139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13397:2:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"src":"13381:18:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2141,"nodeType":"ExpressionStatement","src":"13381:18:24"}]},"documentation":{"id":2070,"nodeType":"StructuredDocumentation","src":"12166:434:24","text":" @dev Generates Data Key/Value pairs for removing the last element from an LSP2 Array and a mapping Data Key.\n @param arrayKey The Data Key of Key Type Array.\n @param newArrayLength The new Array Length for the `arrayKey`.\n @param removedElementIndexKey The Data Key of Key Type Array Index for the removed element.\n @param removedElementMapKey The Data Key of a mapping to be removed."},"id":2143,"implemented":true,"kind":"function","modifiers":[],"name":"removeLastElementFromArrayAndMap","nameLocation":"12614:32:24","nodeType":"FunctionDefinition","parameters":{"id":2079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2072,"mutability":"mutable","name":"arrayKey","nameLocation":"12664:8:24","nodeType":"VariableDeclaration","scope":2143,"src":"12656:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2071,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12656:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2074,"mutability":"mutable","name":"newArrayLength","nameLocation":"12690:14:24","nodeType":"VariableDeclaration","scope":2143,"src":"12682:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2073,"name":"uint128","nodeType":"ElementaryTypeName","src":"12682:7:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2076,"mutability":"mutable","name":"removedElementIndexKey","nameLocation":"12722:22:24","nodeType":"VariableDeclaration","scope":2143,"src":"12714:30:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2075,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12714:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2078,"mutability":"mutable","name":"removedElementMapKey","nameLocation":"12762:20:24","nodeType":"VariableDeclaration","scope":2143,"src":"12754:28:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2077,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12754:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12646:142:24"},"returnParameters":{"id":2086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2082,"mutability":"mutable","name":"dataKeys","nameLocation":"12853:8:24","nodeType":"VariableDeclaration","scope":2143,"src":"12836:25:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2080,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12836:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2081,"nodeType":"ArrayTypeName","src":"12836:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2085,"mutability":"mutable","name":"dataValues","nameLocation":"12878:10:24","nodeType":"VariableDeclaration","scope":2143,"src":"12863:25:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2083,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2084,"nodeType":"ArrayTypeName","src":"12863:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"12835:54:24"},"scope":2294,"src":"12605:801:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2292,"nodeType":"Block","src":"14506:1736:24","statements":[{"expression":{"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2166,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"14516:8:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"35","id":2170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14541:1:24","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"}],"id":2169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14527:13:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":2167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14531:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2168,"nodeType":"ArrayTypeName","src":"14531:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":2171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14527:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"src":"14516:27:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2173,"nodeType":"ExpressionStatement","src":"14516:27:24"},{"expression":{"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2174,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"14553:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"35","id":2178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14578:1:24","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"}],"id":2177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14566:11:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":2175,"name":"bytes","nodeType":"ElementaryTypeName","src":"14570:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2176,"nodeType":"ArrayTypeName","src":"14570:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":2179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14566:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"14553:27:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2181,"nodeType":"ExpressionStatement","src":"14553:27:24"},{"expression":{"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2182,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"14655:8:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2184,"indexExpression":{"hexValue":"30","id":2183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14664:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14655:11:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2185,"name":"arrayKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"14669:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"14655:22:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2187,"nodeType":"ExpressionStatement","src":"14655:22:24"},{"expression":{"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2188,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"14687:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2190,"indexExpression":{"hexValue":"30","id":2189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14698:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14687:13:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2193,"name":"newArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"14720:14:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":2191,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14703:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14707:12:24","memberName":"encodePacked","nodeType":"MemberAccess","src":"14703:16:24","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14703:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"14687:48:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2196,"nodeType":"ExpressionStatement","src":"14687:48:24"},{"expression":{"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2197,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"14810:8:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2199,"indexExpression":{"hexValue":"31","id":2198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14819:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14810:11:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2200,"name":"removedElementMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"14824:20:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"14810:34:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2202,"nodeType":"ExpressionStatement","src":"14810:34:24"},{"expression":{"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2203,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"14854:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2205,"indexExpression":{"hexValue":"31","id":2204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14865:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14854:13:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"","id":2206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14870:2:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"src":"14854:18:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2208,"nodeType":"ExpressionStatement","src":"14854:18:24"},{"assignments":[2210],"declarations":[{"constant":false,"id":2210,"mutability":"mutable","name":"lastElementIndexKey","nameLocation":"14952:19:24","nodeType":"VariableDeclaration","scope":2292,"src":"14944:27:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2209,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14944:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2216,"initialValue":{"arguments":[{"id":2213,"name":"arrayKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"15028:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2214,"name":"newArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"15050:14:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":2211,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"14974:9:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP2Utils_$2294_$","typeString":"type(library LSP2Utils)"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14984:30:24","memberName":"generateArrayElementKeyAtIndex","nodeType":"MemberAccess","referencedDeclaration":1658,"src":"14974:40:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint128_$returns$_t_bytes32_$","typeString":"function (bytes32,uint128) pure returns (bytes32)"}},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14974:100:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"14944:130:24"},{"assignments":[2218],"declarations":[{"constant":false,"id":2218,"mutability":"mutable","name":"lastElementIndexValue","nameLocation":"15169:21:24","nodeType":"VariableDeclaration","scope":2292,"src":"15161:29:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"},"typeName":{"id":2217,"name":"bytes20","nodeType":"ElementaryTypeName","src":"15161:7:24","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"visibility":"internal"}],"id":2226,"initialValue":{"arguments":[{"arguments":[{"id":2223,"name":"lastElementIndexKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"15238:19:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2221,"name":"erc725YContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"15214:15:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC725Y_$1129","typeString":"contract IERC725Y"}},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15230:7:24","memberName":"getData","nodeType":"MemberAccess","referencedDeclaration":1100,"src":"15214:23:24","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) view external returns (bytes memory)"}},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15214:44:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15193:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":2219,"name":"bytes20","nodeType":"ElementaryTypeName","src":"15193:7:24","typeDescriptions":{}}},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15193:75:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"nodeType":"VariableDeclarationStatement","src":"15161:107:24"},{"expression":{"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2227,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"15384:8:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2229,"indexExpression":{"hexValue":"32","id":2228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15393:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15384:11:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2230,"name":"removedElementIndexKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"15398:22:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"15384:36:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2232,"nodeType":"ExpressionStatement","src":"15384:36:24"},{"expression":{"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2233,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"15430:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2235,"indexExpression":{"hexValue":"32","id":2234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15441:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15430:13:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2239,"name":"lastElementIndexValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"15459:21:24","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":2237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15446:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2236,"name":"bytes","nodeType":"ElementaryTypeName","src":"15446:5:24","typeDescriptions":{}}},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15452:6:24","memberName":"concat","nodeType":"MemberAccess","src":"15446:12:24","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15446:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"15430:51:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2242,"nodeType":"ExpressionStatement","src":"15430:51:24"},{"expression":{"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2243,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"15555:8:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2245,"indexExpression":{"hexValue":"33","id":2244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15564:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15555:11:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2246,"name":"lastElementIndexKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"15569:19:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"15555:33:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2248,"nodeType":"ExpressionStatement","src":"15555:33:24"},{"expression":{"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2249,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"15598:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2251,"indexExpression":{"hexValue":"33","id":2250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15609:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15598:13:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"","id":2252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15614:2:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"src":"15598:18:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2254,"nodeType":"ExpressionStatement","src":"15598:18:24"},{"assignments":[2256],"declarations":[{"constant":false,"id":2256,"mutability":"mutable","name":"lastElementMapKey","nameLocation":"15697:17:24","nodeType":"VariableDeclaration","scope":2292,"src":"15689:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2255,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15689:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2265,"initialValue":{"arguments":[{"arguments":[{"id":2261,"name":"removedElementMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"15767:20:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15759:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes10_$","typeString":"type(bytes10)"},"typeName":{"id":2259,"name":"bytes10","nodeType":"ElementaryTypeName","src":"15759:7:24","typeDescriptions":{}}},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15759:29:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"id":2263,"name":"lastElementIndexValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"15802:21:24","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"expression":{"id":2257,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"15717:9:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP2Utils_$2294_$","typeString":"type(library LSP2Utils)"}},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15727:18:24","memberName":"generateMappingKey","nodeType":"MemberAccess","referencedDeclaration":1784,"src":"15717:28:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes10_$_t_bytes20_$returns$_t_bytes32_$","typeString":"function (bytes10,bytes20) pure returns (bytes32)"}},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15717:116:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"15689:144:24"},{"assignments":[2267],"declarations":[{"constant":false,"id":2267,"mutability":"mutable","name":"lastElementMapValue","nameLocation":"15925:19:24","nodeType":"VariableDeclaration","scope":2292,"src":"15912:32:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2266,"name":"bytes","nodeType":"ElementaryTypeName","src":"15912:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2279,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2274,"name":"lastElementMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"16008:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2272,"name":"erc725YContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"15984:15:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC725Y_$1129","typeString":"contract IERC725Y"}},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16000:7:24","memberName":"getData","nodeType":"MemberAccess","referencedDeclaration":1100,"src":"15984:23:24","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) view external returns (bytes memory)"}},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15984:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15977:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":2270,"name":"bytes4","nodeType":"ElementaryTypeName","src":"15977:6:24","typeDescriptions":{}}},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15977:50:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":2277,"name":"removedElementIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2155,"src":"16041:19:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":2268,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"15947:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15951:12:24","memberName":"encodePacked","nodeType":"MemberAccess","src":"15947:16:24","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15947:123:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"15912:158:24"},{"expression":{"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2280,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"16159:8:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":2282,"indexExpression":{"hexValue":"34","id":2281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16168:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16159:11:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2283,"name":"lastElementMapKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"16173:17:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"16159:31:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2285,"nodeType":"ExpressionStatement","src":"16159:31:24"},{"expression":{"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2286,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"16200:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":2288,"indexExpression":{"hexValue":"34","id":2287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16211:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16200:13:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2289,"name":"lastElementMapValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"16216:19:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16200:35:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2291,"nodeType":"ExpressionStatement","src":"16200:35:24"}]},"documentation":{"id":2144,"nodeType":"StructuredDocumentation","src":"13412:733:24","text":" @dev Generates Data Key/Value pairs for removing an element from an LSP2 Array and a mapping Data Key.\n @custom:info The function assumes that the Data Value stored under the mapping Data Key is of length 20 where the last 16 bytes are the index of the element in the array.\n @param erc725YContract The ERC725Y contract.\n @param arrayKey The Data Key of Key Type Array.\n @param newArrayLength The new Array Length for the `arrayKey`.\n @param removedElementIndexKey The Data Key of Key Type Array Index for the removed element.\n @param removedElementIndex the index of the removed element.\n @param removedElementMapKey The Data Key of a mapping to be removed."},"id":2293,"implemented":true,"kind":"function","modifiers":[],"name":"removeElementFromArrayAndMap","nameLocation":"14159:28:24","nodeType":"FunctionDefinition","parameters":{"id":2158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2147,"mutability":"mutable","name":"erc725YContract","nameLocation":"14206:15:24","nodeType":"VariableDeclaration","scope":2293,"src":"14197:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC725Y_$1129","typeString":"contract IERC725Y"},"typeName":{"id":2146,"nodeType":"UserDefinedTypeName","pathNode":{"id":2145,"name":"IERC725Y","nameLocations":["14197:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":1129,"src":"14197:8:24"},"referencedDeclaration":1129,"src":"14197:8:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC725Y_$1129","typeString":"contract IERC725Y"}},"visibility":"internal"},{"constant":false,"id":2149,"mutability":"mutable","name":"arrayKey","nameLocation":"14239:8:24","nodeType":"VariableDeclaration","scope":2293,"src":"14231:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14231:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2151,"mutability":"mutable","name":"newArrayLength","nameLocation":"14265:14:24","nodeType":"VariableDeclaration","scope":2293,"src":"14257:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2150,"name":"uint128","nodeType":"ElementaryTypeName","src":"14257:7:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2153,"mutability":"mutable","name":"removedElementIndexKey","nameLocation":"14297:22:24","nodeType":"VariableDeclaration","scope":2293,"src":"14289:30:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14289:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2155,"mutability":"mutable","name":"removedElementIndex","nameLocation":"14337:19:24","nodeType":"VariableDeclaration","scope":2293,"src":"14329:27:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2154,"name":"uint128","nodeType":"ElementaryTypeName","src":"14329:7:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2157,"mutability":"mutable","name":"removedElementMapKey","nameLocation":"14374:20:24","nodeType":"VariableDeclaration","scope":2293,"src":"14366:28:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2156,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14366:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14187:213:24"},"returnParameters":{"id":2165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2161,"mutability":"mutable","name":"dataKeys","nameLocation":"14465:8:24","nodeType":"VariableDeclaration","scope":2293,"src":"14448:25:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2159,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14448:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2160,"nodeType":"ArrayTypeName","src":"14448:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2164,"mutability":"mutable","name":"dataValues","nameLocation":"14490:10:24","nodeType":"VariableDeclaration","scope":2293,"src":"14475:25:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2162,"name":"bytes","nodeType":"ElementaryTypeName","src":"14475:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2163,"nodeType":"ArrayTypeName","src":"14475:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"14447:54:24"},"scope":2294,"src":"14150:2092:24","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2295,"src":"482:15762:24","usedErrors":[],"usedEvents":[]}],"src":"39:16206:24"},"id":24},"@lukso/lsp4-contracts/contracts/LSP4Constants.sol":{"ast":{"absolutePath":"@lukso/lsp4-contracts/contracts/LSP4Constants.sol","exportedSymbols":{"_LSP4_CREATORS_ARRAY_KEY":[2323],"_LSP4_CREATORS_MAP_KEY_PREFIX":[2326],"_LSP4_METADATA_KEY":[2329],"_LSP4_SUPPORTED_STANDARDS_KEY":[2308],"_LSP4_SUPPORTED_STANDARDS_VALUE":[2311],"_LSP4_TOKEN_NAME_KEY":[2314],"_LSP4_TOKEN_SYMBOL_KEY":[2317],"_LSP4_TOKEN_TYPE_COLLECTION":[2305],"_LSP4_TOKEN_TYPE_KEY":[2320],"_LSP4_TOKEN_TYPE_NFT":[2302],"_LSP4_TOKEN_TYPE_TOKEN":[2299]},"id":2330,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2296,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:25"},{"constant":true,"id":2299,"mutability":"constant","name":"_LSP4_TOKEN_TYPE_TOKEN","nameLocation":"96:22:25","nodeType":"VariableDeclaration","scope":2330,"src":"79:43:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2297,"name":"uint256","nodeType":"ElementaryTypeName","src":"79:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":2298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"121:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"constant":true,"id":2302,"mutability":"constant","name":"_LSP4_TOKEN_TYPE_NFT","nameLocation":"141:20:25","nodeType":"VariableDeclaration","scope":2330,"src":"124:41:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2300,"name":"uint256","nodeType":"ElementaryTypeName","src":"124:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"164:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":true,"id":2305,"mutability":"constant","name":"_LSP4_TOKEN_TYPE_COLLECTION","nameLocation":"184:27:25","nodeType":"VariableDeclaration","scope":2330,"src":"167:48:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2303,"name":"uint256","nodeType":"ElementaryTypeName","src":"167:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":2304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"214:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"internal"},{"constant":true,"id":2308,"mutability":"constant","name":"_LSP4_SUPPORTED_STANDARDS_KEY","nameLocation":"356:29:25","nodeType":"VariableDeclaration","scope":2330,"src":"339:115:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2306,"name":"bytes32","nodeType":"ElementaryTypeName","src":"339:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307865616665633464383966613936313938383462363030303061346439363632346133386637616332643864396136303465636630376331326337376534383063","id":2307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"388:66:25","typeDescriptions":{"typeIdentifier":"t_rational_106291344305384829327323777171026204092068863755428044681309751323096797562892_by_1","typeString":"int_const 1062...(70 digits omitted)...2892"},"value":"0xeafec4d89fa9619884b60000a4d96624a38f7ac2d8d9a604ecf07c12c77e480c"},"visibility":"internal"},{"constant":true,"id":2311,"mutability":"constant","name":"_LSP4_SUPPORTED_STANDARDS_VALUE","nameLocation":"513:31:25","nodeType":"VariableDeclaration","scope":2330,"src":"498:62:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2309,"name":"bytes","nodeType":"ElementaryTypeName","src":"498:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":{"hexValue":"a4d96624","id":2310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"547:13:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_8031d7c868dca389fb4e96c3f4df5650d21c8966ab67d753610d01e72b8a0278","typeString":"literal_string hex\"a4d96624\""}},"visibility":"internal"},{"constant":true,"id":2314,"mutability":"constant","name":"_LSP4_TOKEN_NAME_KEY","nameLocation":"610:20:25","nodeType":"VariableDeclaration","scope":2330,"src":"593:106:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"593:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307864656261316532393266386261383832333865313061623363376638386264346265346661633536636164353139346236656363656166363533343638616631","id":2313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"633:66:25","typeDescriptions":{"typeIdentifier":"t_rational_100742294102289264549068743044138917200237013684961480918773254279156963117809_by_1","typeString":"int_const 1007...(70 digits omitted)...7809"},"value":"0xdeba1e292f8ba88238e10ab3c7f88bd4be4fac56cad5194b6ecceaf653468af1"},"visibility":"internal"},{"constant":true,"id":2317,"mutability":"constant","name":"_LSP4_TOKEN_SYMBOL_KEY","nameLocation":"751:22:25","nodeType":"VariableDeclaration","scope":2330,"src":"734:108:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"734:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307832663061363861623037373638653031393433613539396537333336326130653137613633613732653934646432653338346432633164346462393332373536","id":2316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"776:66:25","typeDescriptions":{"typeIdentifier":"t_rational_21277094746618207019470167271284656117398221945515764204453433194201650243414_by_1","typeString":"int_const 2127...(69 digits omitted)...3414"},"value":"0x2f0a68ab07768e01943a599e73362a0e17a63a72e94dd2e384d2c1d4db932756"},"visibility":"internal"},{"constant":true,"id":2320,"mutability":"constant","name":"_LSP4_TOKEN_TYPE_KEY","nameLocation":"892:20:25","nodeType":"VariableDeclaration","scope":2330,"src":"875:106:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2318,"name":"bytes32","nodeType":"ElementaryTypeName","src":"875:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307865303236316661393564623265623362353433396264303333636461363664353662393666393266323433613832323866643837353530656437626466646233","id":2319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"915:66:25","typeDescriptions":{"typeIdentifier":"t_rational_101385436791348632936915532486413845551797772917774025249609027894947960716723_by_1","typeString":"int_const 1013...(70 digits omitted)...6723"},"value":"0xe0261fa95db2eb3b5439bd033cda66d56b96f92f243a8228fd87550ed7bdfdb3"},"visibility":"internal"},{"constant":true,"id":2323,"mutability":"constant","name":"_LSP4_CREATORS_ARRAY_KEY","nameLocation":"1032:24:25","nodeType":"VariableDeclaration","scope":2330,"src":"1015:110:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2321,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1015:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307831313462643033623361343664343837353936383064383165626232623431346664613764303330613731303561383531383637616363663163323335326537","id":2322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1059:66:25","typeDescriptions":{"typeIdentifier":"t_rational_7823269115788143993216587392684831921119603420524855766908370213719800763111_by_1","typeString":"int_const 7823...(68 digits omitted)...3111"},"value":"0x114bd03b3a46d48759680d81ebb2b414fda7d030a7105a851867accf1c2352e7"},"visibility":"internal"},{"constant":true,"id":2326,"mutability":"constant","name":"_LSP4_CREATORS_MAP_KEY_PREFIX","nameLocation":"1186:29:25","nodeType":"VariableDeclaration","scope":2330,"src":"1169:71:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"},"typeName":{"id":2324,"name":"bytes10","nodeType":"ElementaryTypeName","src":"1169:7:25","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},"value":{"hexValue":"30783664653835656166356439383262346535646130","id":2325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1218:22:25","typeDescriptions":{"typeIdentifier":"t_rational_519024414032760576826784_by_1","typeString":"int_const 519024414032760576826784"},"value":"0x6de85eaf5d982b4e5da0"},"visibility":"internal"},{"constant":true,"id":2329,"mutability":"constant","name":"_LSP4_METADATA_KEY","nameLocation":"1289:18:25","nodeType":"VariableDeclaration","scope":2330,"src":"1272:104:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2327,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1272:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839616662393563616363396639353835386563343461613863336236383535313130303265333061653534343135383233663430363132386238356232333865","id":2328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1310:66:25","typeDescriptions":{"typeIdentifier":"t_rational_70100691122746653413313834938425876827577001362390431744658469452576166978446_by_1","typeString":"int_const 7010...(69 digits omitted)...8446"},"value":"0x9afb95cacc9f95858ec44aa8c3b685511002e30ae54415823f406128b85b238e"},"visibility":"internal"}],"src":"39:1339:25"},"id":25},"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol":{"ast":{"absolutePath":"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol","exportedSymbols":{"ERC725Y":[610],"ERC725YCore":[842],"LSP4DigitalAssetMetadata":[2421],"LSP4DigitalAssetMetadataCore":[2483],"_LSP4_SUPPORTED_STANDARDS_KEY":[2308],"_LSP4_SUPPORTED_STANDARDS_VALUE":[2311],"_LSP4_TOKEN_NAME_KEY":[2314],"_LSP4_TOKEN_SYMBOL_KEY":[2317],"_LSP4_TOKEN_TYPE_KEY":[2320]},"id":2422,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2331,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:26"},{"absolutePath":"@erc725/smart-contracts/contracts/ERC725Y.sol","file":"@erc725/smart-contracts/contracts/ERC725Y.sol","id":2333,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2422,"sourceUnit":611,"src":"75:70:26","symbolAliases":[{"foreign":{"id":2332,"name":"ERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"83:7:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/ERC725YCore.sol","file":"@erc725/smart-contracts/contracts/ERC725YCore.sol","id":2335,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2422,"sourceUnit":843,"src":"146:78:26","symbolAliases":[{"foreign":{"id":2334,"name":"ERC725YCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"154:11:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadataCore.sol","file":"./LSP4DigitalAssetMetadataCore.sol","id":2337,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2422,"sourceUnit":2484,"src":"225:80:26","symbolAliases":[{"foreign":{"id":2336,"name":"LSP4DigitalAssetMetadataCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"233:28:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp4-contracts/contracts/LSP4Constants.sol","file":"./LSP4Constants.sol","id":2343,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2422,"sourceUnit":2330,"src":"320:189:26","symbolAliases":[{"foreign":{"id":2338,"name":"_LSP4_SUPPORTED_STANDARDS_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"333:29:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2339,"name":"_LSP4_SUPPORTED_STANDARDS_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"368:31:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2340,"name":"_LSP4_TOKEN_NAME_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"405:20:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2341,"name":"_LSP4_TOKEN_SYMBOL_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"431:22:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2342,"name":"_LSP4_TOKEN_TYPE_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"459:20:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2345,"name":"ERC725Y","nameLocations":["816:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"816:7:26"},"id":2346,"nodeType":"InheritanceSpecifier","src":"816:7:26"},{"baseName":{"id":2347,"name":"LSP4DigitalAssetMetadataCore","nameLocations":["829:28:26"],"nodeType":"IdentifierPath","referencedDeclaration":2483,"src":"829:28:26"},"id":2348,"nodeType":"InheritanceSpecifier","src":"829:28:26"}],"canonicalName":"LSP4DigitalAssetMetadata","contractDependencies":[],"contractKind":"contract","documentation":{"id":2344,"nodeType":"StructuredDocumentation","src":"511:254:26","text":" @title Implementation of a LSP4DigitalAssetMetadata contract that stores the **Token-Metadata** (`LSP4TokenName` and `LSP4TokenSymbol`) in its ERC725Y data store.\n @author Matthew Stevens\n @dev Standard Implementation of the LSP4 standard."},"fullyImplemented":true,"id":2421,"linearizedBaseContracts":[2421,2483,610,842,1129,5706,5912,971],"name":"LSP4DigitalAssetMetadata","nameLocation":"784:24:26","nodeType":"ContractDefinition","nodes":[{"body":{"id":2400,"nodeType":"Block","src":"1408:412:26","statements":[{"expression":{"arguments":[{"id":2366,"name":"_LSP4_SUPPORTED_STANDARDS_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2308,"src":"1512:29:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2367,"name":"_LSP4_SUPPORTED_STANDARDS_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"1555:31:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2363,"name":"ERC725YCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"1478:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC725YCore_$842_$","typeString":"type(contract ERC725YCore)"}},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1490:8:26","memberName":"_setData","nodeType":"MemberAccess","referencedDeclaration":820,"src":"1478:20:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1478:118:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2369,"nodeType":"ExpressionStatement","src":"1478:118:26"},{"expression":{"arguments":[{"id":2373,"name":"_LSP4_TOKEN_NAME_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"1628:20:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":2376,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"1656:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1650:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2374,"name":"bytes","nodeType":"ElementaryTypeName","src":"1650:5:26","typeDescriptions":{}}},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1650:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2370,"name":"ERC725YCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"1607:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC725YCore_$842_$","typeString":"type(contract ERC725YCore)"}},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1619:8:26","memberName":"_setData","nodeType":"MemberAccess","referencedDeclaration":820,"src":"1607:20:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1607:56:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2379,"nodeType":"ExpressionStatement","src":"1607:56:26"},{"expression":{"arguments":[{"id":2383,"name":"_LSP4_TOKEN_SYMBOL_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"1694:22:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":2386,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"1724:7:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1718:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2384,"name":"bytes","nodeType":"ElementaryTypeName","src":"1718:5:26","typeDescriptions":{}}},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2380,"name":"ERC725YCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"1673:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC725YCore_$842_$","typeString":"type(contract ERC725YCore)"}},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1685:8:26","memberName":"_setData","nodeType":"MemberAccess","referencedDeclaration":820,"src":"1673:20:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1673:60:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2389,"nodeType":"ExpressionStatement","src":"1673:60:26"},{"expression":{"arguments":[{"id":2393,"name":"_LSP4_TOKEN_TYPE_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"1764:20:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":2396,"name":"lsp4TokenType_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"1797:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2394,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1786:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1790:6:26","memberName":"encode","nodeType":"MemberAccess","src":"1786:10:26","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1786:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2390,"name":"ERC725YCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"1743:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC725YCore_$842_$","typeString":"type(contract ERC725YCore)"}},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1755:8:26","memberName":"_setData","nodeType":"MemberAccess","referencedDeclaration":820,"src":"1743:20:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1743:70:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2399,"nodeType":"ExpressionStatement","src":"1743:70:26"}]},"documentation":{"id":2349,"nodeType":"StructuredDocumentation","src":"864:375:26","text":" @notice Deploying a digital asset `name_` with the `symbol_` symbol.\n @param name_ The name of the token.\n @param symbol_ The symbol of the token.\n @param initialOwner_ The owner of the token contract.\n @param lsp4TokenType_ The type of token this digital asset contract represents (`0` = Token, `1` = NFT, `2` = Collection)."},"id":2401,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2360,"name":"initialOwner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"1393:13:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2361,"kind":"baseConstructorSpecifier","modifierName":{"id":2359,"name":"ERC725Y","nameLocations":["1385:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"1385:7:26"},"nodeType":"ModifierInvocation","src":"1385:22:26"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2351,"mutability":"mutable","name":"name_","nameLocation":"1279:5:26","nodeType":"VariableDeclaration","scope":2401,"src":"1265:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2350,"name":"string","nodeType":"ElementaryTypeName","src":"1265:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2353,"mutability":"mutable","name":"symbol_","nameLocation":"1308:7:26","nodeType":"VariableDeclaration","scope":2401,"src":"1294:21:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2352,"name":"string","nodeType":"ElementaryTypeName","src":"1294:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2355,"mutability":"mutable","name":"initialOwner_","nameLocation":"1333:13:26","nodeType":"VariableDeclaration","scope":2401,"src":"1325:21:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2354,"name":"address","nodeType":"ElementaryTypeName","src":"1325:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2357,"mutability":"mutable","name":"lsp4TokenType_","nameLocation":"1364:14:26","nodeType":"VariableDeclaration","scope":2401,"src":"1356:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2356,"name":"uint256","nodeType":"ElementaryTypeName","src":"1356:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1255:129:26"},"returnParameters":{"id":2362,"nodeType":"ParameterList","parameters":[],"src":"1408:0:26"},"scope":2421,"src":"1244:576:26","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[820,2482],"body":{"id":2419,"nodeType":"Block","src":"2158:74:26","statements":[{"expression":{"arguments":[{"id":2415,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"2206:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2416,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"2215:9:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2412,"name":"LSP4DigitalAssetMetadataCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"2168:28:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP4DigitalAssetMetadataCore_$2483_$","typeString":"type(contract LSP4DigitalAssetMetadataCore)"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2197:8:26","memberName":"_setData","nodeType":"MemberAccess","referencedDeclaration":2482,"src":"2168:37:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2168:57:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2418,"nodeType":"ExpressionStatement","src":"2168:57:26"}]},"documentation":{"id":2402,"nodeType":"StructuredDocumentation","src":"1826:177:26","text":" @dev The ERC725Y data keys `LSP4TokenName` and `LSP4TokenSymbol` cannot be changed\n via this function once the digital asset contract has been deployed."},"id":2420,"implemented":true,"kind":"function","modifiers":[],"name":"_setData","nameLocation":"2017:8:26","nodeType":"FunctionDefinition","overrides":{"id":2410,"nodeType":"OverrideSpecifier","overrides":[{"id":2408,"name":"ERC725YCore","nameLocations":["2115:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":842,"src":"2115:11:26"},{"id":2409,"name":"LSP4DigitalAssetMetadataCore","nameLocations":["2128:28:26"],"nodeType":"IdentifierPath","referencedDeclaration":2483,"src":"2128:28:26"}],"src":"2106:51:26"},"parameters":{"id":2407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2404,"mutability":"mutable","name":"dataKey","nameLocation":"2043:7:26","nodeType":"VariableDeclaration","scope":2420,"src":"2035:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2403,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2035:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2406,"mutability":"mutable","name":"dataValue","nameLocation":"2073:9:26","nodeType":"VariableDeclaration","scope":2420,"src":"2060:22:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2405,"name":"bytes","nodeType":"ElementaryTypeName","src":"2060:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2025:63:26"},"returnParameters":{"id":2411,"nodeType":"ParameterList","parameters":[],"src":"2158:0:26"},"scope":2421,"src":"2008:224:26","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2422,"src":"766:1468:26","usedErrors":[1009,1012,1015,2488,2491,2494],"usedEvents":[876,1092]}],"src":"39:2196:26"},"id":26},"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadataCore.sol":{"ast":{"absolutePath":"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadataCore.sol","exportedSymbols":{"ERC725YCore":[842],"LSP4DigitalAssetMetadataCore":[2483],"LSP4TokenNameNotEditable":[2488],"LSP4TokenSymbolNotEditable":[2491],"LSP4TokenTypeNotEditable":[2494],"_LSP4_TOKEN_NAME_KEY":[2314],"_LSP4_TOKEN_SYMBOL_KEY":[2317],"_LSP4_TOKEN_TYPE_KEY":[2320]},"id":2484,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2423,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:27"},{"absolutePath":"@erc725/smart-contracts/contracts/ERC725YCore.sol","file":"@erc725/smart-contracts/contracts/ERC725YCore.sol","id":2425,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2484,"sourceUnit":843,"src":"75:78:27","symbolAliases":[{"foreign":{"id":2424,"name":"ERC725YCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"83:11:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp4-contracts/contracts/LSP4Constants.sol","file":"./LSP4Constants.sol","id":2429,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2484,"sourceUnit":2330,"src":"168:117:27","symbolAliases":[{"foreign":{"id":2426,"name":"_LSP4_TOKEN_NAME_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"181:20:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2427,"name":"_LSP4_TOKEN_SYMBOL_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"207:22:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2428,"name":"_LSP4_TOKEN_TYPE_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"235:20:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp4-contracts/contracts/LSP4Errors.sol","file":"./LSP4Errors.sol","id":2433,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2484,"sourceUnit":2495,"src":"297:126:27","symbolAliases":[{"foreign":{"id":2430,"name":"LSP4TokenNameNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"310:24:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2431,"name":"LSP4TokenSymbolNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"340:26:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2432,"name":"LSP4TokenTypeNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"372:24:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2435,"name":"ERC725YCore","nameLocations":["730:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":842,"src":"730:11:27"},"id":2436,"nodeType":"InheritanceSpecifier","src":"730:11:27"}],"canonicalName":"LSP4DigitalAssetMetadataCore","contractDependencies":[],"contractKind":"contract","documentation":{"id":2434,"nodeType":"StructuredDocumentation","src":"425:254:27","text":" @title Implementation of a LSP4DigitalAssetMetadata contract that stores the **Token-Metadata** (`LSP4TokenName` and `LSP4TokenSymbol`) in its ERC725Y data store.\n @author Matthew Stevens\n @dev Standard Implementation of the LSP4 standard."},"fullyImplemented":true,"id":2483,"linearizedBaseContracts":[2483,842,1129,5706,5912,971],"name":"LSP4DigitalAssetMetadataCore","nameLocation":"698:28:27","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[820],"body":{"id":2481,"nodeType":"Block","src":"1037:426:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2445,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"1051:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2446,"name":"_LSP4_TOKEN_NAME_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"1062:20:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1051:31:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2452,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"1152:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2453,"name":"_LSP4_TOKEN_SYMBOL_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"1163:22:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1152:33:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2459,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"1257:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2460,"name":"_LSP4_TOKEN_TYPE_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"1268:20:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1257:31:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2477,"nodeType":"Block","src":"1354:103:27","statements":[{"expression":{"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2466,"name":"_store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"1368:6:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":2468,"indexExpression":{"id":2467,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"1375:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1368:15:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2469,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"1386:9:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1368:27:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":2471,"nodeType":"ExpressionStatement","src":"1368:27:27"},{"eventCall":{"arguments":[{"id":2473,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"1427:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2474,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"1436:9:27","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2472,"name":"DataChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"1415:11:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1415:31:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2476,"nodeType":"EmitStatement","src":"1410:36:27"}]},"id":2478,"nodeType":"IfStatement","src":"1253:204:27","trueBody":{"id":2465,"nodeType":"Block","src":"1290:58:27","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2462,"name":"LSP4TokenTypeNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"1311:24:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1311:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2464,"nodeType":"RevertStatement","src":"1304:33:27"}]}},"id":2479,"nodeType":"IfStatement","src":"1148:309:27","trueBody":{"id":2458,"nodeType":"Block","src":"1187:60:27","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2455,"name":"LSP4TokenSymbolNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"1208:26:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1208:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2457,"nodeType":"RevertStatement","src":"1201:35:27"}]}},"id":2480,"nodeType":"IfStatement","src":"1047:410:27","trueBody":{"id":2451,"nodeType":"Block","src":"1084:58:27","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2448,"name":"LSP4TokenNameNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2488,"src":"1105:24:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1105:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2450,"nodeType":"RevertStatement","src":"1098:33:27"}]}}]},"documentation":{"id":2437,"nodeType":"StructuredDocumentation","src":"748:177:27","text":" @dev The ERC725Y data keys `LSP4TokenName` and `LSP4TokenSymbol` cannot be changed\n via this function once the digital asset contract has been deployed."},"id":2482,"implemented":true,"kind":"function","modifiers":[],"name":"_setData","nameLocation":"939:8:27","nodeType":"FunctionDefinition","overrides":{"id":2443,"nodeType":"OverrideSpecifier","overrides":[],"src":"1028:8:27"},"parameters":{"id":2442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2439,"mutability":"mutable","name":"dataKey","nameLocation":"965:7:27","nodeType":"VariableDeclaration","scope":2482,"src":"957:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2438,"name":"bytes32","nodeType":"ElementaryTypeName","src":"957:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2441,"mutability":"mutable","name":"dataValue","nameLocation":"995:9:27","nodeType":"VariableDeclaration","scope":2482,"src":"982:22:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2440,"name":"bytes","nodeType":"ElementaryTypeName","src":"982:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"947:63:27"},"returnParameters":{"id":2444,"nodeType":"ParameterList","parameters":[],"src":"1037:0:27"},"scope":2483,"src":"930:533:27","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2484,"src":"680:785:27","usedErrors":[1009,1012,1015,2488,2491,2494],"usedEvents":[876,1092]}],"src":"39:1427:27"},"id":27},"@lukso/lsp4-contracts/contracts/LSP4Errors.sol":{"ast":{"absolutePath":"@lukso/lsp4-contracts/contracts/LSP4Errors.sol","exportedSymbols":{"LSP4TokenNameNotEditable":[2488],"LSP4TokenSymbolNotEditable":[2491],"LSP4TokenTypeNotEditable":[2494]},"id":2495,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2485,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:28"},{"documentation":{"id":2486,"nodeType":"StructuredDocumentation","src":"64:379:28","text":" @dev Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed / initialized.\n The `LSP4TokenName` data key is located inside the ERC725Y data key-value store of the digital asset contract.\n It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized."},"errorSelector":"85c169bd","id":2488,"name":"LSP4TokenNameNotEditable","nameLocation":"450:24:28","nodeType":"ErrorDefinition","parameters":{"id":2487,"nodeType":"ParameterList","parameters":[],"src":"474:2:28"},"src":"444:33:28"},{"documentation":{"id":2489,"nodeType":"StructuredDocumentation","src":"479:383:28","text":" @dev Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed / initialized.\n The `LSP4TokenSymbol` data key is located inside the ERC725Y data key-value store of the digital asset contract.\n It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized."},"errorSelector":"76755b38","id":2491,"name":"LSP4TokenSymbolNotEditable","nameLocation":"869:26:28","nodeType":"ErrorDefinition","parameters":{"id":2490,"nodeType":"ParameterList","parameters":[],"src":"895:2:28"},"src":"863:35:28"},{"documentation":{"id":2492,"nodeType":"StructuredDocumentation","src":"900:381:28","text":" @dev Reverts when trying to edit the data key `LSP4TokenType` after the digital asset contract has been deployed / initialized.\n The `LSP4TokenType` data key is located inside the ERC725Y data key-value store of the digital asset contract.\n It can be set only once inside the constructor / initializer when the digital asset contract is being deployed / initialized."},"errorSelector":"4ef6d7fb","id":2494,"name":"LSP4TokenTypeNotEditable","nameLocation":"1288:24:28","nodeType":"ErrorDefinition","parameters":{"id":2493,"nodeType":"ParameterList","parameters":[],"src":"1312:2:28"},"src":"1282:33:28"}],"src":"39:1277:28"},"id":28},"@lukso/lsp8-contracts/contracts/ILSP8IdentifiableDigitalAsset.sol":{"ast":{"absolutePath":"@lukso/lsp8-contracts/contracts/ILSP8IdentifiableDigitalAsset.sol","exportedSymbols":{"IERC165":[5912],"IERC725Y":[1129],"ILSP8IdentifiableDigitalAsset":[2715]},"id":2716,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2496,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:29"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":2498,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2716,"sourceUnit":5913,"src":"78:80:29","symbolAliases":[{"foreign":{"id":2497,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"86:7:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol","file":"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol","id":2500,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2716,"sourceUnit":1130,"src":"159:89:29","symbolAliases":[{"foreign":{"id":2499,"name":"IERC725Y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"172:8:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2502,"name":"IERC165","nameLocations":["402:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":5912,"src":"402:7:29"},"id":2503,"nodeType":"InheritanceSpecifier","src":"402:7:29"},{"baseName":{"id":2504,"name":"IERC725Y","nameLocations":["411:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":1129,"src":"411:8:29"},"id":2505,"nodeType":"InheritanceSpecifier","src":"411:8:29"}],"canonicalName":"ILSP8IdentifiableDigitalAsset","contractDependencies":[],"contractKind":"interface","documentation":{"id":2501,"nodeType":"StructuredDocumentation","src":"250:108:29","text":" @title Interface of the LSP8 - Identifiable Digital Asset standard, a non-fungible digital asset."},"fullyImplemented":false,"id":2715,"linearizedBaseContracts":[2715,1129,5912],"name":"ILSP8IdentifiableDigitalAsset","nameLocation":"369:29:29","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2506,"nodeType":"StructuredDocumentation","src":"445:616:29","text":" @dev Emitted when `tokenId` token is transferred from the `from` to the `to` address.\n @param operator The address of operator that sent the `tokenId`\n @param from The previous owner of the `tokenId`\n @param to The new owner of `tokenId`\n @param tokenId The tokenId that was transferred\n @param force If the token transfer enforces the `to` recipient address to be a contract that implements the LSP1 standard or not.\n @param data Any additional data the caller included by the caller during the transfer, and sent in the hooks to the `from` and `to` addresses."},"eventSelector":"b333c813a7426a7a11e2b190cad52c44119421594b47f6f32ace6d8c7207b2bf","id":2520,"name":"Transfer","nameLocation":"1072:8:29","nodeType":"EventDefinition","parameters":{"id":2519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2508,"indexed":false,"mutability":"mutable","name":"operator","nameLocation":"1098:8:29","nodeType":"VariableDeclaration","scope":2520,"src":"1090:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2507,"name":"address","nodeType":"ElementaryTypeName","src":"1090:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2510,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"1132:4:29","nodeType":"VariableDeclaration","scope":2520,"src":"1116:20:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2509,"name":"address","nodeType":"ElementaryTypeName","src":"1116:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2512,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1162:2:29","nodeType":"VariableDeclaration","scope":2520,"src":"1146:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2511,"name":"address","nodeType":"ElementaryTypeName","src":"1146:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2514,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1190:7:29","nodeType":"VariableDeclaration","scope":2520,"src":"1174:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1174:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2516,"indexed":false,"mutability":"mutable","name":"force","nameLocation":"1212:5:29","nodeType":"VariableDeclaration","scope":2520,"src":"1207:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2515,"name":"bool","nodeType":"ElementaryTypeName","src":"1207:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2518,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"1233:4:29","nodeType":"VariableDeclaration","scope":2520,"src":"1227:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2517,"name":"bytes","nodeType":"ElementaryTypeName","src":"1227:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1080:163:29"},"src":"1066:178:29"},{"anonymous":false,"documentation":{"id":2521,"nodeType":"StructuredDocumentation","src":"1250:396:29","text":" @dev Emitted when `tokenOwner` enables `operator` to transfer or burn the `tokenId`.\n @param operator The address authorized as an operator.\n @param tokenOwner The owner of the `tokenId`.\n @param tokenId The tokenId `operator` address has access on behalf of `tokenOwner`.\n @param operatorNotificationData The data to notify the operator about via LSP1."},"eventSelector":"1b1b58aa2ec0cec2228b2d37124556d41f5a1f7b12f089171f896cc236671215","id":2531,"name":"OperatorAuthorizationChanged","nameLocation":"1657:28:29","nodeType":"EventDefinition","parameters":{"id":2530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2523,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1711:8:29","nodeType":"VariableDeclaration","scope":2531,"src":"1695:24:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2522,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2525,"indexed":true,"mutability":"mutable","name":"tokenOwner","nameLocation":"1745:10:29","nodeType":"VariableDeclaration","scope":2531,"src":"1729:26:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2524,"name":"address","nodeType":"ElementaryTypeName","src":"1729:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2527,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1781:7:29","nodeType":"VariableDeclaration","scope":2531,"src":"1765:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2526,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1765:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2529,"indexed":false,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"1804:24:29","nodeType":"VariableDeclaration","scope":2531,"src":"1798:30:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2528,"name":"bytes","nodeType":"ElementaryTypeName","src":"1798:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1685:149:29"},"src":"1651:184:29"},{"anonymous":false,"documentation":{"id":2532,"nodeType":"StructuredDocumentation","src":"1841:501:29","text":" @dev Emitted when `tokenOwner` disables `operator` to transfer or burn `tokenId` on its behalf.\n @param operator The address revoked from the operator array ({getOperatorsOf}).\n @param tokenOwner The owner of the `tokenId`.\n @param tokenId The tokenId `operator` is revoked from operating on.\n @param notified Bool indicating whether the operator has been notified or not\n @param operatorNotificationData The data to notify the operator about via LSP1."},"eventSelector":"c78cd419d6136f9f1c1c6aec1d3fae098cffaf8bc86314a8f2685e32fe574e3c","id":2544,"name":"OperatorRevoked","nameLocation":"2353:15:29","nodeType":"EventDefinition","parameters":{"id":2543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2534,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"2394:8:29","nodeType":"VariableDeclaration","scope":2544,"src":"2378:24:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2533,"name":"address","nodeType":"ElementaryTypeName","src":"2378:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2536,"indexed":true,"mutability":"mutable","name":"tokenOwner","nameLocation":"2428:10:29","nodeType":"VariableDeclaration","scope":2544,"src":"2412:26:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2535,"name":"address","nodeType":"ElementaryTypeName","src":"2412:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2538,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"2464:7:29","nodeType":"VariableDeclaration","scope":2544,"src":"2448:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2537,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2448:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2540,"indexed":false,"mutability":"mutable","name":"notified","nameLocation":"2486:8:29","nodeType":"VariableDeclaration","scope":2544,"src":"2481:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2539,"name":"bool","nodeType":"ElementaryTypeName","src":"2481:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2542,"indexed":false,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"2510:24:29","nodeType":"VariableDeclaration","scope":2544,"src":"2504:30:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2541,"name":"bytes","nodeType":"ElementaryTypeName","src":"2504:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2368:172:29"},"src":"2347:194:29"},{"anonymous":false,"documentation":{"id":2545,"nodeType":"StructuredDocumentation","src":"2547:253:29","text":" @dev Emitted when setting data for `tokenId`.\n @param tokenId The tokenId which data is set for.\n @param dataKey The data key for which a bytes value is set.\n @param dataValue The value to set for the given data key."},"eventSelector":"a6e4251f855f750545fe414f120db91c76b88def14d120969e5bb2d3f05debbb","id":2553,"name":"TokenIdDataChanged","nameLocation":"2811:18:29","nodeType":"EventDefinition","parameters":{"id":2552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2547,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"2855:7:29","nodeType":"VariableDeclaration","scope":2553,"src":"2839:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2546,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2839:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2549,"indexed":true,"mutability":"mutable","name":"dataKey","nameLocation":"2888:7:29","nodeType":"VariableDeclaration","scope":2553,"src":"2872:23:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2548,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2872:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2551,"indexed":false,"mutability":"mutable","name":"dataValue","nameLocation":"2911:9:29","nodeType":"VariableDeclaration","scope":2553,"src":"2905:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2550,"name":"bytes","nodeType":"ElementaryTypeName","src":"2905:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2829:97:29"},"src":"2805:122:29"},{"documentation":{"id":2554,"nodeType":"StructuredDocumentation","src":"2959:147:29","text":" @dev Returns the number of existing tokens that have been minted in this contract.\n @return The number of existing tokens."},"functionSelector":"18160ddd","id":2559,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3120:11:29","nodeType":"FunctionDefinition","parameters":{"id":2555,"nodeType":"ParameterList","parameters":[],"src":"3131:2:29"},"returnParameters":{"id":2558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2559,"src":"3157:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2556,"name":"uint256","nodeType":"ElementaryTypeName","src":"3157:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3156:9:29"},"scope":2715,"src":"3111:55:29","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2560,"nodeType":"StructuredDocumentation","src":"3204:196:29","text":" @dev Get the number of token IDs owned by `tokenOwner`.\n @param tokenOwner The address to query     *\n @return The total number of token IDs that `tokenOwner` owns."},"functionSelector":"70a08231","id":2567,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3414:9:29","nodeType":"FunctionDefinition","parameters":{"id":2563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2562,"mutability":"mutable","name":"tokenOwner","nameLocation":"3432:10:29","nodeType":"VariableDeclaration","scope":2567,"src":"3424:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2561,"name":"address","nodeType":"ElementaryTypeName","src":"3424:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3423:20:29"},"returnParameters":{"id":2566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2567,"src":"3467:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2564,"name":"uint256","nodeType":"ElementaryTypeName","src":"3467:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3466:9:29"},"scope":2715,"src":"3405:71:29","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2568,"nodeType":"StructuredDocumentation","src":"3482:360:29","text":" @dev Returns the address that owns a given `tokenId`.\n @param tokenId The token ID to query the owner for.\n @return The owner address of the given `tokenId`.\n @custom:requirements `tokenId` must exist.\n @custom:info if the `tokenId` is not owned by any address, the returned address will be `address(0)`"},"functionSelector":"217b2270","id":2575,"implemented":false,"kind":"function","modifiers":[],"name":"tokenOwnerOf","nameLocation":"3856:12:29","nodeType":"FunctionDefinition","parameters":{"id":2571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2570,"mutability":"mutable","name":"tokenId","nameLocation":"3877:7:29","nodeType":"VariableDeclaration","scope":2575,"src":"3869:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2569,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3869:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3868:17:29"},"returnParameters":{"id":2574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2575,"src":"3909:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2572,"name":"address","nodeType":"ElementaryTypeName","src":"3909:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3908:9:29"},"scope":2715,"src":"3847:71:29","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2576,"nodeType":"StructuredDocumentation","src":"3924:244:29","text":" @dev Returns the list of token IDs that the `tokenOwner` address owns.\n @param tokenOwner The address that we want to get the list of token IDs for.\n @return An array of `bytes32[] tokenIds` owned by `tokenOwner`."},"functionSelector":"a3b261f2","id":2584,"implemented":false,"kind":"function","modifiers":[],"name":"tokenIdsOf","nameLocation":"4182:10:29","nodeType":"FunctionDefinition","parameters":{"id":2579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2578,"mutability":"mutable","name":"tokenOwner","nameLocation":"4210:10:29","nodeType":"VariableDeclaration","scope":2584,"src":"4202:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2577,"name":"address","nodeType":"ElementaryTypeName","src":"4202:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4192:34:29"},"returnParameters":{"id":2583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2584,"src":"4250:16:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2580,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4250:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2581,"nodeType":"ArrayTypeName","src":"4250:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4249:18:29"},"scope":2715,"src":"4173:95:29","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2585,"nodeType":"StructuredDocumentation","src":"4317:286:29","text":" @notice Retrieves data for a specific `tokenId` and `dataKey`.\n @param tokenId The unique identifier for a token.\n @param dataKey The key for the data to retrieve.\n @return dataValues The data value associated with the given `tokenId` and `dataKey`."},"functionSelector":"16e023b3","id":2594,"implemented":false,"kind":"function","modifiers":[],"name":"getDataForTokenId","nameLocation":"4617:17:29","nodeType":"FunctionDefinition","parameters":{"id":2590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2587,"mutability":"mutable","name":"tokenId","nameLocation":"4652:7:29","nodeType":"VariableDeclaration","scope":2594,"src":"4644:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2586,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4644:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2589,"mutability":"mutable","name":"dataKey","nameLocation":"4677:7:29","nodeType":"VariableDeclaration","scope":2594,"src":"4669:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2588,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4669:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4634:56:29"},"returnParameters":{"id":2593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2592,"mutability":"mutable","name":"dataValues","nameLocation":"4722:10:29","nodeType":"VariableDeclaration","scope":2594,"src":"4709:23:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2591,"name":"bytes","nodeType":"ElementaryTypeName","src":"4709:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4708:25:29"},"scope":2715,"src":"4608:126:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2595,"nodeType":"StructuredDocumentation","src":"4740:309:29","text":" @notice Retrieves data in batch for multiple `tokenId` and `dataKey` pairs.\n @param tokenIds An array of token IDs.\n @param dataKeys An array of data keys corresponding to the token IDs.\n @return dataValues An array of data values for each pair of `tokenId` and `dataKey`."},"functionSelector":"1d26fce6","id":2607,"implemented":false,"kind":"function","modifiers":[],"name":"getDataBatchForTokenIds","nameLocation":"5063:23:29","nodeType":"FunctionDefinition","parameters":{"id":2602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2598,"mutability":"mutable","name":"tokenIds","nameLocation":"5113:8:29","nodeType":"VariableDeclaration","scope":2607,"src":"5096:25:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2596,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5096:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2597,"nodeType":"ArrayTypeName","src":"5096:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2601,"mutability":"mutable","name":"dataKeys","nameLocation":"5148:8:29","nodeType":"VariableDeclaration","scope":2607,"src":"5131:25:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2599,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5131:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2600,"nodeType":"ArrayTypeName","src":"5131:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5086:76:29"},"returnParameters":{"id":2606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2605,"mutability":"mutable","name":"dataValues","nameLocation":"5196:10:29","nodeType":"VariableDeclaration","scope":2607,"src":"5181:25:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2603,"name":"bytes","nodeType":"ElementaryTypeName","src":"5181:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2604,"nodeType":"ArrayTypeName","src":"5181:7:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"5180:27:29"},"scope":2715,"src":"5054:154:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2608,"nodeType":"StructuredDocumentation","src":"5214:299:29","text":" @notice Sets data for a specific `tokenId` and `dataKey`.\n @param tokenId The unique identifier for a token.\n @param dataKey The key for the data to set.\n @param dataValue The value to set for the given data key.\n @custom:events {TokenIdDataChanged} event."},"functionSelector":"d6c1407c","id":2617,"implemented":false,"kind":"function","modifiers":[],"name":"setDataForTokenId","nameLocation":"5527:17:29","nodeType":"FunctionDefinition","parameters":{"id":2615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2610,"mutability":"mutable","name":"tokenId","nameLocation":"5562:7:29","nodeType":"VariableDeclaration","scope":2617,"src":"5554:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2609,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5554:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2612,"mutability":"mutable","name":"dataKey","nameLocation":"5587:7:29","nodeType":"VariableDeclaration","scope":2617,"src":"5579:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5579:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2614,"mutability":"mutable","name":"dataValue","nameLocation":"5617:9:29","nodeType":"VariableDeclaration","scope":2617,"src":"5604:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2613,"name":"bytes","nodeType":"ElementaryTypeName","src":"5604:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5544:88:29"},"returnParameters":{"id":2616,"nodeType":"ParameterList","parameters":[],"src":"5641:0:29"},"scope":2715,"src":"5518:124:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2618,"nodeType":"StructuredDocumentation","src":"5648:352:29","text":" @notice Sets data in batch for multiple `tokenId` and `dataKey` pairs.\n @param tokenIds An array of token IDs.\n @param dataKeys An array of data keys corresponding to the token IDs.\n @param dataValues An array of values to set for the given data keys.\n @custom:events {TokenIdDataChanged} event for each pair."},"functionSelector":"be9f0e6f","id":2630,"implemented":false,"kind":"function","modifiers":[],"name":"setDataBatchForTokenIds","nameLocation":"6014:23:29","nodeType":"FunctionDefinition","parameters":{"id":2628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2621,"mutability":"mutable","name":"tokenIds","nameLocation":"6064:8:29","nodeType":"VariableDeclaration","scope":2630,"src":"6047:25:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2619,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6047:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2620,"nodeType":"ArrayTypeName","src":"6047:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2624,"mutability":"mutable","name":"dataKeys","nameLocation":"6099:8:29","nodeType":"VariableDeclaration","scope":2630,"src":"6082:25:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2622,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6082:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2623,"nodeType":"ArrayTypeName","src":"6082:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2627,"mutability":"mutable","name":"dataValues","nameLocation":"6132:10:29","nodeType":"VariableDeclaration","scope":2630,"src":"6117:25:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2625,"name":"bytes","nodeType":"ElementaryTypeName","src":"6117:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2626,"nodeType":"ArrayTypeName","src":"6117:7:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"6037:111:29"},"returnParameters":{"id":2629,"nodeType":"ParameterList","parameters":[],"src":"6157:0:29"},"scope":2715,"src":"6005:153:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2631,"nodeType":"StructuredDocumentation","src":"6199:782:29","text":" @dev Allow an `operator` address to transfer or burn a specific `tokenId` on behalf of its token owner. See {isOperatorFor}.\n Notify the operator based on the LSP1-UniversalReceiver standard\n @param operator The address to authorize as an operator.\n @param tokenId The token ID operator has access to.\n @param operatorNotificationData The data to notify the operator about via LSP1.\n @custom:requirements\n - `tokenId` must exist.\n - caller MUST be the {tokenOwnerOf} `tokenId`.\n - the owner of a `tokenId` cannot grant itself as an `operator` (`operator` cannot be the calling address).\n - `operator` cannot be the zero address.\n @custom:events {OperatorAuthorizationChanged} event."},"functionSelector":"86a10ddd","id":2640,"implemented":false,"kind":"function","modifiers":[],"name":"authorizeOperator","nameLocation":"6995:17:29","nodeType":"FunctionDefinition","parameters":{"id":2638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2633,"mutability":"mutable","name":"operator","nameLocation":"7030:8:29","nodeType":"VariableDeclaration","scope":2640,"src":"7022:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2632,"name":"address","nodeType":"ElementaryTypeName","src":"7022:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2635,"mutability":"mutable","name":"tokenId","nameLocation":"7056:7:29","nodeType":"VariableDeclaration","scope":2640,"src":"7048:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2634,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7048:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2637,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"7086:24:29","nodeType":"VariableDeclaration","scope":2640,"src":"7073:37:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2636,"name":"bytes","nodeType":"ElementaryTypeName","src":"7073:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7012:104:29"},"returnParameters":{"id":2639,"nodeType":"ParameterList","parameters":[],"src":"7125:0:29"},"scope":2715,"src":"6986:140:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2641,"nodeType":"StructuredDocumentation","src":"7132:893:29","text":" @dev Remove access of `operator` for a given `tokenId`, disallowing it to transfer `tokenId` on behalf of its owner.\n See also {isOperatorFor}.\n @param operator The address to revoke as an operator.\n @param tokenId The tokenId `operator` is revoked from operating on.\n @param notify Boolean indicating whether to notify the operator or not\n @param operatorNotificationData The data to notify the operator about via LSP1.\n @custom:requirements\n - `tokenId` must exist.\n - caller must be the {tokenOwnerOf} `tokenId`.\n - the owner of a `tokenId` cannot grant revoke itself as an `operator` (`operator` cannot be the calling address).\n - `operator` cannot be the zero address.\n @custom:events {OperatorRevoked} event with address of the operator being revoked for the caller (token owner).."},"functionSelector":"db8c9663","id":2652,"implemented":false,"kind":"function","modifiers":[],"name":"revokeOperator","nameLocation":"8039:14:29","nodeType":"FunctionDefinition","parameters":{"id":2650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2643,"mutability":"mutable","name":"operator","nameLocation":"8071:8:29","nodeType":"VariableDeclaration","scope":2652,"src":"8063:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2642,"name":"address","nodeType":"ElementaryTypeName","src":"8063:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2645,"mutability":"mutable","name":"tokenId","nameLocation":"8097:7:29","nodeType":"VariableDeclaration","scope":2652,"src":"8089:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2644,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8089:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2647,"mutability":"mutable","name":"notify","nameLocation":"8119:6:29","nodeType":"VariableDeclaration","scope":2652,"src":"8114:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2646,"name":"bool","nodeType":"ElementaryTypeName","src":"8114:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2649,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"8148:24:29","nodeType":"VariableDeclaration","scope":2652,"src":"8135:37:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2648,"name":"bytes","nodeType":"ElementaryTypeName","src":"8135:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8053:125:29"},"returnParameters":{"id":2651,"nodeType":"ParameterList","parameters":[],"src":"8187:0:29"},"scope":2715,"src":"8030:158:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2653,"nodeType":"StructuredDocumentation","src":"8194:535:29","text":" @dev Returns whether `operator` address is an operator for a given `tokenId`.\n @param operator The address to query operator status for.\n @param tokenId The token ID to check if `operator` is allowed to operate on.\n @return `true` if `operator` is an operator for `tokenId`, `false` otherwise.\n @custom:requirements\n - `tokenId` must exist.\n - caller must be the current {tokenOwnerOf} `tokenId`.\n @custom:info The tokenOwner is its own operator."},"functionSelector":"2a3654a4","id":2662,"implemented":false,"kind":"function","modifiers":[],"name":"isOperatorFor","nameLocation":"8743:13:29","nodeType":"FunctionDefinition","parameters":{"id":2658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2655,"mutability":"mutable","name":"operator","nameLocation":"8774:8:29","nodeType":"VariableDeclaration","scope":2662,"src":"8766:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2654,"name":"address","nodeType":"ElementaryTypeName","src":"8766:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2657,"mutability":"mutable","name":"tokenId","nameLocation":"8800:7:29","nodeType":"VariableDeclaration","scope":2662,"src":"8792:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2656,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8792:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8756:57:29"},"returnParameters":{"id":2661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2662,"src":"8837:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2659,"name":"bool","nodeType":"ElementaryTypeName","src":"8837:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8836:6:29"},"scope":2715,"src":"8734:109:29","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2663,"nodeType":"StructuredDocumentation","src":"8849:351:29","text":" @dev Returns all `operator` addresses that are allowed to transfer or burn a specific `tokenId` on behalf of its owner.\n @param tokenId The token ID to get the operators for.\n @return An array of operators allowed to transfer or burn a specific `tokenId`.\n Requirements\n - `tokenId` must exist."},"functionSelector":"49a6078d","id":2671,"implemented":false,"kind":"function","modifiers":[],"name":"getOperatorsOf","nameLocation":"9214:14:29","nodeType":"FunctionDefinition","parameters":{"id":2666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2665,"mutability":"mutable","name":"tokenId","nameLocation":"9246:7:29","nodeType":"VariableDeclaration","scope":2671,"src":"9238:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2664,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9238:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9228:31:29"},"returnParameters":{"id":2670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2671,"src":"9283:16:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2667,"name":"address","nodeType":"ElementaryTypeName","src":"9283:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2668,"nodeType":"ArrayTypeName","src":"9283:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"9282:18:29"},"scope":2715,"src":"9205:96:29","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2672,"nodeType":"StructuredDocumentation","src":"9342:2075:29","text":" @dev Transfer a given `tokenId` token from the `from` address to the `to` address.\n If operators are set for a specific `tokenId`, all the operators are revoked after the tokenId have been transferred.\n The `force` parameter MUST be set to `true` when transferring tokens to Externally Owned Accounts (EOAs)\n or contracts that do not implement the LSP1 standard.\n @param from The address that owns the given `tokenId`.\n @param to The address that will receive the `tokenId`.\n @param tokenId The token ID to transfer.\n @param force When set to `true`, the `to` address CAN be any addres.\n When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\n @param data Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\n @custom:requirements\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` and `to` cannot be the same address (`from` cannot send the `tokenId` to itself).\n - `from` must own the given `tokenId`.\n - If the caller is not `from`, it must be an operator for the `tokenId`.\n @custom:events\n - {Transfer} event when the `tokenId` is successfully transferred.\n @custom:hint The `force` parameter **MUST be set to `true`** to transfer tokens to Externally Owned Accounts (EOAs)\n or contracts that do not implement the LSP1 Universal Receiver Standard. Otherwise the function will revert making the transfer fail.\n @custom:info if the `to` address is a contract that implements LSP1, it will always be notified via its `universalReceiver(...)` function, regardless if `force` is set to `true` or `false`.\n @custom:warning Be aware that when either the sender or the recipient can have logic that revert in their `universalReceiver(...)` function when being notified.\n This even if the `force` was set to `true`."},"functionSelector":"511b6952","id":2685,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"11431:8:29","nodeType":"FunctionDefinition","parameters":{"id":2683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2674,"mutability":"mutable","name":"from","nameLocation":"11457:4:29","nodeType":"VariableDeclaration","scope":2685,"src":"11449:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2673,"name":"address","nodeType":"ElementaryTypeName","src":"11449:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2676,"mutability":"mutable","name":"to","nameLocation":"11479:2:29","nodeType":"VariableDeclaration","scope":2685,"src":"11471:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2675,"name":"address","nodeType":"ElementaryTypeName","src":"11471:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2678,"mutability":"mutable","name":"tokenId","nameLocation":"11499:7:29","nodeType":"VariableDeclaration","scope":2685,"src":"11491:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2677,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11491:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2680,"mutability":"mutable","name":"force","nameLocation":"11521:5:29","nodeType":"VariableDeclaration","scope":2685,"src":"11516:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2679,"name":"bool","nodeType":"ElementaryTypeName","src":"11516:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2682,"mutability":"mutable","name":"data","nameLocation":"11549:4:29","nodeType":"VariableDeclaration","scope":2685,"src":"11536:17:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2681,"name":"bytes","nodeType":"ElementaryTypeName","src":"11536:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11439:120:29"},"returnParameters":{"id":2684,"nodeType":"ParameterList","parameters":[],"src":"11568:0:29"},"scope":2715,"src":"11422:147:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2686,"nodeType":"StructuredDocumentation","src":"11575:1189:29","text":" @dev Transfers multiple tokens at once based on the arrays of `from`, `to` and `tokenId`.\n If any transfer fails, the whole call will revert.\n @param from An array of sending addresses.\n @param to An array of recipient addresses.\n @param tokenId An array of token IDs to transfer.\n @param force When set to `true`, `to` may be any address.\n When set to `false`, `to` must be a contract that supports the LSP1 standard and not revert.\n @param data Any additional data the caller wants included in the emitted event, and sent in the hooks to the `from` and `to` addresses.\n @custom:requirements\n - The arrays of `from`, `to` and `tokenId` must have the same length.\n - no values in the `from` array can be the zero address.\n - no values in the `to` array can be the zero address.\n - `from` and `to` cannot be the same address at the same index on each arrays.\n - each `tokenId` must be owned by `from`.\n - If the caller is not `from`, it must be an operator of each `tokenId`.\n @custom:events\n - {Transfer} events on each successful token transfer."},"functionSelector":"7e87632c","id":2704,"implemented":false,"kind":"function","modifiers":[],"name":"transferBatch","nameLocation":"12778:13:29","nodeType":"FunctionDefinition","parameters":{"id":2702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2689,"mutability":"mutable","name":"from","nameLocation":"12818:4:29","nodeType":"VariableDeclaration","scope":2704,"src":"12801:21:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2687,"name":"address","nodeType":"ElementaryTypeName","src":"12801:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2688,"nodeType":"ArrayTypeName","src":"12801:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2692,"mutability":"mutable","name":"to","nameLocation":"12849:2:29","nodeType":"VariableDeclaration","scope":2704,"src":"12832:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2690,"name":"address","nodeType":"ElementaryTypeName","src":"12832:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2691,"nodeType":"ArrayTypeName","src":"12832:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2695,"mutability":"mutable","name":"tokenId","nameLocation":"12878:7:29","nodeType":"VariableDeclaration","scope":2704,"src":"12861:24:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2693,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12861:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2694,"nodeType":"ArrayTypeName","src":"12861:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2698,"mutability":"mutable","name":"force","nameLocation":"12909:5:29","nodeType":"VariableDeclaration","scope":2704,"src":"12895:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":2696,"name":"bool","nodeType":"ElementaryTypeName","src":"12895:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2697,"nodeType":"ArrayTypeName","src":"12895:6:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":2701,"mutability":"mutable","name":"data","nameLocation":"12939:4:29","nodeType":"VariableDeclaration","scope":2704,"src":"12924:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2699,"name":"bytes","nodeType":"ElementaryTypeName","src":"12924:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2700,"nodeType":"ArrayTypeName","src":"12924:7:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"12791:158:29"},"returnParameters":{"id":2703,"nodeType":"ParameterList","parameters":[],"src":"12958:0:29"},"scope":2715,"src":"12769:190:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2705,"nodeType":"StructuredDocumentation","src":"12965:460:29","text":" @notice Executing the following batch of abi-encoded function calls on the contract: `data`.\n @dev Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\n @param data An array of ABI encoded function calls to be called on the contract.\n @return results An array of abi-encoded data returned by the functions executed."},"functionSelector":"6963d438","id":2714,"implemented":false,"kind":"function","modifiers":[],"name":"batchCalls","nameLocation":"13439:10:29","nodeType":"FunctionDefinition","parameters":{"id":2709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2708,"mutability":"mutable","name":"data","nameLocation":"13476:4:29","nodeType":"VariableDeclaration","scope":2714,"src":"13459:21:29","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2706,"name":"bytes","nodeType":"ElementaryTypeName","src":"13459:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2707,"nodeType":"ArrayTypeName","src":"13459:7:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"13449:37:29"},"returnParameters":{"id":2713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2712,"mutability":"mutable","name":"results","nameLocation":"13520:7:29","nodeType":"VariableDeclaration","scope":2714,"src":"13505:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2710,"name":"bytes","nodeType":"ElementaryTypeName","src":"13505:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2711,"nodeType":"ArrayTypeName","src":"13505:7:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"13504:24:29"},"scope":2715,"src":"13430:99:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2716,"src":"359:13172:29","usedErrors":[],"usedEvents":[1092,2520,2531,2544,2553]}],"src":"39:13493:29"},"id":29},"@lukso/lsp8-contracts/contracts/LSP8Constants.sol":{"ast":{"absolutePath":"@lukso/lsp8-contracts/contracts/LSP8Constants.sol","exportedSymbols":{"_INTERFACEID_LSP8":[2720],"_LSP8_REFERENCE_CONTRACT":[2729],"_LSP8_TOKENID_FORMAT_ADDRESS":[2747],"_LSP8_TOKENID_FORMAT_HASH":[2753],"_LSP8_TOKENID_FORMAT_KEY":[2723],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_ADDRESS":[2762],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_HASH":[2768],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_NUMBER":[2756],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_STRING":[2759],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_UNIQUE_ID":[2765],"_LSP8_TOKENID_FORMAT_NUMBER":[2741],"_LSP8_TOKENID_FORMAT_STRING":[2744],"_LSP8_TOKENID_FORMAT_UNIQUE_ID":[2750],"_LSP8_TOKEN_METADATA_BASE_URI":[2726],"_TYPEID_LSP8_TOKENOPERATOR":[2738],"_TYPEID_LSP8_TOKENSRECIPIENT":[2735],"_TYPEID_LSP8_TOKENSSENDER":[2732]},"id":2769,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2717,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:30"},{"constant":true,"id":2720,"mutability":"constant","name":"_INTERFACEID_LSP8","nameLocation":"108:17:30","nodeType":"VariableDeclaration","scope":2769,"src":"92:46:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2718,"name":"bytes4","nodeType":"ElementaryTypeName","src":"92:6:30","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783361323731373036","id":2719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"128:10:30","typeDescriptions":{"typeIdentifier":"t_rational_975640326_by_1","typeString":"int_const 975640326"},"value":"0x3a271706"},"visibility":"internal"},{"constant":true,"id":2723,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_KEY","nameLocation":"218:24:30","nodeType":"VariableDeclaration","scope":2769,"src":"201:110:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2721,"name":"bytes32","nodeType":"ElementaryTypeName","src":"201:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866363735653933363161663163313636346331383638636661336562393736373264366231613531336161356238316465633334633965653333306538313864","id":2722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"245:66:30","typeDescriptions":{"typeIdentifier":"t_rational_111477291423636096748029871472748476558390830835668367522651640064380322611597_by_1","typeString":"int_const 1114...(70 digits omitted)...1597"},"value":"0xf675e9361af1c1664c1868cfa3eb97672d6b1a513aa5b81dec34c9ee330e818d"},"visibility":"internal"},{"constant":true,"id":2726,"mutability":"constant","name":"_LSP8_TOKEN_METADATA_BASE_URI","nameLocation":"372:29:30","nodeType":"VariableDeclaration","scope":2769,"src":"355:115:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2724,"name":"bytes32","nodeType":"ElementaryTypeName","src":"355:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307831613736323836303063336261633731303166353336393766343864663338316464633336623930313565376437633963353633336431323532616132383433","id":2725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"404:66:30","typeDescriptions":{"typeIdentifier":"t_rational_11968900676105822912557464315324495329565190357858734522371517867650361993283_by_1","typeString":"int_const 1196...(69 digits omitted)...3283"},"value":"0x1a7628600c3bac7101f53697f48df381ddc36b9015e7d7c9c5633d1252aa2843"},"visibility":"internal"},{"constant":true,"id":2729,"mutability":"constant","name":"_LSP8_REFERENCE_CONTRACT","nameLocation":"528:24:30","nodeType":"VariableDeclaration","scope":2769,"src":"511:110:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2727,"name":"bytes32","nodeType":"ElementaryTypeName","src":"511:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307837303865376238383137393566326536623663323735323130386331373765633839323438343538646533626636396430643433343830623365353033346536","id":2728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"555:66:30","typeDescriptions":{"typeIdentifier":"t_rational_50910783908361636124804393116408259141598108534342564848859926123218144867558_by_1","typeString":"int_const 5091...(69 digits omitted)...7558"},"value":"0x708e7b881795f2e6b6c2752108c177ec89248458de3bf69d0d43480b3e5034e6"},"visibility":"internal"},{"constant":true,"id":2732,"mutability":"constant","name":"_TYPEID_LSP8_TOKENSSENDER","nameLocation":"707:25:30","nodeType":"VariableDeclaration","scope":2769,"src":"690:111:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2730,"name":"bytes32","nodeType":"ElementaryTypeName","src":"690:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862323365616537653664313536346232393562346333653362653430326439613266303737366335376264663336353930333439366636666134383161623030","id":2731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"735:66:30","typeDescriptions":{"typeIdentifier":"t_rational_80622435878143139083563480449382184796258105498148027923970953027117195045632_by_1","typeString":"int_const 8062...(69 digits omitted)...5632"},"value":"0xb23eae7e6d1564b295b4c3e3be402d9a2f0776c57bdf365903496f6fa481ab00"},"visibility":"internal"},{"constant":true,"id":2735,"mutability":"constant","name":"_TYPEID_LSP8_TOKENSRECIPIENT","nameLocation":"870:28:30","nodeType":"VariableDeclaration","scope":2769,"src":"853:114:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2733,"name":"bytes32","nodeType":"ElementaryTypeName","src":"853:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830623038346135356562663730666433633036666437353532363964616332323132633464336630663464303930373937383062666135306331623239383464","id":2734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"901:66:30","typeDescriptions":{"typeIdentifier":"t_rational_4990089156609310438051076814138656340767597687526420738174868187457831213133_by_1","typeString":"int_const 4990...(68 digits omitted)...3133"},"value":"0x0b084a55ebf70fd3c06fd755269dac2212c4d3f0f4d09079780bfa50c1b2984d"},"visibility":"internal"},{"constant":true,"id":2738,"mutability":"constant","name":"_TYPEID_LSP8_TOKENOPERATOR","nameLocation":"1035:26:30","nodeType":"VariableDeclaration","scope":2769,"src":"1018:112:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2736,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1018:7:30","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307838613163313561383739396637316235343765303865326263623265383532353765383162306130376565653263653637313235343965656631663030393730","id":2737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1064:66:30","typeDescriptions":{"typeIdentifier":"t_rational_62468794301057257859859864036220190757926884000171377020854266712521628977520_by_1","typeString":"int_const 6246...(69 digits omitted)...7520"},"value":"0x8a1c15a8799f71b547e08e2bcb2e85257e81b0a07eee2ce6712549eef1f00970"},"visibility":"internal"},{"constant":true,"id":2741,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_NUMBER","nameLocation":"1175:27:30","nodeType":"VariableDeclaration","scope":2769,"src":"1158:48:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2739,"name":"uint256","nodeType":"ElementaryTypeName","src":"1158:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":2740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1205:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"constant":true,"id":2744,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_STRING","nameLocation":"1225:27:30","nodeType":"VariableDeclaration","scope":2769,"src":"1208:48:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2742,"name":"uint256","nodeType":"ElementaryTypeName","src":"1208:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1255:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":true,"id":2747,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_ADDRESS","nameLocation":"1275:28:30","nodeType":"VariableDeclaration","scope":2769,"src":"1258:49:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2745,"name":"uint256","nodeType":"ElementaryTypeName","src":"1258:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":2746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1306:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"internal"},{"constant":true,"id":2750,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_UNIQUE_ID","nameLocation":"1326:30:30","nodeType":"VariableDeclaration","scope":2769,"src":"1309:51:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2748,"name":"uint256","nodeType":"ElementaryTypeName","src":"1309:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33","id":2749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1359:1:30","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"internal"},{"constant":true,"id":2753,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_HASH","nameLocation":"1379:25:30","nodeType":"VariableDeclaration","scope":2769,"src":"1362:46:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2751,"name":"uint256","nodeType":"ElementaryTypeName","src":"1362:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"34","id":2752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1407:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"visibility":"internal"},{"constant":true,"id":2756,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_NUMBER","nameLocation":"1428:41:30","nodeType":"VariableDeclaration","scope":2769,"src":"1411:64:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2754,"name":"uint256","nodeType":"ElementaryTypeName","src":"1411:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":2755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1472:3:30","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"internal"},{"constant":true,"id":2759,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_STRING","nameLocation":"1494:41:30","nodeType":"VariableDeclaration","scope":2769,"src":"1477:64:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2757,"name":"uint256","nodeType":"ElementaryTypeName","src":"1477:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313031","id":2758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1538:3:30","typeDescriptions":{"typeIdentifier":"t_rational_101_by_1","typeString":"int_const 101"},"value":"101"},"visibility":"internal"},{"constant":true,"id":2762,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_ADDRESS","nameLocation":"1560:42:30","nodeType":"VariableDeclaration","scope":2769,"src":"1543:65:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2760,"name":"uint256","nodeType":"ElementaryTypeName","src":"1543:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313032","id":2761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1605:3:30","typeDescriptions":{"typeIdentifier":"t_rational_102_by_1","typeString":"int_const 102"},"value":"102"},"visibility":"internal"},{"constant":true,"id":2765,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_UNIQUE_ID","nameLocation":"1627:44:30","nodeType":"VariableDeclaration","scope":2769,"src":"1610:67:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2763,"name":"uint256","nodeType":"ElementaryTypeName","src":"1610:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313033","id":2764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1674:3:30","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"visibility":"internal"},{"constant":true,"id":2768,"mutability":"constant","name":"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_HASH","nameLocation":"1696:39:30","nodeType":"VariableDeclaration","scope":2769,"src":"1679:62:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2766,"name":"uint256","nodeType":"ElementaryTypeName","src":"1679:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313034","id":2767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1738:3:30","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},"visibility":"internal"}],"src":"39:1704:30"},"id":30},"@lukso/lsp8-contracts/contracts/LSP8Errors.sol":{"ast":{"absolutePath":"@lukso/lsp8-contracts/contracts/LSP8Errors.sol","exportedSymbols":{"LSP8BatchCallFailed":[2849],"LSP8CannotSendToAddressZero":[2804],"LSP8CannotUseAddressZeroAsOperator":[2801],"LSP8InvalidTransferBatch":[2819],"LSP8NonExistentTokenId":[2775],"LSP8NonExistingOperator":[2811],"LSP8NotTokenOperator":[2791],"LSP8NotTokenOwner":[2784],"LSP8NotifyTokenReceiverContractMissingLSP1Interface":[2824],"LSP8NotifyTokenReceiverIsEOA":[2829],"LSP8OperatorAlreadyAuthorized":[2798],"LSP8RevokeOperatorNotAuthorized":[2867],"LSP8TokenContractCannotHoldValue":[2835],"LSP8TokenIdAlreadyMinted":[2816],"LSP8TokenIdFormatNotEditable":[2838],"LSP8TokenIdsDataEmptyArray":[2844],"LSP8TokenIdsDataLengthMismatch":[2841],"LSP8TokenOwnerCannotBeOperator":[2832],"LSP8TokenOwnerChanged":[2858]},"id":2868,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2770,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"39:23:31"},{"documentation":{"id":2771,"nodeType":"StructuredDocumentation","src":"79:59:31","text":" @dev Reverts when `tokenId` has not been minted."},"errorSelector":"ae8f9a36","id":2775,"name":"LSP8NonExistentTokenId","nameLocation":"145:22:31","nodeType":"ErrorDefinition","parameters":{"id":2774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2773,"mutability":"mutable","name":"tokenId","nameLocation":"176:7:31","nodeType":"VariableDeclaration","scope":2775,"src":"168:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2772,"name":"bytes32","nodeType":"ElementaryTypeName","src":"168:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"167:17:31"},"src":"139:46:31"},{"documentation":{"id":2776,"nodeType":"StructuredDocumentation","src":"187:79:31","text":" @dev Reverts when `caller` is not the `tokenOwner` of the `tokenId`."},"errorSelector":"5b271ea2","id":2784,"name":"LSP8NotTokenOwner","nameLocation":"273:17:31","nodeType":"ErrorDefinition","parameters":{"id":2783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2778,"mutability":"mutable","name":"tokenOwner","nameLocation":"299:10:31","nodeType":"VariableDeclaration","scope":2784,"src":"291:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2777,"name":"address","nodeType":"ElementaryTypeName","src":"291:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2780,"mutability":"mutable","name":"tokenId","nameLocation":"319:7:31","nodeType":"VariableDeclaration","scope":2784,"src":"311:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2779,"name":"bytes32","nodeType":"ElementaryTypeName","src":"311:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2782,"mutability":"mutable","name":"caller","nameLocation":"336:6:31","nodeType":"VariableDeclaration","scope":2784,"src":"328:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2781,"name":"address","nodeType":"ElementaryTypeName","src":"328:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"290:53:31"},"src":"267:77:31"},{"documentation":{"id":2785,"nodeType":"StructuredDocumentation","src":"346:79:31","text":" @dev Reverts when `caller` is not an allowed operator for `tokenId`."},"errorSelector":"1294d2a9","id":2791,"name":"LSP8NotTokenOperator","nameLocation":"432:20:31","nodeType":"ErrorDefinition","parameters":{"id":2790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2787,"mutability":"mutable","name":"tokenId","nameLocation":"461:7:31","nodeType":"VariableDeclaration","scope":2791,"src":"453:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2786,"name":"bytes32","nodeType":"ElementaryTypeName","src":"453:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2789,"mutability":"mutable","name":"caller","nameLocation":"478:6:31","nodeType":"VariableDeclaration","scope":2791,"src":"470:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2788,"name":"address","nodeType":"ElementaryTypeName","src":"470:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"452:33:31"},"src":"426:60:31"},{"documentation":{"id":2792,"nodeType":"StructuredDocumentation","src":"488:80:31","text":" @dev Reverts when `operator` is already authorized for the `tokenId`."},"errorSelector":"a7626b68","id":2798,"name":"LSP8OperatorAlreadyAuthorized","nameLocation":"575:29:31","nodeType":"ErrorDefinition","parameters":{"id":2797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2794,"mutability":"mutable","name":"operator","nameLocation":"613:8:31","nodeType":"VariableDeclaration","scope":2798,"src":"605:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2793,"name":"address","nodeType":"ElementaryTypeName","src":"605:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2796,"mutability":"mutable","name":"tokenId","nameLocation":"631:7:31","nodeType":"VariableDeclaration","scope":2798,"src":"623:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2795,"name":"bytes32","nodeType":"ElementaryTypeName","src":"623:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"604:35:31"},"src":"569:71:31"},{"documentation":{"id":2799,"nodeType":"StructuredDocumentation","src":"642:75:31","text":" @dev Reverts when trying to set the zero address as an operator."},"errorSelector":"9577b8b3","id":2801,"name":"LSP8CannotUseAddressZeroAsOperator","nameLocation":"724:34:31","nodeType":"ErrorDefinition","parameters":{"id":2800,"nodeType":"ParameterList","parameters":[],"src":"758:2:31"},"src":"718:43:31"},{"documentation":{"id":2802,"nodeType":"StructuredDocumentation","src":"763:70:31","text":" @dev Reverts when trying to send token to the zero address."},"errorSelector":"24ecef4d","id":2804,"name":"LSP8CannotSendToAddressZero","nameLocation":"840:27:31","nodeType":"ErrorDefinition","parameters":{"id":2803,"nodeType":"ParameterList","parameters":[],"src":"867:2:31"},"src":"834:36:31"},{"documentation":{"id":2805,"nodeType":"StructuredDocumentation","src":"872:77:31","text":" @dev Reverts when `operator` is not an operator for the `tokenId`."},"errorSelector":"4aa31a8c","id":2811,"name":"LSP8NonExistingOperator","nameLocation":"956:23:31","nodeType":"ErrorDefinition","parameters":{"id":2810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2807,"mutability":"mutable","name":"operator","nameLocation":"988:8:31","nodeType":"VariableDeclaration","scope":2811,"src":"980:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2806,"name":"address","nodeType":"ElementaryTypeName","src":"980:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2809,"mutability":"mutable","name":"tokenId","nameLocation":"1006:7:31","nodeType":"VariableDeclaration","scope":2811,"src":"998:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2808,"name":"bytes32","nodeType":"ElementaryTypeName","src":"998:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"979:35:31"},"src":"950:65:31"},{"documentation":{"id":2812,"nodeType":"StructuredDocumentation","src":"1017:63:31","text":" @dev Reverts when `tokenId` has already been minted."},"errorSelector":"34c7b511","id":2816,"name":"LSP8TokenIdAlreadyMinted","nameLocation":"1087:24:31","nodeType":"ErrorDefinition","parameters":{"id":2815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2814,"mutability":"mutable","name":"tokenId","nameLocation":"1120:7:31","nodeType":"VariableDeclaration","scope":2816,"src":"1112:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2813,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1112:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1111:17:31"},"src":"1081:48:31"},{"documentation":{"id":2817,"nodeType":"StructuredDocumentation","src":"1131:92:31","text":" @dev Reverts when the parameters used for `transferBatch` have different lengths."},"errorSelector":"93a83119","id":2819,"name":"LSP8InvalidTransferBatch","nameLocation":"1230:24:31","nodeType":"ErrorDefinition","parameters":{"id":2818,"nodeType":"ParameterList","parameters":[],"src":"1254:2:31"},"src":"1224:33:31"},{"documentation":{"id":2820,"nodeType":"StructuredDocumentation","src":"1259:143:31","text":" @dev Reverts if the `tokenReceiver` does not implement LSP1\n when minting or transferring tokens with `bool force` set as `false`."},"errorSelector":"4349776d","id":2824,"name":"LSP8NotifyTokenReceiverContractMissingLSP1Interface","nameLocation":"1409:51:31","nodeType":"ErrorDefinition","parameters":{"id":2823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2822,"mutability":"mutable","name":"tokenReceiver","nameLocation":"1474:13:31","nodeType":"VariableDeclaration","scope":2824,"src":"1466:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2821,"name":"address","nodeType":"ElementaryTypeName","src":"1466:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1460:29:31"},"src":"1403:87:31"},{"documentation":{"id":2825,"nodeType":"StructuredDocumentation","src":"1492:129:31","text":" @dev Reverts if the `tokenReceiver` is an EOA\n when minting or transferring tokens with `bool force` set as `false`."},"errorSelector":"03173137","id":2829,"name":"LSP8NotifyTokenReceiverIsEOA","nameLocation":"1628:28:31","nodeType":"ErrorDefinition","parameters":{"id":2828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2827,"mutability":"mutable","name":"tokenReceiver","nameLocation":"1665:13:31","nodeType":"VariableDeclaration","scope":2829,"src":"1657:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2826,"name":"address","nodeType":"ElementaryTypeName","src":"1657:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1656:23:31"},"src":"1622:58:31"},{"documentation":{"id":2830,"nodeType":"StructuredDocumentation","src":"1682:92:31","text":" @dev Reverts when trying to authorize or revoke the token's owner as an operator."},"errorSelector":"89fdad62","id":2832,"name":"LSP8TokenOwnerCannotBeOperator","nameLocation":"1781:30:31","nodeType":"ErrorDefinition","parameters":{"id":2831,"nodeType":"ParameterList","parameters":[],"src":"1811:2:31"},"src":"1775:39:31"},{"documentation":{"id":2833,"nodeType":"StructuredDocumentation","src":"1816:255:31","text":" @dev Error occurs when sending native tokens to the LSP8 contract without sending any data.\n E.g. Sending value without passing a bytes4 function selector to call a LSP17 Extension.\n @notice LSP8 contract cannot receive native tokens."},"errorSelector":"61f49442","id":2835,"name":"LSP8TokenContractCannotHoldValue","nameLocation":"2078:32:31","nodeType":"ErrorDefinition","parameters":{"id":2834,"nodeType":"ParameterList","parameters":[],"src":"2110:2:31"},"src":"2072:41:31"},{"documentation":{"id":2836,"nodeType":"StructuredDocumentation","src":"2115:398:31","text":" @dev Reverts when trying to edit the data key `LSP8TokenIdFormat` after the identifiable digital asset contract has been deployed.\n The `LSP8TokenIdFormat` data key is located inside the ERC725Y Data key-value store of the identifiable digital asset contract.\n It can be set only once inside the constructor/initializer when the identifiable digital asset contract is being deployed."},"errorSelector":"3664800a","id":2838,"name":"LSP8TokenIdFormatNotEditable","nameLocation":"2520:28:31","nodeType":"ErrorDefinition","parameters":{"id":2837,"nodeType":"ParameterList","parameters":[],"src":"2548:2:31"},"src":"2514:37:31"},{"documentation":{"id":2839,"nodeType":"StructuredDocumentation","src":"2553:81:31","text":" @dev Reverts when the length of the token IDs data arrays is not equal"},"errorSelector":"2fa71dfe","id":2841,"name":"LSP8TokenIdsDataLengthMismatch","nameLocation":"2641:30:31","nodeType":"ErrorDefinition","parameters":{"id":2840,"nodeType":"ParameterList","parameters":[],"src":"2671:2:31"},"src":"2635:39:31"},{"documentation":{"id":2842,"nodeType":"StructuredDocumentation","src":"2676:67:31","text":" @dev Reverts when empty arrays is passed to the function"},"errorSelector":"80c98305","id":2844,"name":"LSP8TokenIdsDataEmptyArray","nameLocation":"2750:26:31","nodeType":"ErrorDefinition","parameters":{"id":2843,"nodeType":"ParameterList","parameters":[],"src":"2776:2:31"},"src":"2744:35:31"},{"documentation":{"id":2845,"nodeType":"StructuredDocumentation","src":"2781:79:31","text":" @dev Reverts when a batch call failed.\n @notice Batch call failed."},"errorSelector":"234eb819","id":2849,"name":"LSP8BatchCallFailed","nameLocation":"2867:19:31","nodeType":"ErrorDefinition","parameters":{"id":2848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2847,"mutability":"mutable","name":"callIndex","nameLocation":"2895:9:31","nodeType":"VariableDeclaration","scope":2849,"src":"2887:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2846,"name":"uint256","nodeType":"ElementaryTypeName","src":"2887:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2886:19:31"},"src":"2861:45:31"},{"documentation":{"id":2850,"nodeType":"StructuredDocumentation","src":"2908:92:31","text":" @dev Reverts when the token owner changed inside the {_beforeTokenTransfer} hook."},"errorSelector":"5a9c31d3","id":2858,"name":"LSP8TokenOwnerChanged","nameLocation":"3007:21:31","nodeType":"ErrorDefinition","parameters":{"id":2857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2852,"mutability":"mutable","name":"tokenId","nameLocation":"3042:7:31","nodeType":"VariableDeclaration","scope":2858,"src":"3034:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2851,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3034:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2854,"mutability":"mutable","name":"oldOwner","nameLocation":"3063:8:31","nodeType":"VariableDeclaration","scope":2858,"src":"3055:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2853,"name":"address","nodeType":"ElementaryTypeName","src":"3055:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2856,"mutability":"mutable","name":"newOwner","nameLocation":"3085:8:31","nodeType":"VariableDeclaration","scope":2858,"src":"3077:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2855,"name":"address","nodeType":"ElementaryTypeName","src":"3077:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3028:67:31"},"src":"3001:95:31"},{"documentation":{"id":2859,"nodeType":"StructuredDocumentation","src":"3098:75:31","text":" @dev Reverts when the call to revoke operator is not authorized."},"errorSelector":"760b5acd","id":2867,"name":"LSP8RevokeOperatorNotAuthorized","nameLocation":"3180:31:31","nodeType":"ErrorDefinition","parameters":{"id":2866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2861,"mutability":"mutable","name":"caller","nameLocation":"3225:6:31","nodeType":"VariableDeclaration","scope":2867,"src":"3217:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2860,"name":"address","nodeType":"ElementaryTypeName","src":"3217:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2863,"mutability":"mutable","name":"tokenOwner","nameLocation":"3245:10:31","nodeType":"VariableDeclaration","scope":2867,"src":"3237:18:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2862,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2865,"mutability":"mutable","name":"tokenId","nameLocation":"3269:7:31","nodeType":"VariableDeclaration","scope":2867,"src":"3261:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2864,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3261:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3211:67:31"},"src":"3174:105:31"}],"src":"39:3241:31"},"id":31},"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAsset.sol":{"ast":{"absolutePath":"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAsset.sol","exportedSymbols":{"ERC725YCore":[842],"IERC165":[5912],"InvalidExtensionAddress":[1318],"InvalidFunctionSelector":[1313],"LSP17Extendable":[1452],"LSP2Utils":[2294],"LSP4DigitalAssetMetadata":[2421],"LSP4DigitalAssetMetadataCore":[2483],"LSP8IdentifiableDigitalAsset":[3136],"LSP8IdentifiableDigitalAssetCore":[4489],"LSP8TokenContractCannotHoldValue":[2835],"LSP8TokenIdFormatNotEditable":[2838],"NoExtensionFoundForFunctionSelector":[1308],"_INTERFACEID_LSP8":[2720],"_LSP17_EXTENSION_PREFIX":[1301],"_LSP8_TOKENID_FORMAT_KEY":[2723]},"id":3137,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2869,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"39:24:32"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":2871,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3137,"sourceUnit":5913,"src":"79:80:32","symbolAliases":[{"foreign":{"id":2870,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"87:7:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/ERC725YCore.sol","file":"@erc725/smart-contracts/contracts/ERC725YCore.sol","id":2873,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3137,"sourceUnit":843,"src":"172:78:32","symbolAliases":[{"foreign":{"id":2872,"name":"ERC725YCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"180:11:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAssetCore.sol","file":"./LSP8IdentifiableDigitalAssetCore.sol","id":2875,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3137,"sourceUnit":4490,"src":"251:94:32","symbolAliases":[{"foreign":{"id":2874,"name":"LSP8IdentifiableDigitalAssetCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"264:32:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol","file":"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol","id":2877,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3137,"sourceUnit":2422,"src":"346:108:32","symbolAliases":[{"foreign":{"id":2876,"name":"LSP4DigitalAssetMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"359:24:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadataCore.sol","file":"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadataCore.sol","id":2879,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3137,"sourceUnit":2484,"src":"456:116:32","symbolAliases":[{"foreign":{"id":2878,"name":"LSP4DigitalAssetMetadataCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"469:28:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol","file":"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol","id":2881,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3137,"sourceUnit":1453,"src":"574:108:32","symbolAliases":[{"foreign":{"id":2880,"name":"LSP17Extendable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"587:15:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp2-contracts/contracts/LSP2Utils.sol","file":"@lukso/lsp2-contracts/contracts/LSP2Utils.sol","id":2883,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3137,"sourceUnit":2295,"src":"697:72:32","symbolAliases":[{"foreign":{"id":2882,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"705:9:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp8-contracts/contracts/LSP8Constants.sol","file":"./LSP8Constants.sol","id":2886,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3137,"sourceUnit":2769,"src":"784:80:32","symbolAliases":[{"foreign":{"id":2884,"name":"_INTERFACEID_LSP8","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"792:17:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2885,"name":"_LSP8_TOKENID_FORMAT_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"811:24:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp8-contracts/contracts/LSP8Errors.sol","file":"./LSP8Errors.sol","id":2889,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3137,"sourceUnit":2868,"src":"876:106:32","symbolAliases":[{"foreign":{"id":2887,"name":"LSP8TokenContractCannotHoldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"889:32:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2888,"name":"LSP8TokenIdFormatNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"927:28:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol","file":"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol","id":2891,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3137,"sourceUnit":1302,"src":"984:115:32","symbolAliases":[{"foreign":{"id":2890,"name":"_LSP17_EXTENSION_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"997:23:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol","file":"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol","id":2895,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3137,"sourceUnit":1319,"src":"1112:182:32","symbolAliases":[{"foreign":{"id":2892,"name":"NoExtensionFoundForFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"1125:35:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2893,"name":"InvalidFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"1166:23:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2894,"name":"InvalidExtensionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"1195:23:32","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2897,"name":"LSP4DigitalAssetMetadata","nameLocations":["1824:24:32"],"nodeType":"IdentifierPath","referencedDeclaration":2421,"src":"1824:24:32"},"id":2898,"nodeType":"InheritanceSpecifier","src":"1824:24:32"},{"baseName":{"id":2899,"name":"LSP8IdentifiableDigitalAssetCore","nameLocations":["1854:32:32"],"nodeType":"IdentifierPath","referencedDeclaration":4489,"src":"1854:32:32"},"id":2900,"nodeType":"InheritanceSpecifier","src":"1854:32:32"},{"baseName":{"id":2901,"name":"LSP17Extendable","nameLocations":["1892:15:32"],"nodeType":"IdentifierPath","referencedDeclaration":1452,"src":"1892:15:32"},"id":2902,"nodeType":"InheritanceSpecifier","src":"1892:15:32"}],"canonicalName":"LSP8IdentifiableDigitalAsset","contractDependencies":[],"contractKind":"contract","documentation":{"id":2896,"nodeType":"StructuredDocumentation","src":"1296:473:32","text":" @title Implementation of a LSP8 Identifiable Digital Asset, a contract that represents a non-fungible token.\n @author Matthew Stevens\n @dev Standard implementation contract of the LSP8 standard.\n Minting and transferring are done by providing a unique `tokenId`.\n This implementation is agnostic to the way tokens are created.\n A supply mechanism has to be added in a derived contract using {_mint}\n For a generic mechanism, see {LSP7Mintable}."},"fullyImplemented":true,"id":3136,"internalFunctionIDs":{"5705":1},"linearizedBaseContracts":[3136,1452,4489,2715,2421,2483,610,842,1129,5706,5912,971],"name":"LSP8IdentifiableDigitalAsset","nameLocation":"1788:28:32","nodeType":"ContractDefinition","nodes":[{"body":{"id":2932,"nodeType":"Block","src":"3199:142:32","statements":[{"expression":{"arguments":[{"id":2925,"name":"_LSP8_TOKENID_FORMAT_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"3256:24:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":2928,"name":"lsp8TokenIdFormat_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"3305:18:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2926,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3294:3:32","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3298:6:32","memberName":"encode","nodeType":"MemberAccess","src":"3294:10:32","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3294:30:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2922,"name":"LSP4DigitalAssetMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"3209:24:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP4DigitalAssetMetadata_$2421_$","typeString":"type(contract LSP4DigitalAssetMetadata)"}},"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3234:8:32","memberName":"_setData","nodeType":"MemberAccess","referencedDeclaration":2420,"src":"3209:33:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3209:125:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2931,"nodeType":"ExpressionStatement","src":"3209:125:32"}]},"documentation":{"id":2903,"nodeType":"StructuredDocumentation","src":"1914:1039:32","text":" @notice Deploying a LSP8IdentifiableDigitalAsset with name `name_`, symbol `symbol_`, owned by address `newOwner_`\n with tokenId format `lsp8TokenIdFormat_`.\n @dev Deploy a `LSP8IdentifiableDigitalAsset` contract and set the tokenId format inside the ERC725Y storage of the contract.\n This will also set the token `name_` and `symbol_` under the ERC725Y data keys `LSP4TokenName` and `LSP4TokenSymbol`.\n @param name_ The name of the token\n @param symbol_ The symbol of the token\n @param newOwner_ The owner of the the token-Metadata\n @param lsp4TokenType_ The type of token this digital asset contract represents (`0` = Token, `1` = NFT, `2` = Collection).\n @param lsp8TokenIdFormat_ The format of tokenIds (= NFTs) that this contract will create.\n @custom:warning Make sure the tokenId format provided on deployment is correct, as it can only be set once\n and cannot be changed in the ERC725Y storage after the contract has been deployed."},"id":2933,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2916,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"3156:5:32","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2917,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"3163:7:32","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2918,"name":"newOwner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"3172:9:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2919,"name":"lsp4TokenType_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"3183:14:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2920,"kind":"baseConstructorSpecifier","modifierName":{"id":2915,"name":"LSP4DigitalAssetMetadata","nameLocations":["3131:24:32"],"nodeType":"IdentifierPath","referencedDeclaration":2421,"src":"3131:24:32"},"nodeType":"ModifierInvocation","src":"3131:67:32"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2905,"mutability":"mutable","name":"name_","nameLocation":"2993:5:32","nodeType":"VariableDeclaration","scope":2933,"src":"2979:19:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2904,"name":"string","nodeType":"ElementaryTypeName","src":"2979:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2907,"mutability":"mutable","name":"symbol_","nameLocation":"3022:7:32","nodeType":"VariableDeclaration","scope":2933,"src":"3008:21:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2906,"name":"string","nodeType":"ElementaryTypeName","src":"3008:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2909,"mutability":"mutable","name":"newOwner_","nameLocation":"3047:9:32","nodeType":"VariableDeclaration","scope":2933,"src":"3039:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2908,"name":"address","nodeType":"ElementaryTypeName","src":"3039:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2911,"mutability":"mutable","name":"lsp4TokenType_","nameLocation":"3074:14:32","nodeType":"VariableDeclaration","scope":2933,"src":"3066:22:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2910,"name":"uint256","nodeType":"ElementaryTypeName","src":"3066:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2913,"mutability":"mutable","name":"lsp8TokenIdFormat_","nameLocation":"3106:18:32","nodeType":"VariableDeclaration","scope":2933,"src":"3098:26:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2912,"name":"uint256","nodeType":"ElementaryTypeName","src":"3098:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2969:161:32"},"returnParameters":{"id":2921,"nodeType":"ParameterList","parameters":[],"src":"3199:0:32"},"scope":3136,"src":"2958:383:32","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2956,"nodeType":"Block","src":"5174:157:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2941,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5188:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5192:4:32","memberName":"data","nodeType":"MemberAccess","src":"5188:8:32","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5197:6:32","memberName":"length","nodeType":"MemberAccess","src":"5188:15:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"34","id":2944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5206:1:32","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"5188:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2951,"nodeType":"IfStatement","src":"5184:90:32","trueBody":{"id":2950,"nodeType":"Block","src":"5209:65:32","statements":[{"errorCall":{"arguments":[{"id":2947,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"5254:8:32","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":2946,"name":"InvalidFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"5230:23:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5230:33:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2949,"nodeType":"RevertStatement","src":"5223:40:32"}]}},{"expression":{"arguments":[{"id":2953,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"5315:8:32","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":2952,"name":"_fallbackLSP17Extendable","nodeType":"Identifier","overloadedDeclarations":[3030],"referencedDeclaration":3030,"src":"5290:24:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_calldata_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes calldata) returns (bytes memory)"}},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5290:34:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2940,"id":2955,"nodeType":"Return","src":"5283:41:32"}]},"documentation":{"id":2934,"nodeType":"StructuredDocumentation","src":"3373:1647:32","text":" @notice The `fallback` function was called with the following amount of native tokens: `msg.value`; and the following calldata: `callData`.\n @dev Achieves the goal of [LSP-17-ContractExtension] standard by extending the contract to handle calls of functions that do not exist natively,\n forwarding the function call to the extension address mapped to the function being called.\n This function is executed when:\n    - Sending data of length less than 4 bytes to the contract.\n    - The first 4 bytes of the calldata do not match any publicly callable functions from the contract ABI.\n    - Receiving native tokens\n 1. If the data is equal or longer than 4 bytes, the [ERC-725Y] storage is queried with the following data key: [_LSP17_EXTENSION_PREFIX] + `bytes4(msg.sig)` (Check [LSP-2-ERC725YJSONSchema] for encoding the data key)\n   - If there is no address stored under the following data key, revert with {NoExtensionFoundForFunctionSelector(bytes4)}. The data key relative to `bytes4(0)` is an exception, where no reverts occurs if there is no extension address stored under. This exception is made to allow users to send random data (graffiti) to the account and to be able to react on it.\n   - If there is an address, forward the `msg.data` to the extension using the CALL opcode, appending 52 bytes (20 bytes of `msg.sender` and 32 bytes of `msg.value`). Return what the calls returns, or revert if the call failed.\n 2. If the data sent to this function is of length less than 4 bytes (not a function selector), revert."},"id":2957,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2936,"mutability":"mutable","name":"callData","nameLocation":"5111:8:32","nodeType":"VariableDeclaration","scope":2957,"src":"5096:23:32","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2935,"name":"bytes","nodeType":"ElementaryTypeName","src":"5096:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5086:39:32"},"returnParameters":{"id":2940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2957,"src":"5160:12:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2938,"name":"bytes","nodeType":"ElementaryTypeName","src":"5160:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5159:14:32"},"scope":3136,"src":"5078:253:32","stateMutability":"payable","virtual":true,"visibility":"external"},{"body":{"id":2974,"nodeType":"Block","src":"5532:205:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2961,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5593:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5597:5:32","memberName":"value","nodeType":"MemberAccess","src":"5593:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5606:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5593:14:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2970,"nodeType":"IfStatement","src":"5589:90:32","trueBody":{"id":2969,"nodeType":"Block","src":"5609:70:32","statements":[{"errorCall":{"arguments":[{"hexValue":"00000000","id":2966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5654:13:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c","typeString":"literal_string hex\"00000000\""},"value":"\u0000\u0000\u0000\u0000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c","typeString":"literal_string hex\"00000000\""}],"id":2965,"name":"InvalidFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"5630:23:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5630:38:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2968,"nodeType":"RevertStatement","src":"5623:45:32"}]}},{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2971,"name":"LSP8TokenContractCannotHoldValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"5696:32:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5696:34:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2973,"nodeType":"RevertStatement","src":"5689:41:32"}]},"documentation":{"id":2958,"nodeType":"StructuredDocumentation","src":"5337:155:32","text":" @dev Reverts whenever someone tries to send native tokens to a LSP8 contract.\n @notice LSP8 contract cannot receive native tokens."},"id":2975,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2959,"nodeType":"ParameterList","parameters":[],"src":"5504:2:32"},"returnParameters":{"id":2960,"nodeType":"ParameterList","parameters":[],"src":"5532:0:32"},"scope":3136,"src":"5497:240:32","stateMutability":"payable","virtual":true,"visibility":"external"},{"baseFunctions":[1451],"body":{"id":3029,"nodeType":"Block","src":"6854:909:32","statements":[{"assignments":[2985,null],"declarations":[{"constant":false,"id":2985,"mutability":"mutable","name":"extension","nameLocation":"6916:9:32","nodeType":"VariableDeclaration","scope":3029,"src":"6908:17:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2984,"name":"address","nodeType":"ElementaryTypeName","src":"6908:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},null],"id":2990,"initialValue":{"arguments":[{"expression":{"id":2987,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6960:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6964:3:32","memberName":"sig","nodeType":"MemberAccess","src":"6960:7:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":2986,"name":"_getExtensionAndForwardValue","nodeType":"Identifier","overloadedDeclarations":[3081],"referencedDeclaration":3081,"src":"6931:28:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_address_$_t_bool_$","typeString":"function (bytes4) view returns (address,bool)"}},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6931:37:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"nodeType":"VariableDeclarationStatement","src":"6907:61:32"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2991,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"7028:9:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7049:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7041:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2992,"name":"address","nodeType":"ElementaryTypeName","src":"7041:7:32","typeDescriptions":{}}},"id":2995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:10:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7028:23:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3002,"nodeType":"IfStatement","src":"7024:92:32","trueBody":{"errorCall":{"arguments":[{"expression":{"id":2998,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7108:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7112:3:32","memberName":"sig","nodeType":"MemberAccess","src":"7108:7:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":2997,"name":"NoExtensionFoundForFunctionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"7072:35:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7072:44:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3001,"nodeType":"RevertStatement","src":"7065:51:32"}},{"assignments":[3004,3006],"declarations":[{"constant":false,"id":3004,"mutability":"mutable","name":"success","nameLocation":"7133:7:32","nodeType":"VariableDeclaration","scope":3029,"src":"7128:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3003,"name":"bool","nodeType":"ElementaryTypeName","src":"7128:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3006,"mutability":"mutable","name":"result","nameLocation":"7155:6:32","nodeType":"VariableDeclaration","scope":3029,"src":"7142:19:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3005,"name":"bytes","nodeType":"ElementaryTypeName","src":"7142:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3021,"initialValue":{"arguments":[{"arguments":[{"id":3014,"name":"callData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2978,"src":"7228:8:32","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"expression":{"id":3015,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7238:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7242:6:32","memberName":"sender","nodeType":"MemberAccess","src":"7238:10:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3017,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7250:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7254:5:32","memberName":"value","nodeType":"MemberAccess","src":"7250:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3012,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7211:3:32","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7215:12:32","memberName":"encodePacked","nodeType":"MemberAccess","src":"7211:16:32","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7211:49:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3007,"name":"extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"7165:9:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7175:4:32","memberName":"call","nodeType":"MemberAccess","src":"7165:14:32","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":3009,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7187:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7191:5:32","memberName":"value","nodeType":"MemberAccess","src":"7187:9:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"7165:32:32","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7165:105:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7127:143:32"},{"condition":{"id":3022,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"7285:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3027,"nodeType":"Block","src":"7338:419:32","statements":[{"AST":{"nodeType":"YulBlock","src":"7622:125:32","statements":[{"nodeType":"YulVariableDeclaration","src":"7640:36:32","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"7669:6:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7663:5:32"},"nodeType":"YulFunctionCall","src":"7663:13:32"},"variables":[{"name":"resultdata_size","nodeType":"YulTypedName","src":"7644:15:32","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"7704:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"7712:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7700:3:32"},"nodeType":"YulFunctionCall","src":"7700:15:32"},{"name":"resultdata_size","nodeType":"YulIdentifier","src":"7717:15:32"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7693:6:32"},"nodeType":"YulFunctionCall","src":"7693:40:32"},"nodeType":"YulExpressionStatement","src":"7693:40:32"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3006,"isOffset":false,"isSlot":false,"src":"7669:6:32","valueSize":1},{"declaration":3006,"isOffset":false,"isSlot":false,"src":"7704:6:32","valueSize":1}],"id":3026,"nodeType":"InlineAssembly","src":"7613:134:32"}]},"id":3028,"nodeType":"IfStatement","src":"7281:476:32","trueBody":{"id":3025,"nodeType":"Block","src":"7294:38:32","statements":[{"expression":{"id":3023,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3006,"src":"7315:6:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2983,"id":3024,"nodeType":"Return","src":"7308:13:32"}]}}]},"documentation":{"id":2976,"nodeType":"StructuredDocumentation","src":"5743:984:32","text":" @dev Forwards the call with the received value to an extension mapped to a function selector.\n Calls {_getExtensionAndForwardValue} to get the address of the extension mapped to the function selector being\n called on the account. If there is no extension, the address(0) will be returned.\n We will always forward the value to the extension, as the LSP8 contract is not supposed to hold any native tokens.\n Reverts if there is no extension for the function being called.\n If there is an extension for the function selector being called, it calls the extension with the\n CALL opcode, passing the {msg.data} appended with the 20 bytes of the {msg.sender} and\n 32 bytes of the {msg.value}\n @custom:info The LSP8 Token contract should not hold any native tokens. Any native tokens received by the contract\n will be forwarded to the extension address mapped to the selector from `msg.sig`."},"id":3030,"implemented":true,"kind":"function","modifiers":[],"name":"_fallbackLSP17Extendable","nameLocation":"6741:24:32","nodeType":"FunctionDefinition","overrides":{"id":2980,"nodeType":"OverrideSpecifier","overrides":[],"src":"6822:8:32"},"parameters":{"id":2979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2978,"mutability":"mutable","name":"callData","nameLocation":"6790:8:32","nodeType":"VariableDeclaration","scope":3030,"src":"6775:23:32","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2977,"name":"bytes","nodeType":"ElementaryTypeName","src":"6775:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6765:39:32"},"returnParameters":{"id":2983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3030,"src":"6840:12:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2981,"name":"bytes","nodeType":"ElementaryTypeName","src":"6840:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6839:14:32"},"scope":3136,"src":"6732:1031:32","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1392],"body":{"id":3080,"nodeType":"Block","src":"8164:619:32","statements":[{"assignments":[3042],"declarations":[{"constant":false,"id":3042,"mutability":"mutable","name":"mappedExtensionDataKey","nameLocation":"8262:22:32","nodeType":"VariableDeclaration","scope":3080,"src":"8254:30:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3041,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8254:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3048,"initialValue":{"arguments":[{"id":3045,"name":"_LSP17_EXTENSION_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"8329:23:32","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},{"id":3046,"name":"functionSelector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"8366:16:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes10","typeString":"bytes10"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":3043,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"8287:9:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP2Utils_$2294_$","typeString":"type(library LSP2Utils)"}},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8297:18:32","memberName":"generateMappingKey","nodeType":"MemberAccess","referencedDeclaration":1784,"src":"8287:28:32","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes10_$_t_bytes20_$returns$_t_bytes32_$","typeString":"function (bytes10,bytes20) pure returns (bytes32)"}},"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8287:105:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8254:138:32"},{"assignments":[3050],"declarations":[{"constant":false,"id":3050,"mutability":"mutable","name":"extensionAddress","nameLocation":"8494:16:32","nodeType":"VariableDeclaration","scope":3080,"src":"8481:29:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3049,"name":"bytes","nodeType":"ElementaryTypeName","src":"8481:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3055,"initialValue":{"arguments":[{"id":3053,"name":"mappedExtensionDataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"8547:22:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3051,"name":"ERC725YCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"8513:11:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC725YCore_$842_$","typeString":"type(contract ERC725YCore)"}},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8525:8:32","memberName":"_getData","nodeType":"MemberAccess","referencedDeclaration":800,"src":"8513:20:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) view returns (bytes memory)"}},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8513:66:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"8481:98:32"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3056,"name":"extensionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"8593:16:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8610:6:32","memberName":"length","nodeType":"MemberAccess","src":"8593:23:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"3230","id":3058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8620:2:32","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"8593:29:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3060,"name":"extensionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"8626:16:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8643:6:32","memberName":"length","nodeType":"MemberAccess","src":"8626:23:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8653:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8626:28:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8593:61:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3069,"nodeType":"IfStatement","src":"8589:127:32","trueBody":{"errorCall":{"arguments":[{"id":3066,"name":"extensionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"8699:16:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3065,"name":"InvalidExtensionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"8675:23:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8675:41:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3068,"nodeType":"RevertStatement","src":"8668:48:32"}},{"expression":{"components":[{"arguments":[{"arguments":[{"id":3074,"name":"extensionAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"8751:16:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8743:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":3072,"name":"bytes20","nodeType":"ElementaryTypeName","src":"8743:7:32","typeDescriptions":{}}},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8743:25:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":3071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8735:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3070,"name":"address","nodeType":"ElementaryTypeName","src":"8735:7:32","typeDescriptions":{}}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8735:34:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":3077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8771:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"id":3078,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8734:42:32","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_bool_$","typeString":"tuple(address,bool)"}},"functionReturnParameters":3040,"id":3079,"nodeType":"Return","src":"8727:49:32"}]},"documentation":{"id":3031,"nodeType":"StructuredDocumentation","src":"7769:258:32","text":" @dev Returns the extension address stored under the following data key:\n - {_LSP17_EXTENSION_PREFIX} + `<bytes4>` (Check [LSP2-ERC725YJSONSchema] for encoding the data key).\n - If no extension is stored, returns the address(0)."},"id":3081,"implemented":true,"kind":"function","modifiers":[],"name":"_getExtensionAndForwardValue","nameLocation":"8041:28:32","nodeType":"FunctionDefinition","overrides":{"id":3035,"nodeType":"OverrideSpecifier","overrides":[],"src":"8131:8:32"},"parameters":{"id":3034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3033,"mutability":"mutable","name":"functionSelector","nameLocation":"8086:16:32","nodeType":"VariableDeclaration","scope":3081,"src":"8079:23:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3032,"name":"bytes4","nodeType":"ElementaryTypeName","src":"8079:6:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"8069:39:32"},"returnParameters":{"id":3040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3081,"src":"8149:7:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3036,"name":"address","nodeType":"ElementaryTypeName","src":"8149:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3081,"src":"8158:4:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3038,"name":"bool","nodeType":"ElementaryTypeName","src":"8158:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8148:15:32"},"scope":3136,"src":"8032:751:32","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[841,1350,5911],"body":{"id":3107,"nodeType":"Block","src":"9020:200:32","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3093,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"9049:11:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3094,"name":"_INTERFACEID_LSP8","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"9064:17:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"9049:32:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":3098,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"9121:11:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":3096,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"9097:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_LSP8IdentifiableDigitalAsset_$3136_$","typeString":"type(contract super LSP8IdentifiableDigitalAsset)"}},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9103:17:32","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1350,"src":"9097:23:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9097:36:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9049:84:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":3103,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"9201:11:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":3101,"name":"LSP17Extendable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"9149:15:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP17Extendable_$1452_$","typeString":"type(contract LSP17Extendable)"}},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:35:32","memberName":"_supportsInterfaceInERC165Extension","nodeType":"MemberAccess","referencedDeclaration":1382,"src":"9149:51:32","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9149:64:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9049:164:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3092,"id":3106,"nodeType":"Return","src":"9030:183:32"}]},"documentation":{"id":3082,"nodeType":"StructuredDocumentation","src":"8789:38:32","text":" @inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":3108,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"8841:17:32","nodeType":"FunctionDefinition","overrides":{"id":3089,"nodeType":"OverrideSpecifier","overrides":[{"id":3086,"name":"IERC165","nameLocations":["8954:7:32"],"nodeType":"IdentifierPath","referencedDeclaration":5912,"src":"8954:7:32"},{"id":3087,"name":"ERC725YCore","nameLocations":["8963:11:32"],"nodeType":"IdentifierPath","referencedDeclaration":842,"src":"8963:11:32"},{"id":3088,"name":"LSP17Extendable","nameLocations":["8976:15:32"],"nodeType":"IdentifierPath","referencedDeclaration":1452,"src":"8976:15:32"}],"src":"8945:47:32"},"parameters":{"id":3085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3084,"mutability":"mutable","name":"interfaceId","nameLocation":"8875:11:32","nodeType":"VariableDeclaration","scope":3108,"src":"8868:18:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3083,"name":"bytes4","nodeType":"ElementaryTypeName","src":"8868:6:32","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"8858:34:32"},"returnParameters":{"id":3092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3091,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3108,"src":"9010:4:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3090,"name":"bool","nodeType":"ElementaryTypeName","src":"9010:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9009:6:32"},"scope":3136,"src":"8832:388:32","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2420,2482],"body":{"id":3134,"nodeType":"Block","src":"9626:182:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3119,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"9640:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3120,"name":"_LSP8_TOKENID_FORMAT_KEY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"9651:24:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9640:35:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3126,"nodeType":"IfStatement","src":"9636:103:32","trueBody":{"id":3125,"nodeType":"Block","src":"9677:62:32","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3122,"name":"LSP8TokenIdFormatNotEditable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"9698:28:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9698:30:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3124,"nodeType":"RevertStatement","src":"9691:37:32"}]}},{"expression":{"arguments":[{"id":3130,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"9782:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3131,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"9791:9:32","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3127,"name":"LSP4DigitalAssetMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"9748:24:32","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP4DigitalAssetMetadata_$2421_$","typeString":"type(contract LSP4DigitalAssetMetadata)"}},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9773:8:32","memberName":"_setData","nodeType":"MemberAccess","referencedDeclaration":2420,"src":"9748:33:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9748:53:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3133,"nodeType":"ExpressionStatement","src":"9748:53:32"}]},"documentation":{"id":3109,"nodeType":"StructuredDocumentation","src":"9226:204:32","text":" @inheritdoc LSP4DigitalAssetMetadata\n @dev The ERC725Y data key `_LSP8_TOKENID_FORMAT_KEY` cannot be changed\n once the identifiable digital asset contract has been deployed."},"id":3135,"implemented":true,"kind":"function","modifiers":[],"name":"_setData","nameLocation":"9444:8:32","nodeType":"FunctionDefinition","overrides":{"id":3117,"nodeType":"OverrideSpecifier","overrides":[{"id":3115,"name":"LSP4DigitalAssetMetadata","nameLocations":["9566:24:32"],"nodeType":"IdentifierPath","referencedDeclaration":2421,"src":"9566:24:32"},{"id":3116,"name":"LSP4DigitalAssetMetadataCore","nameLocations":["9592:28:32"],"nodeType":"IdentifierPath","referencedDeclaration":2483,"src":"9592:28:32"}],"src":"9557:64:32"},"parameters":{"id":3114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3111,"mutability":"mutable","name":"dataKey","nameLocation":"9470:7:32","nodeType":"VariableDeclaration","scope":3135,"src":"9462:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3110,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9462:7:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3113,"mutability":"mutable","name":"dataValue","nameLocation":"9500:9:32","nodeType":"VariableDeclaration","scope":3135,"src":"9487:22:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3112,"name":"bytes","nodeType":"ElementaryTypeName","src":"9487:5:32","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9452:63:32"},"returnParameters":{"id":3118,"nodeType":"ParameterList","parameters":[],"src":"9626:0:32"},"scope":3136,"src":"9435:373:32","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3137,"src":"1770:8040:32","usedErrors":[1009,1012,1015,1308,1313,1318,2488,2491,2494,2775,2784,2791,2798,2801,2804,2811,2819,2824,2829,2832,2835,2838,2841,2844,2849,2858,2867],"usedEvents":[876,1092,2520,2531,2544,2553]}],"src":"39:9772:32"},"id":32},"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAssetCore.sol":{"ast":{"absolutePath":"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAssetCore.sol","exportedSymbols":{"ERC165Checker":[5900],"EnumerableSet":[7496],"ILSP1":[1191],"ILSP8IdentifiableDigitalAsset":[2715],"LSP1Utils":[1290],"LSP4DigitalAssetMetadataCore":[2483],"LSP8BatchCallFailed":[2849],"LSP8CannotSendToAddressZero":[2804],"LSP8CannotUseAddressZeroAsOperator":[2801],"LSP8IdentifiableDigitalAssetCore":[4489],"LSP8InvalidTransferBatch":[2819],"LSP8NonExistentTokenId":[2775],"LSP8NonExistingOperator":[2811],"LSP8NotTokenOperator":[2791],"LSP8NotTokenOwner":[2784],"LSP8NotifyTokenReceiverContractMissingLSP1Interface":[2824],"LSP8NotifyTokenReceiverIsEOA":[2829],"LSP8OperatorAlreadyAuthorized":[2798],"LSP8RevokeOperatorNotAuthorized":[2867],"LSP8TokenIdAlreadyMinted":[2816],"LSP8TokenIdsDataEmptyArray":[2844],"LSP8TokenIdsDataLengthMismatch":[2841],"LSP8TokenOwnerCannotBeOperator":[2832],"LSP8TokenOwnerChanged":[2858],"_INTERFACEID_LSP1":[1196],"_TYPEID_LSP8_TOKENOPERATOR":[2738],"_TYPEID_LSP8_TOKENSRECIPIENT":[2735],"_TYPEID_LSP8_TOKENSSENDER":[2732]},"id":4490,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":3138,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"39:24:33"},{"absolutePath":"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol","file":"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol","id":3140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4490,"sourceUnit":1192,"src":"79:113:33","symbolAliases":[{"foreign":{"id":3139,"name":"ILSP1UniversalReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"92:22:33","typeDescriptions":{}},"local":"ILSP1","nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp8-contracts/contracts/ILSP8IdentifiableDigitalAsset.sol","file":"./ILSP8IdentifiableDigitalAsset.sol","id":3142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4490,"sourceUnit":2716,"src":"193:88:33","symbolAliases":[{"foreign":{"id":3141,"name":"ILSP8IdentifiableDigitalAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"206:29:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadataCore.sol","file":"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadataCore.sol","id":3144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4490,"sourceUnit":2484,"src":"295:116:33","symbolAliases":[{"foreign":{"id":3143,"name":"LSP4DigitalAssetMetadataCore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"308:28:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","id":3146,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4490,"sourceUnit":7497,"src":"426:92:33","symbolAliases":[{"foreign":{"id":3145,"name":"EnumerableSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7496,"src":"439:13:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","id":3148,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4490,"sourceUnit":5901,"src":"519:98:33","symbolAliases":[{"foreign":{"id":3147,"name":"ERC165Checker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"532:13:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp1-contracts/contracts/LSP1Utils.sol","file":"@lukso/lsp1-contracts/contracts/LSP1Utils.sol","id":3150,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4490,"sourceUnit":1291,"src":"618:72:33","symbolAliases":[{"foreign":{"id":3149,"name":"LSP1Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"626:9:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp8-contracts/contracts/LSP8Errors.sol","file":"./LSP8Errors.sol","id":3168,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4490,"sourceUnit":2868,"src":"702:592:33","symbolAliases":[{"foreign":{"id":3151,"name":"LSP8NonExistentTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"715:22:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3152,"name":"LSP8NotTokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"743:17:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3153,"name":"LSP8CannotUseAddressZeroAsOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"766:34:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3154,"name":"LSP8TokenOwnerCannotBeOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"806:30:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3155,"name":"LSP8OperatorAlreadyAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"842:29:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3156,"name":"LSP8NotTokenOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"877:20:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3157,"name":"LSP8InvalidTransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"903:24:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3158,"name":"LSP8NonExistingOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"933:23:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3159,"name":"LSP8CannotSendToAddressZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"962:27:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3160,"name":"LSP8TokenIdAlreadyMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"995:24:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3161,"name":"LSP8NotifyTokenReceiverContractMissingLSP1Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"1025:51:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3162,"name":"LSP8NotifyTokenReceiverIsEOA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"1082:28:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3163,"name":"LSP8TokenIdsDataLengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"1116:30:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3164,"name":"LSP8TokenIdsDataEmptyArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"1152:26:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3165,"name":"LSP8BatchCallFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"1184:19:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3166,"name":"LSP8TokenOwnerChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"1209:21:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3167,"name":"LSP8RevokeOperatorNotAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"1236:31:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp1-contracts/contracts/LSP1Constants.sol","file":"@lukso/lsp1-contracts/contracts/LSP1Constants.sol","id":3170,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4490,"sourceUnit":1206,"src":"1309:90:33","symbolAliases":[{"foreign":{"id":3169,"name":"_INTERFACEID_LSP1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"1322:17:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp8-contracts/contracts/LSP8Constants.sol","file":"./LSP8Constants.sol","id":3174,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4490,"sourceUnit":2769,"src":"1400:134:33","symbolAliases":[{"foreign":{"id":3171,"name":"_TYPEID_LSP8_TOKENOPERATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"1413:26:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3172,"name":"_TYPEID_LSP8_TOKENSSENDER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"1445:25:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3173,"name":"_TYPEID_LSP8_TOKENSRECIPIENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"1476:28:33","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3176,"name":"LSP4DigitalAssetMetadataCore","nameLocations":["1735:28:33"],"nodeType":"IdentifierPath","referencedDeclaration":2483,"src":"1735:28:33"},"id":3177,"nodeType":"InheritanceSpecifier","src":"1735:28:33"},{"baseName":{"id":3178,"name":"ILSP8IdentifiableDigitalAsset","nameLocations":["1769:29:33"],"nodeType":"IdentifierPath","referencedDeclaration":2715,"src":"1769:29:33"},"id":3179,"nodeType":"InheritanceSpecifier","src":"1769:29:33"}],"canonicalName":"LSP8IdentifiableDigitalAssetCore","contractDependencies":[],"contractKind":"contract","documentation":{"id":3175,"nodeType":"StructuredDocumentation","src":"1536:140:33","text":" @title LSP8IdentifiableDigitalAsset contract\n @author Matthew Stevens\n @dev Core Implementation of a LSP8 compliant contract."},"fullyImplemented":true,"id":4489,"linearizedBaseContracts":[4489,2715,2483,842,1129,5706,5912,971],"name":"LSP8IdentifiableDigitalAssetCore","nameLocation":"1695:32:33","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3183,"libraryName":{"id":3180,"name":"EnumerableSet","nameLocations":["1811:13:33"],"nodeType":"IdentifierPath","referencedDeclaration":7496,"src":"1811:13:33"},"nodeType":"UsingForDirective","src":"1805:49:33","typeName":{"id":3182,"nodeType":"UserDefinedTypeName","pathNode":{"id":3181,"name":"EnumerableSet.AddressSet","nameLocations":["1829:13:33","1843:10:33"],"nodeType":"IdentifierPath","referencedDeclaration":7209,"src":"1829:24:33"},"referencedDeclaration":7209,"src":"1829:24:33","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7209_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"global":false,"id":3187,"libraryName":{"id":3184,"name":"EnumerableSet","nameLocations":["1865:13:33"],"nodeType":"IdentifierPath","referencedDeclaration":7496,"src":"1865:13:33"},"nodeType":"UsingForDirective","src":"1859:49:33","typeName":{"id":3186,"nodeType":"UserDefinedTypeName","pathNode":{"id":3185,"name":"EnumerableSet.Bytes32Set","nameLocations":["1883:13:33","1897:10:33"],"nodeType":"IdentifierPath","referencedDeclaration":7088,"src":"1883:24:33"},"referencedDeclaration":7088,"src":"1883:24:33","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7088_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}}},{"constant":false,"id":3189,"mutability":"mutable","name":"_existingTokens","nameLocation":"1951:15:33","nodeType":"VariableDeclaration","scope":4489,"src":"1934:32:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3188,"name":"uint256","nodeType":"ElementaryTypeName","src":"1934:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3193,"mutability":"mutable","name":"_tokenOwners","nameLocation":"2056:12:33","nodeType":"VariableDeclaration","scope":4489,"src":"2019:49:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"typeName":{"id":3192,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3190,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2027:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2019:27:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3191,"name":"address","nodeType":"ElementaryTypeName","src":"2038:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"constant":false,"id":3198,"mutability":"mutable","name":"_ownedTokens","nameLocation":"2175:12:33","nodeType":"VariableDeclaration","scope":4489,"src":"2121:66:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$7088_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set)"},"typeName":{"id":3197,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3194,"name":"address","nodeType":"ElementaryTypeName","src":"2129:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2121:44:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$7088_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3196,"nodeType":"UserDefinedTypeName","pathNode":{"id":3195,"name":"EnumerableSet.Bytes32Set","nameLocations":["2140:13:33","2154:10:33"],"nodeType":"IdentifierPath","referencedDeclaration":7088,"src":"2140:24:33"},"referencedDeclaration":7088,"src":"2140:24:33","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7088_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}}},"visibility":"internal"},{"constant":false,"id":3203,"mutability":"mutable","name":"_operators","nameLocation":"2313:10:33","nodeType":"VariableDeclaration","scope":4489,"src":"2259:64:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$7209_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"typeName":{"id":3202,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3199,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2267:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2259:44:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$7209_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3201,"nodeType":"UserDefinedTypeName","pathNode":{"id":3200,"name":"EnumerableSet.AddressSet","nameLocations":["2278:13:33","2292:10:33"],"nodeType":"IdentifierPath","referencedDeclaration":7209,"src":"2278:24:33"},"referencedDeclaration":7209,"src":"2278:24:33","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7209_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},"visibility":"internal"},{"constant":false,"id":3209,"mutability":"mutable","name":"_tokenIdData","nameLocation":"2443:12:33","nodeType":"VariableDeclaration","scope":4489,"src":"2388:67:33","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_bytes_storage_$_$","typeString":"mapping(bytes32 => mapping(bytes32 => bytes))"},"typeName":{"id":3208,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3204,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2396:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2388:45:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_bytes_storage_$_$","typeString":"mapping(bytes32 => mapping(bytes32 => bytes))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3207,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3205,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2415:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2407:25:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3206,"name":"bytes","nodeType":"ElementaryTypeName","src":"2426:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}}},"visibility":"internal"},{"baseFunctions":[2559],"body":{"id":3218,"nodeType":"Block","src":"2623:39:33","statements":[{"expression":{"id":3216,"name":"_existingTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"2640:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3215,"id":3217,"nodeType":"Return","src":"2633:22:33"}]},"documentation":{"id":3210,"nodeType":"StructuredDocumentation","src":"2488:60:33","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"18160ddd","id":3219,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2562:11:33","nodeType":"FunctionDefinition","overrides":{"id":3212,"nodeType":"OverrideSpecifier","overrides":[],"src":"2596:8:33"},"parameters":{"id":3211,"nodeType":"ParameterList","parameters":[],"src":"2573:2:33"},"returnParameters":{"id":3215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3219,"src":"2614:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3213,"name":"uint256","nodeType":"ElementaryTypeName","src":"2614:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2613:9:33"},"scope":4489,"src":"2553:109:33","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2567],"body":{"id":3234,"nodeType":"Block","src":"2865:57:33","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3228,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"2882:12:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$7088_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set storage ref)"}},"id":3230,"indexExpression":{"id":3229,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"2895:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2882:24:33","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7088_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2907:6:33","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":7157,"src":"2882:31:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$7088_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Bytes32Set_$7088_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer) view returns (uint256)"}},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2882:33:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3227,"id":3233,"nodeType":"Return","src":"2875:40:33"}]},"documentation":{"id":3220,"nodeType":"StructuredDocumentation","src":"2700:60:33","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"70a08231","id":3235,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2774:9:33","nodeType":"FunctionDefinition","overrides":{"id":3224,"nodeType":"OverrideSpecifier","overrides":[],"src":"2838:8:33"},"parameters":{"id":3223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3222,"mutability":"mutable","name":"tokenOwner","nameLocation":"2801:10:33","nodeType":"VariableDeclaration","scope":3235,"src":"2793:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3221,"name":"address","nodeType":"ElementaryTypeName","src":"2793:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2783:34:33"},"returnParameters":{"id":3227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3235,"src":"2856:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3225,"name":"uint256","nodeType":"ElementaryTypeName","src":"2856:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2855:9:33"},"scope":4489,"src":"2765:157:33","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2575],"body":{"id":3264,"nodeType":"Block","src":"3093:190:33","statements":[{"assignments":[3245],"declarations":[{"constant":false,"id":3245,"mutability":"mutable","name":"tokenOwner","nameLocation":"3111:10:33","nodeType":"VariableDeclaration","scope":3264,"src":"3103:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3244,"name":"address","nodeType":"ElementaryTypeName","src":"3103:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3249,"initialValue":{"baseExpression":{"id":3246,"name":"_tokenOwners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"3124:12:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":3248,"indexExpression":{"id":3247,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"3137:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3124:21:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3103:42:33"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3250,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"3160:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3182:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3174:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3251,"name":"address","nodeType":"ElementaryTypeName","src":"3174:7:33","typeDescriptions":{}}},"id":3254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3174:10:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3160:24:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3261,"nodeType":"IfStatement","src":"3156:93:33","trueBody":{"id":3260,"nodeType":"Block","src":"3186:63:33","statements":[{"errorCall":{"arguments":[{"id":3257,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"3230:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3256,"name":"LSP8NonExistentTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"3207:22:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3207:31:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3259,"nodeType":"RevertStatement","src":"3200:38:33"}]}},{"expression":{"id":3262,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"3266:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3243,"id":3263,"nodeType":"Return","src":"3259:17:33"}]},"documentation":{"id":3236,"nodeType":"StructuredDocumentation","src":"2928:60:33","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"217b2270","id":3265,"implemented":true,"kind":"function","modifiers":[],"name":"tokenOwnerOf","nameLocation":"3002:12:33","nodeType":"FunctionDefinition","overrides":{"id":3240,"nodeType":"OverrideSpecifier","overrides":[],"src":"3066:8:33"},"parameters":{"id":3239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3238,"mutability":"mutable","name":"tokenId","nameLocation":"3032:7:33","nodeType":"VariableDeclaration","scope":3265,"src":"3024:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3237,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3024:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3014:31:33"},"returnParameters":{"id":3243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3265,"src":"3084:7:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3241,"name":"address","nodeType":"ElementaryTypeName","src":"3084:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3083:9:33"},"scope":4489,"src":"2993:290:33","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2584],"body":{"id":3281,"nodeType":"Block","src":"3464:57:33","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3275,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"3481:12:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$7088_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set storage ref)"}},"id":3277,"indexExpression":{"id":3276,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"3494:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3481:24:33","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7088_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3278,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3506:6:33","memberName":"values","nodeType":"MemberAccess","referencedDeclaration":7205,"src":"3481:31:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$7088_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$attached_to$_t_struct$_Bytes32Set_$7088_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer) view returns (bytes32[] memory)"}},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3481:33:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":3274,"id":3280,"nodeType":"Return","src":"3474:40:33"}]},"documentation":{"id":3266,"nodeType":"StructuredDocumentation","src":"3289:60:33","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"a3b261f2","id":3282,"implemented":true,"kind":"function","modifiers":[],"name":"tokenIdsOf","nameLocation":"3363:10:33","nodeType":"FunctionDefinition","overrides":{"id":3270,"nodeType":"OverrideSpecifier","overrides":[],"src":"3428:8:33"},"parameters":{"id":3269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3268,"mutability":"mutable","name":"tokenOwner","nameLocation":"3391:10:33","nodeType":"VariableDeclaration","scope":3282,"src":"3383:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3267,"name":"address","nodeType":"ElementaryTypeName","src":"3383:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3373:34:33"},"returnParameters":{"id":3274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3282,"src":"3446:16:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3271,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3446:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3272,"nodeType":"ArrayTypeName","src":"3446:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3445:18:33"},"scope":4489,"src":"3354:167:33","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2594],"body":{"id":3298,"nodeType":"Block","src":"3780:60:33","statements":[{"expression":{"arguments":[{"id":3294,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"3816:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3295,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"3825:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3293,"name":"_getDataForTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"3797:18:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32,bytes32) view returns (bytes memory)"}},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3797:36:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3292,"id":3297,"nodeType":"Return","src":"3790:43:33"}]},"documentation":{"id":3283,"nodeType":"StructuredDocumentation","src":"3570:60:33","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"16e023b3","id":3299,"implemented":true,"kind":"function","modifiers":[],"name":"getDataForTokenId","nameLocation":"3644:17:33","nodeType":"FunctionDefinition","overrides":{"id":3289,"nodeType":"OverrideSpecifier","overrides":[],"src":"3738:8:33"},"parameters":{"id":3288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3285,"mutability":"mutable","name":"tokenId","nameLocation":"3679:7:33","nodeType":"VariableDeclaration","scope":3299,"src":"3671:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3284,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3671:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3287,"mutability":"mutable","name":"dataKey","nameLocation":"3704:7:33","nodeType":"VariableDeclaration","scope":3299,"src":"3696:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3286,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3696:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3661:56:33"},"returnParameters":{"id":3292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3291,"mutability":"mutable","name":"dataValue","nameLocation":"3769:9:33","nodeType":"VariableDeclaration","scope":3299,"src":"3756:22:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3290,"name":"bytes","nodeType":"ElementaryTypeName","src":"3756:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3755:24:33"},"scope":4489,"src":"3635:205:33","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2607],"body":{"id":3360,"nodeType":"Block","src":"4085:463:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3313,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"4099:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4108:6:33","memberName":"length","nodeType":"MemberAccess","src":"4099:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3315,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"4118:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4127:6:33","memberName":"length","nodeType":"MemberAccess","src":"4118:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4099:34:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3322,"nodeType":"IfStatement","src":"4095:104:33","trueBody":{"id":3321,"nodeType":"Block","src":"4135:64:33","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3318,"name":"LSP8TokenIdsDataLengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"4156:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4156:32:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3320,"nodeType":"RevertStatement","src":"4149:39:33"}]}},{"expression":{"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3323,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"4209:10:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3327,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"4234:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4243:6:33","memberName":"length","nodeType":"MemberAccess","src":"4234:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4222:11:33","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":3324,"name":"bytes","nodeType":"ElementaryTypeName","src":"4226:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3325,"nodeType":"ArrayTypeName","src":"4226:7:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4222:28:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"4209:41:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":3331,"nodeType":"ExpressionStatement","src":"4209:41:33"},{"body":{"id":3356,"nodeType":"Block","src":"4300:214:33","statements":[{"expression":{"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3339,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"4314:10:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":3341,"indexExpression":{"id":3340,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"4325:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4314:13:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":3343,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"4349:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3345,"indexExpression":{"id":3344,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"4358:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4349:11:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":3346,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"4362:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3348,"indexExpression":{"id":3347,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"4371:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4362:11:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3342,"name":"_getDataForTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"4330:18:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32,bytes32) view returns (bytes memory)"}},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4330:44:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"4314:60:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3351,"nodeType":"ExpressionStatement","src":"4314:60:33"},{"id":3355,"nodeType":"UncheckedBlock","src":"4458:46:33","statements":[{"expression":{"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"4486:3:33","subExpression":{"id":3352,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"4488:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3354,"nodeType":"ExpressionStatement","src":"4486:3:33"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3335,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"4277:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3336,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"4281:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4290:6:33","memberName":"length","nodeType":"MemberAccess","src":"4281:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4277:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3357,"initializationExpression":{"assignments":[3333],"declarations":[{"constant":false,"id":3333,"mutability":"mutable","name":"i","nameLocation":"4274:1:33","nodeType":"VariableDeclaration","scope":3357,"src":"4266:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3332,"name":"uint256","nodeType":"ElementaryTypeName","src":"4266:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3334,"nodeType":"VariableDeclarationStatement","src":"4266:9:33"},"nodeType":"ForStatement","src":"4261:253:33"},{"expression":{"id":3358,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"4531:10:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"functionReturnParameters":3312,"id":3359,"nodeType":"Return","src":"4524:17:33"}]},"documentation":{"id":3300,"nodeType":"StructuredDocumentation","src":"3846:60:33","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"1d26fce6","id":3361,"implemented":true,"kind":"function","modifiers":[],"name":"getDataBatchForTokenIds","nameLocation":"3920:23:33","nodeType":"FunctionDefinition","overrides":{"id":3308,"nodeType":"OverrideSpecifier","overrides":[],"src":"4040:8:33"},"parameters":{"id":3307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3303,"mutability":"mutable","name":"tokenIds","nameLocation":"3970:8:33","nodeType":"VariableDeclaration","scope":3361,"src":"3953:25:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3301,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3953:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3302,"nodeType":"ArrayTypeName","src":"3953:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3306,"mutability":"mutable","name":"dataKeys","nameLocation":"4005:8:33","nodeType":"VariableDeclaration","scope":3361,"src":"3988:25:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3304,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3988:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3305,"nodeType":"ArrayTypeName","src":"3988:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3943:76:33"},"returnParameters":{"id":3312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3311,"mutability":"mutable","name":"dataValues","nameLocation":"4073:10:33","nodeType":"VariableDeclaration","scope":3361,"src":"4058:25:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":3309,"name":"bytes","nodeType":"ElementaryTypeName","src":"4058:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3310,"nodeType":"ArrayTypeName","src":"4058:7:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"4057:27:33"},"scope":4489,"src":"3911:637:33","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2617],"body":{"id":3380,"nodeType":"Block","src":"4768:64:33","statements":[{"expression":{"arguments":[{"id":3375,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"4797:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3376,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"4806:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3377,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"4815:9:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3374,"name":"_setDataForTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"4778:18:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes32,bytes memory)"}},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4778:47:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3379,"nodeType":"ExpressionStatement","src":"4778:47:33"}]},"documentation":{"id":3362,"nodeType":"StructuredDocumentation","src":"4554:60:33","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"d6c1407c","id":3381,"implemented":true,"kind":"function","modifiers":[{"id":3372,"kind":"modifierInvocation","modifierName":{"id":3371,"name":"onlyOwner","nameLocations":["4758:9:33"],"nodeType":"IdentifierPath","referencedDeclaration":893,"src":"4758:9:33"},"nodeType":"ModifierInvocation","src":"4758:9:33"}],"name":"setDataForTokenId","nameLocation":"4628:17:33","nodeType":"FunctionDefinition","overrides":{"id":3370,"nodeType":"OverrideSpecifier","overrides":[],"src":"4749:8:33"},"parameters":{"id":3369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3364,"mutability":"mutable","name":"tokenId","nameLocation":"4663:7:33","nodeType":"VariableDeclaration","scope":3381,"src":"4655:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4655:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3366,"mutability":"mutable","name":"dataKey","nameLocation":"4688:7:33","nodeType":"VariableDeclaration","scope":3381,"src":"4680:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4680:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3368,"mutability":"mutable","name":"dataValue","nameLocation":"4718:9:33","nodeType":"VariableDeclaration","scope":3381,"src":"4705:22:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3367,"name":"bytes","nodeType":"ElementaryTypeName","src":"4705:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4645:88:33"},"returnParameters":{"id":3373,"nodeType":"ParameterList","parameters":[],"src":"4768:0:33"},"scope":4489,"src":"4619:213:33","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2630],"body":{"id":3447,"nodeType":"Block","src":"5081:552:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3397,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"5108:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5117:6:33","memberName":"length","nodeType":"MemberAccess","src":"5108:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3399,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"5127:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5136:6:33","memberName":"length","nodeType":"MemberAccess","src":"5127:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5108:34:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3402,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"5158:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5167:6:33","memberName":"length","nodeType":"MemberAccess","src":"5158:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3404,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"5177:10:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5188:6:33","memberName":"length","nodeType":"MemberAccess","src":"5177:17:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5158:36:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5108:86:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3412,"nodeType":"IfStatement","src":"5091:178:33","trueBody":{"id":3411,"nodeType":"Block","src":"5205:64:33","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3408,"name":"LSP8TokenIdsDataLengthMismatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"5226:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5226:32:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3410,"nodeType":"RevertStatement","src":"5219:39:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3413,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"5283:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5292:6:33","memberName":"length","nodeType":"MemberAccess","src":"5283:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5302:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5283:20:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3421,"nodeType":"IfStatement","src":"5279:86:33","trueBody":{"id":3420,"nodeType":"Block","src":"5305:60:33","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3417,"name":"LSP8TokenIdsDataEmptyArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"5326:26:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5326:28:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3419,"nodeType":"RevertStatement","src":"5319:35:33"}]}},{"body":{"id":3445,"nodeType":"Block","src":"5414:213:33","statements":[{"expression":{"arguments":[{"baseExpression":{"id":3430,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"5447:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3432,"indexExpression":{"id":3431,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"5456:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5447:11:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":3433,"name":"dataKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"5460:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3435,"indexExpression":{"id":3434,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"5469:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5460:11:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":3436,"name":"dataValues","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"5473:10:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":3438,"indexExpression":{"id":3437,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"5484:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5473:13:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3429,"name":"_setDataForTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"5428:18:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes32,bytes memory)"}},"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5428:59:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3440,"nodeType":"ExpressionStatement","src":"5428:59:33"},{"id":3444,"nodeType":"UncheckedBlock","src":"5571:46:33","statements":[{"expression":{"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5599:3:33","subExpression":{"id":3441,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"5601:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3443,"nodeType":"ExpressionStatement","src":"5599:3:33"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3425,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"5391:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3426,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"5395:8:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5404:6:33","memberName":"length","nodeType":"MemberAccess","src":"5395:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5391:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3446,"initializationExpression":{"assignments":[3423],"declarations":[{"constant":false,"id":3423,"mutability":"mutable","name":"i","nameLocation":"5388:1:33","nodeType":"VariableDeclaration","scope":3446,"src":"5380:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3422,"name":"uint256","nodeType":"ElementaryTypeName","src":"5380:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3424,"nodeType":"VariableDeclarationStatement","src":"5380:9:33"},"nodeType":"ForStatement","src":"5375:252:33"}]},"documentation":{"id":3382,"nodeType":"StructuredDocumentation","src":"4838:60:33","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"be9f0e6f","id":3448,"implemented":true,"kind":"function","modifiers":[{"id":3395,"kind":"modifierInvocation","modifierName":{"id":3394,"name":"onlyOwner","nameLocations":["5071:9:33"],"nodeType":"IdentifierPath","referencedDeclaration":893,"src":"5071:9:33"},"nodeType":"ModifierInvocation","src":"5071:9:33"}],"name":"setDataBatchForTokenIds","nameLocation":"4912:23:33","nodeType":"FunctionDefinition","overrides":{"id":3393,"nodeType":"OverrideSpecifier","overrides":[],"src":"5062:8:33"},"parameters":{"id":3392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3385,"mutability":"mutable","name":"tokenIds","nameLocation":"4962:8:33","nodeType":"VariableDeclaration","scope":3448,"src":"4945:25:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3383,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4945:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3384,"nodeType":"ArrayTypeName","src":"4945:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3388,"mutability":"mutable","name":"dataKeys","nameLocation":"4997:8:33","nodeType":"VariableDeclaration","scope":3448,"src":"4980:25:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3386,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4980:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3387,"nodeType":"ArrayTypeName","src":"4980:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3391,"mutability":"mutable","name":"dataValues","nameLocation":"5030:10:33","nodeType":"VariableDeclaration","scope":3448,"src":"5015:25:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":3389,"name":"bytes","nodeType":"ElementaryTypeName","src":"5015:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3390,"nodeType":"ArrayTypeName","src":"5015:7:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"4935:111:33"},"returnParameters":{"id":3396,"nodeType":"ParameterList","parameters":[],"src":"5081:0:33"},"scope":4489,"src":"4903:730:33","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2714],"body":{"id":3517,"nodeType":"Block","src":"5970:967:33","statements":[{"expression":{"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3459,"name":"results","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3457,"src":"5980:7:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3463,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"6002:4:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6007:6:33","memberName":"length","nodeType":"MemberAccess","src":"6002:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5990:11:33","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":3460,"name":"bytes","nodeType":"ElementaryTypeName","src":"5994:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3461,"nodeType":"ArrayTypeName","src":"5994:7:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5990:24:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"5980:34:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":3467,"nodeType":"ExpressionStatement","src":"5980:34:33"},{"body":{"id":3515,"nodeType":"Block","src":"6059:872:33","statements":[{"assignments":[3476,3478],"declarations":[{"constant":false,"id":3476,"mutability":"mutable","name":"success","nameLocation":"6079:7:33","nodeType":"VariableDeclaration","scope":3515,"src":"6074:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3475,"name":"bool","nodeType":"ElementaryTypeName","src":"6074:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3478,"mutability":"mutable","name":"result","nameLocation":"6101:6:33","nodeType":"VariableDeclaration","scope":3515,"src":"6088:19:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3477,"name":"bytes","nodeType":"ElementaryTypeName","src":"6088:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3488,"initialValue":{"arguments":[{"baseExpression":{"id":3484,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"6155:4:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":3486,"indexExpression":{"id":3485,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"6160:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6155:7:33","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"id":3481,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6119:4:33","typeDescriptions":{"typeIdentifier":"t_contract$_LSP8IdentifiableDigitalAssetCore_$4489","typeString":"contract LSP8IdentifiableDigitalAssetCore"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LSP8IdentifiableDigitalAssetCore_$4489","typeString":"contract LSP8IdentifiableDigitalAssetCore"}],"id":3480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6111:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3479,"name":"address","nodeType":"ElementaryTypeName","src":"6111:7:33","typeDescriptions":{}}},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6111:13:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6125:12:33","memberName":"delegatecall","nodeType":"MemberAccess","src":"6111:26:33","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6111:65:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6073:103:33"},{"condition":{"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6195:8:33","subExpression":{"id":3489,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"6196:7:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3504,"nodeType":"IfStatement","src":"6191:636:33","trueBody":{"id":3503,"nodeType":"Block","src":"6205:622:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3491,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"6297:6:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6304:6:33","memberName":"length","nodeType":"MemberAccess","src":"6297:13:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6314:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6297:18:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3501,"nodeType":"Block","src":"6730:83:33","statements":[{"errorCall":{"arguments":[{"id":3498,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"6791:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3497,"name":"LSP8BatchCallFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2849,"src":"6759:19:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":["6780:9:33"],"names":["callIndex"],"nodeType":"FunctionCall","src":"6759:35:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3500,"nodeType":"RevertStatement","src":"6752:42:33"}]},"id":3502,"nodeType":"IfStatement","src":"6293:520:33","trueBody":{"id":3496,"nodeType":"Block","src":"6317:407:33","statements":[{"AST":{"nodeType":"YulBlock","src":"6557:149:33","statements":[{"nodeType":"YulVariableDeclaration","src":"6583:36:33","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"6612:6:33"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6606:5:33"},"nodeType":"YulFunctionCall","src":"6606:13:33"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"6587:15:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6655:2:33","type":"","value":"32"},{"name":"result","nodeType":"YulIdentifier","src":"6659:6:33"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6651:3:33"},"nodeType":"YulFunctionCall","src":"6651:15:33"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"6668:15:33"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6644:6:33"},"nodeType":"YulFunctionCall","src":"6644:40:33"},"nodeType":"YulExpressionStatement","src":"6644:40:33"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3478,"isOffset":false,"isSlot":false,"src":"6612:6:33","valueSize":1},{"declaration":3478,"isOffset":false,"isSlot":false,"src":"6659:6:33","valueSize":1}],"id":3495,"nodeType":"InlineAssembly","src":"6548:158:33"}]}}]}},{"expression":{"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3505,"name":"results","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3457,"src":"6841:7:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":3507,"indexExpression":{"id":3506,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"6849:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6841:10:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3508,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"6854:6:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"6841:19:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3510,"nodeType":"ExpressionStatement","src":"6841:19:33"},{"id":3514,"nodeType":"UncheckedBlock","src":"6875:46:33","statements":[{"expression":{"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6903:3:33","subExpression":{"id":3511,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"6905:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3513,"nodeType":"ExpressionStatement","src":"6903:3:33"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3471,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"6040:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3472,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"6044:4:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}},"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6049:6:33","memberName":"length","nodeType":"MemberAccess","src":"6044:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6040:15:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3516,"initializationExpression":{"assignments":[3469],"declarations":[{"constant":false,"id":3469,"mutability":"mutable","name":"i","nameLocation":"6037:1:33","nodeType":"VariableDeclaration","scope":3516,"src":"6029:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3468,"name":"uint256","nodeType":"ElementaryTypeName","src":"6029:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3470,"nodeType":"VariableDeclarationStatement","src":"6029:9:33"},"nodeType":"ForStatement","src":"6024:907:33"}]},"documentation":{"id":3449,"nodeType":"StructuredDocumentation","src":"5673:178:33","text":" @inheritdoc ILSP8IdentifiableDigitalAsset\n @custom:info It's not possible to send value along the functions call due to the use of `delegatecall`."},"functionSelector":"6963d438","id":3518,"implemented":true,"kind":"function","modifiers":[],"name":"batchCalls","nameLocation":"5865:10:33","nodeType":"FunctionDefinition","overrides":{"id":3454,"nodeType":"OverrideSpecifier","overrides":[],"src":"5928:8:33"},"parameters":{"id":3453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3452,"mutability":"mutable","name":"data","nameLocation":"5902:4:33","nodeType":"VariableDeclaration","scope":3518,"src":"5885:21:33","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":3450,"name":"bytes","nodeType":"ElementaryTypeName","src":"5885:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3451,"nodeType":"ArrayTypeName","src":"5885:7:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"5875:37:33"},"returnParameters":{"id":3458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3457,"mutability":"mutable","name":"results","nameLocation":"5961:7:33","nodeType":"VariableDeclaration","scope":3518,"src":"5946:22:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":3455,"name":"bytes","nodeType":"ElementaryTypeName","src":"5946:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3456,"nodeType":"ArrayTypeName","src":"5946:7:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"5945:24:33"},"scope":4489,"src":"5856:1081:33","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2640],"body":{"id":3607,"nodeType":"Block","src":"7198:907:33","statements":[{"assignments":[3530],"declarations":[{"constant":false,"id":3530,"mutability":"mutable","name":"tokenOwner","nameLocation":"7216:10:33","nodeType":"VariableDeclaration","scope":3607,"src":"7208:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3529,"name":"address","nodeType":"ElementaryTypeName","src":"7208:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3534,"initialValue":{"arguments":[{"id":3532,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"7242:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3531,"name":"tokenOwnerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"7229:12:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view returns (address)"}},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7229:21:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7208:42:33"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3535,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"7265:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3536,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7279:3:33","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7283:6:33","memberName":"sender","nodeType":"MemberAccess","src":"7279:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7265:24:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3547,"nodeType":"IfStatement","src":"7261:112:33","trueBody":{"id":3546,"nodeType":"Block","src":"7291:82:33","statements":[{"errorCall":{"arguments":[{"id":3540,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"7330:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3541,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"7342:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3542,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7351:3:33","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7355:6:33","memberName":"sender","nodeType":"MemberAccess","src":"7351:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3539,"name":"LSP8NotTokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"7312:17:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$_t_address_$returns$__$","typeString":"function (address,bytes32,address) pure"}},"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7312:50:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3545,"nodeType":"RevertStatement","src":"7305:57:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3548,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"7387:8:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7407:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7399:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3549,"name":"address","nodeType":"ElementaryTypeName","src":"7399:7:33","typeDescriptions":{}}},"id":3552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7399:10:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7387:22:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3558,"nodeType":"IfStatement","src":"7383:96:33","trueBody":{"id":3557,"nodeType":"Block","src":"7411:68:33","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3554,"name":"LSP8CannotUseAddressZeroAsOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"7432:34:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7432:36:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3556,"nodeType":"RevertStatement","src":"7425:43:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3559,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"7493:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3560,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"7507:8:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7493:22:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3566,"nodeType":"IfStatement","src":"7489:92:33","trueBody":{"id":3565,"nodeType":"Block","src":"7517:64:33","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3562,"name":"LSP8TokenOwnerCannotBeOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"7538:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7538:32:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3564,"nodeType":"RevertStatement","src":"7531:39:33"}]}},{"assignments":[3568],"declarations":[{"constant":false,"id":3568,"mutability":"mutable","name":"isAdded","nameLocation":"7596:7:33","nodeType":"VariableDeclaration","scope":3607,"src":"7591:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3567,"name":"bool","nodeType":"ElementaryTypeName","src":"7591:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3575,"initialValue":{"arguments":[{"id":3573,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"7630:8:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":3569,"name":"_operators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"7606:10:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$7209_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":3571,"indexExpression":{"id":3570,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"7617:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7606:19:33","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7209_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":3572,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7626:3:33","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":7236,"src":"7606:23:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$7209_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$7209_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7606:33:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"7591:48:33"},{"condition":{"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7653:8:33","subExpression":{"id":3576,"name":"isAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"7654:7:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3583,"nodeType":"IfStatement","src":"7649:69:33","trueBody":{"errorCall":{"arguments":[{"id":3579,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"7700:8:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3580,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"7710:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3578,"name":"LSP8OperatorAlreadyAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"7670:29:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7670:48:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3582,"nodeType":"RevertStatement","src":"7663:55:33"}},{"eventCall":{"arguments":[{"id":3585,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"7776:8:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3586,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"7798:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3587,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"7822:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3588,"name":"operatorNotificationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"7843:24:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3584,"name":"OperatorAuthorizationChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"7734:28:33","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bytes memory)"}},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7734:143:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3590,"nodeType":"EmitStatement","src":"7729:148:33"},{"assignments":[3592],"declarations":[{"constant":false,"id":3592,"mutability":"mutable","name":"lsp1Data","nameLocation":"7901:8:33","nodeType":"VariableDeclaration","scope":3607,"src":"7888:21:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3591,"name":"bytes","nodeType":"ElementaryTypeName","src":"7888:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3601,"initialValue":{"arguments":[{"expression":{"id":3595,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7936:3:33","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7940:6:33","memberName":"sender","nodeType":"MemberAccess","src":"7936:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3597,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"7960:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"74727565","id":3598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7981:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3599,"name":"operatorNotificationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"8013:24:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3593,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7912:3:33","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7916:6:33","memberName":"encode","nodeType":"MemberAccess","src":"7912:10:33","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7912:135:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"7888:159:33"},{"expression":{"arguments":[{"id":3603,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"8079:8:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3604,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"8089:8:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3602,"name":"_notifyTokenOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"8058:20:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8058:40:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3606,"nodeType":"ExpressionStatement","src":"8058:40:33"}]},"documentation":{"id":3519,"nodeType":"StructuredDocumentation","src":"6978:60:33","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"86a10ddd","id":3608,"implemented":true,"kind":"function","modifiers":[],"name":"authorizeOperator","nameLocation":"7052:17:33","nodeType":"FunctionDefinition","overrides":{"id":3527,"nodeType":"OverrideSpecifier","overrides":[],"src":"7189:8:33"},"parameters":{"id":3526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3521,"mutability":"mutable","name":"operator","nameLocation":"7087:8:33","nodeType":"VariableDeclaration","scope":3608,"src":"7079:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3520,"name":"address","nodeType":"ElementaryTypeName","src":"7079:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3523,"mutability":"mutable","name":"tokenId","nameLocation":"7113:7:33","nodeType":"VariableDeclaration","scope":3608,"src":"7105:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7105:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3525,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"7143:24:33","nodeType":"VariableDeclaration","scope":3608,"src":"7130:37:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3524,"name":"bytes","nodeType":"ElementaryTypeName","src":"7130:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7069:104:33"},"returnParameters":{"id":3528,"nodeType":"ParameterList","parameters":[],"src":"7198:0:33"},"scope":4489,"src":"7043:1062:33","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2652],"body":{"id":3691,"nodeType":"Block","src":"8349:986:33","statements":[{"assignments":[3622],"declarations":[{"constant":false,"id":3622,"mutability":"mutable","name":"tokenOwner","nameLocation":"8367:10:33","nodeType":"VariableDeclaration","scope":3691,"src":"8359:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3621,"name":"address","nodeType":"ElementaryTypeName","src":"8359:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3626,"initialValue":{"arguments":[{"id":3624,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"8393:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3623,"name":"tokenOwnerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"8380:12:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view returns (address)"}},"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:21:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8359:42:33"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3627,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8416:3:33","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8420:6:33","memberName":"sender","nodeType":"MemberAccess","src":"8416:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3629,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"8430:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8416:24:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3645,"nodeType":"IfStatement","src":"8412:264:33","trueBody":{"id":3644,"nodeType":"Block","src":"8442:234:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3631,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3611,"src":"8460:8:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3632,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8472:3:33","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8476:6:33","memberName":"sender","nodeType":"MemberAccess","src":"8472:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8460:22:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3643,"nodeType":"IfStatement","src":"8456:210:33","trueBody":{"id":3642,"nodeType":"Block","src":"8484:182:33","statements":[{"errorCall":{"arguments":[{"expression":{"id":3636,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8562:3:33","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8566:6:33","memberName":"sender","nodeType":"MemberAccess","src":"8562:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3638,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"8594:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3639,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"8626:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3635,"name":"LSP8RevokeOperatorNotAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"8509:31:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,address,bytes32) pure"}},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8509:142:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3641,"nodeType":"RevertStatement","src":"8502:149:33"}]}}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3646,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3611,"src":"8690:8:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8710:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8702:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3647,"name":"address","nodeType":"ElementaryTypeName","src":"8702:7:33","typeDescriptions":{}}},"id":3650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8702:10:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8690:22:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3656,"nodeType":"IfStatement","src":"8686:96:33","trueBody":{"id":3655,"nodeType":"Block","src":"8714:68:33","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3652,"name":"LSP8CannotUseAddressZeroAsOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"8735:34:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8735:36:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3654,"nodeType":"RevertStatement","src":"8728:43:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3657,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"8796:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3658,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3611,"src":"8810:8:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8796:22:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3664,"nodeType":"IfStatement","src":"8792:92:33","trueBody":{"id":3663,"nodeType":"Block","src":"8820:64:33","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3660,"name":"LSP8TokenOwnerCannotBeOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"8841:30:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8841:32:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3662,"nodeType":"RevertStatement","src":"8834:39:33"}]}},{"expression":{"arguments":[{"id":3666,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3611,"src":"8923:8:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3667,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"8945:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3668,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"8969:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3669,"name":"notify","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"8990:6:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3670,"name":"operatorNotificationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3617,"src":"9010:24:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3665,"name":"_revokeOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3913,"src":"8894:15:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bool,bytes memory)"}},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8894:150:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3672,"nodeType":"ExpressionStatement","src":"8894:150:33"},{"condition":{"id":3673,"name":"notify","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"9059:6:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3690,"nodeType":"IfStatement","src":"9055:274:33","trueBody":{"id":3689,"nodeType":"Block","src":"9067:262:33","statements":[{"assignments":[3675],"declarations":[{"constant":false,"id":3675,"mutability":"mutable","name":"lsp1Data","nameLocation":"9094:8:33","nodeType":"VariableDeclaration","scope":3689,"src":"9081:21:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3674,"name":"bytes","nodeType":"ElementaryTypeName","src":"9081:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3683,"initialValue":{"arguments":[{"id":3678,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"9133:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3679,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"9161:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"66616c7365","id":3680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9186:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":3681,"name":"operatorNotificationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3617,"src":"9225:24:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3676,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9105:3:33","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9109:6:33","memberName":"encode","nodeType":"MemberAccess","src":"9105:10:33","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9105:158:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9081:182:33"},{"expression":{"arguments":[{"id":3685,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3611,"src":"9299:8:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3686,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"9309:8:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3684,"name":"_notifyTokenOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"9278:20:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9278:40:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3688,"nodeType":"ExpressionStatement","src":"9278:40:33"}]}}]},"documentation":{"id":3609,"nodeType":"StructuredDocumentation","src":"8111:60:33","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"db8c9663","id":3692,"implemented":true,"kind":"function","modifiers":[],"name":"revokeOperator","nameLocation":"8185:14:33","nodeType":"FunctionDefinition","overrides":{"id":3619,"nodeType":"OverrideSpecifier","overrides":[],"src":"8340:8:33"},"parameters":{"id":3618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3611,"mutability":"mutable","name":"operator","nameLocation":"8217:8:33","nodeType":"VariableDeclaration","scope":3692,"src":"8209:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3610,"name":"address","nodeType":"ElementaryTypeName","src":"8209:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3613,"mutability":"mutable","name":"tokenId","nameLocation":"8243:7:33","nodeType":"VariableDeclaration","scope":3692,"src":"8235:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3612,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8235:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3615,"mutability":"mutable","name":"notify","nameLocation":"8265:6:33","nodeType":"VariableDeclaration","scope":3692,"src":"8260:11:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3614,"name":"bool","nodeType":"ElementaryTypeName","src":"8260:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3617,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"8294:24:33","nodeType":"VariableDeclaration","scope":3692,"src":"8281:37:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3616,"name":"bytes","nodeType":"ElementaryTypeName","src":"8281:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8199:125:33"},"returnParameters":{"id":3620,"nodeType":"ParameterList","parameters":[],"src":"8349:0:33"},"scope":4489,"src":"8176:1159:33","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2662],"body":{"id":3708,"nodeType":"Block","src":"9530:61:33","statements":[{"expression":{"arguments":[{"id":3704,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"9566:8:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3705,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"9576:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3703,"name":"_isOperatorOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"9547:18:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$returns$_t_bool_$","typeString":"function (address,bytes32) view returns (bool)"}},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9547:37:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3702,"id":3707,"nodeType":"Return","src":"9540:44:33"}]},"documentation":{"id":3693,"nodeType":"StructuredDocumentation","src":"9341:60:33","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"2a3654a4","id":3709,"implemented":true,"kind":"function","modifiers":[],"name":"isOperatorFor","nameLocation":"9415:13:33","nodeType":"FunctionDefinition","overrides":{"id":3699,"nodeType":"OverrideSpecifier","overrides":[],"src":"9506:8:33"},"parameters":{"id":3698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3695,"mutability":"mutable","name":"operator","nameLocation":"9446:8:33","nodeType":"VariableDeclaration","scope":3709,"src":"9438:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3694,"name":"address","nodeType":"ElementaryTypeName","src":"9438:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3697,"mutability":"mutable","name":"tokenId","nameLocation":"9472:7:33","nodeType":"VariableDeclaration","scope":3709,"src":"9464:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3696,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9464:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9428:57:33"},"returnParameters":{"id":3702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3709,"src":"9524:4:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3700,"name":"bool","nodeType":"ElementaryTypeName","src":"9524:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9523:6:33"},"scope":4489,"src":"9406:185:33","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2671],"body":{"id":3729,"nodeType":"Block","src":"9773:86:33","statements":[{"expression":{"arguments":[{"id":3720,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"9798:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3719,"name":"_existsOrError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"9783:14:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9783:23:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3722,"nodeType":"ExpressionStatement","src":"9783:23:33"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3723,"name":"_operators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"9824:10:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$7209_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":3725,"indexExpression":{"id":3724,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"9835:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9824:19:33","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7209_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":3726,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9844:6:33","memberName":"values","nodeType":"MemberAccess","referencedDeclaration":7362,"src":"9824:26:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$7209_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_AddressSet_$7209_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"}},"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:28:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3718,"id":3728,"nodeType":"Return","src":"9817:35:33"}]},"documentation":{"id":3710,"nodeType":"StructuredDocumentation","src":"9597:60:33","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"49a6078d","id":3730,"implemented":true,"kind":"function","modifiers":[],"name":"getOperatorsOf","nameLocation":"9671:14:33","nodeType":"FunctionDefinition","overrides":{"id":3714,"nodeType":"OverrideSpecifier","overrides":[],"src":"9737:8:33"},"parameters":{"id":3713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3712,"mutability":"mutable","name":"tokenId","nameLocation":"9703:7:33","nodeType":"VariableDeclaration","scope":3730,"src":"9695:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3711,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9695:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9685:31:33"},"returnParameters":{"id":3718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3730,"src":"9755:16:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3715,"name":"address","nodeType":"ElementaryTypeName","src":"9755:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3716,"nodeType":"ArrayTypeName","src":"9755:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"9754:18:33"},"scope":4489,"src":"9662:197:33","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3754,"nodeType":"Block","src":"10137:109:33","statements":[{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3740,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"10155:6:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3742,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"10178:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3741,"name":"tokenOwnerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"10165:12:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view returns (address)"}},"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10165:21:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10155:31:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":3749,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"10231:6:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":3745,"name":"_operators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"10202:10:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$7209_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":3747,"indexExpression":{"id":3746,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"10213:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10202:19:33","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7209_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":3748,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10222:8:33","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":7290,"src":"10202:28:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$7209_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$7209_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10202:36:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10155:83:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3752,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10154:85:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3739,"id":3753,"nodeType":"Return","src":"10147:92:33"}]},"documentation":{"id":3731,"nodeType":"StructuredDocumentation","src":"9865:147:33","text":" @dev verifies if the `caller` is operator or owner for the `tokenId`\n @return true if `caller` is either operator or owner"},"id":3755,"implemented":true,"kind":"function","modifiers":[],"name":"_isOperatorOrOwner","nameLocation":"10026:18:33","nodeType":"FunctionDefinition","parameters":{"id":3736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3733,"mutability":"mutable","name":"caller","nameLocation":"10062:6:33","nodeType":"VariableDeclaration","scope":3755,"src":"10054:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3732,"name":"address","nodeType":"ElementaryTypeName","src":"10054:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3735,"mutability":"mutable","name":"tokenId","nameLocation":"10086:7:33","nodeType":"VariableDeclaration","scope":3755,"src":"10078:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3734,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10078:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10044:55:33"},"returnParameters":{"id":3739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3755,"src":"10131:4:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3737,"name":"bool","nodeType":"ElementaryTypeName","src":"10131:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10130:6:33"},"scope":4489,"src":"10017:229:33","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2685],"body":{"id":3792,"nodeType":"Block","src":"10514:187:33","statements":[{"condition":{"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10528:40:33","subExpression":{"arguments":[{"expression":{"id":3771,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10548:3:33","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10552:6:33","memberName":"sender","nodeType":"MemberAccess","src":"10548:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3773,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"10560:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3770,"name":"_isOperatorOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"10529:18:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$returns$_t_bool_$","typeString":"function (address,bytes32) view returns (bool)"}},"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10529:39:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3783,"nodeType":"IfStatement","src":"10524:119:33","trueBody":{"id":3782,"nodeType":"Block","src":"10570:73:33","statements":[{"errorCall":{"arguments":[{"id":3777,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"10612:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3778,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10621:3:33","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10625:6:33","memberName":"sender","nodeType":"MemberAccess","src":"10621:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3776,"name":"LSP8NotTokenOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"10591:20:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) pure"}},"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10591:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3781,"nodeType":"RevertStatement","src":"10584:48:33"}]}},{"expression":{"arguments":[{"id":3785,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"10663:4:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3786,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"10669:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3787,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"10673:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3788,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"10682:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3789,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"10689:4:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3784,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4340,"src":"10653:9:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bool,bytes memory)"}},"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10653:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3791,"nodeType":"ExpressionStatement","src":"10653:41:33"}]},"documentation":{"id":3756,"nodeType":"StructuredDocumentation","src":"10287:60:33","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"511b6952","id":3793,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"10361:8:33","nodeType":"FunctionDefinition","overrides":{"id":3768,"nodeType":"OverrideSpecifier","overrides":[],"src":"10505:8:33"},"parameters":{"id":3767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3758,"mutability":"mutable","name":"from","nameLocation":"10387:4:33","nodeType":"VariableDeclaration","scope":3793,"src":"10379:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3757,"name":"address","nodeType":"ElementaryTypeName","src":"10379:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3760,"mutability":"mutable","name":"to","nameLocation":"10409:2:33","nodeType":"VariableDeclaration","scope":3793,"src":"10401:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3759,"name":"address","nodeType":"ElementaryTypeName","src":"10401:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3762,"mutability":"mutable","name":"tokenId","nameLocation":"10429:7:33","nodeType":"VariableDeclaration","scope":3793,"src":"10421:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3761,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10421:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3764,"mutability":"mutable","name":"force","nameLocation":"10451:5:33","nodeType":"VariableDeclaration","scope":3793,"src":"10446:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3763,"name":"bool","nodeType":"ElementaryTypeName","src":"10446:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3766,"mutability":"mutable","name":"data","nameLocation":"10479:4:33","nodeType":"VariableDeclaration","scope":3793,"src":"10466:17:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3765,"name":"bytes","nodeType":"ElementaryTypeName","src":"10466:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10369:120:33"},"returnParameters":{"id":3769,"nodeType":"ParameterList","parameters":[],"src":"10514:0:33"},"scope":4489,"src":"10352:349:33","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2704],"body":{"id":3872,"nodeType":"Block","src":"10977:478:33","statements":[{"assignments":[3814],"declarations":[{"constant":false,"id":3814,"mutability":"mutable","name":"fromLength","nameLocation":"10995:10:33","nodeType":"VariableDeclaration","scope":3872,"src":"10987:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3813,"name":"uint256","nodeType":"ElementaryTypeName","src":"10987:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3817,"initialValue":{"expression":{"id":3815,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"11008:4:33","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11013:6:33","memberName":"length","nodeType":"MemberAccess","src":"11008:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10987:32:33"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3818,"name":"fromLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"11046:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3819,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"11060:2:33","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11063:6:33","memberName":"length","nodeType":"MemberAccess","src":"11060:9:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11046:23:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3822,"name":"fromLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"11085:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3823,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"11099:7:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11107:6:33","memberName":"length","nodeType":"MemberAccess","src":"11099:14:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11085:28:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11046:67:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3827,"name":"fromLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"11129:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3828,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3806,"src":"11143:5:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11149:6:33","memberName":"length","nodeType":"MemberAccess","src":"11143:12:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11129:26:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11046:109:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3832,"name":"fromLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"11171:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3833,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"11185:4:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11190:6:33","memberName":"length","nodeType":"MemberAccess","src":"11185:11:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11171:25:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11046:150:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3841,"nodeType":"IfStatement","src":"11029:236:33","trueBody":{"id":3840,"nodeType":"Block","src":"11207:58:33","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3837,"name":"LSP8InvalidTransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"11228:24:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11228:26:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3839,"nodeType":"RevertStatement","src":"11221:33:33"}]}},{"body":{"id":3870,"nodeType":"Block","src":"11309:140:33","statements":[{"expression":{"arguments":[{"baseExpression":{"id":3849,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"11332:4:33","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3851,"indexExpression":{"id":3850,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"11337:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11332:7:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":3852,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"11341:2:33","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3854,"indexExpression":{"id":3853,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"11344:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11341:5:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":3855,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"11348:7:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3857,"indexExpression":{"id":3856,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"11356:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11348:10:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":3858,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3806,"src":"11360:5:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3860,"indexExpression":{"id":3859,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"11366:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11360:8:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"baseExpression":{"id":3861,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"11370:4:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":3863,"indexExpression":{"id":3862,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"11375:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11370:7:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3848,"name":"transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3793,"src":"11323:8:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bool,bytes memory)"}},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11323:55:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3865,"nodeType":"ExpressionStatement","src":"11323:55:33"},{"id":3869,"nodeType":"UncheckedBlock","src":"11393:46:33","statements":[{"expression":{"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"11421:3:33","subExpression":{"id":3866,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"11423:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3868,"nodeType":"ExpressionStatement","src":"11421:3:33"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3845,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"11291:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3846,"name":"fromLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"11295:10:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11291:14:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3871,"initializationExpression":{"assignments":[3843],"declarations":[{"constant":false,"id":3843,"mutability":"mutable","name":"i","nameLocation":"11288:1:33","nodeType":"VariableDeclaration","scope":3871,"src":"11280:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3842,"name":"uint256","nodeType":"ElementaryTypeName","src":"11280:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3844,"nodeType":"VariableDeclarationStatement","src":"11280:9:33"},"nodeType":"ForStatement","src":"11275:174:33"}]},"documentation":{"id":3794,"nodeType":"StructuredDocumentation","src":"10707:60:33","text":" @inheritdoc ILSP8IdentifiableDigitalAsset"},"functionSelector":"7e87632c","id":3873,"implemented":true,"kind":"function","modifiers":[],"name":"transferBatch","nameLocation":"10781:13:33","nodeType":"FunctionDefinition","overrides":{"id":3811,"nodeType":"OverrideSpecifier","overrides":[],"src":"10968:8:33"},"parameters":{"id":3810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3797,"mutability":"mutable","name":"from","nameLocation":"10821:4:33","nodeType":"VariableDeclaration","scope":3873,"src":"10804:21:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3795,"name":"address","nodeType":"ElementaryTypeName","src":"10804:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3796,"nodeType":"ArrayTypeName","src":"10804:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3800,"mutability":"mutable","name":"to","nameLocation":"10852:2:33","nodeType":"VariableDeclaration","scope":3873,"src":"10835:19:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3798,"name":"address","nodeType":"ElementaryTypeName","src":"10835:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3799,"nodeType":"ArrayTypeName","src":"10835:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3803,"mutability":"mutable","name":"tokenId","nameLocation":"10881:7:33","nodeType":"VariableDeclaration","scope":3873,"src":"10864:24:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3801,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10864:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3802,"nodeType":"ArrayTypeName","src":"10864:9:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3806,"mutability":"mutable","name":"force","nameLocation":"10912:5:33","nodeType":"VariableDeclaration","scope":3873,"src":"10898:19:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3804,"name":"bool","nodeType":"ElementaryTypeName","src":"10898:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3805,"nodeType":"ArrayTypeName","src":"10898:6:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":3809,"mutability":"mutable","name":"data","nameLocation":"10942:4:33","nodeType":"VariableDeclaration","scope":3873,"src":"10927:19:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":3807,"name":"bytes","nodeType":"ElementaryTypeName","src":"10927:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":3808,"nodeType":"ArrayTypeName","src":"10927:7:33","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"10794:158:33"},"returnParameters":{"id":3812,"nodeType":"ParameterList","parameters":[],"src":"10977:0:33"},"scope":4489,"src":"10772:683:33","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3912,"nodeType":"Block","src":"11750:313:33","statements":[{"assignments":[3888],"declarations":[{"constant":false,"id":3888,"mutability":"mutable","name":"isRemoved","nameLocation":"11765:9:33","nodeType":"VariableDeclaration","scope":3912,"src":"11760:14:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3887,"name":"bool","nodeType":"ElementaryTypeName","src":"11760:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3895,"initialValue":{"arguments":[{"id":3893,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"11804:8:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":3889,"name":"_operators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"11777:10:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$7209_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":3891,"indexExpression":{"id":3890,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"11788:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11777:19:33","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7209_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":3892,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11797:6:33","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":7263,"src":"11777:26:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$7209_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$7209_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11777:36:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"11760:53:33"},{"condition":{"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11827:10:33","subExpression":{"id":3896,"name":"isRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"11828:9:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3903,"nodeType":"IfStatement","src":"11823:65:33","trueBody":{"errorCall":{"arguments":[{"id":3899,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"11870:8:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3900,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"11880:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3898,"name":"LSP8NonExistingOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"11846:23:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":3901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11846:42:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3902,"nodeType":"RevertStatement","src":"11839:49:33"}},{"eventCall":{"arguments":[{"id":3905,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"11933:8:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3906,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"11955:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3907,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"11979:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3908,"name":"notified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"12000:8:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3909,"name":"operatorNotificationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"12022:24:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3904,"name":"OperatorRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"11904:15:33","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bool,bytes memory)"}},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11904:152:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3911,"nodeType":"EmitStatement","src":"11899:157:33"}]},"documentation":{"id":3874,"nodeType":"StructuredDocumentation","src":"11461:87:33","text":" @dev removes `operator` from the list of operators for the `tokenId`"},"id":3913,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeOperator","nameLocation":"11562:15:33","nodeType":"FunctionDefinition","parameters":{"id":3885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3876,"mutability":"mutable","name":"operator","nameLocation":"11595:8:33","nodeType":"VariableDeclaration","scope":3913,"src":"11587:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3875,"name":"address","nodeType":"ElementaryTypeName","src":"11587:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3878,"mutability":"mutable","name":"tokenOwner","nameLocation":"11621:10:33","nodeType":"VariableDeclaration","scope":3913,"src":"11613:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3877,"name":"address","nodeType":"ElementaryTypeName","src":"11613:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3880,"mutability":"mutable","name":"tokenId","nameLocation":"11649:7:33","nodeType":"VariableDeclaration","scope":3913,"src":"11641:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3879,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11641:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3882,"mutability":"mutable","name":"notified","nameLocation":"11671:8:33","nodeType":"VariableDeclaration","scope":3913,"src":"11666:13:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3881,"name":"bool","nodeType":"ElementaryTypeName","src":"11666:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3884,"mutability":"mutable","name":"operatorNotificationData","nameLocation":"11702:24:33","nodeType":"VariableDeclaration","scope":3913,"src":"11689:37:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3883,"name":"bytes","nodeType":"ElementaryTypeName","src":"11689:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11577:155:33"},"returnParameters":{"id":3886,"nodeType":"ParameterList","parameters":[],"src":"11750:0:33"},"scope":4489,"src":"11553:510:33","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3966,"nodeType":"Block","src":"12445:929:33","statements":[{"assignments":[3925],"declarations":[{"constant":false,"id":3925,"mutability":"mutable","name":"operatorsForTokenId","nameLocation":"12899:19:33","nodeType":"VariableDeclaration","scope":3966,"src":"12866:52:33","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7209_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":3924,"nodeType":"UserDefinedTypeName","pathNode":{"id":3923,"name":"EnumerableSet.AddressSet","nameLocations":["12866:13:33","12880:10:33"],"nodeType":"IdentifierPath","referencedDeclaration":7209,"src":"12866:24:33"},"referencedDeclaration":7209,"src":"12866:24:33","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7209_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"id":3929,"initialValue":{"baseExpression":{"id":3926,"name":"_operators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"12921:10:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$7209_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":3928,"indexExpression":{"id":3927,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"12945:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12921:41:33","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7209_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12866:96:33"},{"assignments":[3931],"declarations":[{"constant":false,"id":3931,"mutability":"mutable","name":"operatorListLength","nameLocation":"12981:18:33","nodeType":"VariableDeclaration","scope":3966,"src":"12973:26:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3930,"name":"uint256","nodeType":"ElementaryTypeName","src":"12973:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3935,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3932,"name":"operatorsForTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"13002:19:33","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7209_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3933,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13022:6:33","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":7305,"src":"13002:26:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$7209_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$7209_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13002:28:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12973:57:33"},{"assignments":[3937],"declarations":[{"constant":false,"id":3937,"mutability":"mutable","name":"operator","nameLocation":"13048:8:33","nodeType":"VariableDeclaration","scope":3966,"src":"13040:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3936,"name":"address","nodeType":"ElementaryTypeName","src":"13040:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3938,"nodeType":"VariableDeclarationStatement","src":"13040:16:33"},{"body":{"id":3964,"nodeType":"Block","src":"13108:260:33","statements":[{"expression":{"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3945,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"13190:8:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":3948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13224:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":3946,"name":"operatorsForTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"13201:19:33","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7209_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":3947,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13221:2:33","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":7332,"src":"13201:22:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$7209_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$7209_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13201:25:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13190:36:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3951,"nodeType":"ExpressionStatement","src":"13190:36:33"},{"expression":{"arguments":[{"id":3953,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"13256:8:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3954,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"13266:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3955,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"13278:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"66616c7365","id":3956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13287:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"","id":3957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13294:2:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":3952,"name":"_revokeOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3913,"src":"13240:15:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bool,bytes memory)"}},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13240:57:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3959,"nodeType":"ExpressionStatement","src":"13240:57:33"},{"id":3963,"nodeType":"UncheckedBlock","src":"13312:46:33","statements":[{"expression":{"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13340:3:33","subExpression":{"id":3960,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"13342:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3962,"nodeType":"ExpressionStatement","src":"13340:3:33"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3942,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"13082:1:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3943,"name":"operatorListLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"13086:18:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13082:22:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3965,"initializationExpression":{"assignments":[3940],"declarations":[{"constant":false,"id":3940,"mutability":"mutable","name":"i","nameLocation":"13079:1:33","nodeType":"VariableDeclaration","scope":3965,"src":"13071:9:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3939,"name":"uint256","nodeType":"ElementaryTypeName","src":"13071:7:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3941,"nodeType":"VariableDeclarationStatement","src":"13071:9:33"},"nodeType":"ForStatement","src":"13066:302:33"}]},"documentation":{"id":3914,"nodeType":"StructuredDocumentation","src":"12069:270:33","text":" @dev revoke all the current operators for a specific `tokenId` token which belongs to `tokenOwner`.\n @param tokenOwner The address that is the owner of the `tokenId`.\n @param tokenId The token to remove the associated operators for."},"id":3967,"implemented":true,"kind":"function","modifiers":[],"name":"_clearOperators","nameLocation":"12353:15:33","nodeType":"FunctionDefinition","parameters":{"id":3919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3916,"mutability":"mutable","name":"tokenOwner","nameLocation":"12386:10:33","nodeType":"VariableDeclaration","scope":3967,"src":"12378:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3915,"name":"address","nodeType":"ElementaryTypeName","src":"12378:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3918,"mutability":"mutable","name":"tokenId","nameLocation":"12414:7:33","nodeType":"VariableDeclaration","scope":3967,"src":"12406:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3917,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12406:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12368:59:33"},"returnParameters":{"id":3920,"nodeType":"ParameterList","parameters":[],"src":"12445:0:33"},"scope":4489,"src":"12344:1030:33","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3984,"nodeType":"Block","src":"13631:59:33","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3975,"name":"_tokenOwners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"13648:12:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":3977,"indexExpression":{"id":3976,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"13661:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13648:21:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13681:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13673:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3978,"name":"address","nodeType":"ElementaryTypeName","src":"13673:7:33","typeDescriptions":{}}},"id":3981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13673:10:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13648:35:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3974,"id":3983,"nodeType":"Return","src":"13641:42:33"}]},"documentation":{"id":3968,"nodeType":"StructuredDocumentation","src":"13380:175:33","text":" @dev Returns whether `tokenId` exists.\n Tokens start existing when they are minted ({_mint}), and stop existing when they are burned ({_burn})."},"id":3985,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"13569:7:33","nodeType":"FunctionDefinition","parameters":{"id":3971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3970,"mutability":"mutable","name":"tokenId","nameLocation":"13585:7:33","nodeType":"VariableDeclaration","scope":3985,"src":"13577:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3969,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13577:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13576:17:33"},"returnParameters":{"id":3974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3985,"src":"13625:4:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3972,"name":"bool","nodeType":"ElementaryTypeName","src":"13625:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13624:6:33"},"scope":4489,"src":"13560:130:33","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4001,"nodeType":"Block","src":"13844:102:33","statements":[{"condition":{"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13858:17:33","subExpression":{"arguments":[{"id":3992,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"13867:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3991,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"13859:7:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32) view returns (bool)"}},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13859:16:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4000,"nodeType":"IfStatement","src":"13854:86:33","trueBody":{"id":3999,"nodeType":"Block","src":"13877:63:33","statements":[{"errorCall":{"arguments":[{"id":3996,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"13921:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3995,"name":"LSP8NonExistentTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"13898:22:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13898:31:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3998,"nodeType":"RevertStatement","src":"13891:38:33"}]}}]},"documentation":{"id":3986,"nodeType":"StructuredDocumentation","src":"13696:80:33","text":" @dev When `tokenId` does not exist then revert with an error."},"id":4002,"implemented":true,"kind":"function","modifiers":[],"name":"_existsOrError","nameLocation":"13790:14:33","nodeType":"FunctionDefinition","parameters":{"id":3989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3988,"mutability":"mutable","name":"tokenId","nameLocation":"13813:7:33","nodeType":"VariableDeclaration","scope":4002,"src":"13805:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3987,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13805:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13804:17:33"},"returnParameters":{"id":3990,"nodeType":"ParameterList","parameters":[],"src":"13844:0:33"},"scope":4489,"src":"13781:165:33","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4113,"nodeType":"Block","src":"15100:973:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4014,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"15114:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15128:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15120:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4015,"name":"address","nodeType":"ElementaryTypeName","src":"15120:7:33","typeDescriptions":{}}},"id":4018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15120:10:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15114:16:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4024,"nodeType":"IfStatement","src":"15110:83:33","trueBody":{"id":4023,"nodeType":"Block","src":"15132:61:33","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4020,"name":"LSP8CannotSendToAddressZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"15153:27:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15153:29:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4022,"nodeType":"RevertStatement","src":"15146:36:33"}]}},{"condition":{"arguments":[{"id":4026,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"15269:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4025,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"15261:7:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32) view returns (bool)"}},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15261:16:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4033,"nodeType":"IfStatement","src":"15257:87:33","trueBody":{"id":4032,"nodeType":"Block","src":"15279:65:33","statements":[{"errorCall":{"arguments":[{"id":4029,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"15325:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4028,"name":"LSP8TokenIdAlreadyMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"15300:24:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15300:33:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4031,"nodeType":"RevertStatement","src":"15293:40:33"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":4037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15383:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15375:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4035,"name":"address","nodeType":"ElementaryTypeName","src":"15375:7:33","typeDescriptions":{}}},"id":4038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15375:10:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4039,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"15387:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4040,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"15391:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4041,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"15400:4:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4034,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"15354:20:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bytes memory)"}},"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15354:51:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4043,"nodeType":"ExpressionStatement","src":"15354:51:33"},{"condition":{"arguments":[{"id":4045,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"15514:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4044,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"15506:7:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32) view returns (bool)"}},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15506:16:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4052,"nodeType":"IfStatement","src":"15502:87:33","trueBody":{"id":4051,"nodeType":"Block","src":"15524:65:33","statements":[{"errorCall":{"arguments":[{"id":4048,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"15570:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4047,"name":"LSP8TokenIdAlreadyMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"15545:24:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:33:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4050,"nodeType":"RevertStatement","src":"15538:40:33"}]}},{"expression":{"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"15629:17:33","subExpression":{"id":4053,"name":"_existingTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"15631:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4055,"nodeType":"ExpressionStatement","src":"15629:17:33"},{"expression":{"arguments":[{"id":4060,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"15678:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"baseExpression":{"id":4056,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"15657:12:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$7088_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set storage ref)"}},"id":4058,"indexExpression":{"id":4057,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"15670:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15657:16:33","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7088_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":4059,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15674:3:33","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":7106,"src":"15657:20:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$7088_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$7088_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15657:29:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4062,"nodeType":"ExpressionStatement","src":"15657:29:33"},{"expression":{"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4063,"name":"_tokenOwners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"15696:12:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":4065,"indexExpression":{"id":4064,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"15709:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15696:21:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4066,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"15720:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15696:26:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4068,"nodeType":"ExpressionStatement","src":"15696:26:33"},{"eventCall":{"arguments":[{"expression":{"id":4070,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15747:3:33","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15751:6:33","memberName":"sender","nodeType":"MemberAccess","src":"15747:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":4074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15767:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15759:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4072,"name":"address","nodeType":"ElementaryTypeName","src":"15759:7:33","typeDescriptions":{}}},"id":4075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15759:10:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4076,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"15771:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4077,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"15775:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4078,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"15784:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4079,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"15791:4:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4069,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"15738:8:33","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,bytes32,bool,bytes memory)"}},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15738:58:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4081,"nodeType":"EmitStatement","src":"15733:63:33"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":4085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15835:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15827:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4083,"name":"address","nodeType":"ElementaryTypeName","src":"15827:7:33","typeDescriptions":{}}},"id":4086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15827:10:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4087,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"15839:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4088,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"15843:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4089,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"15852:4:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4082,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4408,"src":"15807:19:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bytes memory)"}},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15807:50:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4091,"nodeType":"ExpressionStatement","src":"15807:50:33"},{"assignments":[4093],"declarations":[{"constant":false,"id":4093,"mutability":"mutable","name":"lsp1Data","nameLocation":"15881:8:33","nodeType":"VariableDeclaration","scope":4113,"src":"15868:21:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4092,"name":"bytes","nodeType":"ElementaryTypeName","src":"15868:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4106,"initialValue":{"arguments":[{"expression":{"id":4096,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15916:3:33","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15920:6:33","memberName":"sender","nodeType":"MemberAccess","src":"15916:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":4100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15948:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15940:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4098,"name":"address","nodeType":"ElementaryTypeName","src":"15940:7:33","typeDescriptions":{}}},"id":4101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15940:10:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4102,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"15964:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4103,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"15980:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4104,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"16001:4:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4094,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"15892:3:33","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15896:6:33","memberName":"encode","nodeType":"MemberAccess","src":"15892:10:33","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15892:123:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"15868:147:33"},{"expression":{"arguments":[{"id":4108,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4005,"src":"16046:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4109,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"16050:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4110,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"16057:8:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4107,"name":"_notifyTokenReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"16025:20:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bool,bytes memory)"}},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16025:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4112,"nodeType":"ExpressionStatement","src":"16025:41:33"}]},"documentation":{"id":4003,"nodeType":"StructuredDocumentation","src":"13952:1013:33","text":" @dev Create `tokenId` by minting it and transfers it to `to`.\n @custom:info Any logic in the:\n - {_beforeTokenTransfer} function will run before updating the balances and ownership of `tokenId`s.\n - {_afterTokenTransfer} function will run after updating the balances and ownership of `tokenId`s, **but before notifying the recipient via LSP1**.\n @param to The address that will receive the minted `tokenId`.\n @param tokenId The token ID to create (= mint).\n @param force When set to `true`, `to` may be any address. When set to `false`, `to` must be a contract that supports the LSP1 standard.\n @param data Any additional data the caller wants included in the emitted event, and sent in the hook of the `to` address.\n @custom:requirements\n - `tokenId` must not exist and not have been already minted.\n - `to` cannot be the zero address.\n @custom:events {Transfer} event with `address(0)` as `from` address."},"id":4114,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"14979:5:33","nodeType":"FunctionDefinition","parameters":{"id":4012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4005,"mutability":"mutable","name":"to","nameLocation":"15002:2:33","nodeType":"VariableDeclaration","scope":4114,"src":"14994:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4004,"name":"address","nodeType":"ElementaryTypeName","src":"14994:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4007,"mutability":"mutable","name":"tokenId","nameLocation":"15022:7:33","nodeType":"VariableDeclaration","scope":4114,"src":"15014:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4006,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15014:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4009,"mutability":"mutable","name":"force","nameLocation":"15044:5:33","nodeType":"VariableDeclaration","scope":4114,"src":"15039:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4008,"name":"bool","nodeType":"ElementaryTypeName","src":"15039:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4011,"mutability":"mutable","name":"data","nameLocation":"15072:4:33","nodeType":"VariableDeclaration","scope":4114,"src":"15059:17:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4010,"name":"bytes","nodeType":"ElementaryTypeName","src":"15059:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14984:98:33"},"returnParameters":{"id":4013,"nodeType":"ParameterList","parameters":[],"src":"15100:0:33"},"scope":4489,"src":"14970:1103:33","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4207,"nodeType":"Block","src":"17497:864:33","statements":[{"assignments":[4123],"declarations":[{"constant":false,"id":4123,"mutability":"mutable","name":"tokenOwner","nameLocation":"17515:10:33","nodeType":"VariableDeclaration","scope":4207,"src":"17507:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4122,"name":"address","nodeType":"ElementaryTypeName","src":"17507:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4127,"initialValue":{"arguments":[{"id":4125,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"17541:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4124,"name":"tokenOwnerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"17528:12:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view returns (address)"}},"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17528:21:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"17507:42:33"},{"expression":{"arguments":[{"id":4129,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"17581:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":4132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17601:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17593:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4130,"name":"address","nodeType":"ElementaryTypeName","src":"17593:7:33","typeDescriptions":{}}},"id":4133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17593:10:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4134,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"17605:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4135,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"17614:4:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4128,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"17560:20:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bytes memory)"}},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17560:59:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4137,"nodeType":"ExpressionStatement","src":"17560:59:33"},{"expression":{"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4138,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"17758:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4140,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"17784:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4139,"name":"tokenOwnerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"17771:12:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view returns (address)"}},"id":4141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17771:21:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17758:34:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4143,"nodeType":"ExpressionStatement","src":"17758:34:33"},{"expression":{"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"17833:17:33","subExpression":{"id":4144,"name":"_existingTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"17835:15:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4146,"nodeType":"ExpressionStatement","src":"17833:17:33"},{"expression":{"arguments":[{"id":4148,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"17877:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4149,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"17889:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4147,"name":"_clearOperators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"17861:15:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32)"}},"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17861:36:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4151,"nodeType":"ExpressionStatement","src":"17861:36:33"},{"expression":{"arguments":[{"id":4156,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"17940:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"baseExpression":{"id":4152,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"17908:12:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$7088_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set storage ref)"}},"id":4154,"indexExpression":{"id":4153,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"17921:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17908:24:33","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7088_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":4155,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17933:6:33","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":7124,"src":"17908:31:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$7088_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$7088_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17908:40:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4158,"nodeType":"ExpressionStatement","src":"17908:40:33"},{"expression":{"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"17958:28:33","subExpression":{"baseExpression":{"id":4159,"name":"_tokenOwners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"17965:12:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":4161,"indexExpression":{"id":4160,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"17978:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17965:21:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4163,"nodeType":"ExpressionStatement","src":"17958:28:33"},{"eventCall":{"arguments":[{"expression":{"id":4165,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"18011:3:33","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18015:6:33","memberName":"sender","nodeType":"MemberAccess","src":"18011:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4167,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"18023:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":4170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18043:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18035:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4168,"name":"address","nodeType":"ElementaryTypeName","src":"18035:7:33","typeDescriptions":{}}},"id":4171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18035:10:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4172,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"18047:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"66616c7365","id":4173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"18056:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":4174,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"18063:4:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4164,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"18002:8:33","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,bytes32,bool,bytes memory)"}},"id":4175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18002:66:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4176,"nodeType":"EmitStatement","src":"17997:71:33"},{"expression":{"arguments":[{"id":4178,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"18099:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":4181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18119:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18111:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4179,"name":"address","nodeType":"ElementaryTypeName","src":"18111:7:33","typeDescriptions":{}}},"id":4182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18111:10:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4183,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"18123:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4184,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"18132:4:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4177,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4408,"src":"18079:19:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bytes memory)"}},"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18079:58:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4186,"nodeType":"ExpressionStatement","src":"18079:58:33"},{"assignments":[4188],"declarations":[{"constant":false,"id":4188,"mutability":"mutable","name":"lsp1Data","nameLocation":"18161:8:33","nodeType":"VariableDeclaration","scope":4207,"src":"18148:21:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4187,"name":"bytes","nodeType":"ElementaryTypeName","src":"18148:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4201,"initialValue":{"arguments":[{"expression":{"id":4191,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"18196:3:33","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18200:6:33","memberName":"sender","nodeType":"MemberAccess","src":"18196:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4193,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"18220:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":4196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18252:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18244:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4194,"name":"address","nodeType":"ElementaryTypeName","src":"18244:7:33","typeDescriptions":{}}},"id":4197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18244:10:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4198,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"18268:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4199,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"18289:4:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4189,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"18172:3:33","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18176:6:33","memberName":"encode","nodeType":"MemberAccess","src":"18172:10:33","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18172:131:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"18148:155:33"},{"expression":{"arguments":[{"id":4203,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"18333:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4204,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4188,"src":"18345:8:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4202,"name":"_notifyTokenSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"18314:18:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18314:40:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4206,"nodeType":"ExpressionStatement","src":"18314:40:33"}]},"documentation":{"id":4115,"nodeType":"StructuredDocumentation","src":"16079:1345:33","text":" @dev Burn a specific `tokenId`, removing the `tokenId` from the {tokenIdsOf} the caller and decreasing its {balanceOf} by -1.\n This will also clear all the operators allowed to transfer the `tokenId`.\n The owner of the `tokenId` will be notified about the `tokenId` being transferred through its LSP1 {universalReceiver}\n function, if it is a contract that supports the LSP1 interface. Its {universalReceiver} function will receive\n all the parameters in the calldata packed encoded.\n @custom:info Any logic in the:\n - {_beforeTokenTransfer} function will run before updating the balances and ownership of `tokenId`s.\n - {_afterTokenTransfer} function will run after updating the balances and ownership of `tokenId`s, **but before notifying the sender via LSP1**.\n @param tokenId The token to burn.\n @param data Any additional data the caller wants included in the emitted event, and sent in the LSP1 hook on the token owner's address.\n @custom:hint In dApps, you can know which addresses are burning tokens by listening for the `Transfer` event and filter with the zero address as `to`.\n @custom:requirements\n - `tokenId` must exist.\n @custom:events {Transfer} event with `address(0)` as the `to` address."},"id":4208,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"17438:5:33","nodeType":"FunctionDefinition","parameters":{"id":4120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4117,"mutability":"mutable","name":"tokenId","nameLocation":"17452:7:33","nodeType":"VariableDeclaration","scope":4208,"src":"17444:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17444:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4119,"mutability":"mutable","name":"data","nameLocation":"17474:4:33","nodeType":"VariableDeclaration","scope":4208,"src":"17461:17:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4118,"name":"bytes","nodeType":"ElementaryTypeName","src":"17461:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17443:36:33"},"returnParameters":{"id":4121,"nodeType":"ParameterList","parameters":[],"src":"17497:0:33"},"scope":4489,"src":"17429:932:33","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4339,"nodeType":"Block","src":"19948:1135:33","statements":[{"assignments":[4223],"declarations":[{"constant":false,"id":4223,"mutability":"mutable","name":"tokenOwner","nameLocation":"19966:10:33","nodeType":"VariableDeclaration","scope":4339,"src":"19958:18:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4222,"name":"address","nodeType":"ElementaryTypeName","src":"19958:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4227,"initialValue":{"arguments":[{"id":4225,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"19992:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4224,"name":"tokenOwnerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"19979:12:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view returns (address)"}},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19979:21:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"19958:42:33"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4228,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"20014:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4229,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"20028:4:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20014:18:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4238,"nodeType":"IfStatement","src":"20010:100:33","trueBody":{"id":4237,"nodeType":"Block","src":"20034:76:33","statements":[{"errorCall":{"arguments":[{"id":4232,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"20073:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4233,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"20085:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4234,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"20094:4:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4231,"name":"LSP8NotTokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"20055:17:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$_t_address_$returns$__$","typeString":"function (address,bytes32,address) pure"}},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20055:44:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4236,"nodeType":"RevertStatement","src":"20048:51:33"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4239,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"20124:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20138:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20130:7:33","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4240,"name":"address","nodeType":"ElementaryTypeName","src":"20130:7:33","typeDescriptions":{}}},"id":4243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20130:10:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20124:16:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4249,"nodeType":"IfStatement","src":"20120:83:33","trueBody":{"id":4248,"nodeType":"Block","src":"20142:61:33","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4245,"name":"LSP8CannotSendToAddressZero","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2804,"src":"20163:27:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20163:29:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4247,"nodeType":"RevertStatement","src":"20156:36:33"}]}},{"expression":{"arguments":[{"id":4251,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"20234:4:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4252,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"20240:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4253,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"20244:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4254,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"20253:4:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4250,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"20213:20:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bytes memory)"}},"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20213:45:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4256,"nodeType":"ExpressionStatement","src":"20213:45:33"},{"assignments":[4258],"declarations":[{"constant":false,"id":4258,"mutability":"mutable","name":"currentTokenOwner","nameLocation":"20372:17:33","nodeType":"VariableDeclaration","scope":4339,"src":"20364:25:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4257,"name":"address","nodeType":"ElementaryTypeName","src":"20364:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4262,"initialValue":{"arguments":[{"id":4260,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"20405:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4259,"name":"tokenOwnerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"20392:12:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view returns (address)"}},"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20392:21:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"20364:49:33"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4263,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"20427:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4264,"name":"currentTokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"20441:17:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20427:31:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4273,"nodeType":"IfStatement","src":"20423:192:33","trueBody":{"id":4272,"nodeType":"Block","src":"20460:155:33","statements":[{"errorCall":{"arguments":[{"id":4267,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"20520:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4268,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"20545:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4269,"name":"currentTokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"20573:17:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4266,"name":"LSP8TokenOwnerChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"20481:21:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address) pure"}},"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20481:123:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4271,"nodeType":"RevertStatement","src":"20474:130:33"}]}},{"expression":{"arguments":[{"id":4275,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"20641:4:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4276,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"20647:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4274,"name":"_clearOperators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"20625:15:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32)"}},"id":4277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20625:30:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4278,"nodeType":"ExpressionStatement","src":"20625:30:33"},{"expression":{"arguments":[{"id":4283,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"20692:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"baseExpression":{"id":4279,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"20666:12:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$7088_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set storage ref)"}},"id":4281,"indexExpression":{"id":4280,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"20679:4:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20666:18:33","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7088_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":4282,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20685:6:33","memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":7124,"src":"20666:25:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$7088_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$7088_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20666:34:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4285,"nodeType":"ExpressionStatement","src":"20666:34:33"},{"expression":{"arguments":[{"id":4290,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"20731:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"baseExpression":{"id":4286,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"20710:12:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$7088_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set storage ref)"}},"id":4288,"indexExpression":{"id":4287,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"20723:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20710:16:33","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7088_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":4289,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20727:3:33","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":7106,"src":"20710:20:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$7088_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$7088_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20710:29:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4292,"nodeType":"ExpressionStatement","src":"20710:29:33"},{"expression":{"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4293,"name":"_tokenOwners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"20749:12:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":4295,"indexExpression":{"id":4294,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"20762:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20749:21:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4296,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"20773:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20749:26:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4298,"nodeType":"ExpressionStatement","src":"20749:26:33"},{"eventCall":{"arguments":[{"expression":{"id":4300,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"20800:3:33","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20804:6:33","memberName":"sender","nodeType":"MemberAccess","src":"20800:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4302,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"20812:4:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4303,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"20818:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4304,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"20822:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4305,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"20831:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4306,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"20838:4:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4299,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"20791:8:33","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_bytes32_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,bytes32,bool,bytes memory)"}},"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20791:52:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4308,"nodeType":"EmitStatement","src":"20786:57:33"},{"expression":{"arguments":[{"id":4310,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"20874:4:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4311,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"20880:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4312,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"20884:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4313,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"20893:4:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4309,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4408,"src":"20854:19:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,bytes32,bytes memory)"}},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20854:44:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4315,"nodeType":"ExpressionStatement","src":"20854:44:33"},{"assignments":[4317],"declarations":[{"constant":false,"id":4317,"mutability":"mutable","name":"lsp1Data","nameLocation":"20922:8:33","nodeType":"VariableDeclaration","scope":4339,"src":"20909:21:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4316,"name":"bytes","nodeType":"ElementaryTypeName","src":"20909:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4327,"initialValue":{"arguments":[{"expression":{"id":4320,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"20944:3:33","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20948:6:33","memberName":"sender","nodeType":"MemberAccess","src":"20944:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4322,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"20956:4:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4323,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"20962:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4324,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"20966:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4325,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"20975:4:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4318,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"20933:3:33","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20937:6:33","memberName":"encode","nodeType":"MemberAccess","src":"20933:10:33","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20933:47:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"20909:71:33"},{"expression":{"arguments":[{"id":4329,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"21010:4:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4330,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"21016:8:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4328,"name":"_notifyTokenSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"20991:18:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20991:34:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4332,"nodeType":"ExpressionStatement","src":"20991:34:33"},{"expression":{"arguments":[{"id":4334,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"21056:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4335,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"21060:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4336,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"21067:8:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4333,"name":"_notifyTokenReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"21035:20:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bool,bytes memory)"}},"id":4337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21035:41:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4338,"nodeType":"ExpressionStatement","src":"21035:41:33"}]},"documentation":{"id":4209,"nodeType":"StructuredDocumentation","src":"18367:1420:33","text":" @dev Change the owner of the `tokenId` from `from` to `to`.\n Both the sender and recipient will be notified of the `tokenId` being transferred through their LSP1 {universalReceiver}\n function, if they are contracts that support the LSP1 interface. Their `universalReceiver` function will receive\n all the parameters in the calldata packed encoded.\n @custom:info Any logic in the:\n - {_beforeTokenTransfer} function will run before updating the balances and ownership of `tokenId`s.\n - {_afterTokenTransfer} function will run after updating the balances and ownership of `tokenId`s, **but before notifying the sender/recipient via LSP1**.\n @param from The sender address.\n @param to The recipient address.\n @param tokenId The token to transfer.\n @param force When set to `true`, `to` may be any address. When set to `false`, `to` must be a contract that supports the LSP1 standard.\n @param data Additional data the caller wants included in the emitted event, and sent in the hooks to `from` and `to` addresses.\n @custom:requirements\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n @custom:events {Transfer} event.\n @custom:danger This internal function does not check if the sender is authorized or not to operate on the `tokenId`."},"id":4340,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"19801:9:33","nodeType":"FunctionDefinition","parameters":{"id":4220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4211,"mutability":"mutable","name":"from","nameLocation":"19828:4:33","nodeType":"VariableDeclaration","scope":4340,"src":"19820:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4210,"name":"address","nodeType":"ElementaryTypeName","src":"19820:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4213,"mutability":"mutable","name":"to","nameLocation":"19850:2:33","nodeType":"VariableDeclaration","scope":4340,"src":"19842:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4212,"name":"address","nodeType":"ElementaryTypeName","src":"19842:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4215,"mutability":"mutable","name":"tokenId","nameLocation":"19870:7:33","nodeType":"VariableDeclaration","scope":4340,"src":"19862:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4214,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19862:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4217,"mutability":"mutable","name":"force","nameLocation":"19892:5:33","nodeType":"VariableDeclaration","scope":4340,"src":"19887:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4216,"name":"bool","nodeType":"ElementaryTypeName","src":"19887:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4219,"mutability":"mutable","name":"data","nameLocation":"19920:4:33","nodeType":"VariableDeclaration","scope":4340,"src":"19907:17:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4218,"name":"bytes","nodeType":"ElementaryTypeName","src":"19907:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19810:120:33"},"returnParameters":{"id":4221,"nodeType":"ParameterList","parameters":[],"src":"19948:0:33"},"scope":4489,"src":"19792:1291:33","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4364,"nodeType":"Block","src":"21629:121:33","statements":[{"expression":{"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4350,"name":"_tokenIdData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"21639:12:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_bytes_storage_$_$","typeString":"mapping(bytes32 => mapping(bytes32 => bytes storage ref))"}},"id":4353,"indexExpression":{"id":4351,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4343,"src":"21652:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21639:21:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":4354,"indexExpression":{"id":4352,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"21661:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"21639:30:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4355,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"21672:9:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"21639:42:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":4357,"nodeType":"ExpressionStatement","src":"21639:42:33"},{"eventCall":{"arguments":[{"id":4359,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4343,"src":"21715:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4360,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4345,"src":"21724:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4361,"name":"dataValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"21733:9:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4358,"name":"TokenIdDataChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"21696:18:33","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes32,bytes memory)"}},"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21696:47:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4363,"nodeType":"EmitStatement","src":"21691:52:33"}]},"documentation":{"id":4341,"nodeType":"StructuredDocumentation","src":"21089:402:33","text":" @dev Sets data for a specific `tokenId` and `dataKey` in the ERC725Y storage\n The ERC725Y data key is the hash of the `tokenId` and `dataKey` concatenated\n @param tokenId The unique identifier for a token.\n @param dataKey The key for the data to set.\n @param dataValue The value to set for the given data key.\n @custom:events {TokenIdDataChanged} event."},"id":4365,"implemented":true,"kind":"function","modifiers":[],"name":"_setDataForTokenId","nameLocation":"21505:18:33","nodeType":"FunctionDefinition","parameters":{"id":4348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4343,"mutability":"mutable","name":"tokenId","nameLocation":"21541:7:33","nodeType":"VariableDeclaration","scope":4365,"src":"21533:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4342,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21533:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4345,"mutability":"mutable","name":"dataKey","nameLocation":"21566:7:33","nodeType":"VariableDeclaration","scope":4365,"src":"21558:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4344,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21558:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4347,"mutability":"mutable","name":"dataValue","nameLocation":"21596:9:33","nodeType":"VariableDeclaration","scope":4365,"src":"21583:22:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4346,"name":"bytes","nodeType":"ElementaryTypeName","src":"21583:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"21523:88:33"},"returnParameters":{"id":4349,"nodeType":"ParameterList","parameters":[],"src":"21629:0:33"},"scope":4489,"src":"21496:254:33","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4381,"nodeType":"Block","src":"22292:54:33","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":4375,"name":"_tokenIdData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"22309:12:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_mapping$_t_bytes32_$_t_bytes_storage_$_$","typeString":"mapping(bytes32 => mapping(bytes32 => bytes storage ref))"}},"id":4377,"indexExpression":{"id":4376,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4368,"src":"22322:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22309:21:33","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes_storage_$","typeString":"mapping(bytes32 => bytes storage ref)"}},"id":4379,"indexExpression":{"id":4378,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"22331:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22309:30:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"functionReturnParameters":4374,"id":4380,"nodeType":"Return","src":"22302:37:33"}]},"documentation":{"id":4366,"nodeType":"StructuredDocumentation","src":"21756:391:33","text":" @dev Retrieves data for a specific `tokenId` and `dataKey` from the ERC725Y storage\n The ERC725Y data key is the hash of the `tokenId` and `dataKey` concatenated\n @param tokenId The unique identifier for a token.\n @param dataKey The key for the data to retrieve.\n @return dataValues The data value associated with the given `tokenId` and `dataKey`."},"id":4382,"implemented":true,"kind":"function","modifiers":[],"name":"_getDataForTokenId","nameLocation":"22161:18:33","nodeType":"FunctionDefinition","parameters":{"id":4371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4368,"mutability":"mutable","name":"tokenId","nameLocation":"22197:7:33","nodeType":"VariableDeclaration","scope":4382,"src":"22189:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4367,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22189:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4370,"mutability":"mutable","name":"dataKey","nameLocation":"22222:7:33","nodeType":"VariableDeclaration","scope":4382,"src":"22214:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4369,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22214:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22179:56:33"},"returnParameters":{"id":4374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4373,"mutability":"mutable","name":"dataValues","nameLocation":"22280:10:33","nodeType":"VariableDeclaration","scope":4382,"src":"22267:23:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4372,"name":"bytes","nodeType":"ElementaryTypeName","src":"22267:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"22266:25:33"},"scope":4489,"src":"22152:194:33","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4394,"nodeType":"Block","src":"22956:2:33","statements":[]},"documentation":{"id":4383,"nodeType":"StructuredDocumentation","src":"22352:407:33","text":" @dev Hook that is called before any token transfer, including minting and burning.\n Allows to run custom logic before updating balances and notifiying sender/recipient by overriding this function.\n @param from The sender address\n @param to The recipient address\n @param tokenId The tokenId to transfer\n @param data The data sent alongside the transfer"},"id":4395,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"22773:20:33","nodeType":"FunctionDefinition","parameters":{"id":4392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4385,"mutability":"mutable","name":"from","nameLocation":"22811:4:33","nodeType":"VariableDeclaration","scope":4395,"src":"22803:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4384,"name":"address","nodeType":"ElementaryTypeName","src":"22803:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4387,"mutability":"mutable","name":"to","nameLocation":"22833:2:33","nodeType":"VariableDeclaration","scope":4395,"src":"22825:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4386,"name":"address","nodeType":"ElementaryTypeName","src":"22825:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4389,"mutability":"mutable","name":"tokenId","nameLocation":"22853:7:33","nodeType":"VariableDeclaration","scope":4395,"src":"22845:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4388,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22845:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4391,"mutability":"mutable","name":"data","nameLocation":"22883:4:33","nodeType":"VariableDeclaration","scope":4395,"src":"22870:17:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4390,"name":"bytes","nodeType":"ElementaryTypeName","src":"22870:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"22793:145:33"},"returnParameters":{"id":4393,"nodeType":"ParameterList","parameters":[],"src":"22956:0:33"},"scope":4489,"src":"22764:194:33","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4407,"nodeType":"Block","src":"23586:2:33","statements":[]},"documentation":{"id":4396,"nodeType":"StructuredDocumentation","src":"22964:426:33","text":" @dev Hook that is called after any token transfer, including minting and burning.\n Allows to run custom logic after updating balances, but **before notifiying sender/recipient via LSP1** by overriding this function.\n @param from The sender address\n @param to The recipient address\n @param tokenId The tokenId to transfer\n @param data The data sent alongside the transfer"},"id":4408,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"23404:19:33","nodeType":"FunctionDefinition","parameters":{"id":4405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4398,"mutability":"mutable","name":"from","nameLocation":"23441:4:33","nodeType":"VariableDeclaration","scope":4408,"src":"23433:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4397,"name":"address","nodeType":"ElementaryTypeName","src":"23433:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4400,"mutability":"mutable","name":"to","nameLocation":"23463:2:33","nodeType":"VariableDeclaration","scope":4408,"src":"23455:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4399,"name":"address","nodeType":"ElementaryTypeName","src":"23455:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4402,"mutability":"mutable","name":"tokenId","nameLocation":"23483:7:33","nodeType":"VariableDeclaration","scope":4408,"src":"23475:15:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4401,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23475:7:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4404,"mutability":"mutable","name":"data","nameLocation":"23513:4:33","nodeType":"VariableDeclaration","scope":4408,"src":"23500:17:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4403,"name":"bytes","nodeType":"ElementaryTypeName","src":"23500:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"23423:145:33"},"returnParameters":{"id":4406,"nodeType":"ParameterList","parameters":[],"src":"23586:0:33"},"scope":4489,"src":"23395:193:33","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4424,"nodeType":"Block","src":"24311:144:33","statements":[{"expression":{"arguments":[{"id":4419,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4411,"src":"24368:8:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4420,"name":"_TYPEID_LSP8_TOKENOPERATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"24390:26:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4421,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"24430:8:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4416,"name":"LSP1Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"24321:9:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP1Utils_$1290_$","typeString":"type(library LSP1Utils)"}},"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24331:23:33","memberName":"notifyUniversalReceiver","nodeType":"MemberAccess","referencedDeclaration":1246,"src":"24321:33:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes32,bytes memory)"}},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24321:127:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4423,"nodeType":"ExpressionStatement","src":"24321:127:33"}]},"documentation":{"id":4409,"nodeType":"StructuredDocumentation","src":"23594:602:33","text":" @dev Attempt to notify the operator `operator` about the `tokenId` being authorized.\n This is done by calling its {universalReceiver} function with the `_TYPEID_LSP8_TOKENOPERATOR` as typeId, if `operator` is a contract that supports the LSP1 interface.\n If `operator` is an EOA or a contract that does not support the LSP1 interface, nothing will happen and no notification will be sent.\n @param operator The address to call the {universalReceiver} function on.\n @param lsp1Data the data to be sent to the `operator` address in the `universalReceiver` call."},"id":4425,"implemented":true,"kind":"function","modifiers":[],"name":"_notifyTokenOperator","nameLocation":"24210:20:33","nodeType":"FunctionDefinition","parameters":{"id":4414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4411,"mutability":"mutable","name":"operator","nameLocation":"24248:8:33","nodeType":"VariableDeclaration","scope":4425,"src":"24240:16:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4410,"name":"address","nodeType":"ElementaryTypeName","src":"24240:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4413,"mutability":"mutable","name":"lsp1Data","nameLocation":"24279:8:33","nodeType":"VariableDeclaration","scope":4425,"src":"24266:21:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4412,"name":"bytes","nodeType":"ElementaryTypeName","src":"24266:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"24230:63:33"},"returnParameters":{"id":4415,"nodeType":"ParameterList","parameters":[],"src":"24311:0:33"},"scope":4489,"src":"24201:254:33","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4441,"nodeType":"Block","src":"25156:139:33","statements":[{"expression":{"arguments":[{"id":4436,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4428,"src":"25213:4:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4437,"name":"_TYPEID_LSP8_TOKENSSENDER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"25231:25:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4438,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4430,"src":"25270:8:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4433,"name":"LSP1Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"25166:9:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP1Utils_$1290_$","typeString":"type(library LSP1Utils)"}},"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25176:23:33","memberName":"notifyUniversalReceiver","nodeType":"MemberAccess","referencedDeclaration":1246,"src":"25166:33:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes32,bytes memory)"}},"id":4439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25166:122:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4440,"nodeType":"ExpressionStatement","src":"25166:122:33"}]},"documentation":{"id":4426,"nodeType":"StructuredDocumentation","src":"24461:586:33","text":" @dev Attempt to notify the token sender `from` about the `tokenId` being transferred.\n This is done by calling its {universalReceiver} function with the `_TYPEID_LSP8_TOKENSSENDER` as typeId, if `from` is a contract that supports the LSP1 interface.\n If `from` is an EOA or a contract that does not support the LSP1 interface, nothing will happen and no notification will be sent.\n @param from The address to call the {universalReceiver} function on.\n @param lsp1Data the data to be sent to the `from` address in the `universalReceiver` call."},"id":4442,"implemented":true,"kind":"function","modifiers":[],"name":"_notifyTokenSender","nameLocation":"25061:18:33","nodeType":"FunctionDefinition","parameters":{"id":4431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4428,"mutability":"mutable","name":"from","nameLocation":"25097:4:33","nodeType":"VariableDeclaration","scope":4442,"src":"25089:12:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4427,"name":"address","nodeType":"ElementaryTypeName","src":"25089:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4430,"mutability":"mutable","name":"lsp1Data","nameLocation":"25124:8:33","nodeType":"VariableDeclaration","scope":4442,"src":"25111:21:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4429,"name":"bytes","nodeType":"ElementaryTypeName","src":"25111:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"25079:59:33"},"returnParameters":{"id":4432,"nodeType":"ParameterList","parameters":[],"src":"25156:0:33"},"scope":4489,"src":"25052:243:33","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4487,"nodeType":"Block","src":"26309:491:33","statements":[{"condition":{"arguments":[{"id":4454,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"26400:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4455,"name":"_INTERFACEID_LSP1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"26420:17:33","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":4452,"name":"ERC165Checker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"26336:13:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC165Checker_$5900_$","typeString":"type(library ERC165Checker)"}},"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26350:32:33","memberName":"supportsERC165InterfaceUnchecked","nodeType":"MemberAccess","referencedDeclaration":5899,"src":"26336:46:33","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26336:115:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"26564:6:33","subExpression":{"id":4466,"name":"force","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"26565:5:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4485,"nodeType":"IfStatement","src":"26560:234:33","trueBody":{"id":4484,"nodeType":"Block","src":"26572:222:33","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":4468,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"26590:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26593:4:33","memberName":"code","nodeType":"MemberAccess","src":"26590:7:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26598:6:33","memberName":"length","nodeType":"MemberAccess","src":"26590:14:33","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26608:1:33","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"26590:19:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4482,"nodeType":"Block","src":"26712:72:33","statements":[{"errorCall":{"arguments":[{"id":4479,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"26766:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4478,"name":"LSP8NotifyTokenReceiverIsEOA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2829,"src":"26737:28:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26737:32:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4481,"nodeType":"RevertStatement","src":"26730:39:33"}]},"id":4483,"nodeType":"IfStatement","src":"26586:198:33","trueBody":{"id":4477,"nodeType":"Block","src":"26611:95:33","statements":[{"errorCall":{"arguments":[{"id":4474,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"26688:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4473,"name":"LSP8NotifyTokenReceiverContractMissingLSP1Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"26636:51:33","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":4475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26636:55:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4476,"nodeType":"RevertStatement","src":"26629:62:33"}]}}]}},"id":4486,"nodeType":"IfStatement","src":"26319:475:33","trueBody":{"id":4465,"nodeType":"Block","src":"26462:92:33","statements":[{"expression":{"arguments":[{"id":4461,"name":"_TYPEID_LSP8_TOKENSRECIPIENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2735,"src":"26504:28:33","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4462,"name":"lsp1Data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4449,"src":"26534:8:33","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":4458,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"26482:2:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4457,"name":"ILSP1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"26476:5:33","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILSP1UniversalReceiver_$1191_$","typeString":"type(contract ILSP1UniversalReceiver)"}},"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26476:9:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILSP1UniversalReceiver_$1191","typeString":"contract ILSP1UniversalReceiver"}},"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26486:17:33","memberName":"universalReceiver","nodeType":"MemberAccess","referencedDeclaration":1190,"src":"26476:27:33","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32,bytes memory) payable external returns (bytes memory)"}},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26476:67:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4464,"nodeType":"ExpressionStatement","src":"26476:67:33"}]}}]},"documentation":{"id":4443,"nodeType":"StructuredDocumentation","src":"25301:879:33","text":" @dev Attempt to notify the token receiver `to` about the `tokenId` being received.\n This is done by calling its {universalReceiver} function with the `_TYPEID_LSP8_TOKENSRECIPIENT` as typeId, if `to` is a contract that supports the LSP1 interface.\n If `to` is is an EOA or a contract that does not support the LSP1 interface, the behaviour will depend on the `force` boolean flag.\n - if `force` is set to `true`, nothing will happen and no notification will be sent.\n - if `force` is set to `false, the transaction will revert.\n @param to The address to call the {universalReceiver} function on.\n @param force A boolean that describe if transfer to a `to` address that does not support LSP1 is allowed or not.\n @param lsp1Data The data to be sent to the `to` address in the `universalReceiver(...)` call."},"id":4488,"implemented":true,"kind":"function","modifiers":[],"name":"_notifyTokenReceiver","nameLocation":"26194:20:33","nodeType":"FunctionDefinition","parameters":{"id":4450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4445,"mutability":"mutable","name":"to","nameLocation":"26232:2:33","nodeType":"VariableDeclaration","scope":4488,"src":"26224:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4444,"name":"address","nodeType":"ElementaryTypeName","src":"26224:7:33","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4447,"mutability":"mutable","name":"force","nameLocation":"26249:5:33","nodeType":"VariableDeclaration","scope":4488,"src":"26244:10:33","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4446,"name":"bool","nodeType":"ElementaryTypeName","src":"26244:4:33","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4449,"mutability":"mutable","name":"lsp1Data","nameLocation":"26277:8:33","nodeType":"VariableDeclaration","scope":4488,"src":"26264:21:33","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4448,"name":"bytes","nodeType":"ElementaryTypeName","src":"26264:5:33","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"26214:77:33"},"returnParameters":{"id":4451,"nodeType":"ParameterList","parameters":[],"src":"26309:0:33"},"scope":4489,"src":"26185:615:33","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":4490,"src":"1677:25125:33","usedErrors":[1009,1012,1015,2488,2491,2494,2775,2784,2791,2798,2801,2804,2811,2819,2824,2829,2832,2841,2844,2849,2858,2867],"usedEvents":[876,1092,2520,2531,2544,2553]}],"src":"39:26764:33"},"id":33},"@lukso/lsp8-contracts/contracts/extensions/LSP8Burnable.sol":{"ast":{"absolutePath":"@lukso/lsp8-contracts/contracts/extensions/LSP8Burnable.sol","exportedSymbols":{"LSP8Burnable":[4527],"LSP8IdentifiableDigitalAsset":[3136],"LSP8NotTokenOperator":[2791]},"id":4528,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":4491,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"39:24:34"},{"absolutePath":"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAsset.sol","file":"../LSP8IdentifiableDigitalAsset.sol","id":4493,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4528,"sourceUnit":3137,"src":"65:87:34","symbolAliases":[{"foreign":{"id":4492,"name":"LSP8IdentifiableDigitalAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"78:28:34","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp8-contracts/contracts/LSP8Errors.sol","file":"../LSP8Errors.sol","id":4495,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4528,"sourceUnit":2868,"src":"164:55:34","symbolAliases":[{"foreign":{"id":4494,"name":"LSP8NotTokenOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"172:20:34","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4497,"name":"LSP8IdentifiableDigitalAsset","nameLocations":["412:28:34"],"nodeType":"IdentifierPath","referencedDeclaration":3136,"src":"412:28:34"},"id":4498,"nodeType":"InheritanceSpecifier","src":"412:28:34"}],"canonicalName":"LSP8Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4496,"nodeType":"StructuredDocumentation","src":"221:156:34","text":" @dev LSP8 token extension that allows token holders to destroy both\n their own tokens and those that they have an allowance for as an operator."},"fullyImplemented":true,"id":4527,"internalFunctionIDs":{"5705":1},"linearizedBaseContracts":[4527,3136,1452,4489,2715,2421,2483,610,842,1129,5706,5912,971],"name":"LSP8Burnable","nameLocation":"396:12:34","nodeType":"ContractDefinition","nodes":[{"body":{"id":4525,"nodeType":"Block","src":"828:165:34","statements":[{"condition":{"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"842:40:34","subExpression":{"arguments":[{"expression":{"id":4507,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"862:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"866:6:34","memberName":"sender","nodeType":"MemberAccess","src":"862:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4509,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"874:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4506,"name":"_isOperatorOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"843:18:34","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes32_$returns$_t_bool_$","typeString":"function (address,bytes32) view returns (bool)"}},"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"843:39:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4519,"nodeType":"IfStatement","src":"838:119:34","trueBody":{"id":4518,"nodeType":"Block","src":"884:73:34","statements":[{"errorCall":{"arguments":[{"id":4513,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"926:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4514,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"935:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"939:6:34","memberName":"sender","nodeType":"MemberAccess","src":"935:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4512,"name":"LSP8NotTokenOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"905:20:34","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) pure"}},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"905:41:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4517,"nodeType":"RevertStatement","src":"898:48:34"}]}},{"expression":{"arguments":[{"id":4521,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"972:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4522,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"981:4:34","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4520,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"966:5:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory)"}},"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"966:20:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4524,"nodeType":"ExpressionStatement","src":"966:20:34"}]},"documentation":{"id":4499,"nodeType":"StructuredDocumentation","src":"447:311:34","text":" @notice Burning tokenId `tokenId`. This tokenId will not be recoverable! (additional data sent: `data`).\n @dev See internal {_burn} function for details.\n @param tokenId The tokenId to burn.\n @param data Any extra data to be sent alongside burning the tokenId."},"functionSelector":"6c79b70b","id":4526,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"772:4:34","nodeType":"FunctionDefinition","parameters":{"id":4504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4501,"mutability":"mutable","name":"tokenId","nameLocation":"785:7:34","nodeType":"VariableDeclaration","scope":4526,"src":"777:15:34","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4500,"name":"bytes32","nodeType":"ElementaryTypeName","src":"777:7:34","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4503,"mutability":"mutable","name":"data","nameLocation":"807:4:34","nodeType":"VariableDeclaration","scope":4526,"src":"794:17:34","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4502,"name":"bytes","nodeType":"ElementaryTypeName","src":"794:5:34","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"776:36:34"},"returnParameters":{"id":4505,"nodeType":"ParameterList","parameters":[],"src":"828:0:34"},"scope":4527,"src":"763:230:34","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":4528,"src":"378:617:34","usedErrors":[1009,1012,1015,1308,1313,1318,2488,2491,2494,2775,2784,2791,2798,2801,2804,2811,2819,2824,2829,2832,2835,2838,2841,2844,2849,2858,2867],"usedEvents":[876,1092,2520,2531,2544,2553]}],"src":"39:957:34"},"id":34},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[5006],"Ownable":[4640]},"id":4641,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4529,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:35"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":4530,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4641,"sourceUnit":5007,"src":"127:30:35","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4532,"name":"Context","nameLocations":["683:7:35"],"nodeType":"IdentifierPath","referencedDeclaration":5006,"src":"683:7:35"},"id":4533,"nodeType":"InheritanceSpecifier","src":"683:7:35"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4531,"nodeType":"StructuredDocumentation","src":"159:494:35","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":4640,"linearizedBaseContracts":[4640,5006],"name":"Ownable","nameLocation":"672:7:35","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":4535,"mutability":"mutable","name":"_owner","nameLocation":"713:6:35","nodeType":"VariableDeclaration","scope":4640,"src":"697:22:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4534,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":4541,"name":"OwnershipTransferred","nameLocation":"732:20:35","nodeType":"EventDefinition","parameters":{"id":4540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4537,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:35","nodeType":"VariableDeclaration","scope":4541,"src":"753:29:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4536,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4539,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:35","nodeType":"VariableDeclaration","scope":4541,"src":"784:24:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4538,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:35"},"src":"726:84:35"},{"body":{"id":4550,"nodeType":"Block","src":"926:49:35","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4546,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"955:10:35","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4545,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"936:18:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4549,"nodeType":"ExpressionStatement","src":"936:32:35"}]},"documentation":{"id":4542,"nodeType":"StructuredDocumentation","src":"816:91:35","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":4551,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4543,"nodeType":"ParameterList","parameters":[],"src":"923:2:35"},"returnParameters":{"id":4544,"nodeType":"ParameterList","parameters":[],"src":"926:0:35"},"scope":4640,"src":"912:63:35","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4558,"nodeType":"Block","src":"1084:41:35","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4554,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"1094:11:35","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4556,"nodeType":"ExpressionStatement","src":"1094:13:35"},{"id":4557,"nodeType":"PlaceholderStatement","src":"1117:1:35"}]},"documentation":{"id":4552,"nodeType":"StructuredDocumentation","src":"981:77:35","text":" @dev Throws if called by any account other than the owner."},"id":4559,"name":"onlyOwner","nameLocation":"1072:9:35","nodeType":"ModifierDefinition","parameters":{"id":4553,"nodeType":"ParameterList","parameters":[],"src":"1081:2:35"},"src":"1063:62:35","virtual":false,"visibility":"internal"},{"body":{"id":4567,"nodeType":"Block","src":"1256:30:35","statements":[{"expression":{"id":4565,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4535,"src":"1273:6:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4564,"id":4566,"nodeType":"Return","src":"1266:13:35"}]},"documentation":{"id":4560,"nodeType":"StructuredDocumentation","src":"1131:65:35","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":4568,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:35","nodeType":"FunctionDefinition","parameters":{"id":4561,"nodeType":"ParameterList","parameters":[],"src":"1215:2:35"},"returnParameters":{"id":4564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4568,"src":"1247:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4562,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:35"},"scope":4640,"src":"1201:85:35","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":4581,"nodeType":"Block","src":"1404:85:35","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4573,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"1422:5:35","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4575,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"1433:10:35","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":4578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":4572,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:35","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4580,"nodeType":"ExpressionStatement","src":"1414:68:35"}]},"documentation":{"id":4569,"nodeType":"StructuredDocumentation","src":"1292:62:35","text":" @dev Throws if the sender is not the owner."},"id":4582,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:35","nodeType":"FunctionDefinition","parameters":{"id":4570,"nodeType":"ParameterList","parameters":[],"src":"1379:2:35"},"returnParameters":{"id":4571,"nodeType":"ParameterList","parameters":[],"src":"1404:0:35"},"scope":4640,"src":"1359:130:35","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4595,"nodeType":"Block","src":"1878:47:35","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":4591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4589,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:35","typeDescriptions":{}}},"id":4592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4588,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"1888:18:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4594,"nodeType":"ExpressionStatement","src":"1888:30:35"}]},"documentation":{"id":4583,"nodeType":"StructuredDocumentation","src":"1495:324:35","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":4596,"implemented":true,"kind":"function","modifiers":[{"id":4586,"kind":"modifierInvocation","modifierName":{"id":4585,"name":"onlyOwner","nameLocations":["1868:9:35"],"nodeType":"IdentifierPath","referencedDeclaration":4559,"src":"1868:9:35"},"nodeType":"ModifierInvocation","src":"1868:9:35"}],"name":"renounceOwnership","nameLocation":"1833:17:35","nodeType":"FunctionDefinition","parameters":{"id":4584,"nodeType":"ParameterList","parameters":[],"src":"1850:2:35"},"returnParameters":{"id":4587,"nodeType":"ParameterList","parameters":[],"src":"1878:0:35"},"scope":4640,"src":"1824:101:35","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":4618,"nodeType":"Block","src":"2144:128:35","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4605,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"2162:8:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4606,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:35","typeDescriptions":{}}},"id":4609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":4611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":4604,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:35","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4613,"nodeType":"ExpressionStatement","src":"2154:73:35"},{"expression":{"arguments":[{"id":4615,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"2256:8:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4614,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"2237:18:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4617,"nodeType":"ExpressionStatement","src":"2237:28:35"}]},"documentation":{"id":4597,"nodeType":"StructuredDocumentation","src":"1931:138:35","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":4619,"implemented":true,"kind":"function","modifiers":[{"id":4602,"kind":"modifierInvocation","modifierName":{"id":4601,"name":"onlyOwner","nameLocations":["2134:9:35"],"nodeType":"IdentifierPath","referencedDeclaration":4559,"src":"2134:9:35"},"nodeType":"ModifierInvocation","src":"2134:9:35"}],"name":"transferOwnership","nameLocation":"2083:17:35","nodeType":"FunctionDefinition","parameters":{"id":4600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4599,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:35","nodeType":"VariableDeclaration","scope":4619,"src":"2101:16:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4598,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:35"},"returnParameters":{"id":4603,"nodeType":"ParameterList","parameters":[],"src":"2144:0:35"},"scope":4640,"src":"2074:198:35","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":4638,"nodeType":"Block","src":"2489:124:35","statements":[{"assignments":[4626],"declarations":[{"constant":false,"id":4626,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:35","nodeType":"VariableDeclaration","scope":4638,"src":"2499:16:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4625,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4628,"initialValue":{"id":4627,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4535,"src":"2518:6:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:35"},{"expression":{"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4629,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4535,"src":"2534:6:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4630,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4622,"src":"2543:8:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4632,"nodeType":"ExpressionStatement","src":"2534:17:35"},{"eventCall":{"arguments":[{"id":4634,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"2587:8:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4635,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4622,"src":"2597:8:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4633,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4541,"src":"2566:20:35","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4637,"nodeType":"EmitStatement","src":"2561:45:35"}]},"documentation":{"id":4620,"nodeType":"StructuredDocumentation","src":"2278:143:35","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":4639,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:35","nodeType":"FunctionDefinition","parameters":{"id":4623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4622,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:35","nodeType":"VariableDeclaration","scope":4639,"src":"2454:16:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4621,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:35"},"returnParameters":{"id":4624,"nodeType":"ParameterList","parameters":[],"src":"2489:0:35"},"scope":4640,"src":"2426:187:35","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":4641,"src":"654:1961:35","usedErrors":[],"usedEvents":[4541]}],"src":"102:2514:35"},"id":35},"@openzeppelin/contracts/interfaces/IERC1271.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1271.sol","exportedSymbols":{"IERC1271":[4654]},"id":4655,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4642,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"92:23:36"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1271","contractDependencies":[],"contractKind":"interface","documentation":{"id":4643,"nodeType":"StructuredDocumentation","src":"117:189:36","text":" @dev Interface of the ERC1271 standard signature validation method for\n contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n _Available since v4.1._"},"fullyImplemented":false,"id":4654,"linearizedBaseContracts":[4654],"name":"IERC1271","nameLocation":"317:8:36","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4644,"nodeType":"StructuredDocumentation","src":"332:220:36","text":" @dev Should return whether the signature provided is valid for the provided data\n @param hash      Hash of the data to be signed\n @param signature Signature byte array associated with _data"},"functionSelector":"1626ba7e","id":4653,"implemented":false,"kind":"function","modifiers":[],"name":"isValidSignature","nameLocation":"566:16:36","nodeType":"FunctionDefinition","parameters":{"id":4649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4646,"mutability":"mutable","name":"hash","nameLocation":"591:4:36","nodeType":"VariableDeclaration","scope":4653,"src":"583:12:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4645,"name":"bytes32","nodeType":"ElementaryTypeName","src":"583:7:36","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4648,"mutability":"mutable","name":"signature","nameLocation":"610:9:36","nodeType":"VariableDeclaration","scope":4653,"src":"597:22:36","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4647,"name":"bytes","nodeType":"ElementaryTypeName","src":"597:5:36","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"582:38:36"},"returnParameters":{"id":4652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4651,"mutability":"mutable","name":"magicValue","nameLocation":"651:10:36","nodeType":"VariableDeclaration","scope":4653,"src":"644:17:36","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4650,"name":"bytes4","nodeType":"ElementaryTypeName","src":"644:6:36","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"643:19:36"},"scope":4654,"src":"557:106:36","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4655,"src":"307:358:36","usedErrors":[],"usedEvents":[]}],"src":"92:574:36"},"id":36},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[4984]},"id":4985,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4656,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:37"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":4657,"nodeType":"StructuredDocumentation","src":"126:67:37","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":4984,"linearizedBaseContracts":[4984],"name":"Address","nameLocation":"202:7:37","nodeType":"ContractDefinition","nodes":[{"body":{"id":4671,"nodeType":"Block","src":"1478:254:37","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":4665,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4660,"src":"1702:7:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:4:37","memberName":"code","nodeType":"MemberAccess","src":"1702:12:37","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:37","memberName":"length","nodeType":"MemberAccess","src":"1702:19:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4664,"id":4670,"nodeType":"Return","src":"1695:30:37"}]},"documentation":{"id":4658,"nodeType":"StructuredDocumentation","src":"216:1191:37","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":4672,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:37","nodeType":"FunctionDefinition","parameters":{"id":4661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4660,"mutability":"mutable","name":"account","nameLocation":"1440:7:37","nodeType":"VariableDeclaration","scope":4672,"src":"1432:15:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4659,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:37"},"returnParameters":{"id":4664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4672,"src":"1472:4:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4662,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:37"},"scope":4984,"src":"1412:320:37","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4705,"nodeType":"Block","src":"2718:241:37","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4683,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:37","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$4984","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$4984","typeString":"library Address"}],"id":4682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:37","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4681,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:37","typeDescriptions":{}}},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2736:13:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:7:37","memberName":"balance","nodeType":"MemberAccess","src":"2736:21:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4686,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"2761:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":4688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:37","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":4680,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:37","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:73:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4690,"nodeType":"ExpressionStatement","src":"2728:73:37"},{"assignments":[4692,null],"declarations":[{"constant":false,"id":4692,"mutability":"mutable","name":"success","nameLocation":"2818:7:37","nodeType":"VariableDeclaration","scope":4705,"src":"2813:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4691,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":4699,"initialValue":{"arguments":[{"hexValue":"","id":4697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:37","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":4693,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"2831:9:37","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2841:4:37","memberName":"call","nodeType":"MemberAccess","src":"2831:14:37","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":4695,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4677,"src":"2853:6:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:37","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:33:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:37"},{"expression":{"arguments":[{"id":4701,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"2882:7:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":4702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:37","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":4700,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:37","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:78:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4704,"nodeType":"ExpressionStatement","src":"2874:78:37"}]},"documentation":{"id":4673,"nodeType":"StructuredDocumentation","src":"1738:904:37","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":4706,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:37","nodeType":"FunctionDefinition","parameters":{"id":4678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4675,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:37","nodeType":"VariableDeclaration","scope":4706,"src":"2666:25:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":4674,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:37","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":4677,"mutability":"mutable","name":"amount","nameLocation":"2701:6:37","nodeType":"VariableDeclaration","scope":4706,"src":"2693:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4676,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:37"},"returnParameters":{"id":4679,"nodeType":"ParameterList","parameters":[],"src":"2718:0:37"},"scope":4984,"src":"2647:312:37","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4723,"nodeType":"Block","src":"3790:96:37","statements":[{"expression":{"arguments":[{"id":4717,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4709,"src":"3829:6:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4718,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4711,"src":"3837:4:37","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":4719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":4720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:37","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":4716,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[4764,4808],"referencedDeclaration":4808,"src":"3807:21:37","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":4721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:72:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4715,"id":4722,"nodeType":"Return","src":"3800:79:37"}]},"documentation":{"id":4707,"nodeType":"StructuredDocumentation","src":"2965:731:37","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":4724,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:37","nodeType":"FunctionDefinition","parameters":{"id":4712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4709,"mutability":"mutable","name":"target","nameLocation":"3731:6:37","nodeType":"VariableDeclaration","scope":4724,"src":"3723:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4708,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4711,"mutability":"mutable","name":"data","nameLocation":"3752:4:37","nodeType":"VariableDeclaration","scope":4724,"src":"3739:17:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4710,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:37","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:37"},"returnParameters":{"id":4715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4724,"src":"3776:12:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4713,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:37","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:37"},"scope":4984,"src":"3701:185:37","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4743,"nodeType":"Block","src":"4255:76:37","statements":[{"expression":{"arguments":[{"id":4737,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4727,"src":"4294:6:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4738,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"4302:4:37","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":4739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":4740,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"4311:12:37","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4736,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[4764,4808],"referencedDeclaration":4808,"src":"4272:21:37","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:52:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4735,"id":4742,"nodeType":"Return","src":"4265:59:37"}]},"documentation":{"id":4725,"nodeType":"StructuredDocumentation","src":"3892:211:37","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":4744,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:37","nodeType":"FunctionDefinition","parameters":{"id":4732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4727,"mutability":"mutable","name":"target","nameLocation":"4147:6:37","nodeType":"VariableDeclaration","scope":4744,"src":"4139:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4726,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4729,"mutability":"mutable","name":"data","nameLocation":"4176:4:37","nodeType":"VariableDeclaration","scope":4744,"src":"4163:17:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4728,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:37","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4731,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:37","nodeType":"VariableDeclaration","scope":4744,"src":"4190:26:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4730,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:37","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:37"},"returnParameters":{"id":4735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4744,"src":"4241:12:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4733,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:37","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:37"},"scope":4984,"src":"4108:223:37","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4763,"nodeType":"Block","src":"4806:111:37","statements":[{"expression":{"arguments":[{"id":4757,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4747,"src":"4845:6:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4758,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"4853:4:37","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"4859:5:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":4760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:37","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":4756,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[4764,4808],"referencedDeclaration":4808,"src":"4823:21:37","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:87:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4755,"id":4762,"nodeType":"Return","src":"4816:94:37"}]},"documentation":{"id":4745,"nodeType":"StructuredDocumentation","src":"4337:351:37","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":4764,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:37","nodeType":"FunctionDefinition","parameters":{"id":4752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4747,"mutability":"mutable","name":"target","nameLocation":"4732:6:37","nodeType":"VariableDeclaration","scope":4764,"src":"4724:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4746,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4749,"mutability":"mutable","name":"data","nameLocation":"4753:4:37","nodeType":"VariableDeclaration","scope":4764,"src":"4740:17:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4748,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:37","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4751,"mutability":"mutable","name":"value","nameLocation":"4767:5:37","nodeType":"VariableDeclaration","scope":4764,"src":"4759:13:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4750,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:37"},"returnParameters":{"id":4755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4764,"src":"4792:12:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4753,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:37","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:37"},"scope":4984,"src":"4693:224:37","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4807,"nodeType":"Block","src":"5344:267:37","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4781,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:37","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$4984","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$4984","typeString":"library Address"}],"id":4780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:37","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4779,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:37","typeDescriptions":{}}},"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5362:13:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5376:7:37","memberName":"balance","nodeType":"MemberAccess","src":"5362:21:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"5387:5:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":4786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:37","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":4778,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:37","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:81:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4788,"nodeType":"ExpressionStatement","src":"5354:81:37"},{"assignments":[4790,4792],"declarations":[{"constant":false,"id":4790,"mutability":"mutable","name":"success","nameLocation":"5451:7:37","nodeType":"VariableDeclaration","scope":4807,"src":"5446:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4789,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4792,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:37","nodeType":"VariableDeclaration","scope":4807,"src":"5460:23:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4791,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:37","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4799,"initialValue":{"arguments":[{"id":4797,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"5513:4:37","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4793,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"5487:6:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5494:4:37","memberName":"call","nodeType":"MemberAccess","src":"5487:11:37","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":4795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"5506:5:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:37","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5487:31:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:37"},{"expression":{"arguments":[{"id":4801,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"5562:6:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4802,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4790,"src":"5570:7:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4803,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"5579:10:37","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4804,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4773,"src":"5591:12:37","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4800,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"5535:26:37","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":4805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:69:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4777,"id":4806,"nodeType":"Return","src":"5528:76:37"}]},"documentation":{"id":4765,"nodeType":"StructuredDocumentation","src":"4923:237:37","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":4808,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:37","nodeType":"FunctionDefinition","parameters":{"id":4774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4767,"mutability":"mutable","name":"target","nameLocation":"5213:6:37","nodeType":"VariableDeclaration","scope":4808,"src":"5205:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4766,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4769,"mutability":"mutable","name":"data","nameLocation":"5242:4:37","nodeType":"VariableDeclaration","scope":4808,"src":"5229:17:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4768,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:37","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4771,"mutability":"mutable","name":"value","nameLocation":"5264:5:37","nodeType":"VariableDeclaration","scope":4808,"src":"5256:13:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4770,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4773,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:37","nodeType":"VariableDeclaration","scope":4808,"src":"5279:26:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4772,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:37","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:37"},"returnParameters":{"id":4777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4808,"src":"5330:12:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4775,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:37","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:37"},"scope":4984,"src":"5165:446:37","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4824,"nodeType":"Block","src":"5888:97:37","statements":[{"expression":{"arguments":[{"id":4819,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4811,"src":"5924:6:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4820,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"5932:4:37","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":4821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:37","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":4818,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[4825,4854],"referencedDeclaration":4854,"src":"5905:18:37","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:73:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4817,"id":4823,"nodeType":"Return","src":"5898:80:37"}]},"documentation":{"id":4809,"nodeType":"StructuredDocumentation","src":"5617:166:37","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":4825,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:37","nodeType":"FunctionDefinition","parameters":{"id":4814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4811,"mutability":"mutable","name":"target","nameLocation":"5824:6:37","nodeType":"VariableDeclaration","scope":4825,"src":"5816:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4810,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4813,"mutability":"mutable","name":"data","nameLocation":"5845:4:37","nodeType":"VariableDeclaration","scope":4825,"src":"5832:17:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4812,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:37","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:37"},"returnParameters":{"id":4817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4825,"src":"5874:12:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4815,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:37","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:37"},"scope":4984,"src":"5788:197:37","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4853,"nodeType":"Block","src":"6327:168:37","statements":[{"assignments":[4838,4840],"declarations":[{"constant":false,"id":4838,"mutability":"mutable","name":"success","nameLocation":"6343:7:37","nodeType":"VariableDeclaration","scope":4853,"src":"6338:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4837,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4840,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:37","nodeType":"VariableDeclaration","scope":4853,"src":"6352:23:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4839,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:37","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4845,"initialValue":{"arguments":[{"id":4843,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"6397:4:37","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4841,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"6379:6:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6386:10:37","memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:37","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:23:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:37"},{"expression":{"arguments":[{"id":4847,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"6446:6:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4848,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"6454:7:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4849,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"6463:10:37","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4850,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4832,"src":"6475:12:37","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4846,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"6419:26:37","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:69:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4836,"id":4852,"nodeType":"Return","src":"6412:76:37"}]},"documentation":{"id":4826,"nodeType":"StructuredDocumentation","src":"5991:173:37","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":4854,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:37","nodeType":"FunctionDefinition","parameters":{"id":4833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4828,"mutability":"mutable","name":"target","nameLocation":"6214:6:37","nodeType":"VariableDeclaration","scope":4854,"src":"6206:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4827,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4830,"mutability":"mutable","name":"data","nameLocation":"6243:4:37","nodeType":"VariableDeclaration","scope":4854,"src":"6230:17:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4829,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:37","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4832,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:37","nodeType":"VariableDeclaration","scope":4854,"src":"6257:26:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4831,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:37","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:37"},"returnParameters":{"id":4836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4854,"src":"6313:12:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4834,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:37","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:37"},"scope":4984,"src":"6169:326:37","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4870,"nodeType":"Block","src":"6771:101:37","statements":[{"expression":{"arguments":[{"id":4865,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"6809:6:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4866,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4859,"src":"6817:4:37","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":4867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:37","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":4864,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[4871,4900],"referencedDeclaration":4900,"src":"6788:20:37","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6788:77:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4863,"id":4869,"nodeType":"Return","src":"6781:84:37"}]},"documentation":{"id":4855,"nodeType":"StructuredDocumentation","src":"6501:168:37","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":4871,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:37","nodeType":"FunctionDefinition","parameters":{"id":4860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4857,"mutability":"mutable","name":"target","nameLocation":"6712:6:37","nodeType":"VariableDeclaration","scope":4871,"src":"6704:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4856,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4859,"mutability":"mutable","name":"data","nameLocation":"6733:4:37","nodeType":"VariableDeclaration","scope":4871,"src":"6720:17:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4858,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:37","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:37"},"returnParameters":{"id":4863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4871,"src":"6757:12:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4861,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:37","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:37"},"scope":4984,"src":"6674:198:37","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4899,"nodeType":"Block","src":"7213:170:37","statements":[{"assignments":[4884,4886],"declarations":[{"constant":false,"id":4884,"mutability":"mutable","name":"success","nameLocation":"7229:7:37","nodeType":"VariableDeclaration","scope":4899,"src":"7224:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4883,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4886,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:37","nodeType":"VariableDeclaration","scope":4899,"src":"7238:23:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4885,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:37","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4891,"initialValue":{"arguments":[{"id":4889,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"7285:4:37","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4887,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"7265:6:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7272:12:37","memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:37","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:25:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:37"},{"expression":{"arguments":[{"id":4893,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"7334:6:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4894,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"7342:7:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4895,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4886,"src":"7351:10:37","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4896,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"7363:12:37","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4892,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"7307:26:37","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7307:69:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4882,"id":4898,"nodeType":"Return","src":"7300:76:37"}]},"documentation":{"id":4872,"nodeType":"StructuredDocumentation","src":"6878:175:37","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":4900,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:37","nodeType":"FunctionDefinition","parameters":{"id":4879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4874,"mutability":"mutable","name":"target","nameLocation":"7105:6:37","nodeType":"VariableDeclaration","scope":4900,"src":"7097:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4873,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4876,"mutability":"mutable","name":"data","nameLocation":"7134:4:37","nodeType":"VariableDeclaration","scope":4900,"src":"7121:17:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4875,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:37","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4878,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:37","nodeType":"VariableDeclaration","scope":4900,"src":"7148:26:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4877,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:37","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:37"},"returnParameters":{"id":4882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4900,"src":"7199:12:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4880,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:37","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:37"},"scope":4984,"src":"7058:325:37","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4938,"nodeType":"Block","src":"7865:434:37","statements":[{"condition":{"id":4914,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4905,"src":"7879:7:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4936,"nodeType":"Block","src":"8235:58:37","statements":[{"expression":{"arguments":[{"id":4932,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"8257:10:37","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4933,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4909,"src":"8269:12:37","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4931,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4983,"src":"8249:7:37","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":4934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8249:33:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4935,"nodeType":"ExpressionStatement","src":"8249:33:37"}]},"id":4937,"nodeType":"IfStatement","src":"7875:418:37","trueBody":{"id":4930,"nodeType":"Block","src":"7888:341:37","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4915,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"7906:10:37","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7917:6:37","memberName":"length","nodeType":"MemberAccess","src":"7906:17:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4927,"nodeType":"IfStatement","src":"7902:286:37","trueBody":{"id":4926,"nodeType":"Block","src":"7930:258:37","statements":[{"expression":{"arguments":[{"arguments":[{"id":4921,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4903,"src":"8132:6:37","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4920,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"8121:10:37","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8121:18:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":4923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:37","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":4919,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:37","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8113:60:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4925,"nodeType":"ExpressionStatement","src":"8113:60:37"}]}},{"expression":{"id":4928,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"8208:10:37","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4913,"id":4929,"nodeType":"Return","src":"8201:17:37"}]}}]},"documentation":{"id":4901,"nodeType":"StructuredDocumentation","src":"7389:277:37","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":4939,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:37","nodeType":"FunctionDefinition","parameters":{"id":4910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4903,"mutability":"mutable","name":"target","nameLocation":"7724:6:37","nodeType":"VariableDeclaration","scope":4939,"src":"7716:14:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4902,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:37","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4905,"mutability":"mutable","name":"success","nameLocation":"7745:7:37","nodeType":"VariableDeclaration","scope":4939,"src":"7740:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4904,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4907,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:37","nodeType":"VariableDeclaration","scope":4939,"src":"7762:23:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4906,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:37","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4909,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:37","nodeType":"VariableDeclaration","scope":4939,"src":"7795:26:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4908,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:37","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:37"},"returnParameters":{"id":4913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4939,"src":"7851:12:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4911,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:37","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:37"},"scope":4984,"src":"7671:628:37","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4962,"nodeType":"Block","src":"8680:135:37","statements":[{"condition":{"id":4951,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4942,"src":"8694:7:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4960,"nodeType":"Block","src":"8751:58:37","statements":[{"expression":{"arguments":[{"id":4956,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"8773:10:37","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4957,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4946,"src":"8785:12:37","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4955,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4983,"src":"8765:7:37","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":4958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8765:33:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4959,"nodeType":"ExpressionStatement","src":"8765:33:37"}]},"id":4961,"nodeType":"IfStatement","src":"8690:119:37","trueBody":{"id":4954,"nodeType":"Block","src":"8703:42:37","statements":[{"expression":{"id":4952,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"8724:10:37","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4950,"id":4953,"nodeType":"Return","src":"8717:17:37"}]}}]},"documentation":{"id":4940,"nodeType":"StructuredDocumentation","src":"8305:210:37","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":4963,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:37","nodeType":"FunctionDefinition","parameters":{"id":4947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4942,"mutability":"mutable","name":"success","nameLocation":"8560:7:37","nodeType":"VariableDeclaration","scope":4963,"src":"8555:12:37","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4941,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4944,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:37","nodeType":"VariableDeclaration","scope":4963,"src":"8577:23:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4943,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:37","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4946,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:37","nodeType":"VariableDeclaration","scope":4963,"src":"8610:26:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4945,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:37","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:37"},"returnParameters":{"id":4950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4949,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4963,"src":"8666:12:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4948,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:37","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:37"},"scope":4984,"src":"8520:295:37","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4982,"nodeType":"Block","src":"8904:457:37","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4970,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4965,"src":"8980:10:37","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8991:6:37","memberName":"length","nodeType":"MemberAccess","src":"8980:17:37","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:37","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:37","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4980,"nodeType":"Block","src":"9310:45:37","statements":[{"expression":{"arguments":[{"id":4977,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4967,"src":"9331:12:37","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4976,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:37","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":4978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9324:20:37","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4979,"nodeType":"ExpressionStatement","src":"9324:20:37"}]},"id":4981,"nodeType":"IfStatement","src":"8976:379:37","trueBody":{"id":4975,"nodeType":"Block","src":"9003:301:37","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:37","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:37","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:37"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:37"},"nodeType":"YulFunctionCall","src":"9202:17:37"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:37","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:37","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:37"},"nodeType":"YulFunctionCall","src":"9243:19:37"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:37"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:37"},"nodeType":"YulFunctionCall","src":"9236:44:37"},"nodeType":"YulExpressionStatement","src":"9236:44:37"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":4965,"isOffset":false,"isSlot":false,"src":"9208:10:37","valueSize":1},{"declaration":4965,"isOffset":false,"isSlot":false,"src":"9251:10:37","valueSize":1}],"id":4974,"nodeType":"InlineAssembly","src":"9152:142:37"}]}}]},"id":4983,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:37","nodeType":"FunctionDefinition","parameters":{"id":4968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4965,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:37","nodeType":"VariableDeclaration","scope":4983,"src":"8838:23:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4964,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:37","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4967,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:37","nodeType":"VariableDeclaration","scope":4983,"src":"8863:26:37","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4966,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:37","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:37"},"returnParameters":{"id":4969,"nodeType":"ParameterList","parameters":[],"src":"8904:0:37"},"scope":4984,"src":"8821:540:37","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4985,"src":"194:9169:37","usedErrors":[],"usedEvents":[]}],"src":"101:9263:37"},"id":37},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[5006]},"id":5007,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4986,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:38"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":4987,"nodeType":"StructuredDocumentation","src":"111:496:38","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":5006,"linearizedBaseContracts":[5006],"name":"Context","nameLocation":"626:7:38","nodeType":"ContractDefinition","nodes":[{"body":{"id":4995,"nodeType":"Block","src":"702:34:38","statements":[{"expression":{"expression":{"id":4992,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:38","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:38","memberName":"sender","nodeType":"MemberAccess","src":"719:10:38","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4991,"id":4994,"nodeType":"Return","src":"712:17:38"}]},"id":4996,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:38","nodeType":"FunctionDefinition","parameters":{"id":4988,"nodeType":"ParameterList","parameters":[],"src":"659:2:38"},"returnParameters":{"id":4991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4996,"src":"693:7:38","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4989,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:38","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:38"},"scope":5006,"src":"640:96:38","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":5004,"nodeType":"Block","src":"809:32:38","statements":[{"expression":{"expression":{"id":5001,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:38","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:38","memberName":"data","nodeType":"MemberAccess","src":"826:8:38","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":5000,"id":5003,"nodeType":"Return","src":"819:15:38"}]},"id":5005,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:38","nodeType":"FunctionDefinition","parameters":{"id":4997,"nodeType":"ParameterList","parameters":[],"src":"759:2:38"},"returnParameters":{"id":5000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5005,"src":"793:14:38","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4998,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:38","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:38"},"scope":5006,"src":"742:99:38","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":5007,"src":"608:235:38","usedErrors":[],"usedEvents":[]}],"src":"86:758:38"},"id":38},"@openzeppelin/contracts/utils/Create2.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Create2.sol","exportedSymbols":{"Create2":[5087]},"id":5088,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5008,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:39"},{"abstract":false,"baseContracts":[],"canonicalName":"Create2","contractDependencies":[],"contractKind":"library","documentation":{"id":5009,"nodeType":"StructuredDocumentation","src":"126:367:39","text":" @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n `CREATE2` can be used to compute in advance the address where a smart\n contract will be deployed, which allows for interesting new mechanisms known\n as 'counterfactual interactions'.\n See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n information."},"fullyImplemented":true,"id":5087,"linearizedBaseContracts":[5087],"name":"Create2","nameLocation":"502:7:39","nodeType":"ContractDefinition","nodes":[{"body":{"id":5051,"nodeType":"Block","src":"1182:383:39","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":5024,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1208:4:39","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$5087","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$5087","typeString":"library Create2"}],"id":5023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1200:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5022,"name":"address","nodeType":"ElementaryTypeName","src":"1200:7:39","typeDescriptions":{}}},"id":5025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1200:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1214:7:39","memberName":"balance","nodeType":"MemberAccess","src":"1200:21:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5027,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5012,"src":"1225:6:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1200:31:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"437265617465323a20696e73756666696369656e742062616c616e6365","id":5029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1233:31:39","typeDescriptions":{"typeIdentifier":"t_stringliteral_f94f9c62541b73155a9def26a7988ac5579c2c6b698df8f608ced5572b7d72ca","typeString":"literal_string \"Create2: insufficient balance\""},"value":"Create2: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f94f9c62541b73155a9def26a7988ac5579c2c6b698df8f608ced5572b7d72ca","typeString":"literal_string \"Create2: insufficient balance\""}],"id":5021,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1192:7:39","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1192:73:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5031,"nodeType":"ExpressionStatement","src":"1192:73:39"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5033,"name":"bytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"1283:8:39","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1292:6:39","memberName":"length","nodeType":"MemberAccess","src":"1283:15:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1302:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1283:20:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"437265617465323a2062797465636f6465206c656e677468206973207a65726f","id":5037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1305:34:39","typeDescriptions":{"typeIdentifier":"t_stringliteral_124767115c09b0dd37c31c42ddb030d84459c933a30879cc32c4c922ae5928f0","typeString":"literal_string \"Create2: bytecode length is zero\""},"value":"Create2: bytecode length is zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_124767115c09b0dd37c31c42ddb030d84459c933a30879cc32c4c922ae5928f0","typeString":"literal_string \"Create2: bytecode length is zero\""}],"id":5032,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1275:7:39","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1275:65:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5039,"nodeType":"ExpressionStatement","src":"1275:65:39"},{"AST":{"nodeType":"YulBlock","src":"1402:91:39","statements":[{"nodeType":"YulAssignment","src":"1416:67:39","value":{"arguments":[{"name":"amount","nodeType":"YulIdentifier","src":"1432:6:39"},{"arguments":[{"name":"bytecode","nodeType":"YulIdentifier","src":"1444:8:39"},{"kind":"number","nodeType":"YulLiteral","src":"1454:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1440:3:39"},"nodeType":"YulFunctionCall","src":"1440:19:39"},{"arguments":[{"name":"bytecode","nodeType":"YulIdentifier","src":"1467:8:39"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1461:5:39"},"nodeType":"YulFunctionCall","src":"1461:15:39"},{"name":"salt","nodeType":"YulIdentifier","src":"1478:4:39"}],"functionName":{"name":"create2","nodeType":"YulIdentifier","src":"1424:7:39"},"nodeType":"YulFunctionCall","src":"1424:59:39"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"1416:4:39"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":5019,"isOffset":false,"isSlot":false,"src":"1416:4:39","valueSize":1},{"declaration":5012,"isOffset":false,"isSlot":false,"src":"1432:6:39","valueSize":1},{"declaration":5016,"isOffset":false,"isSlot":false,"src":"1444:8:39","valueSize":1},{"declaration":5016,"isOffset":false,"isSlot":false,"src":"1467:8:39","valueSize":1},{"declaration":5014,"isOffset":false,"isSlot":false,"src":"1478:4:39","valueSize":1}],"id":5040,"nodeType":"InlineAssembly","src":"1393:100:39"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5042,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"1510:4:39","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1526:1:39","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1518:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5043,"name":"address","nodeType":"ElementaryTypeName","src":"1518:7:39","typeDescriptions":{}}},"id":5046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1518:10:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1510:18:39","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"437265617465323a204661696c6564206f6e206465706c6f79","id":5048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1530:27:39","typeDescriptions":{"typeIdentifier":"t_stringliteral_87142438d464a3cd804331cca8480b31569380ef25d1f39b80404975699f0676","typeString":"literal_string \"Create2: Failed on deploy\""},"value":"Create2: Failed on deploy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87142438d464a3cd804331cca8480b31569380ef25d1f39b80404975699f0676","typeString":"literal_string \"Create2: Failed on deploy\""}],"id":5041,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1502:7:39","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1502:56:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5050,"nodeType":"ExpressionStatement","src":"1502:56:39"}]},"documentation":{"id":5010,"nodeType":"StructuredDocumentation","src":"516:560:39","text":" @dev Deploys a contract using `CREATE2`. The address where the contract\n will be deployed can be known in advance via {computeAddress}.\n The bytecode for a contract can be obtained from Solidity with\n `type(contractName).creationCode`.\n Requirements:\n - `bytecode` must not be empty.\n - `salt` must have not been used for `bytecode` already.\n - the factory must have a balance of at least `amount`.\n - if `amount` is non-zero, `bytecode` must have a `payable` constructor."},"id":5052,"implemented":true,"kind":"function","modifiers":[],"name":"deploy","nameLocation":"1090:6:39","nodeType":"FunctionDefinition","parameters":{"id":5017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5012,"mutability":"mutable","name":"amount","nameLocation":"1105:6:39","nodeType":"VariableDeclaration","scope":5052,"src":"1097:14:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5011,"name":"uint256","nodeType":"ElementaryTypeName","src":"1097:7:39","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5014,"mutability":"mutable","name":"salt","nameLocation":"1121:4:39","nodeType":"VariableDeclaration","scope":5052,"src":"1113:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5013,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1113:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5016,"mutability":"mutable","name":"bytecode","nameLocation":"1140:8:39","nodeType":"VariableDeclaration","scope":5052,"src":"1127:21:39","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5015,"name":"bytes","nodeType":"ElementaryTypeName","src":"1127:5:39","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1096:53:39"},"returnParameters":{"id":5020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5019,"mutability":"mutable","name":"addr","nameLocation":"1176:4:39","nodeType":"VariableDeclaration","scope":5052,"src":"1168:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5018,"name":"address","nodeType":"ElementaryTypeName","src":"1168:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1167:14:39"},"scope":5087,"src":"1081:484:39","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5071,"nodeType":"Block","src":"1861:73:39","statements":[{"expression":{"arguments":[{"id":5063,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5055,"src":"1893:4:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5064,"name":"bytecodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"1899:12:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":5067,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1921:4:39","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$5087","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$5087","typeString":"library Create2"}],"id":5066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1913:7:39","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5065,"name":"address","nodeType":"ElementaryTypeName","src":"1913:7:39","typeDescriptions":{}}},"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1913:13:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5062,"name":"computeAddress","nodeType":"Identifier","overloadedDeclarations":[5072,5086],"referencedDeclaration":5086,"src":"1878:14:39","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (bytes32,bytes32,address) pure returns (address)"}},"id":5069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1878:49:39","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5061,"id":5070,"nodeType":"Return","src":"1871:56:39"}]},"documentation":{"id":5053,"nodeType":"StructuredDocumentation","src":"1571:193:39","text":" @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n `bytecodeHash` or `salt` will result in a new destination address."},"id":5072,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nameLocation":"1778:14:39","nodeType":"FunctionDefinition","parameters":{"id":5058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5055,"mutability":"mutable","name":"salt","nameLocation":"1801:4:39","nodeType":"VariableDeclaration","scope":5072,"src":"1793:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5054,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1793:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5057,"mutability":"mutable","name":"bytecodeHash","nameLocation":"1815:12:39","nodeType":"VariableDeclaration","scope":5072,"src":"1807:20:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5056,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1807:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1792:36:39"},"returnParameters":{"id":5061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5072,"src":"1852:7:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5059,"name":"address","nodeType":"ElementaryTypeName","src":"1852:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1851:9:39"},"scope":5087,"src":"1769:165:39","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5085,"nodeType":"Block","src":"2292:1657:39","statements":[{"AST":{"nodeType":"YulBlock","src":"2354:1589:39","statements":[{"nodeType":"YulVariableDeclaration","src":"2368:22:39","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2385:4:39","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2379:5:39"},"nodeType":"YulFunctionCall","src":"2379:11:39"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"2372:3:39","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3592:3:39"},{"kind":"number","nodeType":"YulLiteral","src":"3597:4:39","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3588:3:39"},"nodeType":"YulFunctionCall","src":"3588:14:39"},{"name":"bytecodeHash","nodeType":"YulIdentifier","src":"3604:12:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3581:6:39"},"nodeType":"YulFunctionCall","src":"3581:36:39"},"nodeType":"YulExpressionStatement","src":"3581:36:39"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3641:3:39"},{"kind":"number","nodeType":"YulLiteral","src":"3646:4:39","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3637:3:39"},"nodeType":"YulFunctionCall","src":"3637:14:39"},{"name":"salt","nodeType":"YulIdentifier","src":"3653:4:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3630:6:39"},"nodeType":"YulFunctionCall","src":"3630:28:39"},"nodeType":"YulExpressionStatement","src":"3630:28:39"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3678:3:39"},{"name":"deployer","nodeType":"YulIdentifier","src":"3683:8:39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3671:6:39"},"nodeType":"YulFunctionCall","src":"3671:21:39"},"nodeType":"YulExpressionStatement","src":"3671:21:39"},{"nodeType":"YulVariableDeclaration","src":"3754:27:39","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3771:3:39"},{"kind":"number","nodeType":"YulLiteral","src":"3776:4:39","type":"","value":"0x0b"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:39"},"nodeType":"YulFunctionCall","src":"3767:14:39"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"3758:5:39","type":""}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3880:5:39"},{"kind":"number","nodeType":"YulLiteral","src":"3887:4:39","type":"","value":"0xff"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"3872:7:39"},"nodeType":"YulFunctionCall","src":"3872:20:39"},"nodeType":"YulExpressionStatement","src":"3872:20:39"},{"nodeType":"YulAssignment","src":"3905:28:39","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3923:5:39"},{"kind":"number","nodeType":"YulLiteral","src":"3930:2:39","type":"","value":"85"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3913:9:39"},"nodeType":"YulFunctionCall","src":"3913:20:39"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"3905:4:39"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":5082,"isOffset":false,"isSlot":false,"src":"3905:4:39","valueSize":1},{"declaration":5077,"isOffset":false,"isSlot":false,"src":"3604:12:39","valueSize":1},{"declaration":5079,"isOffset":false,"isSlot":false,"src":"3683:8:39","valueSize":1},{"declaration":5075,"isOffset":false,"isSlot":false,"src":"3653:4:39","valueSize":1}],"id":5084,"nodeType":"InlineAssembly","src":"2345:1598:39"}]},"documentation":{"id":5073,"nodeType":"StructuredDocumentation","src":"1940:232:39","text":" @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}."},"id":5086,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nameLocation":"2186:14:39","nodeType":"FunctionDefinition","parameters":{"id":5080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5075,"mutability":"mutable","name":"salt","nameLocation":"2209:4:39","nodeType":"VariableDeclaration","scope":5086,"src":"2201:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5074,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2201:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5077,"mutability":"mutable","name":"bytecodeHash","nameLocation":"2223:12:39","nodeType":"VariableDeclaration","scope":5086,"src":"2215:20:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5076,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2215:7:39","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5079,"mutability":"mutable","name":"deployer","nameLocation":"2245:8:39","nodeType":"VariableDeclaration","scope":5086,"src":"2237:16:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5078,"name":"address","nodeType":"ElementaryTypeName","src":"2237:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2200:54:39"},"returnParameters":{"id":5083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5082,"mutability":"mutable","name":"addr","nameLocation":"2286:4:39","nodeType":"VariableDeclaration","scope":5086,"src":"2278:12:39","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5081,"name":"address","nodeType":"ElementaryTypeName","src":"2278:7:39","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2277:14:39"},"scope":5087,"src":"2177:1772:39","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5088,"src":"494:3457:39","usedErrors":[],"usedEvents":[]}],"src":"101:3851:39"},"id":39},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[6778],"SignedMath":[6883],"Strings":[5316]},"id":5317,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5089,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:40"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":5090,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5317,"sourceUnit":6779,"src":"126:25:40","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":5091,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5317,"sourceUnit":6884,"src":"152:31:40","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":5092,"nodeType":"StructuredDocumentation","src":"185:34:40","text":" @dev String operations."},"fullyImplemented":true,"id":5316,"linearizedBaseContracts":[5316],"name":"Strings","nameLocation":"228:7:40","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":5095,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:40","nodeType":"VariableDeclaration","scope":5316,"src":"242:54:40","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":5093,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:40","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":5094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:40","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":5098,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:40","nodeType":"VariableDeclaration","scope":5316,"src":"302:43:40","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5096,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:40","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":5097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:40","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":5145,"nodeType":"Block","src":"518:625:40","statements":[{"id":5144,"nodeType":"UncheckedBlock","src":"528:609:40","statements":[{"assignments":[5107],"declarations":[{"constant":false,"id":5107,"mutability":"mutable","name":"length","nameLocation":"560:6:40","nodeType":"VariableDeclaration","scope":5144,"src":"552:14:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5106,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5114,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"580:5:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5108,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6778,"src":"569:4:40","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6778_$","typeString":"type(library Math)"}},"id":5109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:40","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":6615,"src":"569:10:40","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:40","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:40"},{"assignments":[5116],"declarations":[{"constant":false,"id":5116,"mutability":"mutable","name":"buffer","nameLocation":"618:6:40","nodeType":"VariableDeclaration","scope":5144,"src":"604:20:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5115,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:40","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":5121,"initialValue":{"arguments":[{"id":5119,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"638:6:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:40","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":5117,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:40","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":5120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:40"},{"assignments":[5123],"declarations":[{"constant":false,"id":5123,"mutability":"mutable","name":"ptr","nameLocation":"667:3:40","nodeType":"VariableDeclaration","scope":5144,"src":"659:11:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5122,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5124,"nodeType":"VariableDeclarationStatement","src":"659:11:40"},{"AST":{"nodeType":"YulBlock","src":"740:67:40","statements":[{"nodeType":"YulAssignment","src":"758:35:40","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:40"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:40","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:40"},"nodeType":"YulFunctionCall","src":"777:15:40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:40"},"nodeType":"YulFunctionCall","src":"765:28:40"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:40"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":5116,"isOffset":false,"isSlot":false,"src":"769:6:40","valueSize":1},{"declaration":5107,"isOffset":false,"isSlot":false,"src":"785:6:40","valueSize":1},{"declaration":5123,"isOffset":false,"isSlot":false,"src":"758:3:40","valueSize":1}],"id":5125,"nodeType":"InlineAssembly","src":"731:76:40"},{"body":{"id":5140,"nodeType":"Block","src":"833:267:40","statements":[{"expression":{"id":5128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:40","subExpression":{"id":5127,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"851:3:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5129,"nodeType":"ExpressionStatement","src":"851:5:40"},{"AST":{"nodeType":"YulBlock","src":"934:84:40","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:40"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:40"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:40","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:40"},"nodeType":"YulFunctionCall","src":"974:14:40"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:40"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:40"},"nodeType":"YulFunctionCall","src":"969:30:40"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:40"},"nodeType":"YulFunctionCall","src":"956:44:40"},"nodeType":"YulExpressionStatement","src":"956:44:40"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":5095,"isOffset":false,"isSlot":false,"src":"990:8:40","valueSize":1},{"declaration":5123,"isOffset":false,"isSlot":false,"src":"964:3:40","valueSize":1},{"declaration":5101,"isOffset":false,"isSlot":false,"src":"978:5:40","valueSize":1}],"id":5130,"nodeType":"InlineAssembly","src":"925:93:40"},{"expression":{"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"1035:5:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":5132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:40","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5134,"nodeType":"ExpressionStatement","src":"1035:11:40"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"1068:5:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:40","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5139,"nodeType":"IfStatement","src":"1064:21:40","trueBody":{"id":5138,"nodeType":"Break","src":"1080:5:40"}}]},"condition":{"hexValue":"74727565","id":5126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":5141,"nodeType":"WhileStatement","src":"820:280:40"},{"expression":{"id":5142,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5116,"src":"1120:6:40","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5105,"id":5143,"nodeType":"Return","src":"1113:13:40"}]}]},"documentation":{"id":5099,"nodeType":"StructuredDocumentation","src":"352:90:40","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":5146,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:40","nodeType":"FunctionDefinition","parameters":{"id":5102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5101,"mutability":"mutable","name":"value","nameLocation":"473:5:40","nodeType":"VariableDeclaration","scope":5146,"src":"465:13:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5100,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:40"},"returnParameters":{"id":5105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5146,"src":"503:13:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5103,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:40","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:40"},"scope":5316,"src":"447:696:40","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5173,"nodeType":"Block","src":"1313:103:40","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5149,"src":"1354:5:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:40","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":5162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:40","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:40","trueExpression":{"hexValue":"2d","id":5161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:40","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":5167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5149,"src":"1400:5:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":5165,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6883,"src":"1385:10:40","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6883_$","typeString":"type(library SignedMath)"}},"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:40","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6882,"src":"1385:14:40","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":5168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5164,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[5146,5174],"referencedDeclaration":5146,"src":"1376:8:40","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":5169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":5156,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:40","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:40","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:40","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:40","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5154,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:40","typeDescriptions":{}}},"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5153,"id":5172,"nodeType":"Return","src":"1323:86:40"}]},"documentation":{"id":5147,"nodeType":"StructuredDocumentation","src":"1149:89:40","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":5174,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:40","nodeType":"FunctionDefinition","parameters":{"id":5150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5149,"mutability":"mutable","name":"value","nameLocation":"1268:5:40","nodeType":"VariableDeclaration","scope":5174,"src":"1261:12:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5148,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:40","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:40"},"returnParameters":{"id":5153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5174,"src":"1298:13:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5151,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:40","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:40"},"scope":5316,"src":"1243:173:40","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5193,"nodeType":"Block","src":"1595:100:40","statements":[{"id":5192,"nodeType":"UncheckedBlock","src":"1605:84:40","statements":[{"expression":{"arguments":[{"id":5183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"1648:5:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"1667:5:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5184,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6778,"src":"1655:4:40","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6778_$","typeString":"type(library Math)"}},"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:40","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":6738,"src":"1655:11:40","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:40","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5182,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[5194,5270,5290],"referencedDeclaration":5270,"src":"1636:11:40","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":5190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5181,"id":5191,"nodeType":"Return","src":"1629:49:40"}]}]},"documentation":{"id":5175,"nodeType":"StructuredDocumentation","src":"1422:94:40","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":5194,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:40","nodeType":"FunctionDefinition","parameters":{"id":5178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5177,"mutability":"mutable","name":"value","nameLocation":"1550:5:40","nodeType":"VariableDeclaration","scope":5194,"src":"1542:13:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5176,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:40"},"returnParameters":{"id":5181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5194,"src":"1580:13:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5179,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:40","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:40"},"scope":5316,"src":"1521:174:40","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5269,"nodeType":"Block","src":"1908:347:40","statements":[{"assignments":[5205],"declarations":[{"constant":false,"id":5205,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:40","nodeType":"VariableDeclaration","scope":5269,"src":"1918:19:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5204,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:40","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5214,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:40","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5209,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5199,"src":"1954:6:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":5211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:40","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:40","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5206,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:40","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:40"},{"expression":{"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5215,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"1975:6:40","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5217,"indexExpression":{"hexValue":"30","id":5216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:40","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:40","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":5218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:40","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:40","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5220,"nodeType":"ExpressionStatement","src":"1975:15:40"},{"expression":{"id":5225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5221,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"2000:6:40","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5223,"indexExpression":{"hexValue":"31","id":5222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:40","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:40","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":5224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:40","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:40","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5226,"nodeType":"ExpressionStatement","src":"2000:15:40"},{"body":{"id":5255,"nodeType":"Block","src":"2070:83:40","statements":[{"expression":{"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5241,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"2084:6:40","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5243,"indexExpression":{"id":5242,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"2091:1:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:40","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5244,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5095,"src":"2096:8:40","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":5248,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"2105:5:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":5246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:40","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:40","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:40","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5250,"nodeType":"ExpressionStatement","src":"2084:33:40"},{"expression":{"id":5253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"2131:5:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:40","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5254,"nodeType":"ExpressionStatement","src":"2131:11:40"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5235,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"2058:1:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":5236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:40","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5256,"initializationExpression":{"assignments":[5228],"declarations":[{"constant":false,"id":5228,"mutability":"mutable","name":"i","nameLocation":"2038:1:40","nodeType":"VariableDeclaration","scope":5256,"src":"2030:9:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5227,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5234,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:40","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5230,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5199,"src":"2046:6:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:40","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:40"},"loopExpression":{"expression":{"id":5239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:40","subExpression":{"id":5238,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"2067:1:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5240,"nodeType":"ExpressionStatement","src":"2065:3:40"},"nodeType":"ForStatement","src":"2025:128:40"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"2170:5:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:40","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":5261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:40","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":5257,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:40","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5263,"nodeType":"ExpressionStatement","src":"2162:55:40"},{"expression":{"arguments":[{"id":5266,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"2241:6:40","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:40","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5264,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:40","typeDescriptions":{}}},"id":5267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5203,"id":5268,"nodeType":"Return","src":"2227:21:40"}]},"documentation":{"id":5195,"nodeType":"StructuredDocumentation","src":"1701:112:40","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":5270,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:40","nodeType":"FunctionDefinition","parameters":{"id":5200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5197,"mutability":"mutable","name":"value","nameLocation":"1847:5:40","nodeType":"VariableDeclaration","scope":5270,"src":"1839:13:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5196,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5199,"mutability":"mutable","name":"length","nameLocation":"1862:6:40","nodeType":"VariableDeclaration","scope":5270,"src":"1854:14:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:40","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:40"},"returnParameters":{"id":5203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5270,"src":"1893:13:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5201,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:40","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:40"},"scope":5316,"src":"1818:437:40","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5289,"nodeType":"Block","src":"2480:76:40","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":5283,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5273,"src":"2525:4:40","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:40","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5281,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:40","typeDescriptions":{}}},"id":5284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:40","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5279,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:40","typeDescriptions":{}}},"id":5285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5286,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5098,"src":"2533:15:40","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":5278,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[5194,5270,5290],"referencedDeclaration":5270,"src":"2497:11:40","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":5287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5277,"id":5288,"nodeType":"Return","src":"2490:59:40"}]},"documentation":{"id":5271,"nodeType":"StructuredDocumentation","src":"2261:141:40","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":5290,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:40","nodeType":"FunctionDefinition","parameters":{"id":5274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5273,"mutability":"mutable","name":"addr","nameLocation":"2436:4:40","nodeType":"VariableDeclaration","scope":5290,"src":"2428:12:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5272,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:40","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:40"},"returnParameters":{"id":5277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5290,"src":"2465:13:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5275,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:40","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:40"},"scope":5316,"src":"2407:149:40","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5314,"nodeType":"Block","src":"2711:66:40","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":5312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":5303,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5293,"src":"2744:1:40","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:40","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5301,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:40","typeDescriptions":{}}},"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5300,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:40","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":5309,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5295,"src":"2767:1:40","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:40","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5307,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:40","typeDescriptions":{}}},"id":5310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5306,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:40","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:40","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5299,"id":5313,"nodeType":"Return","src":"2721:49:40"}]},"documentation":{"id":5291,"nodeType":"StructuredDocumentation","src":"2562:66:40","text":" @dev Returns true if the two strings are equal."},"id":5315,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:40","nodeType":"FunctionDefinition","parameters":{"id":5296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5293,"mutability":"mutable","name":"a","nameLocation":"2662:1:40","nodeType":"VariableDeclaration","scope":5315,"src":"2648:15:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5292,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:40","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5295,"mutability":"mutable","name":"b","nameLocation":"2679:1:40","nodeType":"VariableDeclaration","scope":5315,"src":"2665:15:40","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5294,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:40","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:40"},"returnParameters":{"id":5299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5315,"src":"2705:4:40","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5297,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:40","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:40"},"scope":5316,"src":"2633:144:40","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5317,"src":"220:2559:40","usedErrors":[],"usedEvents":[]}],"src":"101:2679:40"},"id":40},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[5682],"Math":[6778],"SignedMath":[6883],"Strings":[5316]},"id":5683,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5318,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:41"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":5319,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5683,"sourceUnit":5317,"src":"137:24:41","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":5320,"nodeType":"StructuredDocumentation","src":"163:205:41","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":5682,"linearizedBaseContracts":[5682],"name":"ECDSA","nameLocation":"377:5:41","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":5326,"members":[{"id":5321,"name":"NoError","nameLocation":"417:7:41","nodeType":"EnumValue","src":"417:7:41"},{"id":5322,"name":"InvalidSignature","nameLocation":"434:16:41","nodeType":"EnumValue","src":"434:16:41"},{"id":5323,"name":"InvalidSignatureLength","nameLocation":"460:22:41","nodeType":"EnumValue","src":"460:22:41"},{"id":5324,"name":"InvalidSignatureS","nameLocation":"492:17:41","nodeType":"EnumValue","src":"492:17:41"},{"id":5325,"name":"InvalidSignatureV","nameLocation":"519:17:41","nodeType":"EnumValue","src":"519:17:41"}],"name":"RecoverError","nameLocation":"394:12:41","nodeType":"EnumDefinition","src":"389:175:41"},{"body":{"id":5369,"nodeType":"Block","src":"624:457:41","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"},"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5332,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"638:5:41","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5333,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"647:12:41","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5326_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"660:7:41","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":5321,"src":"647:20:41","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"}},"src":"638:29:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"},"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5338,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"734:5:41","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5339,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"743:12:41","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5326_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"756:16:41","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":5322,"src":"743:29:41","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"}},"src":"734:38:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"},"id":5350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5347,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"843:5:41","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5348,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"852:12:41","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5326_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"865:22:41","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":5323,"src":"852:35:41","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"}},"src":"843:44:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"},"id":5359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5356,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5329,"src":"965:5:41","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5357,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"974:12:41","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5326_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"987:17:41","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":5324,"src":"974:30:41","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"}},"src":"965:39:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5365,"nodeType":"IfStatement","src":"961:114:41","trueBody":{"id":5364,"nodeType":"Block","src":"1006:69:41","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":5361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1027:36:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":5360,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1020:6:41","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":5362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1020:44:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5363,"nodeType":"ExpressionStatement","src":"1020:44:41"}]}},"id":5366,"nodeType":"IfStatement","src":"839:236:41","trueBody":{"id":5355,"nodeType":"Block","src":"889:66:41","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":5352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:33:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":5351,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"903:6:41","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":5353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"903:41:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5354,"nodeType":"ExpressionStatement","src":"903:41:41"}]}},"id":5367,"nodeType":"IfStatement","src":"730:345:41","trueBody":{"id":5346,"nodeType":"Block","src":"774:59:41","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":5343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:26:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":5342,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"788:6:41","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"788:34:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5345,"nodeType":"ExpressionStatement","src":"788:34:41"}]}},"id":5368,"nodeType":"IfStatement","src":"634:441:41","trueBody":{"id":5337,"nodeType":"Block","src":"669:55:41","statements":[{"functionReturnParameters":5331,"id":5336,"nodeType":"Return","src":"683:7:41"}]}}]},"id":5370,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"579:11:41","nodeType":"FunctionDefinition","parameters":{"id":5330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5329,"mutability":"mutable","name":"error","nameLocation":"604:5:41","nodeType":"VariableDeclaration","scope":5370,"src":"591:18:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5328,"nodeType":"UserDefinedTypeName","pathNode":{"id":5327,"name":"RecoverError","nameLocations":["591:12:41"],"nodeType":"IdentifierPath","referencedDeclaration":5326,"src":"591:12:41"},"referencedDeclaration":5326,"src":"591:12:41","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"590:20:41"},"returnParameters":{"id":5331,"nodeType":"ParameterList","parameters":[],"src":"624:0:41"},"scope":5682,"src":"570:511:41","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5415,"nodeType":"Block","src":"2249:626:41","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5383,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5375,"src":"2263:9:41","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2273:6:41","memberName":"length","nodeType":"MemberAccess","src":"2263:16:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":5385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2283:2:41","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2263:22:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5413,"nodeType":"Block","src":"2788:81:41","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":5407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2818:1:41","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2810:7:41","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5405,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:41","typeDescriptions":{}}},"id":5408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2810:10:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5409,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"2822:12:41","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5326_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:22:41","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":5323,"src":"2822:35:41","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"}}],"id":5411,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2809:49:41","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5326_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":5382,"id":5412,"nodeType":"Return","src":"2802:56:41"}]},"id":5414,"nodeType":"IfStatement","src":"2259:610:41","trueBody":{"id":5404,"nodeType":"Block","src":"2287:495:41","statements":[{"assignments":[5388],"declarations":[{"constant":false,"id":5388,"mutability":"mutable","name":"r","nameLocation":"2309:1:41","nodeType":"VariableDeclaration","scope":5404,"src":"2301:9:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5387,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2301:7:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5389,"nodeType":"VariableDeclarationStatement","src":"2301:9:41"},{"assignments":[5391],"declarations":[{"constant":false,"id":5391,"mutability":"mutable","name":"s","nameLocation":"2332:1:41","nodeType":"VariableDeclaration","scope":5404,"src":"2324:9:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5390,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5392,"nodeType":"VariableDeclarationStatement","src":"2324:9:41"},{"assignments":[5394],"declarations":[{"constant":false,"id":5394,"mutability":"mutable","name":"v","nameLocation":"2353:1:41","nodeType":"VariableDeclaration","scope":5404,"src":"2347:7:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5393,"name":"uint8","nodeType":"ElementaryTypeName","src":"2347:5:41","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5395,"nodeType":"VariableDeclarationStatement","src":"2347:7:41"},{"AST":{"nodeType":"YulBlock","src":"2555:171:41","statements":[{"nodeType":"YulAssignment","src":"2573:32:41","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2588:9:41"},{"kind":"number","nodeType":"YulLiteral","src":"2599:4:41","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:41"},"nodeType":"YulFunctionCall","src":"2584:20:41"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2578:5:41"},"nodeType":"YulFunctionCall","src":"2578:27:41"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2573:1:41"}]},{"nodeType":"YulAssignment","src":"2622:32:41","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2637:9:41"},{"kind":"number","nodeType":"YulLiteral","src":"2648:4:41","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2633:3:41"},"nodeType":"YulFunctionCall","src":"2633:20:41"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2627:5:41"},"nodeType":"YulFunctionCall","src":"2627:27:41"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2622:1:41"}]},{"nodeType":"YulAssignment","src":"2671:41:41","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2681:1:41","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2694:9:41"},{"kind":"number","nodeType":"YulLiteral","src":"2705:4:41","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2690:3:41"},"nodeType":"YulFunctionCall","src":"2690:20:41"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2684:5:41"},"nodeType":"YulFunctionCall","src":"2684:27:41"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2676:4:41"},"nodeType":"YulFunctionCall","src":"2676:36:41"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2671:1:41"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":5388,"isOffset":false,"isSlot":false,"src":"2573:1:41","valueSize":1},{"declaration":5391,"isOffset":false,"isSlot":false,"src":"2622:1:41","valueSize":1},{"declaration":5375,"isOffset":false,"isSlot":false,"src":"2588:9:41","valueSize":1},{"declaration":5375,"isOffset":false,"isSlot":false,"src":"2637:9:41","valueSize":1},{"declaration":5375,"isOffset":false,"isSlot":false,"src":"2694:9:41","valueSize":1},{"declaration":5394,"isOffset":false,"isSlot":false,"src":"2671:1:41","valueSize":1}],"id":5396,"nodeType":"InlineAssembly","src":"2546:180:41"},{"expression":{"arguments":[{"id":5398,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5373,"src":"2757:4:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5399,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5394,"src":"2763:1:41","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5400,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"2766:1:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5401,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5391,"src":"2769:1:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5397,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[5416,5490,5584],"referencedDeclaration":5584,"src":"2746:10:41","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$5326_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":5402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2746:25:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5326_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":5382,"id":5403,"nodeType":"Return","src":"2739:32:41"}]}}]},"documentation":{"id":5371,"nodeType":"StructuredDocumentation","src":"1087:1053:41","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":5416,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2154:10:41","nodeType":"FunctionDefinition","parameters":{"id":5376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5373,"mutability":"mutable","name":"hash","nameLocation":"2173:4:41","nodeType":"VariableDeclaration","scope":5416,"src":"2165:12:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5372,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5375,"mutability":"mutable","name":"signature","nameLocation":"2192:9:41","nodeType":"VariableDeclaration","scope":5416,"src":"2179:22:41","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5374,"name":"bytes","nodeType":"ElementaryTypeName","src":"2179:5:41","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2164:38:41"},"returnParameters":{"id":5382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5416,"src":"2226:7:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5377,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5416,"src":"2235:12:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5380,"nodeType":"UserDefinedTypeName","pathNode":{"id":5379,"name":"RecoverError","nameLocations":["2235:12:41"],"nodeType":"IdentifierPath","referencedDeclaration":5326,"src":"2235:12:41"},"referencedDeclaration":5326,"src":"2235:12:41","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2225:23:41"},"scope":5682,"src":"2145:730:41","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5442,"nodeType":"Block","src":"3748:140:41","statements":[{"assignments":[5427,5430],"declarations":[{"constant":false,"id":5427,"mutability":"mutable","name":"recovered","nameLocation":"3767:9:41","nodeType":"VariableDeclaration","scope":5442,"src":"3759:17:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5426,"name":"address","nodeType":"ElementaryTypeName","src":"3759:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5430,"mutability":"mutable","name":"error","nameLocation":"3791:5:41","nodeType":"VariableDeclaration","scope":5442,"src":"3778:18:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5429,"nodeType":"UserDefinedTypeName","pathNode":{"id":5428,"name":"RecoverError","nameLocations":["3778:12:41"],"nodeType":"IdentifierPath","referencedDeclaration":5326,"src":"3778:12:41"},"referencedDeclaration":5326,"src":"3778:12:41","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":5435,"initialValue":{"arguments":[{"id":5432,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5419,"src":"3811:4:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5433,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"3817:9:41","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5431,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[5416,5490,5584],"referencedDeclaration":5416,"src":"3800:10:41","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$5326_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":5434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3800:27:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5326_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3758:69:41"},{"expression":{"arguments":[{"id":5437,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"3849:5:41","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"}],"id":5436,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5370,"src":"3837:11:41","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$5326_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":5438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3837:18:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5439,"nodeType":"ExpressionStatement","src":"3837:18:41"},{"expression":{"id":5440,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5427,"src":"3872:9:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5425,"id":5441,"nodeType":"Return","src":"3865:16:41"}]},"documentation":{"id":5417,"nodeType":"StructuredDocumentation","src":"2881:775:41","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":5443,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3670:7:41","nodeType":"FunctionDefinition","parameters":{"id":5422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5419,"mutability":"mutable","name":"hash","nameLocation":"3686:4:41","nodeType":"VariableDeclaration","scope":5443,"src":"3678:12:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5418,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3678:7:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5421,"mutability":"mutable","name":"signature","nameLocation":"3705:9:41","nodeType":"VariableDeclaration","scope":5443,"src":"3692:22:41","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5420,"name":"bytes","nodeType":"ElementaryTypeName","src":"3692:5:41","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3677:38:41"},"returnParameters":{"id":5425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5443,"src":"3739:7:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5423,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3738:9:41"},"scope":5682,"src":"3661:227:41","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5489,"nodeType":"Block","src":"4245:203:41","statements":[{"assignments":[5459],"declarations":[{"constant":false,"id":5459,"mutability":"mutable","name":"s","nameLocation":"4263:1:41","nodeType":"VariableDeclaration","scope":5489,"src":"4255:9:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5458,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5466,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":5465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5460,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"4267:2:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":5463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4280:66:41","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":5462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4272:7:41","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5461,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4272:7:41","typeDescriptions":{}}},"id":5464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:75:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4267:80:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4255:92:41"},{"assignments":[5468],"declarations":[{"constant":false,"id":5468,"mutability":"mutable","name":"v","nameLocation":"4363:1:41","nodeType":"VariableDeclaration","scope":5489,"src":"4357:7:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5467,"name":"uint8","nodeType":"ElementaryTypeName","src":"4357:5:41","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5481,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5473,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"4382:2:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4374:7:41","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5471,"name":"uint256","nodeType":"ElementaryTypeName","src":"4374:7:41","typeDescriptions":{}}},"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4374:11:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4389:3:41","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4374:18:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5477,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4373:20:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":5478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4396:2:41","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4373:25:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4367:5:41","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5469,"name":"uint8","nodeType":"ElementaryTypeName","src":"4367:5:41","typeDescriptions":{}}},"id":5480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4367:32:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4357:42:41"},{"expression":{"arguments":[{"id":5483,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"4427:4:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5484,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5468,"src":"4433:1:41","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5485,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5448,"src":"4436:1:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5486,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5459,"src":"4439:1:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5482,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[5416,5490,5584],"referencedDeclaration":5584,"src":"4416:10:41","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$5326_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":5487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4416:25:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5326_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":5457,"id":5488,"nodeType":"Return","src":"4409:32:41"}]},"documentation":{"id":5444,"nodeType":"StructuredDocumentation","src":"3894:243:41","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":5490,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4151:10:41","nodeType":"FunctionDefinition","parameters":{"id":5451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5446,"mutability":"mutable","name":"hash","nameLocation":"4170:4:41","nodeType":"VariableDeclaration","scope":5490,"src":"4162:12:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5445,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4162:7:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5448,"mutability":"mutable","name":"r","nameLocation":"4184:1:41","nodeType":"VariableDeclaration","scope":5490,"src":"4176:9:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5447,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4176:7:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5450,"mutability":"mutable","name":"vs","nameLocation":"4195:2:41","nodeType":"VariableDeclaration","scope":5490,"src":"4187:10:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4187:7:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:37:41"},"returnParameters":{"id":5457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5490,"src":"4222:7:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5452,"name":"address","nodeType":"ElementaryTypeName","src":"4222:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5456,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5490,"src":"4231:12:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5455,"nodeType":"UserDefinedTypeName","pathNode":{"id":5454,"name":"RecoverError","nameLocations":["4231:12:41"],"nodeType":"IdentifierPath","referencedDeclaration":5326,"src":"4231:12:41"},"referencedDeclaration":5326,"src":"4231:12:41","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4221:23:41"},"scope":5682,"src":"4142:306:41","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5519,"nodeType":"Block","src":"4699:136:41","statements":[{"assignments":[5503,5506],"declarations":[{"constant":false,"id":5503,"mutability":"mutable","name":"recovered","nameLocation":"4718:9:41","nodeType":"VariableDeclaration","scope":5519,"src":"4710:17:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5502,"name":"address","nodeType":"ElementaryTypeName","src":"4710:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5506,"mutability":"mutable","name":"error","nameLocation":"4742:5:41","nodeType":"VariableDeclaration","scope":5519,"src":"4729:18:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5505,"nodeType":"UserDefinedTypeName","pathNode":{"id":5504,"name":"RecoverError","nameLocations":["4729:12:41"],"nodeType":"IdentifierPath","referencedDeclaration":5326,"src":"4729:12:41"},"referencedDeclaration":5326,"src":"4729:12:41","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":5512,"initialValue":{"arguments":[{"id":5508,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"4762:4:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5509,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5495,"src":"4768:1:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5510,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5497,"src":"4771:2:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5507,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[5416,5490,5584],"referencedDeclaration":5490,"src":"4751:10:41","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$5326_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":5511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4751:23:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5326_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4709:65:41"},{"expression":{"arguments":[{"id":5514,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5506,"src":"4796:5:41","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"}],"id":5513,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5370,"src":"4784:11:41","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$5326_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":5515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:18:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5516,"nodeType":"ExpressionStatement","src":"4784:18:41"},{"expression":{"id":5517,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"4819:9:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5501,"id":5518,"nodeType":"Return","src":"4812:16:41"}]},"documentation":{"id":5491,"nodeType":"StructuredDocumentation","src":"4454:154:41","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":5520,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4622:7:41","nodeType":"FunctionDefinition","parameters":{"id":5498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5493,"mutability":"mutable","name":"hash","nameLocation":"4638:4:41","nodeType":"VariableDeclaration","scope":5520,"src":"4630:12:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5492,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4630:7:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5495,"mutability":"mutable","name":"r","nameLocation":"4652:1:41","nodeType":"VariableDeclaration","scope":5520,"src":"4644:9:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5494,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4644:7:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5497,"mutability":"mutable","name":"vs","nameLocation":"4663:2:41","nodeType":"VariableDeclaration","scope":5520,"src":"4655:10:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5496,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4655:7:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4629:37:41"},"returnParameters":{"id":5501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5520,"src":"4690:7:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5499,"name":"address","nodeType":"ElementaryTypeName","src":"4690:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4689:9:41"},"scope":5682,"src":"4613:222:41","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5583,"nodeType":"Block","src":"5120:1345:41","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5539,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5529,"src":"6016:1:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6008:7:41","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5537,"name":"uint256","nodeType":"ElementaryTypeName","src":"6008:7:41","typeDescriptions":{}}},"id":5540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6008:10:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":5541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6021:66:41","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6008:79:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5552,"nodeType":"IfStatement","src":"6004:161:41","trueBody":{"id":5551,"nodeType":"Block","src":"6089:76:41","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":5545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6119:1:41","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6111:7:41","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5543,"name":"address","nodeType":"ElementaryTypeName","src":"6111:7:41","typeDescriptions":{}}},"id":5546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6111:10:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5547,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"6123:12:41","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5326_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6136:17:41","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":5324,"src":"6123:30:41","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"}}],"id":5549,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6110:44:41","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5326_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":5536,"id":5550,"nodeType":"Return","src":"6103:51:41"}]}},{"assignments":[5554],"declarations":[{"constant":false,"id":5554,"mutability":"mutable","name":"signer","nameLocation":"6267:6:41","nodeType":"VariableDeclaration","scope":5583,"src":"6259:14:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5553,"name":"address","nodeType":"ElementaryTypeName","src":"6259:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5561,"initialValue":{"arguments":[{"id":5556,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5523,"src":"6286:4:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5557,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5525,"src":"6292:1:41","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5558,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5527,"src":"6295:1:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5559,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5529,"src":"6298:1:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5555,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6276:9:41","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":5560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6276:24:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6259:41:41"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5562,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5554,"src":"6314:6:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6332:1:41","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6324:7:41","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5563,"name":"address","nodeType":"ElementaryTypeName","src":"6324:7:41","typeDescriptions":{}}},"id":5566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6324:10:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6314:20:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5577,"nodeType":"IfStatement","src":"6310:101:41","trueBody":{"id":5576,"nodeType":"Block","src":"6336:75:41","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":5570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6366:1:41","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6358:7:41","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5568,"name":"address","nodeType":"ElementaryTypeName","src":"6358:7:41","typeDescriptions":{}}},"id":5571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6358:10:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5572,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"6370:12:41","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5326_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6383:16:41","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":5322,"src":"6370:29:41","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"}}],"id":5574,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6357:43:41","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5326_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":5536,"id":5575,"nodeType":"Return","src":"6350:50:41"}]}},{"expression":{"components":[{"id":5578,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5554,"src":"6429:6:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5579,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5326,"src":"6437:12:41","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5326_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6450:7:41","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":5321,"src":"6437:20:41","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"}}],"id":5581,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6428:30:41","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5326_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":5536,"id":5582,"nodeType":"Return","src":"6421:37:41"}]},"documentation":{"id":5521,"nodeType":"StructuredDocumentation","src":"4841:163:41","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":5584,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5018:10:41","nodeType":"FunctionDefinition","parameters":{"id":5530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5523,"mutability":"mutable","name":"hash","nameLocation":"5037:4:41","nodeType":"VariableDeclaration","scope":5584,"src":"5029:12:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5522,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5029:7:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5525,"mutability":"mutable","name":"v","nameLocation":"5049:1:41","nodeType":"VariableDeclaration","scope":5584,"src":"5043:7:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5524,"name":"uint8","nodeType":"ElementaryTypeName","src":"5043:5:41","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5527,"mutability":"mutable","name":"r","nameLocation":"5060:1:41","nodeType":"VariableDeclaration","scope":5584,"src":"5052:9:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5526,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5052:7:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5529,"mutability":"mutable","name":"s","nameLocation":"5071:1:41","nodeType":"VariableDeclaration","scope":5584,"src":"5063:9:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5528,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5063:7:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5028:45:41"},"returnParameters":{"id":5536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5584,"src":"5097:7:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5531,"name":"address","nodeType":"ElementaryTypeName","src":"5097:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5584,"src":"5106:12:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5534,"nodeType":"UserDefinedTypeName","pathNode":{"id":5533,"name":"RecoverError","nameLocations":["5106:12:41"],"nodeType":"IdentifierPath","referencedDeclaration":5326,"src":"5106:12:41"},"referencedDeclaration":5326,"src":"5106:12:41","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5096:23:41"},"scope":5682,"src":"5009:1456:41","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5616,"nodeType":"Block","src":"6692:138:41","statements":[{"assignments":[5599,5602],"declarations":[{"constant":false,"id":5599,"mutability":"mutable","name":"recovered","nameLocation":"6711:9:41","nodeType":"VariableDeclaration","scope":5616,"src":"6703:17:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5598,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5602,"mutability":"mutable","name":"error","nameLocation":"6735:5:41","nodeType":"VariableDeclaration","scope":5616,"src":"6722:18:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5601,"nodeType":"UserDefinedTypeName","pathNode":{"id":5600,"name":"RecoverError","nameLocations":["6722:12:41"],"nodeType":"IdentifierPath","referencedDeclaration":5326,"src":"6722:12:41"},"referencedDeclaration":5326,"src":"6722:12:41","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":5609,"initialValue":{"arguments":[{"id":5604,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5587,"src":"6755:4:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5605,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"6761:1:41","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5606,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5591,"src":"6764:1:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5607,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5593,"src":"6767:1:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5603,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[5416,5490,5584],"referencedDeclaration":5584,"src":"6744:10:41","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$5326_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6744:25:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5326_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6702:67:41"},{"expression":{"arguments":[{"id":5611,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"6791:5:41","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"}],"id":5610,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5370,"src":"6779:11:41","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$5326_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":5612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6779:18:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5613,"nodeType":"ExpressionStatement","src":"6779:18:41"},{"expression":{"id":5614,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5599,"src":"6814:9:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5597,"id":5615,"nodeType":"Return","src":"6807:16:41"}]},"documentation":{"id":5585,"nodeType":"StructuredDocumentation","src":"6471:122:41","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":5617,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6607:7:41","nodeType":"FunctionDefinition","parameters":{"id":5594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5587,"mutability":"mutable","name":"hash","nameLocation":"6623:4:41","nodeType":"VariableDeclaration","scope":5617,"src":"6615:12:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5586,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6615:7:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5589,"mutability":"mutable","name":"v","nameLocation":"6635:1:41","nodeType":"VariableDeclaration","scope":5617,"src":"6629:7:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5588,"name":"uint8","nodeType":"ElementaryTypeName","src":"6629:5:41","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5591,"mutability":"mutable","name":"r","nameLocation":"6646:1:41","nodeType":"VariableDeclaration","scope":5617,"src":"6638:9:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5590,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6638:7:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5593,"mutability":"mutable","name":"s","nameLocation":"6657:1:41","nodeType":"VariableDeclaration","scope":5617,"src":"6649:9:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5592,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6649:7:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6614:45:41"},"returnParameters":{"id":5597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5617,"src":"6683:7:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5595,"name":"address","nodeType":"ElementaryTypeName","src":"6683:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6682:9:41"},"scope":5682,"src":"6598:232:41","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5626,"nodeType":"Block","src":"7206:310:41","statements":[{"AST":{"nodeType":"YulBlock","src":"7362:148:41","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7383:4:41","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"7389:34:41","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7376:6:41"},"nodeType":"YulFunctionCall","src":"7376:48:41"},"nodeType":"YulExpressionStatement","src":"7376:48:41"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7444:4:41","type":"","value":"0x1c"},{"name":"hash","nodeType":"YulIdentifier","src":"7450:4:41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7437:6:41"},"nodeType":"YulFunctionCall","src":"7437:18:41"},"nodeType":"YulExpressionStatement","src":"7437:18:41"},{"nodeType":"YulAssignment","src":"7468:32:41","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7489:4:41","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"7495:4:41","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7479:9:41"},"nodeType":"YulFunctionCall","src":"7479:21:41"},"variableNames":[{"name":"message","nodeType":"YulIdentifier","src":"7468:7:41"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":5620,"isOffset":false,"isSlot":false,"src":"7450:4:41","valueSize":1},{"declaration":5623,"isOffset":false,"isSlot":false,"src":"7468:7:41","valueSize":1}],"id":5625,"nodeType":"InlineAssembly","src":"7353:157:41"}]},"documentation":{"id":5618,"nodeType":"StructuredDocumentation","src":"6836:279:41","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":5627,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7129:22:41","nodeType":"FunctionDefinition","parameters":{"id":5621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5620,"mutability":"mutable","name":"hash","nameLocation":"7160:4:41","nodeType":"VariableDeclaration","scope":5627,"src":"7152:12:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5619,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7152:7:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7151:14:41"},"returnParameters":{"id":5624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5623,"mutability":"mutable","name":"message","nameLocation":"7197:7:41","nodeType":"VariableDeclaration","scope":5627,"src":"7189:15:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5622,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7189:7:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7188:17:41"},"scope":5682,"src":"7120:396:41","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5648,"nodeType":"Block","src":"7881:116:41","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":5638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7925:32:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":5641,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"7976:1:41","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7978:6:41","memberName":"length","nodeType":"MemberAccess","src":"7976:8:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5639,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5316,"src":"7959:7:41","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$5316_$","typeString":"type(library Strings)"}},"id":5640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7967:8:41","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":5146,"src":"7959:16:41","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":5643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7959:26:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5644,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"7987:1:41","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5636,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7908:3:41","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7912:12:41","memberName":"encodePacked","nodeType":"MemberAccess","src":"7908:16:41","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7908:81:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5635,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7898:9:41","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7898:92:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5634,"id":5647,"nodeType":"Return","src":"7891:99:41"}]},"documentation":{"id":5628,"nodeType":"StructuredDocumentation","src":"7522:274:41","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":5649,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7810:22:41","nodeType":"FunctionDefinition","parameters":{"id":5631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5630,"mutability":"mutable","name":"s","nameLocation":"7846:1:41","nodeType":"VariableDeclaration","scope":5649,"src":"7833:14:41","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5629,"name":"bytes","nodeType":"ElementaryTypeName","src":"7833:5:41","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7832:16:41"},"returnParameters":{"id":5634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5649,"src":"7872:7:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5632,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7872:7:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7871:9:41"},"scope":5682,"src":"7801:196:41","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5660,"nodeType":"Block","src":"8443:290:41","statements":[{"AST":{"nodeType":"YulBlock","src":"8505:222:41","statements":[{"nodeType":"YulVariableDeclaration","src":"8519:22:41","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8536:4:41","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8530:5:41"},"nodeType":"YulFunctionCall","src":"8530:11:41"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"8523:3:41","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8561:3:41"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"8566:10:41","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8554:6:41"},"nodeType":"YulFunctionCall","src":"8554:23:41"},"nodeType":"YulExpressionStatement","src":"8554:23:41"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8601:3:41"},{"kind":"number","nodeType":"YulLiteral","src":"8606:4:41","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8597:3:41"},"nodeType":"YulFunctionCall","src":"8597:14:41"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"8613:15:41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8590:6:41"},"nodeType":"YulFunctionCall","src":"8590:39:41"},"nodeType":"YulExpressionStatement","src":"8590:39:41"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8653:3:41"},{"kind":"number","nodeType":"YulLiteral","src":"8658:4:41","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8649:3:41"},"nodeType":"YulFunctionCall","src":"8649:14:41"},{"name":"structHash","nodeType":"YulIdentifier","src":"8665:10:41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8642:6:41"},"nodeType":"YulFunctionCall","src":"8642:34:41"},"nodeType":"YulExpressionStatement","src":"8642:34:41"},{"nodeType":"YulAssignment","src":"8689:28:41","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8707:3:41"},{"kind":"number","nodeType":"YulLiteral","src":"8712:4:41","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8697:9:41"},"nodeType":"YulFunctionCall","src":"8697:20:41"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8689:4:41"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":5657,"isOffset":false,"isSlot":false,"src":"8689:4:41","valueSize":1},{"declaration":5652,"isOffset":false,"isSlot":false,"src":"8613:15:41","valueSize":1},{"declaration":5654,"isOffset":false,"isSlot":false,"src":"8665:10:41","valueSize":1}],"id":5659,"nodeType":"InlineAssembly","src":"8496:231:41"}]},"documentation":{"id":5650,"nodeType":"StructuredDocumentation","src":"8003:328:41","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":5661,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8345:15:41","nodeType":"FunctionDefinition","parameters":{"id":5655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5652,"mutability":"mutable","name":"domainSeparator","nameLocation":"8369:15:41","nodeType":"VariableDeclaration","scope":5661,"src":"8361:23:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5651,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8361:7:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5654,"mutability":"mutable","name":"structHash","nameLocation":"8394:10:41","nodeType":"VariableDeclaration","scope":5661,"src":"8386:18:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5653,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8386:7:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8360:45:41"},"returnParameters":{"id":5658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5657,"mutability":"mutable","name":"data","nameLocation":"8437:4:41","nodeType":"VariableDeclaration","scope":5661,"src":"8429:12:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5656,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8429:7:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8428:14:41"},"scope":5682,"src":"8336:397:41","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5680,"nodeType":"Block","src":"9048:80:41","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":5674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9092:10:41","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":5675,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5664,"src":"9104:9:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5676,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5666,"src":"9115:4:41","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5672,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9075:3:41","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9079:12:41","memberName":"encodePacked","nodeType":"MemberAccess","src":"9075:16:41","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9075:45:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5671,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9065:9:41","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9065:56:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5670,"id":5679,"nodeType":"Return","src":"9058:63:41"}]},"documentation":{"id":5662,"nodeType":"StructuredDocumentation","src":"8739:193:41","text":" @dev Returns an Ethereum Signed Data with intended validator, created from a\n `validator` and `data` according to the version 0 of EIP-191.\n See {recover}."},"id":5681,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"8946:31:41","nodeType":"FunctionDefinition","parameters":{"id":5667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5664,"mutability":"mutable","name":"validator","nameLocation":"8986:9:41","nodeType":"VariableDeclaration","scope":5681,"src":"8978:17:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5663,"name":"address","nodeType":"ElementaryTypeName","src":"8978:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5666,"mutability":"mutable","name":"data","nameLocation":"9010:4:41","nodeType":"VariableDeclaration","scope":5681,"src":"8997:17:41","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5665,"name":"bytes","nodeType":"ElementaryTypeName","src":"8997:5:41","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8977:38:41"},"returnParameters":{"id":5670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5681,"src":"9039:7:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5668,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9039:7:41","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9038:9:41"},"scope":5682,"src":"8937:191:41","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5683,"src":"369:8761:41","usedErrors":[],"usedEvents":[]}],"src":"112:9019:41"},"id":41},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[5706],"IERC165":[5912]},"id":5707,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5684,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:42"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":5685,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5707,"sourceUnit":5913,"src":"124:23:42","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5687,"name":"IERC165","nameLocations":["754:7:42"],"nodeType":"IdentifierPath","referencedDeclaration":5912,"src":"754:7:42"},"id":5688,"nodeType":"InheritanceSpecifier","src":"754:7:42"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":5686,"nodeType":"StructuredDocumentation","src":"149:576:42","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":5706,"linearizedBaseContracts":[5706,5912],"name":"ERC165","nameLocation":"744:6:42","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[5911],"body":{"id":5704,"nodeType":"Block","src":"920:64:42","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":5702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5697,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5691,"src":"937:11:42","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":5699,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"957:7:42","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$5912_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$5912_$","typeString":"type(contract IERC165)"}],"id":5698,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:42","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:13:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$5912","typeString":"type(contract IERC165)"}},"id":5701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"966:11:42","memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:42","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5696,"id":5703,"nodeType":"Return","src":"930:47:42"}]},"documentation":{"id":5689,"nodeType":"StructuredDocumentation","src":"768:56:42","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":5705,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:42","nodeType":"FunctionDefinition","overrides":{"id":5693,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:42"},"parameters":{"id":5692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5691,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:42","nodeType":"VariableDeclaration","scope":5705,"src":"856:18:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5690,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:42","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:42"},"returnParameters":{"id":5696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5705,"src":"914:4:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5694,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:42","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:42"},"scope":5706,"src":"829:155:42","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":5707,"src":"726:260:42","usedErrors":[],"usedEvents":[]}],"src":"99:888:42"},"id":42},"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","exportedSymbols":{"ERC165Checker":[5900],"IERC165":[5912]},"id":5901,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5708,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"121:23:43"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":5709,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5901,"sourceUnit":5913,"src":"146:23:43","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC165Checker","contractDependencies":[],"contractKind":"library","documentation":{"id":5710,"nodeType":"StructuredDocumentation","src":"171:277:43","text":" @dev Library used to query support of an interface declared via {IERC165}.\n Note that these functions return the actual result of the query: they do not\n `revert` if an interface is not supported. It is up to the caller to decide\n what to do in these cases."},"fullyImplemented":true,"id":5900,"linearizedBaseContracts":[5900],"name":"ERC165Checker","nameLocation":"457:13:43","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":5713,"mutability":"constant","name":"_INTERFACE_ID_INVALID","nameLocation":"575:21:43","nodeType":"VariableDeclaration","scope":5900,"src":"551:58:43","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5711,"name":"bytes4","nodeType":"ElementaryTypeName","src":"551:6:43","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786666666666666666","id":5712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"599:10:43","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"visibility":"private"},{"body":{"id":5735,"nodeType":"Block","src":"774:357:43","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5722,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5716,"src":"1008:7:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":5724,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"1022:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$5912_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$5912_$","typeString":"type(contract IERC165)"}],"id":5723,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1017:4:43","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1017:13:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$5912","typeString":"type(contract IERC165)"}},"id":5726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1031:11:43","memberName":"interfaceId","nodeType":"MemberAccess","src":"1017:25:43","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":5721,"name":"supportsERC165InterfaceUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"975:32:43","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":5727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"975:68:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":5732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1059:65:43","subExpression":{"arguments":[{"id":5729,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5716,"src":"1093:7:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5730,"name":"_INTERFACE_ID_INVALID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5713,"src":"1102:21:43","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":5728,"name":"supportsERC165InterfaceUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"1060:32:43","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1060:64:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"975:149:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5720,"id":5734,"nodeType":"Return","src":"956:168:43"}]},"documentation":{"id":5714,"nodeType":"StructuredDocumentation","src":"616:83:43","text":" @dev Returns true if `account` supports the {IERC165} interface."},"id":5736,"implemented":true,"kind":"function","modifiers":[],"name":"supportsERC165","nameLocation":"713:14:43","nodeType":"FunctionDefinition","parameters":{"id":5717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5716,"mutability":"mutable","name":"account","nameLocation":"736:7:43","nodeType":"VariableDeclaration","scope":5736,"src":"728:15:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5715,"name":"address","nodeType":"ElementaryTypeName","src":"728:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"727:17:43"},"returnParameters":{"id":5720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5736,"src":"768:4:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5718,"name":"bool","nodeType":"ElementaryTypeName","src":"768:4:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"767:6:43"},"scope":5900,"src":"704:427:43","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5755,"nodeType":"Block","src":"1442:189:43","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5747,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5739,"src":"1558:7:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5746,"name":"supportsERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"1543:14:43","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1543:23:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":5750,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5739,"src":"1603:7:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5751,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5741,"src":"1612:11:43","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":5749,"name":"supportsERC165InterfaceUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"1570:32:43","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":5752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1570:54:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1543:81:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5745,"id":5754,"nodeType":"Return","src":"1536:88:43"}]},"documentation":{"id":5737,"nodeType":"StructuredDocumentation","src":"1137:207:43","text":" @dev Returns true if `account` supports the interface defined by\n `interfaceId`. Support for {IERC165} itself is queried automatically.\n See {IERC165-supportsInterface}."},"id":5756,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1358:17:43","nodeType":"FunctionDefinition","parameters":{"id":5742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5739,"mutability":"mutable","name":"account","nameLocation":"1384:7:43","nodeType":"VariableDeclaration","scope":5756,"src":"1376:15:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5738,"name":"address","nodeType":"ElementaryTypeName","src":"1376:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5741,"mutability":"mutable","name":"interfaceId","nameLocation":"1400:11:43","nodeType":"VariableDeclaration","scope":5756,"src":"1393:18:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5740,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1393:6:43","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1375:37:43"},"returnParameters":{"id":5745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5756,"src":"1436:4:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5743,"name":"bool","nodeType":"ElementaryTypeName","src":"1436:4:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1435:6:43"},"scope":5900,"src":"1349:282:43","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5811,"nodeType":"Block","src":"2155:560:43","statements":[{"assignments":[5772],"declarations":[{"constant":false,"id":5772,"mutability":"mutable","name":"interfaceIdsSupported","nameLocation":"2278:21:43","nodeType":"VariableDeclaration","scope":5811,"src":"2264:35:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":5770,"name":"bool","nodeType":"ElementaryTypeName","src":"2264:4:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5771,"nodeType":"ArrayTypeName","src":"2264:6:43","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"id":5779,"initialValue":{"arguments":[{"expression":{"id":5776,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5762,"src":"2313:12:43","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":5777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2326:6:43","memberName":"length","nodeType":"MemberAccess","src":"2313:19:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2302:10:43","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bool[] memory)"},"typeName":{"baseType":{"id":5773,"name":"bool","nodeType":"ElementaryTypeName","src":"2306:4:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5774,"nodeType":"ArrayTypeName","src":"2306:6:43","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}}},"id":5778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2302:31:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2264:69:43"},{"condition":{"arguments":[{"id":5781,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"2405:7:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5780,"name":"supportsERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"2390:14:43","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":5782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2390:23:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5808,"nodeType":"IfStatement","src":"2386:284:43","trueBody":{"id":5807,"nodeType":"Block","src":"2415:255:43","statements":[{"body":{"id":5805,"nodeType":"Block","src":"2542:118:43","statements":[{"expression":{"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5794,"name":"interfaceIdsSupported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5772,"src":"2560:21:43","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":5796,"indexExpression":{"id":5795,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5784,"src":"2582:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2560:24:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5798,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"2620:7:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":5799,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5762,"src":"2629:12:43","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":5801,"indexExpression":{"id":5800,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5784,"src":"2642:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2629:15:43","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":5797,"name":"supportsERC165InterfaceUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"2587:32:43","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":5802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2587:58:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2560:85:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5804,"nodeType":"ExpressionStatement","src":"2560:85:43"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5787,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5784,"src":"2512:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5788,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5762,"src":"2516:12:43","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":5789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2529:6:43","memberName":"length","nodeType":"MemberAccess","src":"2516:19:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2512:23:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5806,"initializationExpression":{"assignments":[5784],"declarations":[{"constant":false,"id":5784,"mutability":"mutable","name":"i","nameLocation":"2505:1:43","nodeType":"VariableDeclaration","scope":5806,"src":"2497:9:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5783,"name":"uint256","nodeType":"ElementaryTypeName","src":"2497:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5786,"initialValue":{"hexValue":"30","id":5785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2509:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2497:13:43"},"loopExpression":{"expression":{"id":5792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2537:3:43","subExpression":{"id":5791,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5784,"src":"2537:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5793,"nodeType":"ExpressionStatement","src":"2537:3:43"},"nodeType":"ForStatement","src":"2492:168:43"}]}},{"expression":{"id":5809,"name":"interfaceIdsSupported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5772,"src":"2687:21:43","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"functionReturnParameters":5767,"id":5810,"nodeType":"Return","src":"2680:28:43"}]},"documentation":{"id":5757,"nodeType":"StructuredDocumentation","src":"1637:374:43","text":" @dev Returns a boolean array where each value corresponds to the\n interfaces passed in and whether they're supported or not. This allows\n you to batch check interfaces for a contract where your expectation\n is that some interfaces may not be supported.\n See {IERC165-supportsInterface}.\n _Available since v3.4._"},"id":5812,"implemented":true,"kind":"function","modifiers":[],"name":"getSupportedInterfaces","nameLocation":"2025:22:43","nodeType":"FunctionDefinition","parameters":{"id":5763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5759,"mutability":"mutable","name":"account","nameLocation":"2065:7:43","nodeType":"VariableDeclaration","scope":5812,"src":"2057:15:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5758,"name":"address","nodeType":"ElementaryTypeName","src":"2057:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5762,"mutability":"mutable","name":"interfaceIds","nameLocation":"2098:12:43","nodeType":"VariableDeclaration","scope":5812,"src":"2082:28:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[]"},"typeName":{"baseType":{"id":5760,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2082:6:43","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":5761,"nodeType":"ArrayTypeName","src":"2082:8:43","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"}},"visibility":"internal"}],"src":"2047:69:43"},"returnParameters":{"id":5767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5812,"src":"2140:13:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":5764,"name":"bool","nodeType":"ElementaryTypeName","src":"2140:4:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5765,"nodeType":"ArrayTypeName","src":"2140:6:43","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"2139:15:43"},"scope":5900,"src":"2016:699:43","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5857,"nodeType":"Block","src":"3157:436:43","statements":[{"condition":{"id":5826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3213:24:43","subExpression":{"arguments":[{"id":5824,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5815,"src":"3229:7:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5823,"name":"supportsERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"3214:14:43","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":5825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3214:23:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5830,"nodeType":"IfStatement","src":"3209:67:43","trueBody":{"id":5829,"nodeType":"Block","src":"3239:37:43","statements":[{"expression":{"hexValue":"66616c7365","id":5827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3260:5:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5822,"id":5828,"nodeType":"Return","src":"3253:12:43"}]}},{"body":{"id":5853,"nodeType":"Block","src":"3395:134:43","statements":[{"condition":{"id":5848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3413:59:43","subExpression":{"arguments":[{"id":5843,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5815,"src":"3447:7:43","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":5844,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"3456:12:43","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":5846,"indexExpression":{"id":5845,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"3469:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3456:15:43","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":5842,"name":"supportsERC165InterfaceUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5899,"src":"3414:32:43","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":5847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3414:58:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5852,"nodeType":"IfStatement","src":"3409:110:43","trueBody":{"id":5851,"nodeType":"Block","src":"3474:45:43","statements":[{"expression":{"hexValue":"66616c7365","id":5849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3499:5:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5822,"id":5850,"nodeType":"Return","src":"3492:12:43"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5835,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"3365:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5836,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"3369:12:43","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":5837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3382:6:43","memberName":"length","nodeType":"MemberAccess","src":"3369:19:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3365:23:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5854,"initializationExpression":{"assignments":[5832],"declarations":[{"constant":false,"id":5832,"mutability":"mutable","name":"i","nameLocation":"3358:1:43","nodeType":"VariableDeclaration","scope":5854,"src":"3350:9:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5831,"name":"uint256","nodeType":"ElementaryTypeName","src":"3350:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5834,"initialValue":{"hexValue":"30","id":5833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3362:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3350:13:43"},"loopExpression":{"expression":{"id":5840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3390:3:43","subExpression":{"id":5839,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"3390:1:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5841,"nodeType":"ExpressionStatement","src":"3390:3:43"},"nodeType":"ForStatement","src":"3345:184:43"},{"expression":{"hexValue":"74727565","id":5855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3582:4:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5822,"id":5856,"nodeType":"Return","src":"3575:11:43"}]},"documentation":{"id":5813,"nodeType":"StructuredDocumentation","src":"2721:324:43","text":" @dev Returns true if `account` supports all the interfaces defined in\n `interfaceIds`. Support for {IERC165} itself is queried automatically.\n Batch-querying can lead to gas savings by skipping repeated checks for\n {IERC165} support.\n See {IERC165-supportsInterface}."},"id":5858,"implemented":true,"kind":"function","modifiers":[],"name":"supportsAllInterfaces","nameLocation":"3059:21:43","nodeType":"FunctionDefinition","parameters":{"id":5819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5815,"mutability":"mutable","name":"account","nameLocation":"3089:7:43","nodeType":"VariableDeclaration","scope":5858,"src":"3081:15:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5814,"name":"address","nodeType":"ElementaryTypeName","src":"3081:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5818,"mutability":"mutable","name":"interfaceIds","nameLocation":"3114:12:43","nodeType":"VariableDeclaration","scope":5858,"src":"3098:28:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[]"},"typeName":{"baseType":{"id":5816,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3098:6:43","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":5817,"nodeType":"ArrayTypeName","src":"3098:8:43","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"}},"visibility":"internal"}],"src":"3080:47:43"},"returnParameters":{"id":5822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5858,"src":"3151:4:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5820,"name":"bool","nodeType":"ElementaryTypeName","src":"3151:4:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3150:6:43"},"scope":5900,"src":"3050:543:43","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5898,"nodeType":"Block","src":"4529:539:43","statements":[{"assignments":[5869],"declarations":[{"constant":false,"id":5869,"mutability":"mutable","name":"encodedParams","nameLocation":"4576:13:43","nodeType":"VariableDeclaration","scope":5898,"src":"4563:26:43","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5868,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:43","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5877,"initialValue":{"arguments":[{"expression":{"expression":{"id":5872,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"4615:7:43","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$5912_$","typeString":"type(contract IERC165)"}},"id":5873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4623:17:43","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":5911,"src":"4615:25:43","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes4_$returns$_t_bool_$","typeString":"function IERC165.supportsInterface(bytes4) view returns (bool)"}},"id":5874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4641:8:43","memberName":"selector","nodeType":"MemberAccess","src":"4615:34:43","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":5875,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"4651:11:43","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":5870,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4592:3:43","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4596:18:43","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4592:22:43","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":5876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4592:71:43","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4563:100:43"},{"assignments":[5879],"declarations":[{"constant":false,"id":5879,"mutability":"mutable","name":"success","nameLocation":"4710:7:43","nodeType":"VariableDeclaration","scope":5898,"src":"4705:12:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5878,"name":"bool","nodeType":"ElementaryTypeName","src":"4705:4:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5880,"nodeType":"VariableDeclarationStatement","src":"4705:12:43"},{"assignments":[5882],"declarations":[{"constant":false,"id":5882,"mutability":"mutable","name":"returnSize","nameLocation":"4735:10:43","nodeType":"VariableDeclaration","scope":5898,"src":"4727:18:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5881,"name":"uint256","nodeType":"ElementaryTypeName","src":"4727:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5883,"nodeType":"VariableDeclarationStatement","src":"4727:18:43"},{"assignments":[5885],"declarations":[{"constant":false,"id":5885,"mutability":"mutable","name":"returnValue","nameLocation":"4763:11:43","nodeType":"VariableDeclaration","scope":5898,"src":"4755:19:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5884,"name":"uint256","nodeType":"ElementaryTypeName","src":"4755:7:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5886,"nodeType":"VariableDeclarationStatement","src":"4755:19:43"},{"AST":{"nodeType":"YulBlock","src":"4793:203:43","statements":[{"nodeType":"YulAssignment","src":"4807:97:43","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4829:5:43","type":"","value":"30000"},{"name":"account","nodeType":"YulIdentifier","src":"4836:7:43"},{"arguments":[{"name":"encodedParams","nodeType":"YulIdentifier","src":"4849:13:43"},{"kind":"number","nodeType":"YulLiteral","src":"4864:4:43","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4845:3:43"},"nodeType":"YulFunctionCall","src":"4845:24:43"},{"arguments":[{"name":"encodedParams","nodeType":"YulIdentifier","src":"4877:13:43"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4871:5:43"},"nodeType":"YulFunctionCall","src":"4871:20:43"},{"kind":"number","nodeType":"YulLiteral","src":"4893:4:43","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"4899:4:43","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"4818:10:43"},"nodeType":"YulFunctionCall","src":"4818:86:43"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"4807:7:43"}]},{"nodeType":"YulAssignment","src":"4917:30:43","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"4931:14:43"},"nodeType":"YulFunctionCall","src":"4931:16:43"},"variableNames":[{"name":"returnSize","nodeType":"YulIdentifier","src":"4917:10:43"}]},{"nodeType":"YulAssignment","src":"4960:26:43","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4981:4:43","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4975:5:43"},"nodeType":"YulFunctionCall","src":"4975:11:43"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"4960:11:43"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5861,"isOffset":false,"isSlot":false,"src":"4836:7:43","valueSize":1},{"declaration":5869,"isOffset":false,"isSlot":false,"src":"4849:13:43","valueSize":1},{"declaration":5869,"isOffset":false,"isSlot":false,"src":"4877:13:43","valueSize":1},{"declaration":5882,"isOffset":false,"isSlot":false,"src":"4917:10:43","valueSize":1},{"declaration":5885,"isOffset":false,"isSlot":false,"src":"4960:11:43","valueSize":1},{"declaration":5879,"isOffset":false,"isSlot":false,"src":"4807:7:43","valueSize":1}],"id":5887,"nodeType":"InlineAssembly","src":"4784:212:43"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5888,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5879,"src":"5013:7:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5889,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5882,"src":"5024:10:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30783230","id":5890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5038:4:43","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5024:18:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5013:29:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5893,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5885,"src":"5046:11:43","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5060:1:43","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5046:15:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5013:48:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5867,"id":5897,"nodeType":"Return","src":"5006:55:43"}]},"documentation":{"id":5859,"nodeType":"StructuredDocumentation","src":"3599:817:43","text":" @notice Query if a contract implements an interface, does not check ERC165 support\n @param account The address of the contract to query for support of an interface\n @param interfaceId The interface identifier, as specified in ERC-165\n @return true if the contract at account indicates support of the interface with\n identifier interfaceId, false otherwise\n @dev Assumes that account contains a contract that supports ERC165, otherwise\n the behavior of this method is undefined. This precondition can be checked\n with {supportsERC165}.\n Some precompiled contracts will falsely indicate support for a given interface, so caution\n should be exercised when using this function.\n Interface identification is specified in ERC-165."},"id":5899,"implemented":true,"kind":"function","modifiers":[],"name":"supportsERC165InterfaceUnchecked","nameLocation":"4430:32:43","nodeType":"FunctionDefinition","parameters":{"id":5864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5861,"mutability":"mutable","name":"account","nameLocation":"4471:7:43","nodeType":"VariableDeclaration","scope":5899,"src":"4463:15:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5860,"name":"address","nodeType":"ElementaryTypeName","src":"4463:7:43","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5863,"mutability":"mutable","name":"interfaceId","nameLocation":"4487:11:43","nodeType":"VariableDeclaration","scope":5899,"src":"4480:18:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5862,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4480:6:43","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"4462:37:43"},"returnParameters":{"id":5867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5899,"src":"4523:4:43","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5865,"name":"bool","nodeType":"ElementaryTypeName","src":"4523:4:43","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4522:6:43"},"scope":5900,"src":"4421:647:43","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":5901,"src":"449:4621:43","usedErrors":[],"usedEvents":[]}],"src":"121:4950:43"},"id":43},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[5912]},"id":5913,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5902,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:44"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":5903,"nodeType":"StructuredDocumentation","src":"125:279:44","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":5912,"linearizedBaseContracts":[5912],"name":"IERC165","nameLocation":"415:7:44","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5904,"nodeType":"StructuredDocumentation","src":"429:340:44","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":5911,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:44","nodeType":"FunctionDefinition","parameters":{"id":5907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5906,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:44","nodeType":"VariableDeclaration","scope":5911,"src":"801:18:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5905,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:44","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:44"},"returnParameters":{"id":5910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5911,"src":"844:4:44","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5908,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:44","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:44"},"scope":5912,"src":"774:76:44","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5913,"src":"405:447:44","usedErrors":[],"usedEvents":[]}],"src":"100:753:44"},"id":44},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[6778]},"id":6779,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5914,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:45"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":5915,"nodeType":"StructuredDocumentation","src":"128:73:45","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6778,"linearizedBaseContracts":[6778],"name":"Math","nameLocation":"210:4:45","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":5919,"members":[{"id":5916,"name":"Down","nameLocation":"245:4:45","nodeType":"EnumValue","src":"245:4:45"},{"id":5917,"name":"Up","nameLocation":"287:2:45","nodeType":"EnumValue","src":"287:2:45"},{"id":5918,"name":"Zero","nameLocation":"318:4:45","nodeType":"EnumValue","src":"318:4:45"}],"name":"Rounding","nameLocation":"226:8:45","nodeType":"EnumDefinition","src":"221:122:45"},{"body":{"id":5936,"nodeType":"Block","src":"480:37:45","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5929,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5922,"src":"497:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5930,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5924,"src":"501:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5933,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5924,"src":"509:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:45","trueExpression":{"id":5932,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5922,"src":"505:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5928,"id":5935,"nodeType":"Return","src":"490:20:45"}]},"documentation":{"id":5920,"nodeType":"StructuredDocumentation","src":"349:59:45","text":" @dev Returns the largest of two numbers."},"id":5937,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:45","nodeType":"FunctionDefinition","parameters":{"id":5925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5922,"mutability":"mutable","name":"a","nameLocation":"434:1:45","nodeType":"VariableDeclaration","scope":5937,"src":"426:9:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5921,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5924,"mutability":"mutable","name":"b","nameLocation":"445:1:45","nodeType":"VariableDeclaration","scope":5937,"src":"437:9:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5923,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:45"},"returnParameters":{"id":5928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5937,"src":"471:7:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5926,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:45"},"scope":6778,"src":"413:104:45","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5954,"nodeType":"Block","src":"655:37:45","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5947,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5940,"src":"672:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5948,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"676:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5951,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"684:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:45","trueExpression":{"id":5950,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5940,"src":"680:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5946,"id":5953,"nodeType":"Return","src":"665:20:45"}]},"documentation":{"id":5938,"nodeType":"StructuredDocumentation","src":"523:60:45","text":" @dev Returns the smallest of two numbers."},"id":5955,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:45","nodeType":"FunctionDefinition","parameters":{"id":5943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5940,"mutability":"mutable","name":"a","nameLocation":"609:1:45","nodeType":"VariableDeclaration","scope":5955,"src":"601:9:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5939,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5942,"mutability":"mutable","name":"b","nameLocation":"620:1:45","nodeType":"VariableDeclaration","scope":5955,"src":"612:9:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5941,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:45"},"returnParameters":{"id":5946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5955,"src":"646:7:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5944,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:45"},"scope":6778,"src":"588:104:45","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5977,"nodeType":"Block","src":"876:82:45","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5965,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"931:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5966,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5960,"src":"935:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5968,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5969,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"941:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5970,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5960,"src":"945:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5972,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":5973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:45","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5964,"id":5976,"nodeType":"Return","src":"923:28:45"}]},"documentation":{"id":5956,"nodeType":"StructuredDocumentation","src":"698:102:45","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":5978,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:45","nodeType":"FunctionDefinition","parameters":{"id":5961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5958,"mutability":"mutable","name":"a","nameLocation":"830:1:45","nodeType":"VariableDeclaration","scope":5978,"src":"822:9:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5957,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5960,"mutability":"mutable","name":"b","nameLocation":"841:1:45","nodeType":"VariableDeclaration","scope":5978,"src":"833:9:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5959,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:45"},"returnParameters":{"id":5964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5978,"src":"867:7:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5962,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:45"},"scope":6778,"src":"805:153:45","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6002,"nodeType":"Block","src":"1228:123:45","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5988,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5981,"src":"1316:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:45","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5992,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5981,"src":"1330:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:45","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5995,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5996,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5983,"src":"1339:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:45","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:45","trueExpression":{"hexValue":"30","id":5991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:45","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5987,"id":6001,"nodeType":"Return","src":"1309:35:45"}]},"documentation":{"id":5979,"nodeType":"StructuredDocumentation","src":"964:188:45","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":6003,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:45","nodeType":"FunctionDefinition","parameters":{"id":5984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5981,"mutability":"mutable","name":"a","nameLocation":"1182:1:45","nodeType":"VariableDeclaration","scope":6003,"src":"1174:9:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5980,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5983,"mutability":"mutable","name":"b","nameLocation":"1193:1:45","nodeType":"VariableDeclaration","scope":6003,"src":"1185:9:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5982,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:45"},"returnParameters":{"id":5987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6003,"src":"1219:7:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5985,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:45"},"scope":6778,"src":"1157:194:45","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6125,"nodeType":"Block","src":"1765:4115:45","statements":[{"id":6124,"nodeType":"UncheckedBlock","src":"1775:4099:45","statements":[{"assignments":[6016],"declarations":[{"constant":false,"id":6016,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:45","nodeType":"VariableDeclaration","scope":6124,"src":"2096:13:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6015,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6017,"nodeType":"VariableDeclarationStatement","src":"2096:13:45"},{"assignments":[6019],"declarations":[{"constant":false,"id":6019,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:45","nodeType":"VariableDeclaration","scope":6124,"src":"2168:13:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6018,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6020,"nodeType":"VariableDeclarationStatement","src":"2168:13:45"},{"AST":{"nodeType":"YulBlock","src":"2248:157:45","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:45","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:45"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:45"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:45","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:45"},"nodeType":"YulFunctionCall","src":"2289:6:45"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:45"},"nodeType":"YulFunctionCall","src":"2276:20:45"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:45","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:45","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:45"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:45"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:45"},"nodeType":"YulFunctionCall","src":"2322:9:45"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:45"}]},{"nodeType":"YulAssignment","src":"2348:43:45","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:45"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:45"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:45"},"nodeType":"YulFunctionCall","src":"2361:14:45"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:45"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:45"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:45"},"nodeType":"YulFunctionCall","src":"2377:13:45"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:45"},"nodeType":"YulFunctionCall","src":"2357:34:45"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:45"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6016,"isOffset":false,"isSlot":false,"src":"2313:5:45","valueSize":1},{"declaration":6016,"isOffset":false,"isSlot":false,"src":"2369:5:45","valueSize":1},{"declaration":6016,"isOffset":false,"isSlot":false,"src":"2384:5:45","valueSize":1},{"declaration":6019,"isOffset":false,"isSlot":false,"src":"2348:5:45","valueSize":1},{"declaration":6006,"isOffset":false,"isSlot":false,"src":"2283:1:45","valueSize":1},{"declaration":6006,"isOffset":false,"isSlot":false,"src":"2326:1:45","valueSize":1},{"declaration":6008,"isOffset":false,"isSlot":false,"src":"2286:1:45","valueSize":1},{"declaration":6008,"isOffset":false,"isSlot":false,"src":"2329:1:45","valueSize":1}],"id":6021,"nodeType":"InlineAssembly","src":"2239:166:45"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6022,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"2486:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:45","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6030,"nodeType":"IfStatement","src":"2482:368:45","trueBody":{"id":6029,"nodeType":"Block","src":"2498:352:45","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6025,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6016,"src":"2816:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6026,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6010,"src":"2824:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6014,"id":6028,"nodeType":"Return","src":"2809:26:45"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6032,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6010,"src":"2960:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6033,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"2974:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":6035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:45","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":6031,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:45","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:45","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6037,"nodeType":"ExpressionStatement","src":"2952:53:45"},{"assignments":[6039],"declarations":[{"constant":false,"id":6039,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:45","nodeType":"VariableDeclaration","scope":6124,"src":"3261:17:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6038,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6040,"nodeType":"VariableDeclarationStatement","src":"3261:17:45"},{"AST":{"nodeType":"YulBlock","src":"3301:291:45","statements":[{"nodeType":"YulAssignment","src":"3370:38:45","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:45"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:45"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:45"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:45"},"nodeType":"YulFunctionCall","src":"3383:25:45"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:45"}]},{"nodeType":"YulAssignment","src":"3490:41:45","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:45"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:45"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:45"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:45"},"nodeType":"YulFunctionCall","src":"3510:20:45"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:45"},"nodeType":"YulFunctionCall","src":"3499:32:45"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:45"}]},{"nodeType":"YulAssignment","src":"3548:30:45","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:45"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:45"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:45"},"nodeType":"YulFunctionCall","src":"3557:21:45"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:45"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6010,"isOffset":false,"isSlot":false,"src":"3396:11:45","valueSize":1},{"declaration":6016,"isOffset":false,"isSlot":false,"src":"3524:5:45","valueSize":1},{"declaration":6016,"isOffset":false,"isSlot":false,"src":"3548:5:45","valueSize":1},{"declaration":6016,"isOffset":false,"isSlot":false,"src":"3561:5:45","valueSize":1},{"declaration":6019,"isOffset":false,"isSlot":false,"src":"3490:5:45","valueSize":1},{"declaration":6019,"isOffset":false,"isSlot":false,"src":"3503:5:45","valueSize":1},{"declaration":6039,"isOffset":false,"isSlot":false,"src":"3370:9:45","valueSize":1},{"declaration":6039,"isOffset":false,"isSlot":false,"src":"3513:9:45","valueSize":1},{"declaration":6039,"isOffset":false,"isSlot":false,"src":"3568:9:45","valueSize":1},{"declaration":6006,"isOffset":false,"isSlot":false,"src":"3390:1:45","valueSize":1},{"declaration":6008,"isOffset":false,"isSlot":false,"src":"3393:1:45","valueSize":1}],"id":6041,"nodeType":"InlineAssembly","src":"3292:300:45"},{"assignments":[6043],"declarations":[{"constant":false,"id":6043,"mutability":"mutable","name":"twos","nameLocation":"3907:4:45","nodeType":"VariableDeclaration","scope":6124,"src":"3899:12:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6042,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6051,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6044,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6010,"src":"3914:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:45","subExpression":{"id":6045,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6010,"src":"3930:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:45","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6049,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:45"},{"AST":{"nodeType":"YulBlock","src":"3969:362:45","statements":[{"nodeType":"YulAssignment","src":"4034:37:45","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:45"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:45"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:45"},"nodeType":"YulFunctionCall","src":"4049:22:45"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:45"}]},{"nodeType":"YulAssignment","src":"4138:25:45","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:45"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:45"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:45"},"nodeType":"YulFunctionCall","src":"4147:16:45"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:45"}]},{"nodeType":"YulAssignment","src":"4278:39:45","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:45","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:45"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:45"},"nodeType":"YulFunctionCall","src":"4294:12:45"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:45"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:45"},"nodeType":"YulFunctionCall","src":"4290:23:45"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:45","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:45"},"nodeType":"YulFunctionCall","src":"4286:31:45"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:45"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6010,"isOffset":false,"isSlot":false,"src":"4034:11:45","valueSize":1},{"declaration":6010,"isOffset":false,"isSlot":false,"src":"4053:11:45","valueSize":1},{"declaration":6016,"isOffset":false,"isSlot":false,"src":"4138:5:45","valueSize":1},{"declaration":6016,"isOffset":false,"isSlot":false,"src":"4151:5:45","valueSize":1},{"declaration":6043,"isOffset":false,"isSlot":false,"src":"4066:4:45","valueSize":1},{"declaration":6043,"isOffset":false,"isSlot":false,"src":"4158:4:45","valueSize":1},{"declaration":6043,"isOffset":false,"isSlot":false,"src":"4278:4:45","valueSize":1},{"declaration":6043,"isOffset":false,"isSlot":false,"src":"4301:4:45","valueSize":1},{"declaration":6043,"isOffset":false,"isSlot":false,"src":"4308:4:45","valueSize":1}],"id":6052,"nodeType":"InlineAssembly","src":"3960:371:45"},{"expression":{"id":6057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6053,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6016,"src":"4397:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6054,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"4406:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6055,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"4414:4:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6058,"nodeType":"ExpressionStatement","src":"4397:21:45"},{"assignments":[6060],"declarations":[{"constant":false,"id":6060,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:45","nodeType":"VariableDeclaration","scope":6124,"src":"4736:15:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6059,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6067,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":6061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:45","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6062,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6010,"src":"4759:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6064,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":6065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:45","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:45"},{"expression":{"id":6074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6068,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"4992:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:45","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6070,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6010,"src":"5007:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6071,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"5021:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6075,"nodeType":"ExpressionStatement","src":"4992:36:45"},{"expression":{"id":6082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6076,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"5061:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:45","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6078,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6010,"src":"5076:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6079,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"5090:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6083,"nodeType":"ExpressionStatement","src":"5061:36:45"},{"expression":{"id":6090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6084,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"5131:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:45","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6086,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6010,"src":"5146:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6087,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"5160:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6091,"nodeType":"ExpressionStatement","src":"5131:36:45"},{"expression":{"id":6098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6092,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"5201:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:45","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6094,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6010,"src":"5216:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6095,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"5230:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6099,"nodeType":"ExpressionStatement","src":"5201:36:45"},{"expression":{"id":6106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6100,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"5271:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:45","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6102,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6010,"src":"5286:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6103,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"5300:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6107,"nodeType":"ExpressionStatement","src":"5271:36:45"},{"expression":{"id":6114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6108,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"5342:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:45","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6110,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6010,"src":"5357:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6111,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"5371:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6115,"nodeType":"ExpressionStatement","src":"5342:36:45"},{"expression":{"id":6120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6116,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"5812:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6117,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6016,"src":"5821:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6118,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"5829:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6121,"nodeType":"ExpressionStatement","src":"5812:24:45"},{"expression":{"id":6122,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"5857:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6014,"id":6123,"nodeType":"Return","src":"5850:13:45"}]}]},"documentation":{"id":6004,"nodeType":"StructuredDocumentation","src":"1357:305:45","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":6126,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:45","nodeType":"FunctionDefinition","parameters":{"id":6011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6006,"mutability":"mutable","name":"x","nameLocation":"1691:1:45","nodeType":"VariableDeclaration","scope":6126,"src":"1683:9:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6005,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6008,"mutability":"mutable","name":"y","nameLocation":"1702:1:45","nodeType":"VariableDeclaration","scope":6126,"src":"1694:9:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6007,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6010,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:45","nodeType":"VariableDeclaration","scope":6126,"src":"1705:19:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6009,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:45"},"returnParameters":{"id":6014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6013,"mutability":"mutable","name":"result","nameLocation":"1757:6:45","nodeType":"VariableDeclaration","scope":6126,"src":"1749:14:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6012,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:45"},"scope":6778,"src":"1667:4213:45","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6169,"nodeType":"Block","src":"6122:189:45","statements":[{"assignments":[6142],"declarations":[{"constant":false,"id":6142,"mutability":"mutable","name":"result","nameLocation":"6140:6:45","nodeType":"VariableDeclaration","scope":6169,"src":"6132:14:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6141,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6148,"initialValue":{"arguments":[{"id":6144,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"6156:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6145,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"6159:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6146,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6133,"src":"6162:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6143,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[6126,6170],"referencedDeclaration":6126,"src":"6149:6:45","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:45","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:45"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$5919","typeString":"enum Math.Rounding"},"id":6152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6149,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6136,"src":"6188:8:45","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5919","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6150,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"6200:8:45","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$5919_$","typeString":"type(enum Math.Rounding)"}},"id":6151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:45","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":5917,"src":"6200:11:45","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5919","typeString":"enum Math.Rounding"}},"src":"6188:23:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6154,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"6222:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6155,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6131,"src":"6225:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6156,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6133,"src":"6228:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6153,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:45","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:45","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:45","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6166,"nodeType":"IfStatement","src":"6184:98:45","trueBody":{"id":6165,"nodeType":"Block","src":"6246:36:45","statements":[{"expression":{"id":6163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6161,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6142,"src":"6260:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:45","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6164,"nodeType":"ExpressionStatement","src":"6260:11:45"}]}},{"expression":{"id":6167,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6142,"src":"6298:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6140,"id":6168,"nodeType":"Return","src":"6291:13:45"}]},"documentation":{"id":6127,"nodeType":"StructuredDocumentation","src":"5886:121:45","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":6170,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:45","nodeType":"FunctionDefinition","parameters":{"id":6137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6129,"mutability":"mutable","name":"x","nameLocation":"6036:1:45","nodeType":"VariableDeclaration","scope":6170,"src":"6028:9:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6128,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6131,"mutability":"mutable","name":"y","nameLocation":"6047:1:45","nodeType":"VariableDeclaration","scope":6170,"src":"6039:9:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6130,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6133,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:45","nodeType":"VariableDeclaration","scope":6170,"src":"6050:19:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6132,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6136,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:45","nodeType":"VariableDeclaration","scope":6170,"src":"6071:17:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5919","typeString":"enum Math.Rounding"},"typeName":{"id":6135,"nodeType":"UserDefinedTypeName","pathNode":{"id":6134,"name":"Rounding","nameLocations":["6071:8:45"],"nodeType":"IdentifierPath","referencedDeclaration":5919,"src":"6071:8:45"},"referencedDeclaration":5919,"src":"6071:8:45","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5919","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:45"},"returnParameters":{"id":6140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6170,"src":"6113:7:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6138,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:45"},"scope":6778,"src":"6012:299:45","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6281,"nodeType":"Block","src":"6587:1585:45","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6178,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6173,"src":"6601:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:45","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6184,"nodeType":"IfStatement","src":"6597:45:45","trueBody":{"id":6183,"nodeType":"Block","src":"6609:33:45","statements":[{"expression":{"hexValue":"30","id":6181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:45","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":6177,"id":6182,"nodeType":"Return","src":"6623:8:45"}]}},{"assignments":[6186],"declarations":[{"constant":false,"id":6186,"mutability":"mutable","name":"result","nameLocation":"7329:6:45","nodeType":"VariableDeclaration","scope":6281,"src":"7321:14:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6185,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6195,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:45","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6189,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6173,"src":"7349:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6188,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[6450,6486],"referencedDeclaration":6450,"src":"7344:4:45","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:45","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:45","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6193,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:45"},{"id":6280,"nodeType":"UncheckedBlock","src":"7758:408:45","statements":[{"expression":{"id":6205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6196,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"7782:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6197,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"7792:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6198,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6173,"src":"7801:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6199,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"7805:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6202,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:45","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6206,"nodeType":"ExpressionStatement","src":"7782:35:45"},{"expression":{"id":6216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6207,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"7831:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6208,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"7841:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6209,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6173,"src":"7850:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6210,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"7854:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6213,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:45","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6217,"nodeType":"ExpressionStatement","src":"7831:35:45"},{"expression":{"id":6227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6218,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"7880:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6219,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"7890:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6220,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6173,"src":"7899:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6221,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"7903:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6224,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:45","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6228,"nodeType":"ExpressionStatement","src":"7880:35:45"},{"expression":{"id":6238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6229,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"7929:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6230,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"7939:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6231,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6173,"src":"7948:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6232,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"7952:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6235,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:45","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6239,"nodeType":"ExpressionStatement","src":"7929:35:45"},{"expression":{"id":6249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6240,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"7978:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6241,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"7988:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6242,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6173,"src":"7997:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6243,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"8001:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6246,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:45","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6250,"nodeType":"ExpressionStatement","src":"7978:35:45"},{"expression":{"id":6260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6251,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"8027:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6252,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"8037:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6253,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6173,"src":"8046:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6254,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"8050:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6257,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:45","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6261,"nodeType":"ExpressionStatement","src":"8027:35:45"},{"expression":{"id":6271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6262,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"8076:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6263,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"8086:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6264,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6173,"src":"8095:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6265,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"8099:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6268,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:45","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6272,"nodeType":"ExpressionStatement","src":"8076:35:45"},{"expression":{"arguments":[{"id":6274,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"8136:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6275,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6173,"src":"8144:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6276,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"8148:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6273,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5955,"src":"8132:3:45","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":6278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:45","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6177,"id":6279,"nodeType":"Return","src":"8125:30:45"}]}]},"documentation":{"id":6171,"nodeType":"StructuredDocumentation","src":"6317:208:45","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":6282,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:45","nodeType":"FunctionDefinition","parameters":{"id":6174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6173,"mutability":"mutable","name":"a","nameLocation":"6552:1:45","nodeType":"VariableDeclaration","scope":6282,"src":"6544:9:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6172,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:45"},"returnParameters":{"id":6177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6282,"src":"6578:7:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6175,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:45"},"scope":6778,"src":"6530:1642:45","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6317,"nodeType":"Block","src":"8348:161:45","statements":[{"id":6316,"nodeType":"UncheckedBlock","src":"8358:145:45","statements":[{"assignments":[6294],"declarations":[{"constant":false,"id":6294,"mutability":"mutable","name":"result","nameLocation":"8390:6:45","nodeType":"VariableDeclaration","scope":6316,"src":"8382:14:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6293,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6298,"initialValue":{"arguments":[{"id":6296,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6285,"src":"8404:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6295,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[6282,6318],"referencedDeclaration":6282,"src":"8399:4:45","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:45","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:45"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6299,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6294,"src":"8427:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$5919","typeString":"enum Math.Rounding"},"id":6303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6300,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6288,"src":"8437:8:45","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5919","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6301,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"8449:8:45","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$5919_$","typeString":"type(enum Math.Rounding)"}},"id":6302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:45","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":5917,"src":"8449:11:45","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5919","typeString":"enum Math.Rounding"}},"src":"8437:23:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6304,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6294,"src":"8464:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6305,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6294,"src":"8473:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6307,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6285,"src":"8482:1:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":6311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:45","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":6312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:45","trueExpression":{"hexValue":"31","id":6310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:45","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":6313,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:45","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6292,"id":6315,"nodeType":"Return","src":"8420:72:45"}]}]},"documentation":{"id":6283,"nodeType":"StructuredDocumentation","src":"8178:89:45","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":6318,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:45","nodeType":"FunctionDefinition","parameters":{"id":6289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6285,"mutability":"mutable","name":"a","nameLocation":"8294:1:45","nodeType":"VariableDeclaration","scope":6318,"src":"8286:9:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6284,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6288,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:45","nodeType":"VariableDeclaration","scope":6318,"src":"8297:17:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5919","typeString":"enum Math.Rounding"},"typeName":{"id":6287,"nodeType":"UserDefinedTypeName","pathNode":{"id":6286,"name":"Rounding","nameLocations":["8297:8:45"],"nodeType":"IdentifierPath","referencedDeclaration":5919,"src":"8297:8:45"},"referencedDeclaration":5919,"src":"8297:8:45","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5919","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:45"},"returnParameters":{"id":6292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6318,"src":"8339:7:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6290,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:45"},"scope":6778,"src":"8272:237:45","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6449,"nodeType":"Block","src":"8694:922:45","statements":[{"assignments":[6327],"declarations":[{"constant":false,"id":6327,"mutability":"mutable","name":"result","nameLocation":"8712:6:45","nodeType":"VariableDeclaration","scope":6449,"src":"8704:14:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6326,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6329,"initialValue":{"hexValue":"30","id":6328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:45","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:45"},{"id":6446,"nodeType":"UncheckedBlock","src":"8732:855:45","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6321,"src":"8760:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":6331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:45","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:45","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6344,"nodeType":"IfStatement","src":"8756:99:45","trueBody":{"id":6343,"nodeType":"Block","src":"8778:77:45","statements":[{"expression":{"id":6337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6321,"src":"8796:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":6336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:45","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6338,"nodeType":"ExpressionStatement","src":"8796:13:45"},{"expression":{"id":6341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6339,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"8827:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":6340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:45","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6342,"nodeType":"ExpressionStatement","src":"8827:13:45"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6321,"src":"8872:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":6346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:45","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:45","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6359,"nodeType":"IfStatement","src":"8868:96:45","trueBody":{"id":6358,"nodeType":"Block","src":"8889:75:45","statements":[{"expression":{"id":6352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6321,"src":"8907:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":6351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:45","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6353,"nodeType":"ExpressionStatement","src":"8907:12:45"},{"expression":{"id":6356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6354,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"8937:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":6355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:45","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6357,"nodeType":"ExpressionStatement","src":"8937:12:45"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6321,"src":"8981:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":6361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:45","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:45","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6374,"nodeType":"IfStatement","src":"8977:96:45","trueBody":{"id":6373,"nodeType":"Block","src":"8998:75:45","statements":[{"expression":{"id":6367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6321,"src":"9016:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":6366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:45","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6368,"nodeType":"ExpressionStatement","src":"9016:12:45"},{"expression":{"id":6371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6369,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"9046:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":6370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:45","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6372,"nodeType":"ExpressionStatement","src":"9046:12:45"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6321,"src":"9090:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":6376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:45","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:45","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6389,"nodeType":"IfStatement","src":"9086:96:45","trueBody":{"id":6388,"nodeType":"Block","src":"9107:75:45","statements":[{"expression":{"id":6382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6321,"src":"9125:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":6381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:45","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6383,"nodeType":"ExpressionStatement","src":"9125:12:45"},{"expression":{"id":6386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6384,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"9155:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":6385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:45","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6387,"nodeType":"ExpressionStatement","src":"9155:12:45"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6321,"src":"9199:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":6391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:45","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:45","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6404,"nodeType":"IfStatement","src":"9195:93:45","trueBody":{"id":6403,"nodeType":"Block","src":"9215:73:45","statements":[{"expression":{"id":6397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6321,"src":"9233:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":6396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:45","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6398,"nodeType":"ExpressionStatement","src":"9233:11:45"},{"expression":{"id":6401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6399,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"9262:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":6400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:45","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6402,"nodeType":"ExpressionStatement","src":"9262:11:45"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6321,"src":"9305:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":6406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:45","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:45","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6419,"nodeType":"IfStatement","src":"9301:93:45","trueBody":{"id":6418,"nodeType":"Block","src":"9321:73:45","statements":[{"expression":{"id":6412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6321,"src":"9339:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":6411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:45","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6413,"nodeType":"ExpressionStatement","src":"9339:11:45"},{"expression":{"id":6416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6414,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"9368:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":6415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:45","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6417,"nodeType":"ExpressionStatement","src":"9368:11:45"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6321,"src":"9411:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":6421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:45","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:45","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6434,"nodeType":"IfStatement","src":"9407:93:45","trueBody":{"id":6433,"nodeType":"Block","src":"9427:73:45","statements":[{"expression":{"id":6427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6321,"src":"9445:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":6426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:45","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6428,"nodeType":"ExpressionStatement","src":"9445:11:45"},{"expression":{"id":6431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6429,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"9474:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":6430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:45","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6432,"nodeType":"ExpressionStatement","src":"9474:11:45"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6321,"src":"9517:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:45","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:45","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6445,"nodeType":"IfStatement","src":"9513:64:45","trueBody":{"id":6444,"nodeType":"Block","src":"9533:44:45","statements":[{"expression":{"id":6442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6440,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"9551:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:45","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6443,"nodeType":"ExpressionStatement","src":"9551:11:45"}]}}]},{"expression":{"id":6447,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6327,"src":"9603:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6325,"id":6448,"nodeType":"Return","src":"9596:13:45"}]},"documentation":{"id":6319,"nodeType":"StructuredDocumentation","src":"8515:113:45","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":6450,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:45","nodeType":"FunctionDefinition","parameters":{"id":6322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6321,"mutability":"mutable","name":"value","nameLocation":"8655:5:45","nodeType":"VariableDeclaration","scope":6450,"src":"8647:13:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6320,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:45"},"returnParameters":{"id":6325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6324,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6450,"src":"8685:7:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6323,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:45"},"scope":6778,"src":"8633:983:45","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6485,"nodeType":"Block","src":"9849:165:45","statements":[{"id":6484,"nodeType":"UncheckedBlock","src":"9859:149:45","statements":[{"assignments":[6462],"declarations":[{"constant":false,"id":6462,"mutability":"mutable","name":"result","nameLocation":"9891:6:45","nodeType":"VariableDeclaration","scope":6484,"src":"9883:14:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6461,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6466,"initialValue":{"arguments":[{"id":6464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6453,"src":"9905:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6463,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[6450,6486],"referencedDeclaration":6450,"src":"9900:4:45","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:45","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:45"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6467,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"9932:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$5919","typeString":"enum Math.Rounding"},"id":6471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6468,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6456,"src":"9942:8:45","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5919","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6469,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"9954:8:45","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$5919_$","typeString":"type(enum Math.Rounding)"}},"id":6470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:45","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":5917,"src":"9954:11:45","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5919","typeString":"enum Math.Rounding"}},"src":"9942:23:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:45","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6473,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"9974:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6453,"src":"9983:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":6479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:45","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":6480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:45","trueExpression":{"hexValue":"31","id":6478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:45","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":6481,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:45","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6460,"id":6483,"nodeType":"Return","src":"9925:72:45"}]}]},"documentation":{"id":6451,"nodeType":"StructuredDocumentation","src":"9622:142:45","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6486,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:45","nodeType":"FunctionDefinition","parameters":{"id":6457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6453,"mutability":"mutable","name":"value","nameLocation":"9791:5:45","nodeType":"VariableDeclaration","scope":6486,"src":"9783:13:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6452,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6456,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:45","nodeType":"VariableDeclaration","scope":6486,"src":"9798:17:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5919","typeString":"enum Math.Rounding"},"typeName":{"id":6455,"nodeType":"UserDefinedTypeName","pathNode":{"id":6454,"name":"Rounding","nameLocations":["9798:8:45"],"nodeType":"IdentifierPath","referencedDeclaration":5919,"src":"9798:8:45"},"referencedDeclaration":5919,"src":"9798:8:45","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5919","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:45"},"returnParameters":{"id":6460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6486,"src":"9840:7:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6458,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:45"},"scope":6778,"src":"9769:245:45","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6614,"nodeType":"Block","src":"10201:854:45","statements":[{"assignments":[6495],"declarations":[{"constant":false,"id":6495,"mutability":"mutable","name":"result","nameLocation":"10219:6:45","nodeType":"VariableDeclaration","scope":6614,"src":"10211:14:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6494,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6497,"initialValue":{"hexValue":"30","id":6496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:45","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:45"},{"id":6611,"nodeType":"UncheckedBlock","src":"10239:787:45","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"10267:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:45","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:45","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:45","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6514,"nodeType":"IfStatement","src":"10263:103:45","trueBody":{"id":6513,"nodeType":"Block","src":"10286:80:45","statements":[{"expression":{"id":6507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"10304:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:45","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:45","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:45","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6508,"nodeType":"ExpressionStatement","src":"10304:17:45"},{"expression":{"id":6511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6509,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6495,"src":"10339:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":6510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:45","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6512,"nodeType":"ExpressionStatement","src":"10339:12:45"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"10383:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:45","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:45","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:45","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6531,"nodeType":"IfStatement","src":"10379:103:45","trueBody":{"id":6530,"nodeType":"Block","src":"10402:80:45","statements":[{"expression":{"id":6524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"10420:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:45","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:45","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:45","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6525,"nodeType":"ExpressionStatement","src":"10420:17:45"},{"expression":{"id":6528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6526,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6495,"src":"10455:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":6527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:45","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6529,"nodeType":"ExpressionStatement","src":"10455:12:45"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"10499:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:45","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:45","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:45","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6548,"nodeType":"IfStatement","src":"10495:103:45","trueBody":{"id":6547,"nodeType":"Block","src":"10518:80:45","statements":[{"expression":{"id":6541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"10536:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:45","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:45","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:45","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6542,"nodeType":"ExpressionStatement","src":"10536:17:45"},{"expression":{"id":6545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6543,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6495,"src":"10571:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":6544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:45","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6546,"nodeType":"ExpressionStatement","src":"10571:12:45"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"10615:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:45","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:45","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:45","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6565,"nodeType":"IfStatement","src":"10611:100:45","trueBody":{"id":6564,"nodeType":"Block","src":"10633:78:45","statements":[{"expression":{"id":6558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"10651:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:45","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:45","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:45","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6559,"nodeType":"ExpressionStatement","src":"10651:16:45"},{"expression":{"id":6562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6560,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6495,"src":"10685:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":6561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:45","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6563,"nodeType":"ExpressionStatement","src":"10685:11:45"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"10728:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:45","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:45","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:45","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6582,"nodeType":"IfStatement","src":"10724:100:45","trueBody":{"id":6581,"nodeType":"Block","src":"10746:78:45","statements":[{"expression":{"id":6575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"10764:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:45","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:45","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:45","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6576,"nodeType":"ExpressionStatement","src":"10764:16:45"},{"expression":{"id":6579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6577,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6495,"src":"10798:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":6578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:45","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6580,"nodeType":"ExpressionStatement","src":"10798:11:45"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"10841:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:45","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:45","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:45","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6599,"nodeType":"IfStatement","src":"10837:100:45","trueBody":{"id":6598,"nodeType":"Block","src":"10859:78:45","statements":[{"expression":{"id":6592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"10877:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:45","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:45","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:45","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6593,"nodeType":"ExpressionStatement","src":"10877:16:45"},{"expression":{"id":6596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6594,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6495,"src":"10911:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":6595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:45","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6597,"nodeType":"ExpressionStatement","src":"10911:11:45"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"10954:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":6603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:45","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":6602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:45","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:45","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6610,"nodeType":"IfStatement","src":"10950:66:45","trueBody":{"id":6609,"nodeType":"Block","src":"10972:44:45","statements":[{"expression":{"id":6607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6605,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6495,"src":"10990:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:45","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6608,"nodeType":"ExpressionStatement","src":"10990:11:45"}]}}]},{"expression":{"id":6612,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6495,"src":"11042:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6493,"id":6613,"nodeType":"Return","src":"11035:13:45"}]},"documentation":{"id":6487,"nodeType":"StructuredDocumentation","src":"10020:114:45","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":6615,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:45","nodeType":"FunctionDefinition","parameters":{"id":6490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6489,"mutability":"mutable","name":"value","nameLocation":"10162:5:45","nodeType":"VariableDeclaration","scope":6615,"src":"10154:13:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6488,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:45"},"returnParameters":{"id":6493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6615,"src":"10192:7:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6491,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:45"},"scope":6778,"src":"10139:916:45","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6650,"nodeType":"Block","src":"11290:167:45","statements":[{"id":6649,"nodeType":"UncheckedBlock","src":"11300:151:45","statements":[{"assignments":[6627],"declarations":[{"constant":false,"id":6627,"mutability":"mutable","name":"result","nameLocation":"11332:6:45","nodeType":"VariableDeclaration","scope":6649,"src":"11324:14:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6626,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6631,"initialValue":{"arguments":[{"id":6629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6618,"src":"11347:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6628,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[6615,6651],"referencedDeclaration":6615,"src":"11341:5:45","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:45","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:45"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6632,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6627,"src":"11374:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$5919","typeString":"enum Math.Rounding"},"id":6636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6633,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6621,"src":"11384:8:45","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5919","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6634,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"11396:8:45","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$5919_$","typeString":"type(enum Math.Rounding)"}},"id":6635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:45","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":5917,"src":"11396:11:45","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5919","typeString":"enum Math.Rounding"}},"src":"11384:23:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:45","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":6638,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6627,"src":"11417:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6618,"src":"11426:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":6644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:45","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":6645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:45","trueExpression":{"hexValue":"31","id":6643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:45","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":6646,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:45","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6625,"id":6648,"nodeType":"Return","src":"11367:73:45"}]}]},"documentation":{"id":6616,"nodeType":"StructuredDocumentation","src":"11061:143:45","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6651,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:45","nodeType":"FunctionDefinition","parameters":{"id":6622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6618,"mutability":"mutable","name":"value","nameLocation":"11232:5:45","nodeType":"VariableDeclaration","scope":6651,"src":"11224:13:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6617,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6621,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:45","nodeType":"VariableDeclaration","scope":6651,"src":"11239:17:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5919","typeString":"enum Math.Rounding"},"typeName":{"id":6620,"nodeType":"UserDefinedTypeName","pathNode":{"id":6619,"name":"Rounding","nameLocations":["11239:8:45"],"nodeType":"IdentifierPath","referencedDeclaration":5919,"src":"11239:8:45"},"referencedDeclaration":5919,"src":"11239:8:45","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5919","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:45"},"returnParameters":{"id":6625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6651,"src":"11281:7:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6623,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:45"},"scope":6778,"src":"11209:248:45","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6737,"nodeType":"Block","src":"11771:600:45","statements":[{"assignments":[6660],"declarations":[{"constant":false,"id":6660,"mutability":"mutable","name":"result","nameLocation":"11789:6:45","nodeType":"VariableDeclaration","scope":6737,"src":"11781:14:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6659,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6662,"initialValue":{"hexValue":"30","id":6661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:45","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:45"},{"id":6734,"nodeType":"UncheckedBlock","src":"11809:533:45","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"11837:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":6664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:45","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:45","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6677,"nodeType":"IfStatement","src":"11833:98:45","trueBody":{"id":6676,"nodeType":"Block","src":"11855:76:45","statements":[{"expression":{"id":6670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"11873:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":6669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:45","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6671,"nodeType":"ExpressionStatement","src":"11873:13:45"},{"expression":{"id":6674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6672,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"11904:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":6673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:45","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6675,"nodeType":"ExpressionStatement","src":"11904:12:45"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"11948:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":6679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:45","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:45","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6692,"nodeType":"IfStatement","src":"11944:95:45","trueBody":{"id":6691,"nodeType":"Block","src":"11965:74:45","statements":[{"expression":{"id":6685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"11983:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":6684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:45","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6686,"nodeType":"ExpressionStatement","src":"11983:12:45"},{"expression":{"id":6689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6687,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"12013:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":6688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:45","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6690,"nodeType":"ExpressionStatement","src":"12013:11:45"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"12056:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":6694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:45","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:45","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6707,"nodeType":"IfStatement","src":"12052:95:45","trueBody":{"id":6706,"nodeType":"Block","src":"12073:74:45","statements":[{"expression":{"id":6700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"12091:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":6699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:45","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6701,"nodeType":"ExpressionStatement","src":"12091:12:45"},{"expression":{"id":6704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6702,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"12121:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":6703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:45","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6705,"nodeType":"ExpressionStatement","src":"12121:11:45"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"12164:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":6709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:45","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:45","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6722,"nodeType":"IfStatement","src":"12160:95:45","trueBody":{"id":6721,"nodeType":"Block","src":"12181:74:45","statements":[{"expression":{"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"12199:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":6714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:45","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6716,"nodeType":"ExpressionStatement","src":"12199:12:45"},{"expression":{"id":6719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6717,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"12229:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":6718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:45","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6720,"nodeType":"ExpressionStatement","src":"12229:11:45"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"12272:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":6724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:45","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:45","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6733,"nodeType":"IfStatement","src":"12268:64:45","trueBody":{"id":6732,"nodeType":"Block","src":"12288:44:45","statements":[{"expression":{"id":6730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6728,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"12306:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:45","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6731,"nodeType":"ExpressionStatement","src":"12306:11:45"}]}}]},{"expression":{"id":6735,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"12358:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6658,"id":6736,"nodeType":"Return","src":"12351:13:45"}]},"documentation":{"id":6652,"nodeType":"StructuredDocumentation","src":"11463:240:45","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":6738,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:45","nodeType":"FunctionDefinition","parameters":{"id":6655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6654,"mutability":"mutable","name":"value","nameLocation":"11732:5:45","nodeType":"VariableDeclaration","scope":6738,"src":"11724:13:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6653,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:45"},"returnParameters":{"id":6658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6738,"src":"11762:7:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6656,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:45"},"scope":6778,"src":"11708:663:45","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6776,"nodeType":"Block","src":"12608:174:45","statements":[{"id":6775,"nodeType":"UncheckedBlock","src":"12618:158:45","statements":[{"assignments":[6750],"declarations":[{"constant":false,"id":6750,"mutability":"mutable","name":"result","nameLocation":"12650:6:45","nodeType":"VariableDeclaration","scope":6775,"src":"12642:14:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6749,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6754,"initialValue":{"arguments":[{"id":6752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6741,"src":"12666:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6751,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[6738,6777],"referencedDeclaration":6738,"src":"12659:6:45","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:45","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:45"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6755,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"12693:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$5919","typeString":"enum Math.Rounding"},"id":6759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6756,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6744,"src":"12703:8:45","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5919","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6757,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"12715:8:45","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$5919_$","typeString":"type(enum Math.Rounding)"}},"id":6758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:45","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":5917,"src":"12715:11:45","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5919","typeString":"enum Math.Rounding"}},"src":"12703:23:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:45","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6761,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"12736:6:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":6762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:45","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6764,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6741,"src":"12751:5:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:45","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":6770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:45","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":6771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:45","trueExpression":{"hexValue":"31","id":6769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:45","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":6772,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:45","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6748,"id":6774,"nodeType":"Return","src":"12686:79:45"}]}]},"documentation":{"id":6739,"nodeType":"StructuredDocumentation","src":"12377:144:45","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6777,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:45","nodeType":"FunctionDefinition","parameters":{"id":6745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6741,"mutability":"mutable","name":"value","nameLocation":"12550:5:45","nodeType":"VariableDeclaration","scope":6777,"src":"12542:13:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6740,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6744,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:45","nodeType":"VariableDeclaration","scope":6777,"src":"12557:17:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5919","typeString":"enum Math.Rounding"},"typeName":{"id":6743,"nodeType":"UserDefinedTypeName","pathNode":{"id":6742,"name":"Rounding","nameLocations":["12557:8:45"],"nodeType":"IdentifierPath","referencedDeclaration":5919,"src":"12557:8:45"},"referencedDeclaration":5919,"src":"12557:8:45","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5919","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:45"},"returnParameters":{"id":6748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6777,"src":"12599:7:45","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6746,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:45","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:45"},"scope":6778,"src":"12526:256:45","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6779,"src":"202:12582:45","usedErrors":[],"usedEvents":[]}],"src":"103:12682:45"},"id":45},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[6883]},"id":6884,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6780,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:46"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6781,"nodeType":"StructuredDocumentation","src":"134:80:46","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6883,"linearizedBaseContracts":[6883],"name":"SignedMath","nameLocation":"223:10:46","nodeType":"ContractDefinition","nodes":[{"body":{"id":6798,"nodeType":"Block","src":"375:37:46","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6791,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6784,"src":"392:1:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6792,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6786,"src":"396:1:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:46","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6795,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6786,"src":"404:1:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:46","trueExpression":{"id":6794,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6784,"src":"400:1:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6790,"id":6797,"nodeType":"Return","src":"385:20:46"}]},"documentation":{"id":6782,"nodeType":"StructuredDocumentation","src":"240:66:46","text":" @dev Returns the largest of two signed numbers."},"id":6799,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:46","nodeType":"FunctionDefinition","parameters":{"id":6787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6784,"mutability":"mutable","name":"a","nameLocation":"331:1:46","nodeType":"VariableDeclaration","scope":6799,"src":"324:8:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6783,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6786,"mutability":"mutable","name":"b","nameLocation":"341:1:46","nodeType":"VariableDeclaration","scope":6799,"src":"334:8:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6785,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:46"},"returnParameters":{"id":6790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6799,"src":"367:6:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6788,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:46"},"scope":6883,"src":"311:101:46","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6816,"nodeType":"Block","src":"554:37:46","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6809,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6802,"src":"571:1:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6810,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6804,"src":"575:1:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:46","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6813,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6804,"src":"583:1:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:46","trueExpression":{"id":6812,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6802,"src":"579:1:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6808,"id":6815,"nodeType":"Return","src":"564:20:46"}]},"documentation":{"id":6800,"nodeType":"StructuredDocumentation","src":"418:67:46","text":" @dev Returns the smallest of two signed numbers."},"id":6817,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:46","nodeType":"FunctionDefinition","parameters":{"id":6805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6802,"mutability":"mutable","name":"a","nameLocation":"510:1:46","nodeType":"VariableDeclaration","scope":6817,"src":"503:8:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6801,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6804,"mutability":"mutable","name":"b","nameLocation":"520:1:46","nodeType":"VariableDeclaration","scope":6817,"src":"513:8:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6803,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:46"},"returnParameters":{"id":6808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6817,"src":"546:6:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6806,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:46"},"scope":6883,"src":"490:101:46","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6860,"nodeType":"Block","src":"796:162:46","statements":[{"assignments":[6828],"declarations":[{"constant":false,"id":6828,"mutability":"mutable","name":"x","nameLocation":"865:1:46","nodeType":"VariableDeclaration","scope":6860,"src":"858:8:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6827,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6841,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6829,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"870:1:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6830,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6822,"src":"874:1:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6832,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6833,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"881:1:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6834,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6822,"src":"885:1:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6836,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:46","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6839,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:46"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6842,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6828,"src":"910:1:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6847,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6828,"src":"930:1:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:46","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6845,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:46","typeDescriptions":{}}},"id":6848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:46","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:46","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:46","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6843,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:46","typeDescriptions":{}}},"id":6851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:46","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6852,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"944:1:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6853,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6822,"src":"948:1:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6855,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6857,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6826,"id":6859,"nodeType":"Return","src":"903:48:46"}]},"documentation":{"id":6818,"nodeType":"StructuredDocumentation","src":"597:126:46","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6861,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:46","nodeType":"FunctionDefinition","parameters":{"id":6823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6820,"mutability":"mutable","name":"a","nameLocation":"752:1:46","nodeType":"VariableDeclaration","scope":6861,"src":"745:8:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6819,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6822,"mutability":"mutable","name":"b","nameLocation":"762:1:46","nodeType":"VariableDeclaration","scope":6861,"src":"755:8:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6821,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:46"},"returnParameters":{"id":6826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6861,"src":"788:6:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6824,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:46"},"scope":6883,"src":"728:230:46","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6881,"nodeType":"Block","src":"1102:158:46","statements":[{"id":6880,"nodeType":"UncheckedBlock","src":"1112:142:46","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6871,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6864,"src":"1227:1:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":6872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:46","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:46","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:46","subExpression":{"id":6875,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6864,"src":"1241:1:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":6877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:46","trueExpression":{"id":6874,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6864,"src":"1236:1:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:46","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6869,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:46","typeDescriptions":{}}},"id":6878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:46","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6868,"id":6879,"nodeType":"Return","src":"1212:31:46"}]}]},"documentation":{"id":6862,"nodeType":"StructuredDocumentation","src":"964:78:46","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6882,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:46","nodeType":"FunctionDefinition","parameters":{"id":6865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6864,"mutability":"mutable","name":"n","nameLocation":"1067:1:46","nodeType":"VariableDeclaration","scope":6882,"src":"1060:8:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6863,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:46","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:46"},"returnParameters":{"id":6868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6882,"src":"1093:7:46","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6866,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:46","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:46"},"scope":6883,"src":"1047:213:46","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6884,"src":"215:1047:46","usedErrors":[],"usedEvents":[]}],"src":"109:1154:46"},"id":46},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[7496]},"id":7497,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6885,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"205:23:47"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":6886,"nodeType":"StructuredDocumentation","src":"230:1098:47","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":7496,"linearizedBaseContracts":[7496],"name":"EnumerableSet","nameLocation":"1337:13:47","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":6894,"members":[{"constant":false,"id":6889,"mutability":"mutable","name":"_values","nameLocation":"1861:7:47","nodeType":"VariableDeclaration","scope":6894,"src":"1851:17:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":6887,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1851:7:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6888,"nodeType":"ArrayTypeName","src":"1851:9:47","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":6893,"mutability":"mutable","name":"_indexes","nameLocation":"2029:8:47","nodeType":"VariableDeclaration","scope":6894,"src":"2001:36:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":6892,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6890,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2009:7:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2001:27:47","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6891,"name":"uint256","nodeType":"ElementaryTypeName","src":"2020:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1804:3:47","nodeType":"StructDefinition","scope":7496,"src":"1797:247:47","visibility":"public"},{"body":{"id":6935,"nodeType":"Block","src":"2283:335:47","statements":[{"condition":{"id":6909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2297:22:47","subExpression":{"arguments":[{"id":6906,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"2308:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":6907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"2313:5:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6894_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6905,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"2298:9:47","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6894_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":6908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2298:21:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6933,"nodeType":"Block","src":"2575:37:47","statements":[{"expression":{"hexValue":"66616c7365","id":6931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2596:5:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":6904,"id":6932,"nodeType":"Return","src":"2589:12:47"}]},"id":6934,"nodeType":"IfStatement","src":"2293:319:47","trueBody":{"id":6930,"nodeType":"Block","src":"2321:248:47","statements":[{"expression":{"arguments":[{"id":6915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"2352:5:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":6910,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"2335:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6913,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2339:7:47","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6889,"src":"2335:11:47","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2347:4:47","memberName":"push","nodeType":"MemberAccess","src":"2335:16:47","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":6916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:23:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6917,"nodeType":"ExpressionStatement","src":"2335:23:47"},{"expression":{"id":6926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":6918,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"2493:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6921,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2497:8:47","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":6893,"src":"2493:12:47","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":6922,"indexExpression":{"id":6920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"2506:5:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2493:19:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":6923,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"2515:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6924,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2519:7:47","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6889,"src":"2515:11:47","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2527:6:47","memberName":"length","nodeType":"MemberAccess","src":"2515:18:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2493:40:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6927,"nodeType":"ExpressionStatement","src":"2493:40:47"},{"expression":{"hexValue":"74727565","id":6928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2554:4:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6904,"id":6929,"nodeType":"Return","src":"2547:11:47"}]}}]},"documentation":{"id":6895,"nodeType":"StructuredDocumentation","src":"2050:159:47","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":6936,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2223:4:47","nodeType":"FunctionDefinition","parameters":{"id":6901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6898,"mutability":"mutable","name":"set","nameLocation":"2240:3:47","nodeType":"VariableDeclaration","scope":6936,"src":"2228:15:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":6897,"nodeType":"UserDefinedTypeName","pathNode":{"id":6896,"name":"Set","nameLocations":["2228:3:47"],"nodeType":"IdentifierPath","referencedDeclaration":6894,"src":"2228:3:47"},"referencedDeclaration":6894,"src":"2228:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":6900,"mutability":"mutable","name":"value","nameLocation":"2253:5:47","nodeType":"VariableDeclaration","scope":6936,"src":"2245:13:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6899,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2245:7:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2227:32:47"},"returnParameters":{"id":6904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6936,"src":"2277:4:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6902,"name":"bool","nodeType":"ElementaryTypeName","src":"2277:4:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2276:6:47"},"scope":7496,"src":"2214:404:47","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":7019,"nodeType":"Block","src":"2858:1316:47","statements":[{"assignments":[6948],"declarations":[{"constant":false,"id":6948,"mutability":"mutable","name":"valueIndex","nameLocation":"2976:10:47","nodeType":"VariableDeclaration","scope":7019,"src":"2968:18:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6947,"name":"uint256","nodeType":"ElementaryTypeName","src":"2968:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6953,"initialValue":{"baseExpression":{"expression":{"id":6949,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6940,"src":"2989:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6950,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2993:8:47","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":6893,"src":"2989:12:47","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":6952,"indexExpression":{"id":6951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6942,"src":"3002:5:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2989:19:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2968:40:47"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6954,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6948,"src":"3023:10:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3037:1:47","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3023:15:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":7017,"nodeType":"Block","src":"4131:37:47","statements":[{"expression":{"hexValue":"66616c7365","id":7015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4152:5:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":6946,"id":7016,"nodeType":"Return","src":"4145:12:47"}]},"id":7018,"nodeType":"IfStatement","src":"3019:1149:47","trueBody":{"id":7014,"nodeType":"Block","src":"3040:1085:47","statements":[{"assignments":[6958],"declarations":[{"constant":false,"id":6958,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"3400:13:47","nodeType":"VariableDeclaration","scope":7014,"src":"3392:21:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6957,"name":"uint256","nodeType":"ElementaryTypeName","src":"3392:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6962,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6959,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6948,"src":"3416:10:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3429:1:47","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3416:14:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3392:38:47"},{"assignments":[6964],"declarations":[{"constant":false,"id":6964,"mutability":"mutable","name":"lastIndex","nameLocation":"3452:9:47","nodeType":"VariableDeclaration","scope":7014,"src":"3444:17:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6963,"name":"uint256","nodeType":"ElementaryTypeName","src":"3444:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6970,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":6965,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6940,"src":"3464:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6966,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3468:7:47","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6889,"src":"3464:11:47","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3476:6:47","memberName":"length","nodeType":"MemberAccess","src":"3464:18:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3485:1:47","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3464:22:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3444:42:47"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6971,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6964,"src":"3505:9:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6972,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"3518:13:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3505:26:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6998,"nodeType":"IfStatement","src":"3501:398:47","trueBody":{"id":6997,"nodeType":"Block","src":"3533:366:47","statements":[{"assignments":[6975],"declarations":[{"constant":false,"id":6975,"mutability":"mutable","name":"lastValue","nameLocation":"3559:9:47","nodeType":"VariableDeclaration","scope":6997,"src":"3551:17:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6974,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3551:7:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6980,"initialValue":{"baseExpression":{"expression":{"id":6976,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6940,"src":"3571:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6977,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3575:7:47","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6889,"src":"3571:11:47","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6979,"indexExpression":{"id":6978,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6964,"src":"3583:9:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3571:22:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3551:42:47"},{"expression":{"id":6987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":6981,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6940,"src":"3693:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6984,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3697:7:47","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6889,"src":"3693:11:47","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":6985,"indexExpression":{"id":6983,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"3705:13:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3693:26:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6986,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6975,"src":"3722:9:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3693:38:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":6988,"nodeType":"ExpressionStatement","src":"3693:38:47"},{"expression":{"id":6995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":6989,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6940,"src":"3805:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":6992,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3809:8:47","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":6893,"src":"3805:12:47","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":6993,"indexExpression":{"id":6991,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6975,"src":"3818:9:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3805:23:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6994,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6948,"src":"3831:10:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3805:36:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6996,"nodeType":"ExpressionStatement","src":"3805:36:47"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":6999,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6940,"src":"3977:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7002,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3981:7:47","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6889,"src":"3977:11:47","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":7003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3989:3:47","memberName":"pop","nodeType":"MemberAccess","src":"3977:15:47","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":7004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3977:17:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7005,"nodeType":"ExpressionStatement","src":"3977:17:47"},{"expression":{"id":7010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4062:26:47","subExpression":{"baseExpression":{"expression":{"id":7006,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6940,"src":"4069:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7007,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4073:8:47","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":6893,"src":"4069:12:47","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":7009,"indexExpression":{"id":7008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6942,"src":"4082:5:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4069:19:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7011,"nodeType":"ExpressionStatement","src":"4062:26:47"},{"expression":{"hexValue":"74727565","id":7012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4110:4:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6946,"id":7013,"nodeType":"Return","src":"4103:11:47"}]}}]},"documentation":{"id":6937,"nodeType":"StructuredDocumentation","src":"2624:157:47","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":7020,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2795:7:47","nodeType":"FunctionDefinition","parameters":{"id":6943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6940,"mutability":"mutable","name":"set","nameLocation":"2815:3:47","nodeType":"VariableDeclaration","scope":7020,"src":"2803:15:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":6939,"nodeType":"UserDefinedTypeName","pathNode":{"id":6938,"name":"Set","nameLocations":["2803:3:47"],"nodeType":"IdentifierPath","referencedDeclaration":6894,"src":"2803:3:47"},"referencedDeclaration":6894,"src":"2803:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":6942,"mutability":"mutable","name":"value","nameLocation":"2828:5:47","nodeType":"VariableDeclaration","scope":7020,"src":"2820:13:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6941,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2820:7:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2802:32:47"},"returnParameters":{"id":6946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7020,"src":"2852:4:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6944,"name":"bool","nodeType":"ElementaryTypeName","src":"2852:4:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2851:6:47"},"scope":7496,"src":"2786:1388:47","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":7038,"nodeType":"Block","src":"4334:48:47","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":7031,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7024,"src":"4351:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7032,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4355:8:47","memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":6893,"src":"4351:12:47","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":7034,"indexExpression":{"id":7033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"4364:5:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4351:19:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4374:1:47","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4351:24:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7030,"id":7037,"nodeType":"Return","src":"4344:31:47"}]},"documentation":{"id":7021,"nodeType":"StructuredDocumentation","src":"4180:70:47","text":" @dev Returns true if the value is in the set. O(1)."},"id":7039,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4264:9:47","nodeType":"FunctionDefinition","parameters":{"id":7027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7024,"mutability":"mutable","name":"set","nameLocation":"4286:3:47","nodeType":"VariableDeclaration","scope":7039,"src":"4274:15:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":7023,"nodeType":"UserDefinedTypeName","pathNode":{"id":7022,"name":"Set","nameLocations":["4274:3:47"],"nodeType":"IdentifierPath","referencedDeclaration":6894,"src":"4274:3:47"},"referencedDeclaration":6894,"src":"4274:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":7026,"mutability":"mutable","name":"value","nameLocation":"4299:5:47","nodeType":"VariableDeclaration","scope":7039,"src":"4291:13:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7025,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4291:7:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4273:32:47"},"returnParameters":{"id":7030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7039,"src":"4328:4:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7028,"name":"bool","nodeType":"ElementaryTypeName","src":"4328:4:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4327:6:47"},"scope":7496,"src":"4255:127:47","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":7052,"nodeType":"Block","src":"4528:42:47","statements":[{"expression":{"expression":{"expression":{"id":7048,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7043,"src":"4545:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7049,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4549:7:47","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6889,"src":"4545:11:47","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":7050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4557:6:47","memberName":"length","nodeType":"MemberAccess","src":"4545:18:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7047,"id":7051,"nodeType":"Return","src":"4538:25:47"}]},"documentation":{"id":7040,"nodeType":"StructuredDocumentation","src":"4388:70:47","text":" @dev Returns the number of values on the set. O(1)."},"id":7053,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4472:7:47","nodeType":"FunctionDefinition","parameters":{"id":7044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7043,"mutability":"mutable","name":"set","nameLocation":"4492:3:47","nodeType":"VariableDeclaration","scope":7053,"src":"4480:15:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":7042,"nodeType":"UserDefinedTypeName","pathNode":{"id":7041,"name":"Set","nameLocations":["4480:3:47"],"nodeType":"IdentifierPath","referencedDeclaration":6894,"src":"4480:3:47"},"referencedDeclaration":6894,"src":"4480:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4479:17:47"},"returnParameters":{"id":7047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7046,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7053,"src":"4519:7:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7045,"name":"uint256","nodeType":"ElementaryTypeName","src":"4519:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4518:9:47"},"scope":7496,"src":"4463:107:47","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":7069,"nodeType":"Block","src":"4988:42:47","statements":[{"expression":{"baseExpression":{"expression":{"id":7064,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"5005:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7065,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5009:7:47","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6889,"src":"5005:11:47","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":7067,"indexExpression":{"id":7066,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7059,"src":"5017:5:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5005:18:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7063,"id":7068,"nodeType":"Return","src":"4998:25:47"}]},"documentation":{"id":7054,"nodeType":"StructuredDocumentation","src":"4576:331:47","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":7070,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4921:3:47","nodeType":"FunctionDefinition","parameters":{"id":7060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7057,"mutability":"mutable","name":"set","nameLocation":"4937:3:47","nodeType":"VariableDeclaration","scope":7070,"src":"4925:15:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":7056,"nodeType":"UserDefinedTypeName","pathNode":{"id":7055,"name":"Set","nameLocations":["4925:3:47"],"nodeType":"IdentifierPath","referencedDeclaration":6894,"src":"4925:3:47"},"referencedDeclaration":6894,"src":"4925:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":7059,"mutability":"mutable","name":"index","nameLocation":"4950:5:47","nodeType":"VariableDeclaration","scope":7070,"src":"4942:13:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7058,"name":"uint256","nodeType":"ElementaryTypeName","src":"4942:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4924:32:47"},"returnParameters":{"id":7063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7062,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7070,"src":"4979:7:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7061,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4979:7:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4978:9:47"},"scope":7496,"src":"4912:118:47","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":7083,"nodeType":"Block","src":"5644:35:47","statements":[{"expression":{"expression":{"id":7080,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7074,"src":"5661:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":7081,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5665:7:47","memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":6889,"src":"5661:11:47","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":7079,"id":7082,"nodeType":"Return","src":"5654:18:47"}]},"documentation":{"id":7071,"nodeType":"StructuredDocumentation","src":"5036:529:47","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":7084,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5579:7:47","nodeType":"FunctionDefinition","parameters":{"id":7075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7074,"mutability":"mutable","name":"set","nameLocation":"5599:3:47","nodeType":"VariableDeclaration","scope":7084,"src":"5587:15:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":7073,"nodeType":"UserDefinedTypeName","pathNode":{"id":7072,"name":"Set","nameLocations":["5587:3:47"],"nodeType":"IdentifierPath","referencedDeclaration":6894,"src":"5587:3:47"},"referencedDeclaration":6894,"src":"5587:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5586:17:47"},"returnParameters":{"id":7079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7078,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7084,"src":"5626:16:47","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7076,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5626:7:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7077,"nodeType":"ArrayTypeName","src":"5626:9:47","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5625:18:47"},"scope":7496,"src":"5570:109:47","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":7088,"members":[{"constant":false,"id":7087,"mutability":"mutable","name":"_inner","nameLocation":"5736:6:47","nodeType":"VariableDeclaration","scope":7088,"src":"5732:10:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":7086,"nodeType":"UserDefinedTypeName","pathNode":{"id":7085,"name":"Set","nameLocations":["5732:3:47"],"nodeType":"IdentifierPath","referencedDeclaration":6894,"src":"5732:3:47"},"referencedDeclaration":6894,"src":"5732:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5711:10:47","nodeType":"StructDefinition","scope":7496,"src":"5704:45:47","visibility":"public"},{"body":{"id":7105,"nodeType":"Block","src":"5995:47:47","statements":[{"expression":{"arguments":[{"expression":{"id":7100,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7092,"src":"6017:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7088_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":7101,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6021:6:47","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7087,"src":"6017:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":7102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7094,"src":"6029:5:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7099,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6936,"src":"6012:4:47","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$6894_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":7103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:23:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7098,"id":7104,"nodeType":"Return","src":"6005:30:47"}]},"documentation":{"id":7089,"nodeType":"StructuredDocumentation","src":"5755:159:47","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":7106,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5928:3:47","nodeType":"FunctionDefinition","parameters":{"id":7095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7092,"mutability":"mutable","name":"set","nameLocation":"5951:3:47","nodeType":"VariableDeclaration","scope":7106,"src":"5932:22:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7088_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":7091,"nodeType":"UserDefinedTypeName","pathNode":{"id":7090,"name":"Bytes32Set","nameLocations":["5932:10:47"],"nodeType":"IdentifierPath","referencedDeclaration":7088,"src":"5932:10:47"},"referencedDeclaration":7088,"src":"5932:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7088_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":7094,"mutability":"mutable","name":"value","nameLocation":"5964:5:47","nodeType":"VariableDeclaration","scope":7106,"src":"5956:13:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7093,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5956:7:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5931:39:47"},"returnParameters":{"id":7098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7097,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7106,"src":"5989:4:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7096,"name":"bool","nodeType":"ElementaryTypeName","src":"5989:4:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5988:6:47"},"scope":7496,"src":"5919:123:47","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7123,"nodeType":"Block","src":"6289:50:47","statements":[{"expression":{"arguments":[{"expression":{"id":7118,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7110,"src":"6314:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7088_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":7119,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6318:6:47","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7087,"src":"6314:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":7120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7112,"src":"6326:5:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7117,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7020,"src":"6306:7:47","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$6894_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":7121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6306:26:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7116,"id":7122,"nodeType":"Return","src":"6299:33:47"}]},"documentation":{"id":7107,"nodeType":"StructuredDocumentation","src":"6048:157:47","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":7124,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6219:6:47","nodeType":"FunctionDefinition","parameters":{"id":7113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7110,"mutability":"mutable","name":"set","nameLocation":"6245:3:47","nodeType":"VariableDeclaration","scope":7124,"src":"6226:22:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7088_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":7109,"nodeType":"UserDefinedTypeName","pathNode":{"id":7108,"name":"Bytes32Set","nameLocations":["6226:10:47"],"nodeType":"IdentifierPath","referencedDeclaration":7088,"src":"6226:10:47"},"referencedDeclaration":7088,"src":"6226:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7088_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":7112,"mutability":"mutable","name":"value","nameLocation":"6258:5:47","nodeType":"VariableDeclaration","scope":7124,"src":"6250:13:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7111,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6250:7:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6225:39:47"},"returnParameters":{"id":7116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7124,"src":"6283:4:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7114,"name":"bool","nodeType":"ElementaryTypeName","src":"6283:4:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6282:6:47"},"scope":7496,"src":"6210:129:47","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7141,"nodeType":"Block","src":"6506:52:47","statements":[{"expression":{"arguments":[{"expression":{"id":7136,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7128,"src":"6533:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7088_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":7137,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6537:6:47","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7087,"src":"6533:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":7138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7130,"src":"6545:5:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7135,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"6523:9:47","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6894_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":7139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6523:28:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7134,"id":7140,"nodeType":"Return","src":"6516:35:47"}]},"documentation":{"id":7125,"nodeType":"StructuredDocumentation","src":"6345:70:47","text":" @dev Returns true if the value is in the set. O(1)."},"id":7142,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6429:8:47","nodeType":"FunctionDefinition","parameters":{"id":7131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7128,"mutability":"mutable","name":"set","nameLocation":"6457:3:47","nodeType":"VariableDeclaration","scope":7142,"src":"6438:22:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7088_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":7127,"nodeType":"UserDefinedTypeName","pathNode":{"id":7126,"name":"Bytes32Set","nameLocations":["6438:10:47"],"nodeType":"IdentifierPath","referencedDeclaration":7088,"src":"6438:10:47"},"referencedDeclaration":7088,"src":"6438:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7088_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":7130,"mutability":"mutable","name":"value","nameLocation":"6470:5:47","nodeType":"VariableDeclaration","scope":7142,"src":"6462:13:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7129,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6462:7:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6437:39:47"},"returnParameters":{"id":7134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7142,"src":"6500:4:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7132,"name":"bool","nodeType":"ElementaryTypeName","src":"6500:4:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6499:6:47"},"scope":7496,"src":"6420:138:47","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7156,"nodeType":"Block","src":"6711:43:47","statements":[{"expression":{"arguments":[{"expression":{"id":7152,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7146,"src":"6736:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7088_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":7153,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6740:6:47","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7087,"src":"6736:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":7151,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7053,"src":"6728:7:47","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6894_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":7154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6728:19:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7150,"id":7155,"nodeType":"Return","src":"6721:26:47"}]},"documentation":{"id":7143,"nodeType":"StructuredDocumentation","src":"6564:70:47","text":" @dev Returns the number of values in the set. O(1)."},"id":7157,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6648:6:47","nodeType":"FunctionDefinition","parameters":{"id":7147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7146,"mutability":"mutable","name":"set","nameLocation":"6674:3:47","nodeType":"VariableDeclaration","scope":7157,"src":"6655:22:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7088_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":7145,"nodeType":"UserDefinedTypeName","pathNode":{"id":7144,"name":"Bytes32Set","nameLocations":["6655:10:47"],"nodeType":"IdentifierPath","referencedDeclaration":7088,"src":"6655:10:47"},"referencedDeclaration":7088,"src":"6655:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7088_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6654:24:47"},"returnParameters":{"id":7150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7157,"src":"6702:7:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7148,"name":"uint256","nodeType":"ElementaryTypeName","src":"6702:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6701:9:47"},"scope":7496,"src":"6639:115:47","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7174,"nodeType":"Block","src":"7179:46:47","statements":[{"expression":{"arguments":[{"expression":{"id":7169,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7161,"src":"7200:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7088_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":7170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7204:6:47","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7087,"src":"7200:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":7171,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7163,"src":"7212:5:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7168,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7070,"src":"7196:3:47","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6894_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":7172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7196:22:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7167,"id":7173,"nodeType":"Return","src":"7189:29:47"}]},"documentation":{"id":7158,"nodeType":"StructuredDocumentation","src":"6760:331:47","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":7175,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7105:2:47","nodeType":"FunctionDefinition","parameters":{"id":7164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7161,"mutability":"mutable","name":"set","nameLocation":"7127:3:47","nodeType":"VariableDeclaration","scope":7175,"src":"7108:22:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7088_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":7160,"nodeType":"UserDefinedTypeName","pathNode":{"id":7159,"name":"Bytes32Set","nameLocations":["7108:10:47"],"nodeType":"IdentifierPath","referencedDeclaration":7088,"src":"7108:10:47"},"referencedDeclaration":7088,"src":"7108:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7088_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":7163,"mutability":"mutable","name":"index","nameLocation":"7140:5:47","nodeType":"VariableDeclaration","scope":7175,"src":"7132:13:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7162,"name":"uint256","nodeType":"ElementaryTypeName","src":"7132:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7107:39:47"},"returnParameters":{"id":7167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7175,"src":"7170:7:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7170:7:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7169:9:47"},"scope":7496,"src":"7096:129:47","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7204,"nodeType":"Block","src":"7846:219:47","statements":[{"assignments":[7189],"declarations":[{"constant":false,"id":7189,"mutability":"mutable","name":"store","nameLocation":"7873:5:47","nodeType":"VariableDeclaration","scope":7204,"src":"7856:22:47","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7187,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7856:7:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7188,"nodeType":"ArrayTypeName","src":"7856:9:47","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":7194,"initialValue":{"arguments":[{"expression":{"id":7191,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7179,"src":"7889:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7088_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":7192,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7893:6:47","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7087,"src":"7889:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":7190,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7084,"src":"7881:7:47","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6894_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":7193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7881:19:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7856:44:47"},{"assignments":[7199],"declarations":[{"constant":false,"id":7199,"mutability":"mutable","name":"result","nameLocation":"7927:6:47","nodeType":"VariableDeclaration","scope":7204,"src":"7910:23:47","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7910:7:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7198,"nodeType":"ArrayTypeName","src":"7910:9:47","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":7200,"nodeType":"VariableDeclarationStatement","src":"7910:23:47"},{"AST":{"nodeType":"YulBlock","src":"7996:39:47","statements":[{"nodeType":"YulAssignment","src":"8010:15:47","value":{"name":"store","nodeType":"YulIdentifier","src":"8020:5:47"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8010:6:47"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":7199,"isOffset":false,"isSlot":false,"src":"8010:6:47","valueSize":1},{"declaration":7189,"isOffset":false,"isSlot":false,"src":"8020:5:47","valueSize":1}],"id":7201,"nodeType":"InlineAssembly","src":"7987:48:47"},{"expression":{"id":7202,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7199,"src":"8052:6:47","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":7184,"id":7203,"nodeType":"Return","src":"8045:13:47"}]},"documentation":{"id":7176,"nodeType":"StructuredDocumentation","src":"7231:529:47","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":7205,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7774:6:47","nodeType":"FunctionDefinition","parameters":{"id":7180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7179,"mutability":"mutable","name":"set","nameLocation":"7800:3:47","nodeType":"VariableDeclaration","scope":7205,"src":"7781:22:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7088_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":7178,"nodeType":"UserDefinedTypeName","pathNode":{"id":7177,"name":"Bytes32Set","nameLocations":["7781:10:47"],"nodeType":"IdentifierPath","referencedDeclaration":7088,"src":"7781:10:47"},"referencedDeclaration":7088,"src":"7781:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7088_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7780:24:47"},"returnParameters":{"id":7184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7205,"src":"7828:16:47","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7181,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7828:7:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7182,"nodeType":"ArrayTypeName","src":"7828:9:47","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7827:18:47"},"scope":7496,"src":"7765:300:47","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":7209,"members":[{"constant":false,"id":7208,"mutability":"mutable","name":"_inner","nameLocation":"8122:6:47","nodeType":"VariableDeclaration","scope":7209,"src":"8118:10:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":7207,"nodeType":"UserDefinedTypeName","pathNode":{"id":7206,"name":"Set","nameLocations":["8118:3:47"],"nodeType":"IdentifierPath","referencedDeclaration":6894,"src":"8118:3:47"},"referencedDeclaration":6894,"src":"8118:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8097:10:47","nodeType":"StructDefinition","scope":7496,"src":"8090:45:47","visibility":"public"},{"body":{"id":7235,"nodeType":"Block","src":"8381:74:47","statements":[{"expression":{"arguments":[{"expression":{"id":7221,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7213,"src":"8403:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7209_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7222,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8407:6:47","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7208,"src":"8403:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":7229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7215,"src":"8439:5:47","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8431:7:47","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7227,"name":"uint160","nodeType":"ElementaryTypeName","src":"8431:7:47","typeDescriptions":{}}},"id":7230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8431:14:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":7226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8423:7:47","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7225,"name":"uint256","nodeType":"ElementaryTypeName","src":"8423:7:47","typeDescriptions":{}}},"id":7231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8423:23:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8415:7:47","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7223,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8415:7:47","typeDescriptions":{}}},"id":7232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8415:32:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7220,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6936,"src":"8398:4:47","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$6894_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":7233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8398:50:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7219,"id":7234,"nodeType":"Return","src":"8391:57:47"}]},"documentation":{"id":7210,"nodeType":"StructuredDocumentation","src":"8141:159:47","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":7236,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8314:3:47","nodeType":"FunctionDefinition","parameters":{"id":7216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7213,"mutability":"mutable","name":"set","nameLocation":"8337:3:47","nodeType":"VariableDeclaration","scope":7236,"src":"8318:22:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7209_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":7212,"nodeType":"UserDefinedTypeName","pathNode":{"id":7211,"name":"AddressSet","nameLocations":["8318:10:47"],"nodeType":"IdentifierPath","referencedDeclaration":7209,"src":"8318:10:47"},"referencedDeclaration":7209,"src":"8318:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7209_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":7215,"mutability":"mutable","name":"value","nameLocation":"8350:5:47","nodeType":"VariableDeclaration","scope":7236,"src":"8342:13:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7214,"name":"address","nodeType":"ElementaryTypeName","src":"8342:7:47","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8317:39:47"},"returnParameters":{"id":7219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7236,"src":"8375:4:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7217,"name":"bool","nodeType":"ElementaryTypeName","src":"8375:4:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8374:6:47"},"scope":7496,"src":"8305:150:47","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7262,"nodeType":"Block","src":"8702:77:47","statements":[{"expression":{"arguments":[{"expression":{"id":7248,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7240,"src":"8727:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7209_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7249,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8731:6:47","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7208,"src":"8727:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":7256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7242,"src":"8763:5:47","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8755:7:47","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7254,"name":"uint160","nodeType":"ElementaryTypeName","src":"8755:7:47","typeDescriptions":{}}},"id":7257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8755:14:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":7253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8747:7:47","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7252,"name":"uint256","nodeType":"ElementaryTypeName","src":"8747:7:47","typeDescriptions":{}}},"id":7258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8747:23:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8739:7:47","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7250,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8739:7:47","typeDescriptions":{}}},"id":7259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8739:32:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7247,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7020,"src":"8719:7:47","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$6894_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":7260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8719:53:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7246,"id":7261,"nodeType":"Return","src":"8712:60:47"}]},"documentation":{"id":7237,"nodeType":"StructuredDocumentation","src":"8461:157:47","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":7263,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8632:6:47","nodeType":"FunctionDefinition","parameters":{"id":7243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7240,"mutability":"mutable","name":"set","nameLocation":"8658:3:47","nodeType":"VariableDeclaration","scope":7263,"src":"8639:22:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7209_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":7239,"nodeType":"UserDefinedTypeName","pathNode":{"id":7238,"name":"AddressSet","nameLocations":["8639:10:47"],"nodeType":"IdentifierPath","referencedDeclaration":7209,"src":"8639:10:47"},"referencedDeclaration":7209,"src":"8639:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7209_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":7242,"mutability":"mutable","name":"value","nameLocation":"8671:5:47","nodeType":"VariableDeclaration","scope":7263,"src":"8663:13:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7241,"name":"address","nodeType":"ElementaryTypeName","src":"8663:7:47","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8638:39:47"},"returnParameters":{"id":7246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7263,"src":"8696:4:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7244,"name":"bool","nodeType":"ElementaryTypeName","src":"8696:4:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8695:6:47"},"scope":7496,"src":"8623:156:47","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7289,"nodeType":"Block","src":"8946:79:47","statements":[{"expression":{"arguments":[{"expression":{"id":7275,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7267,"src":"8973:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7209_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7276,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8977:6:47","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7208,"src":"8973:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":7283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7269,"src":"9009:5:47","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9001:7:47","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7281,"name":"uint160","nodeType":"ElementaryTypeName","src":"9001:7:47","typeDescriptions":{}}},"id":7284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9001:14:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":7280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8993:7:47","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7279,"name":"uint256","nodeType":"ElementaryTypeName","src":"8993:7:47","typeDescriptions":{}}},"id":7285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8993:23:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8985:7:47","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7277,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8985:7:47","typeDescriptions":{}}},"id":7286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8985:32:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7274,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"8963:9:47","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6894_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":7287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8963:55:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7273,"id":7288,"nodeType":"Return","src":"8956:62:47"}]},"documentation":{"id":7264,"nodeType":"StructuredDocumentation","src":"8785:70:47","text":" @dev Returns true if the value is in the set. O(1)."},"id":7290,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8869:8:47","nodeType":"FunctionDefinition","parameters":{"id":7270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7267,"mutability":"mutable","name":"set","nameLocation":"8897:3:47","nodeType":"VariableDeclaration","scope":7290,"src":"8878:22:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7209_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":7266,"nodeType":"UserDefinedTypeName","pathNode":{"id":7265,"name":"AddressSet","nameLocations":["8878:10:47"],"nodeType":"IdentifierPath","referencedDeclaration":7209,"src":"8878:10:47"},"referencedDeclaration":7209,"src":"8878:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7209_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":7269,"mutability":"mutable","name":"value","nameLocation":"8910:5:47","nodeType":"VariableDeclaration","scope":7290,"src":"8902:13:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7268,"name":"address","nodeType":"ElementaryTypeName","src":"8902:7:47","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8877:39:47"},"returnParameters":{"id":7273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7290,"src":"8940:4:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7271,"name":"bool","nodeType":"ElementaryTypeName","src":"8940:4:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8939:6:47"},"scope":7496,"src":"8860:165:47","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7304,"nodeType":"Block","src":"9178:43:47","statements":[{"expression":{"arguments":[{"expression":{"id":7300,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7294,"src":"9203:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7209_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7301,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9207:6:47","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7208,"src":"9203:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":7299,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7053,"src":"9195:7:47","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6894_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":7302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9195:19:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7298,"id":7303,"nodeType":"Return","src":"9188:26:47"}]},"documentation":{"id":7291,"nodeType":"StructuredDocumentation","src":"9031:70:47","text":" @dev Returns the number of values in the set. O(1)."},"id":7305,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9115:6:47","nodeType":"FunctionDefinition","parameters":{"id":7295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7294,"mutability":"mutable","name":"set","nameLocation":"9141:3:47","nodeType":"VariableDeclaration","scope":7305,"src":"9122:22:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7209_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":7293,"nodeType":"UserDefinedTypeName","pathNode":{"id":7292,"name":"AddressSet","nameLocations":["9122:10:47"],"nodeType":"IdentifierPath","referencedDeclaration":7209,"src":"9122:10:47"},"referencedDeclaration":7209,"src":"9122:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7209_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9121:24:47"},"returnParameters":{"id":7298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7305,"src":"9169:7:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7296,"name":"uint256","nodeType":"ElementaryTypeName","src":"9169:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9168:9:47"},"scope":7496,"src":"9106:115:47","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7331,"nodeType":"Block","src":"9646:73:47","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":7323,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7309,"src":"9691:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7209_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7324,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9695:6:47","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7208,"src":"9691:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":7325,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7311,"src":"9703:5:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7322,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7070,"src":"9687:3:47","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6894_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":7326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9687:22:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9679:7:47","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7320,"name":"uint256","nodeType":"ElementaryTypeName","src":"9679:7:47","typeDescriptions":{}}},"id":7327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9679:31:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9671:7:47","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7318,"name":"uint160","nodeType":"ElementaryTypeName","src":"9671:7:47","typeDescriptions":{}}},"id":7328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9671:40:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":7317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9663:7:47","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7316,"name":"address","nodeType":"ElementaryTypeName","src":"9663:7:47","typeDescriptions":{}}},"id":7329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9663:49:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":7315,"id":7330,"nodeType":"Return","src":"9656:56:47"}]},"documentation":{"id":7306,"nodeType":"StructuredDocumentation","src":"9227:331:47","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":7332,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9572:2:47","nodeType":"FunctionDefinition","parameters":{"id":7312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7309,"mutability":"mutable","name":"set","nameLocation":"9594:3:47","nodeType":"VariableDeclaration","scope":7332,"src":"9575:22:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7209_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":7308,"nodeType":"UserDefinedTypeName","pathNode":{"id":7307,"name":"AddressSet","nameLocations":["9575:10:47"],"nodeType":"IdentifierPath","referencedDeclaration":7209,"src":"9575:10:47"},"referencedDeclaration":7209,"src":"9575:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7209_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":7311,"mutability":"mutable","name":"index","nameLocation":"9607:5:47","nodeType":"VariableDeclaration","scope":7332,"src":"9599:13:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7310,"name":"uint256","nodeType":"ElementaryTypeName","src":"9599:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9574:39:47"},"returnParameters":{"id":7315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7332,"src":"9637:7:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7313,"name":"address","nodeType":"ElementaryTypeName","src":"9637:7:47","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9636:9:47"},"scope":7496,"src":"9563:156:47","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7361,"nodeType":"Block","src":"10340:219:47","statements":[{"assignments":[7346],"declarations":[{"constant":false,"id":7346,"mutability":"mutable","name":"store","nameLocation":"10367:5:47","nodeType":"VariableDeclaration","scope":7361,"src":"10350:22:47","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7344,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10350:7:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7345,"nodeType":"ArrayTypeName","src":"10350:9:47","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":7351,"initialValue":{"arguments":[{"expression":{"id":7348,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7336,"src":"10383:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7209_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":7349,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10387:6:47","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7208,"src":"10383:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":7347,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7084,"src":"10375:7:47","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6894_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":7350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10375:19:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10350:44:47"},{"assignments":[7356],"declarations":[{"constant":false,"id":7356,"mutability":"mutable","name":"result","nameLocation":"10421:6:47","nodeType":"VariableDeclaration","scope":7361,"src":"10404:23:47","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7354,"name":"address","nodeType":"ElementaryTypeName","src":"10404:7:47","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7355,"nodeType":"ArrayTypeName","src":"10404:9:47","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":7357,"nodeType":"VariableDeclarationStatement","src":"10404:23:47"},{"AST":{"nodeType":"YulBlock","src":"10490:39:47","statements":[{"nodeType":"YulAssignment","src":"10504:15:47","value":{"name":"store","nodeType":"YulIdentifier","src":"10514:5:47"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10504:6:47"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":7356,"isOffset":false,"isSlot":false,"src":"10504:6:47","valueSize":1},{"declaration":7346,"isOffset":false,"isSlot":false,"src":"10514:5:47","valueSize":1}],"id":7358,"nodeType":"InlineAssembly","src":"10481:48:47"},{"expression":{"id":7359,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7356,"src":"10546:6:47","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":7341,"id":7360,"nodeType":"Return","src":"10539:13:47"}]},"documentation":{"id":7333,"nodeType":"StructuredDocumentation","src":"9725:529:47","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":7362,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10268:6:47","nodeType":"FunctionDefinition","parameters":{"id":7337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7336,"mutability":"mutable","name":"set","nameLocation":"10294:3:47","nodeType":"VariableDeclaration","scope":7362,"src":"10275:22:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7209_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":7335,"nodeType":"UserDefinedTypeName","pathNode":{"id":7334,"name":"AddressSet","nameLocations":["10275:10:47"],"nodeType":"IdentifierPath","referencedDeclaration":7209,"src":"10275:10:47"},"referencedDeclaration":7209,"src":"10275:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$7209_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10274:24:47"},"returnParameters":{"id":7341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7362,"src":"10322:16:47","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7338,"name":"address","nodeType":"ElementaryTypeName","src":"10322:7:47","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7339,"nodeType":"ArrayTypeName","src":"10322:9:47","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10321:18:47"},"scope":7496,"src":"10259:300:47","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":7366,"members":[{"constant":false,"id":7365,"mutability":"mutable","name":"_inner","nameLocation":"10610:6:47","nodeType":"VariableDeclaration","scope":7366,"src":"10606:10:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":7364,"nodeType":"UserDefinedTypeName","pathNode":{"id":7363,"name":"Set","nameLocations":["10606:3:47"],"nodeType":"IdentifierPath","referencedDeclaration":6894,"src":"10606:3:47"},"referencedDeclaration":6894,"src":"10606:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10588:7:47","nodeType":"StructDefinition","scope":7496,"src":"10581:42:47","visibility":"public"},{"body":{"id":7386,"nodeType":"Block","src":"10866:56:47","statements":[{"expression":{"arguments":[{"expression":{"id":7378,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7370,"src":"10888:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7366_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":7379,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10892:6:47","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7365,"src":"10888:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":7382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7372,"src":"10908:5:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10900:7:47","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7380,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10900:7:47","typeDescriptions":{}}},"id":7383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10900:14:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7377,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6936,"src":"10883:4:47","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$6894_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":7384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10883:32:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7376,"id":7385,"nodeType":"Return","src":"10876:39:47"}]},"documentation":{"id":7367,"nodeType":"StructuredDocumentation","src":"10629:159:47","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":7387,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10802:3:47","nodeType":"FunctionDefinition","parameters":{"id":7373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7370,"mutability":"mutable","name":"set","nameLocation":"10822:3:47","nodeType":"VariableDeclaration","scope":7387,"src":"10806:19:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7366_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":7369,"nodeType":"UserDefinedTypeName","pathNode":{"id":7368,"name":"UintSet","nameLocations":["10806:7:47"],"nodeType":"IdentifierPath","referencedDeclaration":7366,"src":"10806:7:47"},"referencedDeclaration":7366,"src":"10806:7:47","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7366_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":7372,"mutability":"mutable","name":"value","nameLocation":"10835:5:47","nodeType":"VariableDeclaration","scope":7387,"src":"10827:13:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7371,"name":"uint256","nodeType":"ElementaryTypeName","src":"10827:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10805:36:47"},"returnParameters":{"id":7376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7387,"src":"10860:4:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7374,"name":"bool","nodeType":"ElementaryTypeName","src":"10860:4:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10859:6:47"},"scope":7496,"src":"10793:129:47","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7407,"nodeType":"Block","src":"11166:59:47","statements":[{"expression":{"arguments":[{"expression":{"id":7399,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7391,"src":"11191:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7366_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":7400,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11195:6:47","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7365,"src":"11191:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":7403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"11211:5:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11203:7:47","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7401,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11203:7:47","typeDescriptions":{}}},"id":7404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11203:14:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7398,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7020,"src":"11183:7:47","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$6894_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":7405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11183:35:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7397,"id":7406,"nodeType":"Return","src":"11176:42:47"}]},"documentation":{"id":7388,"nodeType":"StructuredDocumentation","src":"10928:157:47","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":7408,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11099:6:47","nodeType":"FunctionDefinition","parameters":{"id":7394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7391,"mutability":"mutable","name":"set","nameLocation":"11122:3:47","nodeType":"VariableDeclaration","scope":7408,"src":"11106:19:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7366_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":7390,"nodeType":"UserDefinedTypeName","pathNode":{"id":7389,"name":"UintSet","nameLocations":["11106:7:47"],"nodeType":"IdentifierPath","referencedDeclaration":7366,"src":"11106:7:47"},"referencedDeclaration":7366,"src":"11106:7:47","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7366_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":7393,"mutability":"mutable","name":"value","nameLocation":"11135:5:47","nodeType":"VariableDeclaration","scope":7408,"src":"11127:13:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7392,"name":"uint256","nodeType":"ElementaryTypeName","src":"11127:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11105:36:47"},"returnParameters":{"id":7397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7408,"src":"11160:4:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7395,"name":"bool","nodeType":"ElementaryTypeName","src":"11160:4:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11159:6:47"},"scope":7496,"src":"11090:135:47","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7428,"nodeType":"Block","src":"11389:61:47","statements":[{"expression":{"arguments":[{"expression":{"id":7420,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7412,"src":"11416:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7366_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":7421,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11420:6:47","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7365,"src":"11416:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":7424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"11436:5:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11428:7:47","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7422,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11428:7:47","typeDescriptions":{}}},"id":7425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11428:14:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7419,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"11406:9:47","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6894_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":7426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11406:37:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7418,"id":7427,"nodeType":"Return","src":"11399:44:47"}]},"documentation":{"id":7409,"nodeType":"StructuredDocumentation","src":"11231:70:47","text":" @dev Returns true if the value is in the set. O(1)."},"id":7429,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11315:8:47","nodeType":"FunctionDefinition","parameters":{"id":7415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7412,"mutability":"mutable","name":"set","nameLocation":"11340:3:47","nodeType":"VariableDeclaration","scope":7429,"src":"11324:19:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7366_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":7411,"nodeType":"UserDefinedTypeName","pathNode":{"id":7410,"name":"UintSet","nameLocations":["11324:7:47"],"nodeType":"IdentifierPath","referencedDeclaration":7366,"src":"11324:7:47"},"referencedDeclaration":7366,"src":"11324:7:47","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7366_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":7414,"mutability":"mutable","name":"value","nameLocation":"11353:5:47","nodeType":"VariableDeclaration","scope":7429,"src":"11345:13:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7413,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11323:36:47"},"returnParameters":{"id":7418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7429,"src":"11383:4:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7416,"name":"bool","nodeType":"ElementaryTypeName","src":"11383:4:47","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11382:6:47"},"scope":7496,"src":"11306:144:47","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7443,"nodeType":"Block","src":"11600:43:47","statements":[{"expression":{"arguments":[{"expression":{"id":7439,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"11625:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7366_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":7440,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11629:6:47","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7365,"src":"11625:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":7438,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7053,"src":"11617:7:47","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6894_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":7441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11617:19:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7437,"id":7442,"nodeType":"Return","src":"11610:26:47"}]},"documentation":{"id":7430,"nodeType":"StructuredDocumentation","src":"11456:70:47","text":" @dev Returns the number of values in the set. O(1)."},"id":7444,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11540:6:47","nodeType":"FunctionDefinition","parameters":{"id":7434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7433,"mutability":"mutable","name":"set","nameLocation":"11563:3:47","nodeType":"VariableDeclaration","scope":7444,"src":"11547:19:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7366_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":7432,"nodeType":"UserDefinedTypeName","pathNode":{"id":7431,"name":"UintSet","nameLocations":["11547:7:47"],"nodeType":"IdentifierPath","referencedDeclaration":7366,"src":"11547:7:47"},"referencedDeclaration":7366,"src":"11547:7:47","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7366_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11546:21:47"},"returnParameters":{"id":7437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7444,"src":"11591:7:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7435,"name":"uint256","nodeType":"ElementaryTypeName","src":"11591:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11590:9:47"},"scope":7496,"src":"11531:112:47","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7464,"nodeType":"Block","src":"12065:55:47","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":7458,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7448,"src":"12094:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7366_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":7459,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12098:6:47","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7365,"src":"12094:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":7460,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"12106:5:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7457,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7070,"src":"12090:3:47","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6894_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":7461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12090:22:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12082:7:47","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7455,"name":"uint256","nodeType":"ElementaryTypeName","src":"12082:7:47","typeDescriptions":{}}},"id":7462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12082:31:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7454,"id":7463,"nodeType":"Return","src":"12075:38:47"}]},"documentation":{"id":7445,"nodeType":"StructuredDocumentation","src":"11649:331:47","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":7465,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11994:2:47","nodeType":"FunctionDefinition","parameters":{"id":7451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7448,"mutability":"mutable","name":"set","nameLocation":"12013:3:47","nodeType":"VariableDeclaration","scope":7465,"src":"11997:19:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7366_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":7447,"nodeType":"UserDefinedTypeName","pathNode":{"id":7446,"name":"UintSet","nameLocations":["11997:7:47"],"nodeType":"IdentifierPath","referencedDeclaration":7366,"src":"11997:7:47"},"referencedDeclaration":7366,"src":"11997:7:47","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7366_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":7450,"mutability":"mutable","name":"index","nameLocation":"12026:5:47","nodeType":"VariableDeclaration","scope":7465,"src":"12018:13:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7449,"name":"uint256","nodeType":"ElementaryTypeName","src":"12018:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11996:36:47"},"returnParameters":{"id":7454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7465,"src":"12056:7:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7452,"name":"uint256","nodeType":"ElementaryTypeName","src":"12056:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12055:9:47"},"scope":7496,"src":"11985:135:47","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7494,"nodeType":"Block","src":"12738:219:47","statements":[{"assignments":[7479],"declarations":[{"constant":false,"id":7479,"mutability":"mutable","name":"store","nameLocation":"12765:5:47","nodeType":"VariableDeclaration","scope":7494,"src":"12748:22:47","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12748:7:47","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7478,"nodeType":"ArrayTypeName","src":"12748:9:47","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":7484,"initialValue":{"arguments":[{"expression":{"id":7481,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7469,"src":"12781:3:47","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7366_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":7482,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12785:6:47","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":7365,"src":"12781:10:47","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$6894_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":7480,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7084,"src":"12773:7:47","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$6894_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":7483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12773:19:47","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12748:44:47"},{"assignments":[7489],"declarations":[{"constant":false,"id":7489,"mutability":"mutable","name":"result","nameLocation":"12819:6:47","nodeType":"VariableDeclaration","scope":7494,"src":"12802:23:47","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7487,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7488,"nodeType":"ArrayTypeName","src":"12802:9:47","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":7490,"nodeType":"VariableDeclarationStatement","src":"12802:23:47"},{"AST":{"nodeType":"YulBlock","src":"12888:39:47","statements":[{"nodeType":"YulAssignment","src":"12902:15:47","value":{"name":"store","nodeType":"YulIdentifier","src":"12912:5:47"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12902:6:47"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":7489,"isOffset":false,"isSlot":false,"src":"12902:6:47","valueSize":1},{"declaration":7479,"isOffset":false,"isSlot":false,"src":"12912:5:47","valueSize":1}],"id":7491,"nodeType":"InlineAssembly","src":"12879:48:47"},{"expression":{"id":7492,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7489,"src":"12944:6:47","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":7474,"id":7493,"nodeType":"Return","src":"12937:13:47"}]},"documentation":{"id":7466,"nodeType":"StructuredDocumentation","src":"12126:529:47","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":7495,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12669:6:47","nodeType":"FunctionDefinition","parameters":{"id":7470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7469,"mutability":"mutable","name":"set","nameLocation":"12692:3:47","nodeType":"VariableDeclaration","scope":7495,"src":"12676:19:47","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7366_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":7468,"nodeType":"UserDefinedTypeName","pathNode":{"id":7467,"name":"UintSet","nameLocations":["12676:7:47"],"nodeType":"IdentifierPath","referencedDeclaration":7366,"src":"12676:7:47"},"referencedDeclaration":7366,"src":"12676:7:47","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$7366_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12675:21:47"},"returnParameters":{"id":7474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7495,"src":"12720:16:47","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7471,"name":"uint256","nodeType":"ElementaryTypeName","src":"12720:7:47","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7472,"nodeType":"ArrayTypeName","src":"12720:9:47","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12719:18:47"},"scope":7496,"src":"12660:297:47","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":7497,"src":"1329:11630:47","usedErrors":[],"usedEvents":[]}],"src":"205:12755:47"},"id":47},"contracts/OrderExtension.sol":{"ast":{"absolutePath":"contracts/OrderExtension.sol","exportedSymbols":{"Context":[5006],"ECDSA":[5682],"EnumerableSet":[7496],"IERC1271":[4654],"IERC725X":[1078],"ILSP0ERC725Account":[1164],"ILSP8IdentifiableDigitalAsset":[2715],"LSP17Extension":[1550],"LSP2Utils":[2294],"LSP8Burnable":[4527],"OrderExtension":[8127],"Ownable":[4640],"_BURN_AFTER_USE":[7521],"_DATAKEY_TOKENID_TYPE":[8144],"_ERC1271_FAILVALUE":[8153],"_ERC1271_MAGICVALUE":[8150],"_INTERFACEID_CAPPED_LSP8":[8135],"_INTERFACEID_IDENTIFIABLE_PHYTIGAL_ASSET":[8138],"_INTERFACEID_LSP17_EXTENDABLE":[1295],"_INTERFACEID_LSP17_EXTENSION":[1298],"_INTERFACEID_LSP8":[2720],"_LSP17_EXTENSION_PREFIX":[1301],"_LSP3_SUPPORTED_STANDARDS_KEY":[8156],"_LSP3_SUPPORTED_STANDARDS_VALUE":[8159],"_LSP4_CREATORS_ARRAY_KEY":[2323],"_LSP4_CREATORS_MAP_KEY_PREFIX":[2326],"_LSP4_METADATA_KEY":[2329],"_LSP4_SUPPORTED_STANDARDS_KEY":[2308],"_LSP4_SUPPORTED_STANDARDS_VALUE":[2311],"_LSP4_TOKEN_NAME_KEY":[2314],"_LSP4_TOKEN_SYMBOL_KEY":[2317],"_LSP4_TOKEN_TYPE_COLLECTION":[2305],"_LSP4_TOKEN_TYPE_KEY":[2320],"_LSP4_TOKEN_TYPE_NFT":[2302],"_LSP4_TOKEN_TYPE_TOKEN":[2299],"_LSP8_REFERENCE_CONTRACT":[2729],"_LSP8_TOKENID_FORMAT_ADDRESS":[2747],"_LSP8_TOKENID_FORMAT_HASH":[2753],"_LSP8_TOKENID_FORMAT_KEY":[2723],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_ADDRESS":[2762],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_HASH":[2768],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_NUMBER":[2756],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_STRING":[2759],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_UNIQUE_ID":[2765],"_LSP8_TOKENID_FORMAT_NUMBER":[2741],"_LSP8_TOKENID_FORMAT_STRING":[2744],"_LSP8_TOKENID_FORMAT_UNIQUE_ID":[2750],"_LSP8_TOKEN_METADATA_BASE_URI":[2726],"_LSP8_TOKEN_METADATA_KEY_PREFIX":[8141],"_MSG_HASH_PREFIX":[8147],"_PERMISSION_SIGN":[8162],"_TYPEID_LSP8_TOKENOPERATOR":[2738],"_TYPEID_LSP8_TOKENSRECIPIENT":[2735],"_TYPEID_LSP8_TOKENSSENDER":[2732]},"id":8128,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":7498,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"39:23:48"},{"absolutePath":"contracts/constants.sol","file":"./constants.sol","id":7499,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8128,"sourceUnit":8163,"src":"64:25:48","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1271.sol","file":"@openzeppelin/contracts/interfaces/IERC1271.sol","id":7501,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8128,"sourceUnit":4655,"src":"124:73:48","symbolAliases":[{"foreign":{"id":7500,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"132:8:48","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":7503,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8128,"sourceUnit":5683,"src":"198:75:48","symbolAliases":[{"foreign":{"id":7502,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"206:5:48","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@erc725/smart-contracts/contracts/ERC725XCore.sol","file":"@erc725/smart-contracts/contracts/ERC725XCore.sol","id":7505,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8128,"sourceUnit":576,"src":"274:75:48","symbolAliases":[{"foreign":{"id":7504,"name":"IERC725X","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"282:8:48","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Extension.sol","file":"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Extension.sol","id":7507,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8128,"sourceUnit":1139,"src":"351:110:48","symbolAliases":[{"foreign":{"id":7506,"name":"LSP17Extension","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"359:14:48","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/ILSP0ERC725Account.sol","file":"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/ILSP0ERC725Account.sol","id":7509,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8128,"sourceUnit":1133,"src":"462:113:48","symbolAliases":[{"foreign":{"id":7508,"name":"ILSP0ERC725Account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"470:18:48","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol","file":"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol","id":7511,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8128,"sourceUnit":1145,"src":"576:146:48","symbolAliases":[{"foreign":{"id":7510,"name":"ILSP8IdentifiableDigitalAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"584:29:48","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp2-contracts/contracts/LSP2Utils.sol","file":"@lukso/lsp2-contracts/contracts/LSP2Utils.sol","id":7513,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8128,"sourceUnit":2295,"src":"723:72:48","symbolAliases":[{"foreign":{"id":7512,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"731:9:48","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/extensions/LSP8Burnable.sol","file":"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/extensions/LSP8Burnable.sol","id":7515,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8128,"sourceUnit":1151,"src":"796:123:48","symbolAliases":[{"foreign":{"id":7514,"name":"LSP8Burnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4527,"src":"804:12:48","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7516,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8128,"sourceUnit":4641,"src":"920:52:48","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","id":7518,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8128,"sourceUnit":7497,"src":"973:86:48","symbolAliases":[{"foreign":{"id":7517,"name":"EnumerableSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7496,"src":"981:13:48","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"constant":true,"id":7521,"mutability":"constant","name":"_BURN_AFTER_USE","nameLocation":"1077:15:48","nodeType":"VariableDeclaration","scope":8128,"src":"1061:40:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"typeName":{"id":7519,"name":"bytes2","nodeType":"ElementaryTypeName","src":"1061:6:48","typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"value":{"hexValue":"307866666666","id":7520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1095:6:48","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"visibility":"internal"},{"abstract":false,"baseContracts":[{"baseName":{"id":7522,"name":"LSP17Extension","nameLocations":["1131:14:48"],"nodeType":"IdentifierPath","referencedDeclaration":1550,"src":"1131:14:48"},"id":7523,"nodeType":"InheritanceSpecifier","src":"1131:14:48"},{"baseName":{"id":7524,"name":"Ownable","nameLocations":["1147:7:48"],"nodeType":"IdentifierPath","referencedDeclaration":4640,"src":"1147:7:48"},"id":7525,"nodeType":"InheritanceSpecifier","src":"1147:7:48"}],"canonicalName":"OrderExtension","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8127,"linearizedBaseContracts":[8127,4640,5006,1550,1557,5706,5912],"name":"OrderExtension","nameLocation":"1113:14:48","nodeType":"ContractDefinition","nodes":[{"global":false,"id":7529,"libraryName":{"id":7526,"name":"EnumerableSet","nameLocations":["1167:13:48"],"nodeType":"IdentifierPath","referencedDeclaration":7496,"src":"1167:13:48"},"nodeType":"UsingForDirective","src":"1161:49:48","typeName":{"id":7528,"nodeType":"UserDefinedTypeName","pathNode":{"id":7527,"name":"EnumerableSet.Bytes32Set","nameLocations":["1185:13:48","1199:10:48"],"nodeType":"IdentifierPath","referencedDeclaration":7088,"src":"1185:24:48"},"referencedDeclaration":7088,"src":"1185:24:48","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7088_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}}},{"constant":false,"id":7531,"mutability":"mutable","name":"target","nameLocation":"1224:6:48","nodeType":"VariableDeclaration","scope":8127,"src":"1216:14:48","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7530,"name":"address","nodeType":"ElementaryTypeName","src":"1216:7:48","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"errorSelector":"3a713616","id":7533,"name":"BlockAlreadyConfirmed","nameLocation":"1243:21:48","nodeType":"ErrorDefinition","parameters":{"id":7532,"nodeType":"ParameterList","parameters":[],"src":"1264:2:48"},"src":"1237:30:48"},{"errorSelector":"8baa579f","id":7535,"name":"InvalidSignature","nameLocation":"1278:16:48","nodeType":"ErrorDefinition","parameters":{"id":7534,"nodeType":"ParameterList","parameters":[],"src":"1294:2:48"},"src":"1272:25:48"},{"errorSelector":"d2ade556","id":7537,"name":"IncorrectValue","nameLocation":"1308:14:48","nodeType":"ErrorDefinition","parameters":{"id":7536,"nodeType":"ParameterList","parameters":[],"src":"1322:2:48"},"src":"1302:23:48"},{"errorSelector":"756688fe","id":7539,"name":"InvalidNonce","nameLocation":"1336:12:48","nodeType":"ErrorDefinition","parameters":{"id":7538,"nodeType":"ParameterList","parameters":[],"src":"1348:2:48"},"src":"1330:21:48"},{"errorSelector":"7da44002","id":7541,"name":"CallerNotTarget","nameLocation":"1362:15:48","nodeType":"ErrorDefinition","parameters":{"id":7540,"nodeType":"ParameterList","parameters":[],"src":"1377:2:48"},"src":"1356:24:48"},{"errorSelector":"f458de71","id":7543,"name":"CallerNotPerkOwner","nameLocation":"1391:18:48","nodeType":"ErrorDefinition","parameters":{"id":7542,"nodeType":"ParameterList","parameters":[],"src":"1409:2:48"},"src":"1385:27:48"},{"errorSelector":"f4249fb3","id":7545,"name":"PerkAlreadyClaimed","nameLocation":"1423:18:48","nodeType":"ErrorDefinition","parameters":{"id":7544,"nodeType":"ParameterList","parameters":[],"src":"1441:2:48"},"src":"1417:27:48"},{"constant":false,"id":7549,"mutability":"mutable","name":"_nonces","nameLocation":"1475:7:48","nodeType":"VariableDeclaration","scope":8127,"src":"1450:32:48","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":7548,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7546,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1458:7:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1450:24:48","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7547,"name":"bool","nodeType":"ElementaryTypeName","src":"1469:4:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":7554,"mutability":"mutable","name":"perkClaims","nameLocation":"1534:10:48","nodeType":"VariableDeclaration","scope":8127,"src":"1489:55:48","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$7088_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set)"},"typeName":{"id":7553,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7550,"name":"address","nodeType":"ElementaryTypeName","src":"1497:7:48","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1489:44:48","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$7088_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7552,"nodeType":"UserDefinedTypeName","pathNode":{"id":7551,"name":"EnumerableSet.Bytes32Set","nameLocations":["1508:13:48","1522:10:48"],"nodeType":"IdentifierPath","referencedDeclaration":7088,"src":"1508:24:48"},"referencedDeclaration":7088,"src":"1508:24:48","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7088_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}}},"visibility":"internal"},{"anonymous":false,"eventSelector":"7f8cffd58ac96898bdd25ab64868bd933141d15ad1cd4a0df228fd3fcba2a26d","id":7558,"name":"TargetChanged","nameLocation":"1557:13:48","nodeType":"EventDefinition","parameters":{"id":7557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7556,"indexed":false,"mutability":"mutable","name":"newTarget","nameLocation":"1579:9:48","nodeType":"VariableDeclaration","scope":7558,"src":"1571:17:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7555,"name":"address","nodeType":"ElementaryTypeName","src":"1571:7:48","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1570:19:48"},"src":"1551:39:48"},{"anonymous":false,"eventSelector":"e4a6407979da9518dfbc88bfe7f0f53a52c4c16e1f54a90bf1ff721d341ef443","id":7562,"name":"OrderCreated","nameLocation":"1601:12:48","nodeType":"EventDefinition","parameters":{"id":7561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7560,"indexed":false,"mutability":"mutable","name":"orderId","nameLocation":"1620:7:48","nodeType":"VariableDeclaration","scope":7562,"src":"1614:13:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7559,"name":"bytes","nodeType":"ElementaryTypeName","src":"1614:5:48","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1613:15:48"},"src":"1595:34:48"},{"body":{"id":7571,"nodeType":"Block","src":"1664:33:48","statements":[{"expression":{"id":7569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7567,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"1674:6:48","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7568,"name":"target_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7564,"src":"1683:7:48","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1674:16:48","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7570,"nodeType":"ExpressionStatement","src":"1674:16:48"}]},"id":7572,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7564,"mutability":"mutable","name":"target_","nameLocation":"1655:7:48","nodeType":"VariableDeclaration","scope":7572,"src":"1647:15:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7563,"name":"address","nodeType":"ElementaryTypeName","src":"1647:7:48","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1646:17:48"},"returnParameters":{"id":7566,"nodeType":"ParameterList","parameters":[],"src":"1664:0:48"},"scope":8127,"src":"1635:62:48","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7611,"nodeType":"Block","src":"1937:223:48","statements":[{"expression":{"id":7609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7589,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"1947:7:48","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":7595,"name":"collection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7574,"src":"1991:10:48","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1983:7:48","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":7593,"name":"bytes20","nodeType":"ElementaryTypeName","src":"1983:7:48","typeDescriptions":{}}},"id":7596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1983:19:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},{"arguments":[{"id":7599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7576,"src":"2033:5:48","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7597,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2016:3:48","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2020:12:48","memberName":"encodePacked","nodeType":"MemberAccess","src":"2016:16:48","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2016:23:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"id":7603,"name":"maxBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7578,"src":"2070:14:48","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7601,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2053:3:48","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2057:12:48","memberName":"encodePacked","nodeType":"MemberAccess","src":"2053:16:48","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2053:32:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7605,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7580,"src":"2099:5:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7606,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7582,"src":"2118:4:48","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7607,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7584,"src":"2136:7:48","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:5:48","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7590,"name":"bytes","nodeType":"ElementaryTypeName","src":"1957:5:48","typeDescriptions":{}}},"id":7592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1963:6:48","memberName":"concat","nodeType":"MemberAccess","src":"1957:12:48","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:196:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1947:206:48","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7610,"nodeType":"ExpressionStatement","src":"1947:206:48"}]},"functionSelector":"bfb6e08b","id":7612,"implemented":true,"kind":"function","modifiers":[],"name":"getOrderHash","nameLocation":"1712:12:48","nodeType":"FunctionDefinition","parameters":{"id":7585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7574,"mutability":"mutable","name":"collection","nameLocation":"1742:10:48","nodeType":"VariableDeclaration","scope":7612,"src":"1734:18:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7573,"name":"address","nodeType":"ElementaryTypeName","src":"1734:7:48","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7576,"mutability":"mutable","name":"value","nameLocation":"1770:5:48","nodeType":"VariableDeclaration","scope":7612,"src":"1762:13:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7575,"name":"uint256","nodeType":"ElementaryTypeName","src":"1762:7:48","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7578,"mutability":"mutable","name":"maxBlockNumber","nameLocation":"1793:14:48","nodeType":"VariableDeclaration","scope":7612,"src":"1785:22:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7577,"name":"uint256","nodeType":"ElementaryTypeName","src":"1785:7:48","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7580,"mutability":"mutable","name":"nonce","nameLocation":"1825:5:48","nodeType":"VariableDeclaration","scope":7612,"src":"1817:13:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7579,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1817:7:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7582,"mutability":"mutable","name":"data","nameLocation":"1853:4:48","nodeType":"VariableDeclaration","scope":7612,"src":"1840:17:48","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7581,"name":"bytes","nodeType":"ElementaryTypeName","src":"1840:5:48","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7584,"mutability":"mutable","name":"orderId","nameLocation":"1880:7:48","nodeType":"VariableDeclaration","scope":7612,"src":"1867:20:48","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7583,"name":"bytes","nodeType":"ElementaryTypeName","src":"1867:5:48","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1724:169:48"},"returnParameters":{"id":7588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7587,"mutability":"mutable","name":"message","nameLocation":"1928:7:48","nodeType":"VariableDeclaration","scope":7612,"src":"1915:20:48","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7586,"name":"bytes","nodeType":"ElementaryTypeName","src":"1915:5:48","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1914:22:48"},"scope":8127,"src":"1703:457:48","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":7660,"nodeType":"Block","src":"2463:282:48","statements":[{"expression":{"id":7658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7633,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7631,"src":"2473:7:48","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":7639,"name":"collection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7614,"src":"2517:10:48","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:48","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":7637,"name":"bytes20","nodeType":"ElementaryTypeName","src":"2509:7:48","typeDescriptions":{}}},"id":7640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:19:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},{"arguments":[{"id":7643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7616,"src":"2559:5:48","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7641,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2542:3:48","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2546:12:48","memberName":"encodePacked","nodeType":"MemberAccess","src":"2542:16:48","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:23:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"id":7647,"name":"maxBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7618,"src":"2596:14:48","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7645,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2579:3:48","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2583:12:48","memberName":"encodePacked","nodeType":"MemberAccess","src":"2579:16:48","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2579:32:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"id":7651,"name":"perkAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7620,"src":"2633:11:48","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:48","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":7649,"name":"bytes20","nodeType":"ElementaryTypeName","src":"2625:7:48","typeDescriptions":{}}},"id":7652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:20:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},{"id":7653,"name":"perkTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7622,"src":"2659:11:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7654,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7628,"src":"2684:7:48","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7655,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7624,"src":"2705:5:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7656,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7626,"src":"2724:4:48","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2483:5:48","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7634,"name":"bytes","nodeType":"ElementaryTypeName","src":"2483:5:48","typeDescriptions":{}}},"id":7636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2489:6:48","memberName":"concat","nodeType":"MemberAccess","src":"2483:12:48","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2483:255:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"2473:265:48","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7659,"nodeType":"ExpressionStatement","src":"2473:265:48"}]},"functionSelector":"d5212e3c","id":7661,"implemented":true,"kind":"function","modifiers":[],"name":"getRedeemPerkHash","nameLocation":"2175:17:48","nodeType":"FunctionDefinition","parameters":{"id":7629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7614,"mutability":"mutable","name":"collection","nameLocation":"2210:10:48","nodeType":"VariableDeclaration","scope":7661,"src":"2202:18:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7613,"name":"address","nodeType":"ElementaryTypeName","src":"2202:7:48","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7616,"mutability":"mutable","name":"value","nameLocation":"2238:5:48","nodeType":"VariableDeclaration","scope":7661,"src":"2230:13:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7615,"name":"uint256","nodeType":"ElementaryTypeName","src":"2230:7:48","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7618,"mutability":"mutable","name":"maxBlockNumber","nameLocation":"2261:14:48","nodeType":"VariableDeclaration","scope":7661,"src":"2253:22:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7617,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:48","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7620,"mutability":"mutable","name":"perkAddress","nameLocation":"2293:11:48","nodeType":"VariableDeclaration","scope":7661,"src":"2285:19:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7619,"name":"address","nodeType":"ElementaryTypeName","src":"2285:7:48","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7622,"mutability":"mutable","name":"perkTokenId","nameLocation":"2322:11:48","nodeType":"VariableDeclaration","scope":7661,"src":"2314:19:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7621,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2314:7:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7624,"mutability":"mutable","name":"nonce","nameLocation":"2351:5:48","nodeType":"VariableDeclaration","scope":7661,"src":"2343:13:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7623,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2343:7:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7626,"mutability":"mutable","name":"data","nameLocation":"2379:4:48","nodeType":"VariableDeclaration","scope":7661,"src":"2366:17:48","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7625,"name":"bytes","nodeType":"ElementaryTypeName","src":"2366:5:48","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7628,"mutability":"mutable","name":"orderId","nameLocation":"2406:7:48","nodeType":"VariableDeclaration","scope":7661,"src":"2393:20:48","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7627,"name":"bytes","nodeType":"ElementaryTypeName","src":"2393:5:48","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2192:227:48"},"returnParameters":{"id":7632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7631,"mutability":"mutable","name":"message","nameLocation":"2454:7:48","nodeType":"VariableDeclaration","scope":7661,"src":"2441:20:48","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7630,"name":"bytes","nodeType":"ElementaryTypeName","src":"2441:5:48","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2440:22:48"},"scope":8127,"src":"2166:579:48","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":7871,"nodeType":"Block","src":"3037:1794:48","statements":[{"assignments":[7683],"declarations":[{"constant":false,"id":7683,"mutability":"mutable","name":"message","nameLocation":"3060:7:48","nodeType":"VariableDeclaration","scope":7871,"src":"3047:20:48","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7682,"name":"bytes","nodeType":"ElementaryTypeName","src":"3047:5:48","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":7708,"initialValue":{"arguments":[{"arguments":[{"id":7689,"name":"collection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7663,"src":"3104:10:48","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3096:7:48","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":7687,"name":"bytes20","nodeType":"ElementaryTypeName","src":"3096:7:48","typeDescriptions":{}}},"id":7690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3096:19:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},{"arguments":[{"id":7693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"3146:5:48","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7691,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3129:3:48","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3133:12:48","memberName":"encodePacked","nodeType":"MemberAccess","src":"3129:16:48","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3129:23:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"id":7697,"name":"maxBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7671,"src":"3183:14:48","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7695,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3166:3:48","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3170:12:48","memberName":"encodePacked","nodeType":"MemberAccess","src":"3166:16:48","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3166:32:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"id":7701,"name":"perkAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7665,"src":"3220:11:48","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3212:7:48","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":7699,"name":"bytes20","nodeType":"ElementaryTypeName","src":"3212:7:48","typeDescriptions":{}}},"id":7702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3212:20:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},{"id":7703,"name":"perkTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7667,"src":"3246:11:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7704,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7679,"src":"3271:7:48","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7705,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7673,"src":"3292:5:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7706,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7675,"src":"3311:4:48","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes20","typeString":"bytes20"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3070:5:48","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7684,"name":"bytes","nodeType":"ElementaryTypeName","src":"3070:5:48","typeDescriptions":{}}},"id":7686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3076:6:48","memberName":"concat","nodeType":"MemberAccess","src":"3070:12:48","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:255:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3047:278:48"},{"assignments":[7710],"declarations":[{"constant":false,"id":7710,"mutability":"mutable","name":"messageHash","nameLocation":"3343:11:48","nodeType":"VariableDeclaration","scope":7871,"src":"3335:19:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7709,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3335:7:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7717,"initialValue":{"arguments":[{"arguments":[{"id":7714,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7683,"src":"3396:7:48","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7713,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3386:9:48","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:18:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":7711,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"3357:5:48","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$5682_$","typeString":"type(library ECDSA)"}},"id":7712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3363:22:48","memberName":"toEthSignedMessageHash","nodeType":"MemberAccess","referencedDeclaration":5627,"src":"3357:28:48","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":7716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3357:48:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3335:70:48"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7718,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3420:3:48","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3424:6:48","memberName":"sender","nodeType":"MemberAccess","src":"3420:10:48","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7720,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"3434:6:48","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3420:20:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7726,"nodeType":"IfStatement","src":"3416:75:48","trueBody":{"id":7725,"nodeType":"Block","src":"3442:49:48","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7722,"name":"CallerNotTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7541,"src":"3463:15:48","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3463:17:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7724,"nodeType":"RevertStatement","src":"3456:24:48"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7727,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3505:5:48","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3511:6:48","memberName":"number","nodeType":"MemberAccess","src":"3505:12:48","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7729,"name":"maxBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7671,"src":"3520:14:48","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3505:29:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7735,"nodeType":"IfStatement","src":"3501:90:48","trueBody":{"id":7734,"nodeType":"Block","src":"3536:55:48","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7731,"name":"BlockAlreadyConfirmed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7533,"src":"3557:21:48","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3557:23:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7733,"nodeType":"RevertStatement","src":"3550:30:48"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":7741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7737,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7710,"src":"3623:11:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7738,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7677,"src":"3636:9:48","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7736,"name":"_isValidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"3605:17:48","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (bytes32,bytes memory) view returns (bytes4)"}},"id":7739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3605:41:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7740,"name":"_ERC1271_MAGICVALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8150,"src":"3650:19:48","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3605:64:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7746,"nodeType":"IfStatement","src":"3601:120:48","trueBody":{"id":7745,"nodeType":"Block","src":"3671:50:48","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7742,"name":"InvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7535,"src":"3692:16:48","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:18:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7744,"nodeType":"RevertStatement","src":"3685:25:48"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7747,"name":"_extendableMsgValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"3735:19:48","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":7748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3735:21:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"3760:5:48","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3735:30:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7755,"nodeType":"IfStatement","src":"3731:84:48","trueBody":{"id":7754,"nodeType":"Block","src":"3767:48:48","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7751,"name":"IncorrectValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7537,"src":"3788:14:48","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3788:16:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7753,"nodeType":"RevertStatement","src":"3781:23:48"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7756,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7549,"src":"3829:7:48","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":7758,"indexExpression":{"id":7757,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7673,"src":"3837:5:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3829:14:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"66616c7365","id":7759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3847:5:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3829:23:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7765,"nodeType":"IfStatement","src":"3825:75:48","trueBody":{"id":7764,"nodeType":"Block","src":"3854:46:48","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7761,"name":"InvalidNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7539,"src":"3875:12:48","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3875:14:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7763,"nodeType":"RevertStatement","src":"3868:21:48"}]}},{"assignments":[7767],"declarations":[{"constant":false,"id":7767,"mutability":"mutable","name":"perkOwner","nameLocation":"3918:9:48","nodeType":"VariableDeclaration","scope":7871,"src":"3910:17:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7766,"name":"address","nodeType":"ElementaryTypeName","src":"3910:7:48","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7774,"initialValue":{"arguments":[{"id":7772,"name":"perkTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7667,"src":"3999:11:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"arguments":[{"id":7769,"name":"perkAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7665,"src":"3960:11:48","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7768,"name":"ILSP8IdentifiableDigitalAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"3930:29:48","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILSP8IdentifiableDigitalAsset_$2715_$","typeString":"type(contract ILSP8IdentifiableDigitalAsset)"}},"id":7770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3930:42:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILSP8IdentifiableDigitalAsset_$2715","typeString":"contract ILSP8IdentifiableDigitalAsset"}},"id":7771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3986:12:48","memberName":"tokenOwnerOf","nodeType":"MemberAccess","referencedDeclaration":2575,"src":"3930:68:48","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view external returns (address)"}},"id":7773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3930:81:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3910:101:48"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7775,"name":"perkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"4026:9:48","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7776,"name":"_extendableMsgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"4039:20:48","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4039:22:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4026:35:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7783,"nodeType":"IfStatement","src":"4022:92:48","trueBody":{"id":7782,"nodeType":"Block","src":"4062:52:48","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7779,"name":"CallerNotPerkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"4083:18:48","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4083:20:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7781,"nodeType":"RevertStatement","src":"4076:27:48"}]}},{"assignments":[7785],"declarations":[{"constant":false,"id":7785,"mutability":"mutable","name":"claimIdentifier","nameLocation":"4132:15:48","nodeType":"VariableDeclaration","scope":7871,"src":"4124:23:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7784,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4124:7:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7797,"initialValue":{"arguments":[{"arguments":[{"components":[{"arguments":[{"id":7791,"name":"collection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7663,"src":"4186:10:48","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4178:7:48","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":7789,"name":"bytes20","nodeType":"ElementaryTypeName","src":"4178:7:48","typeDescriptions":{}}},"id":7792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4178:19:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},{"id":7793,"name":"perkTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7667,"src":"4199:11:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7794,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4177:34:48","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$2_memory_ptr","typeString":"bytes32[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$2_memory_ptr","typeString":"bytes32[2] memory"}],"expression":{"id":7787,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4160:3:48","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4164:12:48","memberName":"encodePacked","nodeType":"MemberAccess","src":"4160:16:48","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4160:52:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7786,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4150:9:48","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4150:63:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4124:89:48"},{"condition":{"arguments":[{"id":7802,"name":"claimIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7785,"src":"4260:15:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"baseExpression":{"id":7798,"name":"perkClaims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7554,"src":"4227:10:48","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$7088_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set storage ref)"}},"id":7800,"indexExpression":{"id":7799,"name":"perkAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7665,"src":"4238:11:48","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4227:23:48","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7088_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":7801,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4251:8:48","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":7142,"src":"4227:32:48","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$7088_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$7088_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) view returns (bool)"}},"id":7803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4227:49:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7808,"nodeType":"IfStatement","src":"4223:107:48","trueBody":{"id":7807,"nodeType":"Block","src":"4278:52:48","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7804,"name":"PerkAlreadyClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7545,"src":"4299:18:48","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4299:20:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7806,"nodeType":"RevertStatement","src":"4292:27:48"}]}},{"expression":{"arguments":[{"id":7813,"name":"claimIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7785,"src":"4368:15:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"baseExpression":{"id":7809,"name":"perkClaims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7554,"src":"4340:10:48","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$7088_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set storage ref)"}},"id":7811,"indexExpression":{"id":7810,"name":"perkAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7665,"src":"4351:11:48","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4340:23:48","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7088_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":7812,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4364:3:48","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":7106,"src":"4340:27:48","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$7088_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$7088_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":7814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4340:44:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7815,"nodeType":"ExpressionStatement","src":"4340:44:48"},{"expression":{"arguments":[{"hexValue":"30","id":7820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4420:1:48","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7821,"name":"collection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7663,"src":"4423:10:48","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":7822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4435:1:48","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7823,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7675,"src":"4438:4:48","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":7817,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"4404:6:48","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7816,"name":"IERC725X","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"4395:8:48","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC725X_$1078_$","typeString":"type(contract IERC725X)"}},"id":7818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4395:16:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC725X_$1078","typeString":"contract IERC725X"}},"id":7819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4412:7:48","memberName":"execute","nodeType":"MemberAccess","referencedDeclaration":1058,"src":"4395:24:48","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,address,uint256,bytes memory) payable external returns (bytes memory)"}},"id":7824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4395:48:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7825,"nodeType":"ExpressionStatement","src":"4395:48:48"},{"expression":{"id":7830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7826,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7549,"src":"4454:7:48","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":7828,"indexExpression":{"id":7827,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7673,"src":"4462:5:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4454:14:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4471:4:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4454:21:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7831,"nodeType":"ExpressionStatement","src":"4454:21:48"},{"eventCall":{"arguments":[{"id":7833,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7679,"src":"4503:7:48","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7832,"name":"OrderCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7562,"src":"4490:12:48","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory)"}},"id":7834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4490:21:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7835,"nodeType":"EmitStatement","src":"4485:26:48"},{"assignments":[7837],"declarations":[{"constant":false,"id":7837,"mutability":"mutable","name":"dataKey","nameLocation":"4530:7:48","nodeType":"VariableDeclaration","scope":7871,"src":"4522:15:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7836,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4522:7:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7842,"initialValue":{"arguments":[{"hexValue":"4275726e4166746572557365","id":7840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4571:14:48","typeDescriptions":{"typeIdentifier":"t_stringliteral_fbdb7422394d0d1e5a42ce23325710e31f051fe0ac8874d7818c181a294a8631","typeString":"literal_string \"BurnAfterUse\""},"value":"BurnAfterUse"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_fbdb7422394d0d1e5a42ce23325710e31f051fe0ac8874d7818c181a294a8631","typeString":"literal_string \"BurnAfterUse\""}],"expression":{"id":7838,"name":"LSP2Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"4540:9:48","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP2Utils_$2294_$","typeString":"type(library LSP2Utils)"}},"id":7839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4550:20:48","memberName":"generateSingletonKey","nodeType":"MemberAccess","referencedDeclaration":1578,"src":"4540:30:48","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$","typeString":"function (string memory) pure returns (bytes32)"}},"id":7841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4540:46:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4522:64:48"},{"assignments":[7844],"declarations":[{"constant":false,"id":7844,"mutability":"mutable","name":"burnAfterUse","nameLocation":"4609:12:48","nodeType":"VariableDeclaration","scope":7871,"src":"4596:25:48","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7843,"name":"bytes","nodeType":"ElementaryTypeName","src":"4596:5:48","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":7851,"initialValue":{"arguments":[{"id":7849,"name":"dataKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7837,"src":"4675:7:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"arguments":[{"id":7846,"name":"perkAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7665,"src":"4654:11:48","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7845,"name":"ILSP8IdentifiableDigitalAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"4624:29:48","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ILSP8IdentifiableDigitalAsset_$2715_$","typeString":"type(contract ILSP8IdentifiableDigitalAsset)"}},"id":7847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4624:42:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ILSP8IdentifiableDigitalAsset_$2715","typeString":"contract ILSP8IdentifiableDigitalAsset"}},"id":7848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4667:7:48","memberName":"getData","nodeType":"MemberAccess","referencedDeclaration":1100,"src":"4624:50:48","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes32) view external returns (bytes memory)"}},"id":7850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4624:59:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4596:87:48"},{"condition":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":7857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7854,"name":"burnAfterUse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7844,"src":"4705:12:48","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4698:6:48","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":7852,"name":"bytes2","nodeType":"ElementaryTypeName","src":"4698:6:48","typeDescriptions":{}}},"id":7855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4698:20:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7856,"name":"_BURN_AFTER_USE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7521,"src":"4722:15:48","typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"4698:39:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7870,"nodeType":"IfStatement","src":"4694:131:48","trueBody":{"id":7869,"nodeType":"Block","src":"4739:86:48","statements":[{"expression":{"arguments":[{"id":7865,"name":"perkTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7667,"src":"4793:11:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7866,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7679,"src":"4806:7:48","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"arguments":[{"id":7861,"name":"perkAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7665,"src":"4774:11:48","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4766:8:48","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":7859,"name":"address","nodeType":"ElementaryTypeName","src":"4766:8:48","stateMutability":"payable","typeDescriptions":{}}},"id":7862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4766:20:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":7858,"name":"LSP8Burnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4527,"src":"4753:12:48","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LSP8Burnable_$4527_$","typeString":"type(contract LSP8Burnable)"}},"id":7863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4753:34:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_LSP8Burnable_$4527","typeString":"contract LSP8Burnable"}},"id":7864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4788:4:48","memberName":"burn","nodeType":"MemberAccess","referencedDeclaration":4526,"src":"4753:39:48","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory) external"}},"id":7867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4753:61:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7868,"nodeType":"ExpressionStatement","src":"4753:61:48"}]}}]},"functionSelector":"bbb9ddd3","id":7872,"implemented":true,"kind":"function","modifiers":[],"name":"redeemPerk","nameLocation":"2760:10:48","nodeType":"FunctionDefinition","parameters":{"id":7680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7663,"mutability":"mutable","name":"collection","nameLocation":"2788:10:48","nodeType":"VariableDeclaration","scope":7872,"src":"2780:18:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7662,"name":"address","nodeType":"ElementaryTypeName","src":"2780:7:48","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7665,"mutability":"mutable","name":"perkAddress","nameLocation":"2816:11:48","nodeType":"VariableDeclaration","scope":7872,"src":"2808:19:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7664,"name":"address","nodeType":"ElementaryTypeName","src":"2808:7:48","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7667,"mutability":"mutable","name":"perkTokenId","nameLocation":"2845:11:48","nodeType":"VariableDeclaration","scope":7872,"src":"2837:19:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7666,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2837:7:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7669,"mutability":"mutable","name":"value","nameLocation":"2874:5:48","nodeType":"VariableDeclaration","scope":7872,"src":"2866:13:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7668,"name":"uint256","nodeType":"ElementaryTypeName","src":"2866:7:48","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7671,"mutability":"mutable","name":"maxBlockNumber","nameLocation":"2897:14:48","nodeType":"VariableDeclaration","scope":7872,"src":"2889:22:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7670,"name":"uint256","nodeType":"ElementaryTypeName","src":"2889:7:48","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7673,"mutability":"mutable","name":"nonce","nameLocation":"2929:5:48","nodeType":"VariableDeclaration","scope":7872,"src":"2921:13:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7672,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2921:7:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7675,"mutability":"mutable","name":"data","nameLocation":"2957:4:48","nodeType":"VariableDeclaration","scope":7872,"src":"2944:17:48","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7674,"name":"bytes","nodeType":"ElementaryTypeName","src":"2944:5:48","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7677,"mutability":"mutable","name":"signature","nameLocation":"2984:9:48","nodeType":"VariableDeclaration","scope":7872,"src":"2971:22:48","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7676,"name":"bytes","nodeType":"ElementaryTypeName","src":"2971:5:48","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7679,"mutability":"mutable","name":"orderId","nameLocation":"3016:7:48","nodeType":"VariableDeclaration","scope":7872,"src":"3003:20:48","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7678,"name":"bytes","nodeType":"ElementaryTypeName","src":"3003:5:48","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2770:259:48"},"returnParameters":{"id":7681,"nodeType":"ParameterList","parameters":[],"src":"3037:0:48"},"scope":8127,"src":"2751:2080:48","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7988,"nodeType":"Block","src":"5065:937:48","statements":[{"assignments":[7890],"declarations":[{"constant":false,"id":7890,"mutability":"mutable","name":"message","nameLocation":"5088:7:48","nodeType":"VariableDeclaration","scope":7988,"src":"5075:20:48","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7889,"name":"bytes","nodeType":"ElementaryTypeName","src":"5075:5:48","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":7910,"initialValue":{"arguments":[{"arguments":[{"id":7896,"name":"collection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7874,"src":"5132:10:48","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5124:7:48","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":7894,"name":"bytes20","nodeType":"ElementaryTypeName","src":"5124:7:48","typeDescriptions":{}}},"id":7897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5124:19:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},{"arguments":[{"id":7900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7876,"src":"5174:5:48","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7898,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5157:3:48","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5161:12:48","memberName":"encodePacked","nodeType":"MemberAccess","src":"5157:16:48","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5157:23:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"id":7904,"name":"maxBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7878,"src":"5211:14:48","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7902,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5194:3:48","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5198:12:48","memberName":"encodePacked","nodeType":"MemberAccess","src":"5194:16:48","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5194:32:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7906,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7880,"src":"5240:5:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7907,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7882,"src":"5259:4:48","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7908,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7886,"src":"5277:7:48","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5098:5:48","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7891,"name":"bytes","nodeType":"ElementaryTypeName","src":"5098:5:48","typeDescriptions":{}}},"id":7893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5104:6:48","memberName":"concat","nodeType":"MemberAccess","src":"5098:12:48","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5098:196:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5075:219:48"},{"assignments":[7912],"declarations":[{"constant":false,"id":7912,"mutability":"mutable","name":"messageHash","nameLocation":"5312:11:48","nodeType":"VariableDeclaration","scope":7988,"src":"5304:19:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7911,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5304:7:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7919,"initialValue":{"arguments":[{"arguments":[{"id":7916,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7890,"src":"5365:7:48","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7915,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5355:9:48","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5355:18:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":7913,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"5326:5:48","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$5682_$","typeString":"type(library ECDSA)"}},"id":7914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5332:22:48","memberName":"toEthSignedMessageHash","nodeType":"MemberAccess","referencedDeclaration":5627,"src":"5326:28:48","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":7918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5326:48:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5304:70:48"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7920,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5389:3:48","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5393:6:48","memberName":"sender","nodeType":"MemberAccess","src":"5389:10:48","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7922,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"5403:6:48","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5389:20:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7928,"nodeType":"IfStatement","src":"5385:75:48","trueBody":{"id":7927,"nodeType":"Block","src":"5411:49:48","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7924,"name":"CallerNotTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7541,"src":"5432:15:48","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5432:17:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7926,"nodeType":"RevertStatement","src":"5425:24:48"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7929,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5474:5:48","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5480:6:48","memberName":"number","nodeType":"MemberAccess","src":"5474:12:48","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7931,"name":"maxBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7878,"src":"5489:14:48","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5474:29:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7937,"nodeType":"IfStatement","src":"5470:90:48","trueBody":{"id":7936,"nodeType":"Block","src":"5505:55:48","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7933,"name":"BlockAlreadyConfirmed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7533,"src":"5526:21:48","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5526:23:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7935,"nodeType":"RevertStatement","src":"5519:30:48"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":7943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7939,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7912,"src":"5592:11:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7940,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7884,"src":"5605:9:48","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7938,"name":"_isValidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"5574:17:48","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (bytes32,bytes memory) view returns (bytes4)"}},"id":7941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5574:41:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7942,"name":"_ERC1271_MAGICVALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8150,"src":"5619:19:48","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"5574:64:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7948,"nodeType":"IfStatement","src":"5570:120:48","trueBody":{"id":7947,"nodeType":"Block","src":"5640:50:48","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7944,"name":"InvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7535,"src":"5661:16:48","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5661:18:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7946,"nodeType":"RevertStatement","src":"5654:25:48"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7949,"name":"_extendableMsgValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"5704:19:48","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":7950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5704:21:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7876,"src":"5729:5:48","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5704:30:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7957,"nodeType":"IfStatement","src":"5700:84:48","trueBody":{"id":7956,"nodeType":"Block","src":"5736:48:48","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7953,"name":"IncorrectValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7537,"src":"5757:14:48","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5757:16:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7955,"nodeType":"RevertStatement","src":"5750:23:48"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7958,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7549,"src":"5798:7:48","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":7960,"indexExpression":{"id":7959,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7880,"src":"5806:5:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5798:14:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"66616c7365","id":7961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5816:5:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5798:23:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7967,"nodeType":"IfStatement","src":"5794:75:48","trueBody":{"id":7966,"nodeType":"Block","src":"5823:46:48","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7963,"name":"InvalidNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7539,"src":"5844:12:48","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5844:14:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7965,"nodeType":"RevertStatement","src":"5837:21:48"}]}},{"expression":{"arguments":[{"hexValue":"30","id":7972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5904:1:48","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7973,"name":"collection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7874,"src":"5907:10:48","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":7974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5919:1:48","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":7975,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7882,"src":"5922:4:48","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":7969,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"5888:6:48","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7968,"name":"IERC725X","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"5879:8:48","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC725X_$1078_$","typeString":"type(contract IERC725X)"}},"id":7970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5879:16:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC725X_$1078","typeString":"contract IERC725X"}},"id":7971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5896:7:48","memberName":"execute","nodeType":"MemberAccess","referencedDeclaration":1058,"src":"5879:24:48","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,address,uint256,bytes memory) payable external returns (bytes memory)"}},"id":7976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5879:48:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7977,"nodeType":"ExpressionStatement","src":"5879:48:48"},{"expression":{"id":7982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7978,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7549,"src":"5938:7:48","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":7980,"indexExpression":{"id":7979,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7880,"src":"5946:5:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5938:14:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5955:4:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5938:21:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7983,"nodeType":"ExpressionStatement","src":"5938:21:48"},{"eventCall":{"arguments":[{"id":7985,"name":"orderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7886,"src":"5987:7:48","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7984,"name":"OrderCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7562,"src":"5974:12:48","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory)"}},"id":7986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5974:21:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7987,"nodeType":"EmitStatement","src":"5969:26:48"}]},"functionSelector":"db1e3ef3","id":7989,"implemented":true,"kind":"function","modifiers":[],"name":"placeOrder","nameLocation":"4846:10:48","nodeType":"FunctionDefinition","parameters":{"id":7887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7874,"mutability":"mutable","name":"collection","nameLocation":"4874:10:48","nodeType":"VariableDeclaration","scope":7989,"src":"4866:18:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7873,"name":"address","nodeType":"ElementaryTypeName","src":"4866:7:48","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7876,"mutability":"mutable","name":"value","nameLocation":"4902:5:48","nodeType":"VariableDeclaration","scope":7989,"src":"4894:13:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7875,"name":"uint256","nodeType":"ElementaryTypeName","src":"4894:7:48","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7878,"mutability":"mutable","name":"maxBlockNumber","nameLocation":"4925:14:48","nodeType":"VariableDeclaration","scope":7989,"src":"4917:22:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7877,"name":"uint256","nodeType":"ElementaryTypeName","src":"4917:7:48","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7880,"mutability":"mutable","name":"nonce","nameLocation":"4957:5:48","nodeType":"VariableDeclaration","scope":7989,"src":"4949:13:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7879,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4949:7:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7882,"mutability":"mutable","name":"data","nameLocation":"4985:4:48","nodeType":"VariableDeclaration","scope":7989,"src":"4972:17:48","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7881,"name":"bytes","nodeType":"ElementaryTypeName","src":"4972:5:48","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7884,"mutability":"mutable","name":"signature","nameLocation":"5012:9:48","nodeType":"VariableDeclaration","scope":7989,"src":"4999:22:48","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7883,"name":"bytes","nodeType":"ElementaryTypeName","src":"4999:5:48","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7886,"mutability":"mutable","name":"orderId","nameLocation":"5044:7:48","nodeType":"VariableDeclaration","scope":7989,"src":"5031:20:48","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7885,"name":"bytes","nodeType":"ElementaryTypeName","src":"5031:5:48","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4856:201:48"},"returnParameters":{"id":7888,"nodeType":"ParameterList","parameters":[],"src":"5065:0:48"},"scope":8127,"src":"4837:1165:48","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8004,"nodeType":"Block","src":"6067:77:48","statements":[{"expression":{"id":7998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7996,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"6077:6:48","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7997,"name":"_newTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7991,"src":"6086:10:48","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6077:19:48","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7999,"nodeType":"ExpressionStatement","src":"6077:19:48"},{"eventCall":{"arguments":[{"id":8001,"name":"_newTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7991,"src":"6126:10:48","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8000,"name":"TargetChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7558,"src":"6112:13:48","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6112:25:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8003,"nodeType":"EmitStatement","src":"6107:30:48"}]},"functionSelector":"ea1b495f","id":8005,"implemented":true,"kind":"function","modifiers":[{"id":7994,"kind":"modifierInvocation","modifierName":{"id":7993,"name":"onlyOwner","nameLocations":["6057:9:48"],"nodeType":"IdentifierPath","referencedDeclaration":4559,"src":"6057:9:48"},"nodeType":"ModifierInvocation","src":"6057:9:48"}],"name":"updateTarget","nameLocation":"6017:12:48","nodeType":"FunctionDefinition","parameters":{"id":7992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7991,"mutability":"mutable","name":"_newTarget","nameLocation":"6038:10:48","nodeType":"VariableDeclaration","scope":8005,"src":"6030:18:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7990,"name":"address","nodeType":"ElementaryTypeName","src":"6030:7:48","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6029:20:48"},"returnParameters":{"id":7995,"nodeType":"ParameterList","parameters":[],"src":"6067:0:48"},"scope":8127,"src":"6008:136:48","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8037,"nodeType":"Block","src":"6262:173:48","statements":[{"assignments":[8017],"declarations":[{"constant":false,"id":8017,"mutability":"mutable","name":"claimIdentifier","nameLocation":"6280:15:48","nodeType":"VariableDeclaration","scope":8037,"src":"6272:23:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8016,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6272:7:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8029,"initialValue":{"arguments":[{"arguments":[{"components":[{"arguments":[{"id":8023,"name":"collection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8009,"src":"6334:10:48","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6326:7:48","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":8021,"name":"bytes20","nodeType":"ElementaryTypeName","src":"6326:7:48","typeDescriptions":{}}},"id":8024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6326:19:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},{"id":8025,"name":"perkTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8011,"src":"6347:11:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8026,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6325:34:48","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$2_memory_ptr","typeString":"bytes32[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$2_memory_ptr","typeString":"bytes32[2] memory"}],"expression":{"id":8019,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6308:3:48","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:12:48","memberName":"encodePacked","nodeType":"MemberAccess","src":"6308:16:48","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6308:52:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8018,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6298:9:48","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:63:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6272:89:48"},{"expression":{"arguments":[{"id":8034,"name":"claimIdentifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8017,"src":"6412:15:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"baseExpression":{"id":8030,"name":"perkClaims","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7554,"src":"6379:10:48","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Bytes32Set_$7088_storage_$","typeString":"mapping(address => struct EnumerableSet.Bytes32Set storage ref)"}},"id":8032,"indexExpression":{"id":8031,"name":"perkAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8007,"src":"6390:11:48","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6379:23:48","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$7088_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":8033,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6403:8:48","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":7142,"src":"6379:32:48","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$7088_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$7088_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) view returns (bool)"}},"id":8035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:49:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8015,"id":8036,"nodeType":"Return","src":"6372:56:48"}]},"functionSelector":"285ac885","id":8038,"implemented":true,"kind":"function","modifiers":[],"name":"isPerkClaimed","nameLocation":"6159:13:48","nodeType":"FunctionDefinition","parameters":{"id":8012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8007,"mutability":"mutable","name":"perkAddress","nameLocation":"6181:11:48","nodeType":"VariableDeclaration","scope":8038,"src":"6173:19:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8006,"name":"address","nodeType":"ElementaryTypeName","src":"6173:7:48","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8009,"mutability":"mutable","name":"collection","nameLocation":"6202:10:48","nodeType":"VariableDeclaration","scope":8038,"src":"6194:18:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8008,"name":"address","nodeType":"ElementaryTypeName","src":"6194:7:48","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8011,"mutability":"mutable","name":"perkTokenId","nameLocation":"6222:11:48","nodeType":"VariableDeclaration","scope":8038,"src":"6214:19:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8010,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6214:7:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6172:62:48"},"returnParameters":{"id":8015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8038,"src":"6256:4:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8013,"name":"bool","nodeType":"ElementaryTypeName","src":"6256:4:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6255:6:48"},"scope":8127,"src":"6150:285:48","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8125,"nodeType":"Block","src":"6574:1426:48","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":8047,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"6622:6:48","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6629:4:48","memberName":"code","nodeType":"MemberAccess","src":"6622:11:48","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6634:6:48","memberName":"length","nodeType":"MemberAccess","src":"6622:18:48","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6643:1:48","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6622:22:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8123,"nodeType":"Block","src":"7190:804:48","statements":[{"assignments":[8098,8101],"declarations":[{"constant":false,"id":8098,"mutability":"mutable","name":"recoveredAddress","nameLocation":"7292:16:48","nodeType":"VariableDeclaration","scope":8123,"src":"7284:24:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8097,"name":"address","nodeType":"ElementaryTypeName","src":"7284:7:48","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8101,"mutability":"mutable","name":"returnedError","nameLocation":"7329:13:48","nodeType":"VariableDeclaration","scope":8123,"src":"7310:32:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":8100,"nodeType":"UserDefinedTypeName","pathNode":{"id":8099,"name":"ECDSA.RecoverError","nameLocations":["7310:5:48","7316:12:48"],"nodeType":"IdentifierPath","referencedDeclaration":5326,"src":"7310:18:48"},"referencedDeclaration":5326,"src":"7310:18:48","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":8107,"initialValue":{"arguments":[{"id":8104,"name":"dataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8040,"src":"7380:8:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8105,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8042,"src":"7390:9:48","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":8102,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"7346:5:48","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$5682_$","typeString":"type(library ECDSA)"}},"id":8103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7369:10:48","memberName":"tryRecover","nodeType":"MemberAccess","referencedDeclaration":5416,"src":"7346:33:48","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$5326_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":8106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:54:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$5326_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"7283:117:48"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"},"id":8112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8108,"name":"returnedError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8101,"src":"7487:13:48","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":8109,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"7504:5:48","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$5682_$","typeString":"type(library ECDSA)"}},"id":8110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7510:12:48","memberName":"RecoverError","nodeType":"MemberAccess","referencedDeclaration":5326,"src":"7504:18:48","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$5326_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":8111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7523:7:48","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":5321,"src":"7504:26:48","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$5326","typeString":"enum ECDSA.RecoverError"}},"src":"7487:43:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8115,"nodeType":"IfStatement","src":"7483:90:48","trueBody":{"expression":{"id":8113,"name":"_ERC1271_FAILVALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8153,"src":"7555:18:48","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":8046,"id":8114,"nodeType":"Return","src":"7548:25:48"}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8116,"name":"recoveredAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"7874:16:48","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8117,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"7894:6:48","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7874:26:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":8120,"name":"_ERC1271_FAILVALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8153,"src":"7965:18:48","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":8121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7874:109:48","trueExpression":{"id":8119,"name":"_ERC1271_MAGICVALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8150,"src":"7923:19:48","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":8046,"id":8122,"nodeType":"Return","src":"7851:132:48"}]},"id":8124,"nodeType":"IfStatement","src":"6618:1376:48","trueBody":{"id":8096,"nodeType":"Block","src":"6646:500:48","statements":[{"assignments":[8053,8055],"declarations":[{"constant":false,"id":8053,"mutability":"mutable","name":"success","nameLocation":"6666:7:48","nodeType":"VariableDeclaration","scope":8096,"src":"6661:12:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8052,"name":"bool","nodeType":"ElementaryTypeName","src":"6661:4:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8055,"mutability":"mutable","name":"result","nameLocation":"6688:6:48","nodeType":"VariableDeclaration","scope":8096,"src":"6675:19:48","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8054,"name":"bytes","nodeType":"ElementaryTypeName","src":"6675:5:48","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":8067,"initialValue":{"arguments":[{"arguments":[{"expression":{"expression":{"id":8060,"name":"IERC1271","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"6777:8:48","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1271_$4654_$","typeString":"type(contract IERC1271)"}},"id":8061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6786:16:48","memberName":"isValidSignature","nodeType":"MemberAccess","referencedDeclaration":4653,"src":"6777:25:48","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"}},"id":8062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6803:8:48","memberName":"selector","nodeType":"MemberAccess","src":"6777:34:48","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":8063,"name":"dataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8040,"src":"6833:8:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8064,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8042,"src":"6863:9:48","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":8058,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6733:3:48","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6737:18:48","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"6733:22:48","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":8065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6733:157:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":8056,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"6698:6:48","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6705:10:48","memberName":"staticcall","nodeType":"MemberAccess","src":"6698:17:48","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":8066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6698:206:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6660:244:48"},{"assignments":[8069],"declarations":[{"constant":false,"id":8069,"mutability":"mutable","name":"isValid","nameLocation":"6924:7:48","nodeType":"VariableDeclaration","scope":8096,"src":"6919:12:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8068,"name":"bool","nodeType":"ElementaryTypeName","src":"6919:4:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":8090,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8070,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8053,"src":"6935:7:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8071,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8055,"src":"6962:6:48","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6969:6:48","memberName":"length","nodeType":"MemberAccess","src":"6962:13:48","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3332","id":8073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6979:2:48","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"6962:19:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6935:46:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8078,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8055,"src":"7012:6:48","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":8080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7021:7:48","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":8079,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7021:7:48","typeDescriptions":{}}}],"id":8081,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7020:9:48","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}],"expression":{"id":8076,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7001:3:48","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7005:6:48","memberName":"decode","nodeType":"MemberAccess","src":"7001:10:48","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":8082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7001:29:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":8085,"name":"_ERC1271_MAGICVALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8150,"src":"7042:19:48","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":8084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:7:48","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":8083,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7034:7:48","typeDescriptions":{}}},"id":8086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:28:48","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7001:61:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6935:127:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":8089,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6934:129:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"6919:144:48"},{"expression":{"condition":{"id":8091,"name":"isValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8069,"src":"7085:7:48","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":8093,"name":"_ERC1271_FAILVALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8153,"src":"7117:18:48","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":8094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7085:50:48","trueExpression":{"id":8092,"name":"_ERC1271_MAGICVALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8150,"src":"7095:19:48","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":8046,"id":8095,"nodeType":"Return","src":"7078:57:48"}]}}]},"id":8126,"implemented":true,"kind":"function","modifiers":[],"name":"_isValidSignature","nameLocation":"6450:17:48","nodeType":"FunctionDefinition","parameters":{"id":8043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8040,"mutability":"mutable","name":"dataHash","nameLocation":"6485:8:48","nodeType":"VariableDeclaration","scope":8126,"src":"6477:16:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8039,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6477:7:48","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8042,"mutability":"mutable","name":"signature","nameLocation":"6516:9:48","nodeType":"VariableDeclaration","scope":8126,"src":"6503:22:48","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8041,"name":"bytes","nodeType":"ElementaryTypeName","src":"6503:5:48","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6467:64:48"},"returnParameters":{"id":8046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8045,"mutability":"mutable","name":"magicValue","nameLocation":"6562:10:48","nodeType":"VariableDeclaration","scope":8126,"src":"6555:17:48","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":8044,"name":"bytes4","nodeType":"ElementaryTypeName","src":"6555:6:48","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"6554:19:48"},"scope":8127,"src":"6441:1559:48","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":8128,"src":"1104:6898:48","usedErrors":[7533,7535,7537,7539,7541,7543,7545],"usedEvents":[4541,7558,7562]}],"src":"39:7964:48"},"id":48},"contracts/constants.sol":{"ast":{"absolutePath":"contracts/constants.sol","exportedSymbols":{"_DATAKEY_TOKENID_TYPE":[8144],"_ERC1271_FAILVALUE":[8153],"_ERC1271_MAGICVALUE":[8150],"_INTERFACEID_CAPPED_LSP8":[8135],"_INTERFACEID_IDENTIFIABLE_PHYTIGAL_ASSET":[8138],"_INTERFACEID_LSP17_EXTENDABLE":[1295],"_INTERFACEID_LSP17_EXTENSION":[1298],"_INTERFACEID_LSP8":[2720],"_LSP17_EXTENSION_PREFIX":[1301],"_LSP3_SUPPORTED_STANDARDS_KEY":[8156],"_LSP3_SUPPORTED_STANDARDS_VALUE":[8159],"_LSP4_CREATORS_ARRAY_KEY":[2323],"_LSP4_CREATORS_MAP_KEY_PREFIX":[2326],"_LSP4_METADATA_KEY":[2329],"_LSP4_SUPPORTED_STANDARDS_KEY":[2308],"_LSP4_SUPPORTED_STANDARDS_VALUE":[2311],"_LSP4_TOKEN_NAME_KEY":[2314],"_LSP4_TOKEN_SYMBOL_KEY":[2317],"_LSP4_TOKEN_TYPE_COLLECTION":[2305],"_LSP4_TOKEN_TYPE_KEY":[2320],"_LSP4_TOKEN_TYPE_NFT":[2302],"_LSP4_TOKEN_TYPE_TOKEN":[2299],"_LSP8_REFERENCE_CONTRACT":[2729],"_LSP8_TOKENID_FORMAT_ADDRESS":[2747],"_LSP8_TOKENID_FORMAT_HASH":[2753],"_LSP8_TOKENID_FORMAT_KEY":[2723],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_ADDRESS":[2762],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_HASH":[2768],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_NUMBER":[2756],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_STRING":[2759],"_LSP8_TOKENID_FORMAT_MIXED_DEFAULT_UNIQUE_ID":[2765],"_LSP8_TOKENID_FORMAT_NUMBER":[2741],"_LSP8_TOKENID_FORMAT_STRING":[2744],"_LSP8_TOKENID_FORMAT_UNIQUE_ID":[2750],"_LSP8_TOKEN_METADATA_BASE_URI":[2726],"_LSP8_TOKEN_METADATA_KEY_PREFIX":[8141],"_MSG_HASH_PREFIX":[8147],"_PERMISSION_SIGN":[8162],"_TYPEID_LSP8_TOKENOPERATOR":[2738],"_TYPEID_LSP8_TOKENSRECIPIENT":[2735],"_TYPEID_LSP8_TOKENSSENDER":[2732]},"id":8163,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":8129,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"39:23:49"},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol","file":"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol","id":8130,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8163,"sourceUnit":1142,"src":"64:89:49","symbolAliases":[],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol","file":"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol","id":8131,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8163,"sourceUnit":1148,"src":"154:93:49","symbolAliases":[],"unitAlias":""},{"absolutePath":"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Constants.sol","file":"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Constants.sol","id":8132,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8163,"sourceUnit":1136,"src":"248:88:49","symbolAliases":[],"unitAlias":""},{"constant":true,"id":8135,"mutability":"constant","name":"_INTERFACEID_CAPPED_LSP8","nameLocation":"354:24:49","nodeType":"VariableDeclaration","scope":8163,"src":"338:53:49","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":8133,"name":"bytes4","nodeType":"ElementaryTypeName","src":"338:6:49","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783532303538643861","id":8134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"381:10:49","typeDescriptions":{"typeIdentifier":"t_rational_1376095626_by_1","typeString":"int_const 1376095626"},"value":"0x52058d8a"},"visibility":"internal"},{"constant":true,"id":8138,"mutability":"constant","name":"_INTERFACEID_IDENTIFIABLE_PHYTIGAL_ASSET","nameLocation":"409:40:49","nodeType":"VariableDeclaration","scope":8163,"src":"393:69:49","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":8136,"name":"bytes4","nodeType":"ElementaryTypeName","src":"393:6:49","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783762303363613164","id":8137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"452:10:49","typeDescriptions":{"typeIdentifier":"t_rational_2063845917_by_1","typeString":"int_const 2063845917"},"value":"0x7b03ca1d"},"visibility":"internal"},{"constant":true,"id":8141,"mutability":"constant","name":"_LSP8_TOKEN_METADATA_KEY_PREFIX","nameLocation":"482:31:49","nodeType":"VariableDeclaration","scope":8163,"src":"465:73:49","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"},"typeName":{"id":8139,"name":"bytes10","nodeType":"ElementaryTypeName","src":"465:7:49","typeDescriptions":{"typeIdentifier":"t_bytes10","typeString":"bytes10"}},"value":{"hexValue":"30783133333965373661333930623762396563393031","id":8140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"516:22:49","typeDescriptions":{"typeIdentifier":"t_rational_90793102790016477612289_by_1","typeString":"int_const 90793102790016477612289"},"value":"0x1339e76a390b7b9ec901"},"visibility":"internal"},{"constant":true,"id":8144,"mutability":"constant","name":"_DATAKEY_TOKENID_TYPE","nameLocation":"558:21:49","nodeType":"VariableDeclaration","scope":8163,"src":"541:107:49","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8142,"name":"bytes32","nodeType":"ElementaryTypeName","src":"541:7:49","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307837313566323438393536646537636536356539346439643833366266656164343739663765373064363962373138643437626665376230306530356234666534","id":8143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"582:66:49","typeDescriptions":{"typeIdentifier":"t_rational_51279454526592609550227305512296309420664374737119965250821808152108764712932_by_1","typeString":"int_const 5127...(69 digits omitted)...2932"},"value":"0x715f248956de7ce65e94d9d836bfead479f7e70d69b718d47bfe7b00e05b4fe4"},"visibility":"internal"},{"constant":true,"id":8147,"mutability":"constant","name":"_MSG_HASH_PREFIX","nameLocation":"668:16:49","nodeType":"VariableDeclaration","scope":8163,"src":"651:94:49","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes28","typeString":"bytes28"},"typeName":{"id":8145,"name":"bytes28","nodeType":"ElementaryTypeName","src":"651:7:49","typeDescriptions":{"typeIdentifier":"t_bytes28","typeString":"bytes28"}},"value":{"hexValue":"30783139343537343638363537323635373536643230353336393637366536353634323034643635373337333631363736353361306133323332","id":8146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"687:58:49","typeDescriptions":{"typeIdentifier":"t_rational_2661379305446904779734859349833089258949455794555359447896749126194_by_1","typeString":"int_const 2661...(59 digits omitted)...6194"},"value":"0x19457468657265756d205369676e6564204d6573736167653a0a3232"},"visibility":"internal"},{"constant":true,"id":8150,"mutability":"constant","name":"_ERC1271_MAGICVALUE","nameLocation":"764:19:49","nodeType":"VariableDeclaration","scope":8163,"src":"748:48:49","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":8148,"name":"bytes4","nodeType":"ElementaryTypeName","src":"748:6:49","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30783136323662613765","id":8149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"786:10:49","typeDescriptions":{"typeIdentifier":"t_rational_371636862_by_1","typeString":"int_const 371636862"},"value":"0x1626ba7e"},"visibility":"internal"},{"constant":true,"id":8153,"mutability":"constant","name":"_ERC1271_FAILVALUE","nameLocation":"814:18:49","nodeType":"VariableDeclaration","scope":8163,"src":"798:47:49","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":8151,"name":"bytes4","nodeType":"ElementaryTypeName","src":"798:6:49","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786666666666666666","id":8152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"835:10:49","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"visibility":"internal"},{"constant":true,"id":8156,"mutability":"constant","name":"_LSP3_SUPPORTED_STANDARDS_KEY","nameLocation":"957:29:49","nodeType":"VariableDeclaration","scope":8163,"src":"940:115:49","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8154,"name":"bytes32","nodeType":"ElementaryTypeName","src":"940:7:49","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307865616665633464383966613936313938383462363030303035656638336164393535393033336536653934316462376437633439356163646365363136333437","id":8155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"989:66:49","typeDescriptions":{"typeIdentifier":"t_rational_106291344305384829327323777170627262289759200824719966481487361824846768071495_by_1","typeString":"int_const 1062...(70 digits omitted)...1495"},"value":"0xeafec4d89fa9619884b600005ef83ad9559033e6e941db7d7c495acdce616347"},"visibility":"internal"},{"constant":true,"id":8159,"mutability":"constant","name":"_LSP3_SUPPORTED_STANDARDS_VALUE","nameLocation":"1118:31:49","nodeType":"VariableDeclaration","scope":8163,"src":"1103:62:49","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8157,"name":"bytes","nodeType":"ElementaryTypeName","src":"1103:5:49","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":{"hexValue":"5ef83ad9","id":8158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"1152:13:49","typeDescriptions":{"typeIdentifier":"t_stringliteral_ed7210ad4e2ed136d93465e96aaf8e800ef3ee84c580ef8a27f61a3822b5e325","typeString":"literal_string hex\"5ef83ad9\""}},"visibility":"internal"},{"constant":true,"id":8162,"mutability":"constant","name":"_PERMISSION_SIGN","nameLocation":"1185:16:49","nodeType":"VariableDeclaration","scope":8163,"src":"1168:102:49","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8160,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1168:7:49","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030323030303030","id":8161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1204:66:49","typeDescriptions":{"typeIdentifier":"t_rational_2097152_by_1","typeString":"int_const 2097152"},"value":"0x0000000000000000000000000000000000000000000000000000000000200000"},"visibility":"internal"}],"src":"39:1233:49"},"id":49},"solidity-bytes-utils/contracts/BytesLib.sol":{"ast":{"absolutePath":"solidity-bytes-utils/contracts/BytesLib.sol","exportedSymbols":{"BytesLib":[8495]},"id":8496,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":8164,"literals":["solidity",">=","0.8",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"336:31:50"},{"abstract":false,"baseContracts":[],"canonicalName":"BytesLib","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":8495,"linearizedBaseContracts":[8495],"name":"BytesLib","nameLocation":"378:8:50","nodeType":"ContractDefinition","nodes":[{"body":{"id":8179,"nodeType":"Block","src":"545:2803:50","statements":[{"assignments":[8174],"declarations":[{"constant":false,"id":8174,"mutability":"mutable","name":"tempBytes","nameLocation":"568:9:50","nodeType":"VariableDeclaration","scope":8179,"src":"555:22:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8173,"name":"bytes","nodeType":"ElementaryTypeName","src":"555:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":8175,"nodeType":"VariableDeclarationStatement","src":"555:22:50"},{"AST":{"nodeType":"YulBlock","src":"597:2718:50","statements":[{"nodeType":"YulAssignment","src":"741:24:50","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"760:4:50","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"754:5:50"},"nodeType":"YulFunctionCall","src":"754:11:50"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"741:9:50"}]},{"nodeType":"YulVariableDeclaration","src":"897:30:50","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"917:9:50"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"911:5:50"},"nodeType":"YulFunctionCall","src":"911:16:50"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"901:6:50","type":""}]},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"947:9:50"},{"name":"length","nodeType":"YulIdentifier","src":"958:6:50"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"940:6:50"},"nodeType":"YulFunctionCall","src":"940:25:50"},"nodeType":"YulExpressionStatement","src":"940:25:50"},{"nodeType":"YulVariableDeclaration","src":"1175:30:50","value":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"1189:9:50"},{"kind":"number","nodeType":"YulLiteral","src":"1200:4:50","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1185:3:50"},"nodeType":"YulFunctionCall","src":"1185:20:50"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"1179:2:50","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1330:26:50","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1345:2:50"},{"name":"length","nodeType":"YulIdentifier","src":"1349:6:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1341:3:50"},"nodeType":"YulFunctionCall","src":"1341:15:50"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"1334:3:50","type":""}]},{"body":{"nodeType":"YulBlock","src":"1733:162:50","statements":[{"expression":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1867:2:50"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"1877:2:50"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1871:5:50"},"nodeType":"YulFunctionCall","src":"1871:9:50"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1860:6:50"},"nodeType":"YulFunctionCall","src":"1860:21:50"},"nodeType":"YulExpressionStatement","src":"1860:21:50"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1566:2:50"},{"name":"end","nodeType":"YulIdentifier","src":"1570:3:50"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1563:2:50"},"nodeType":"YulFunctionCall","src":"1563:11:50"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1575:157:50","statements":[{"nodeType":"YulAssignment","src":"1663:19:50","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1673:2:50"},{"kind":"number","nodeType":"YulLiteral","src":"1677:4:50","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1669:3:50"},"nodeType":"YulFunctionCall","src":"1669:13:50"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"1663:2:50"}]},{"nodeType":"YulAssignment","src":"1699:19:50","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"1709:2:50"},{"kind":"number","nodeType":"YulLiteral","src":"1713:4:50","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1705:3:50"},"nodeType":"YulFunctionCall","src":"1705:13:50"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"1699:2:50"}]}]},"pre":{"nodeType":"YulBlock","src":"1374:188:50","statements":[{"nodeType":"YulVariableDeclaration","src":"1518:30:50","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"1532:9:50"},{"kind":"number","nodeType":"YulLiteral","src":"1543:4:50","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1528:3:50"},"nodeType":"YulFunctionCall","src":"1528:20:50"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"1522:2:50","type":""}]}]},"src":"1370:525:50"},{"nodeType":"YulAssignment","src":"2096:27:50","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"2112:10:50"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2106:5:50"},"nodeType":"YulFunctionCall","src":"2106:17:50"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2096:6:50"}]},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"2143:9:50"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2158:6:50"},{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"2172:9:50"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2166:5:50"},"nodeType":"YulFunctionCall","src":"2166:16:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2154:3:50"},"nodeType":"YulFunctionCall","src":"2154:29:50"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2136:6:50"},"nodeType":"YulFunctionCall","src":"2136:48:50"},"nodeType":"YulExpressionStatement","src":"2136:48:50"},{"nodeType":"YulAssignment","src":"2322:9:50","value":{"name":"end","nodeType":"YulIdentifier","src":"2328:3:50"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"2322:2:50"}]},{"nodeType":"YulAssignment","src":"2458:22:50","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2469:2:50"},{"name":"length","nodeType":"YulIdentifier","src":"2473:6:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2465:3:50"},"nodeType":"YulFunctionCall","src":"2465:15:50"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2458:3:50"}]},{"body":{"nodeType":"YulBlock","src":"2662:53:50","statements":[{"expression":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2687:2:50"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"2697:2:50"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2691:5:50"},"nodeType":"YulFunctionCall","src":"2691:9:50"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2680:6:50"},"nodeType":"YulFunctionCall","src":"2680:21:50"},"nodeType":"YulExpressionStatement","src":"2680:21:50"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2565:2:50"},{"name":"end","nodeType":"YulIdentifier","src":"2569:3:50"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2562:2:50"},"nodeType":"YulFunctionCall","src":"2562:11:50"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2574:87:50","statements":[{"nodeType":"YulAssignment","src":"2592:19:50","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2602:2:50"},{"kind":"number","nodeType":"YulLiteral","src":"2606:4:50","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2598:3:50"},"nodeType":"YulFunctionCall","src":"2598:13:50"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"2592:2:50"}]},{"nodeType":"YulAssignment","src":"2628:19:50","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"2638:2:50"},{"kind":"number","nodeType":"YulLiteral","src":"2642:4:50","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:50"},"nodeType":"YulFunctionCall","src":"2634:13:50"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"2628:2:50"}]}]},"pre":{"nodeType":"YulBlock","src":"2498:63:50","statements":[{"nodeType":"YulVariableDeclaration","src":"2516:31:50","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"2530:10:50"},{"kind":"number","nodeType":"YulLiteral","src":"2542:4:50","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2526:3:50"},"nodeType":"YulFunctionCall","src":"2526:21:50"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"2520:2:50","type":""}]}]},"src":"2494:221:50"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3147:4:50","type":"","value":"0x40"},{"arguments":[{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"3180:3:50"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3196:6:50"},{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"3210:9:50"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3204:5:50"},"nodeType":"YulFunctionCall","src":"3204:16:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3192:3:50"},"nodeType":"YulFunctionCall","src":"3192:29:50"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3185:6:50"},"nodeType":"YulFunctionCall","src":"3185:37:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3176:3:50"},"nodeType":"YulFunctionCall","src":"3176:47:50"},{"kind":"number","nodeType":"YulLiteral","src":"3225:2:50","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3172:3:50"},"nodeType":"YulFunctionCall","src":"3172:56:50"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3248:2:50","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3244:3:50"},"nodeType":"YulFunctionCall","src":"3244:7:50"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3153:3:50"},"nodeType":"YulFunctionCall","src":"3153:151:50"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3140:6:50"},"nodeType":"YulFunctionCall","src":"3140:165:50"},"nodeType":"YulExpressionStatement","src":"3140:165:50"}]},"evmVersion":"paris","externalReferences":[{"declaration":8168,"isOffset":false,"isSlot":false,"src":"2112:10:50","valueSize":1},{"declaration":8168,"isOffset":false,"isSlot":false,"src":"2530:10:50","valueSize":1},{"declaration":8166,"isOffset":false,"isSlot":false,"src":"1532:9:50","valueSize":1},{"declaration":8166,"isOffset":false,"isSlot":false,"src":"3210:9:50","valueSize":1},{"declaration":8166,"isOffset":false,"isSlot":false,"src":"917:9:50","valueSize":1},{"declaration":8174,"isOffset":false,"isSlot":false,"src":"1189:9:50","valueSize":1},{"declaration":8174,"isOffset":false,"isSlot":false,"src":"2143:9:50","valueSize":1},{"declaration":8174,"isOffset":false,"isSlot":false,"src":"2172:9:50","valueSize":1},{"declaration":8174,"isOffset":false,"isSlot":false,"src":"741:9:50","valueSize":1},{"declaration":8174,"isOffset":false,"isSlot":false,"src":"947:9:50","valueSize":1}],"id":8176,"nodeType":"InlineAssembly","src":"588:2727:50"},{"expression":{"id":8177,"name":"tempBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8174,"src":"3332:9:50","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":8172,"id":8178,"nodeType":"Return","src":"3325:16:50"}]},"id":8180,"implemented":true,"kind":"function","modifiers":[],"name":"concat","nameLocation":"402:6:50","nodeType":"FunctionDefinition","parameters":{"id":8169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8166,"mutability":"mutable","name":"_preBytes","nameLocation":"431:9:50","nodeType":"VariableDeclaration","scope":8180,"src":"418:22:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8165,"name":"bytes","nodeType":"ElementaryTypeName","src":"418:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8168,"mutability":"mutable","name":"_postBytes","nameLocation":"463:10:50","nodeType":"VariableDeclaration","scope":8180,"src":"450:23:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8167,"name":"bytes","nodeType":"ElementaryTypeName","src":"450:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"408:71:50"},"returnParameters":{"id":8172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8180,"src":"527:12:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8170,"name":"bytes","nodeType":"ElementaryTypeName","src":"527:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"526:14:50"},"scope":8495,"src":"393:2955:50","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8188,"nodeType":"Block","src":"3436:6015:50","statements":[{"AST":{"nodeType":"YulBlock","src":"3455:5990:50","statements":[{"nodeType":"YulVariableDeclaration","src":"3678:34:50","value":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"3697:14:50"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3691:5:50"},"nodeType":"YulFunctionCall","src":"3691:21:50"},"variables":[{"name":"fslot","nodeType":"YulTypedName","src":"3682:5:50","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4205:76:50","value":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"4228:5:50"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4243:5:50","type":"","value":"0x100"},{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"4261:5:50"},{"kind":"number","nodeType":"YulLiteral","src":"4268:1:50","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4257:3:50"},"nodeType":"YulFunctionCall","src":"4257:13:50"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4250:6:50"},"nodeType":"YulFunctionCall","src":"4250:21:50"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4239:3:50"},"nodeType":"YulFunctionCall","src":"4239:33:50"},{"kind":"number","nodeType":"YulLiteral","src":"4274:1:50","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4235:3:50"},"nodeType":"YulFunctionCall","src":"4235:41:50"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4224:3:50"},"nodeType":"YulFunctionCall","src":"4224:53:50"},{"kind":"number","nodeType":"YulLiteral","src":"4279:1:50","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4220:3:50"},"nodeType":"YulFunctionCall","src":"4220:61:50"},"variables":[{"name":"slength","nodeType":"YulTypedName","src":"4209:7:50","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4294:32:50","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"4315:10:50"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4309:5:50"},"nodeType":"YulFunctionCall","src":"4309:17:50"},"variables":[{"name":"mlength","nodeType":"YulTypedName","src":"4298:7:50","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4339:38:50","value":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"4360:7:50"},{"name":"mlength","nodeType":"YulIdentifier","src":"4369:7:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4356:3:50"},"nodeType":"YulFunctionCall","src":"4356:21:50"},"variables":[{"name":"newlength","nodeType":"YulTypedName","src":"4343:9:50","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4710:1485:50","statements":[{"expression":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"4991:14:50"},{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"5303:5:50"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"5521:10:50"},{"kind":"number","nodeType":"YulLiteral","src":"5533:4:50","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5517:3:50"},"nodeType":"YulFunctionCall","src":"5517:21:50"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5511:5:50"},"nodeType":"YulFunctionCall","src":"5511:28:50"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5648:5:50","type":"","value":"0x100"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5659:2:50","type":"","value":"32"},{"name":"mlength","nodeType":"YulIdentifier","src":"5663:7:50"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5655:3:50"},"nodeType":"YulFunctionCall","src":"5655:16:50"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"5644:3:50"},"nodeType":"YulFunctionCall","src":"5644:28:50"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5404:3:50"},"nodeType":"YulFunctionCall","src":"5404:302:50"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5895:5:50","type":"","value":"0x100"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5906:2:50","type":"","value":"32"},{"name":"newlength","nodeType":"YulIdentifier","src":"5910:9:50"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5902:3:50"},"nodeType":"YulFunctionCall","src":"5902:18:50"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"5891:3:50"},"nodeType":"YulFunctionCall","src":"5891:30:50"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5367:3:50"},"nodeType":"YulFunctionCall","src":"5367:584:50"},{"arguments":[{"name":"mlength","nodeType":"YulIdentifier","src":"6104:7:50"},{"kind":"number","nodeType":"YulLiteral","src":"6113:1:50","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6100:3:50"},"nodeType":"YulFunctionCall","src":"6100:15:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5334:3:50"},"nodeType":"YulFunctionCall","src":"5334:807:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5134:3:50"},"nodeType":"YulFunctionCall","src":"5134:1029:50"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4963:6:50"},"nodeType":"YulFunctionCall","src":"4963:1218:50"},"nodeType":"YulExpressionStatement","src":"4963:1218:50"}]},"nodeType":"YulCase","src":"4703:1492:50","value":{"kind":"number","nodeType":"YulLiteral","src":"4708:1:50","type":"","value":"2"}},{"body":{"nodeType":"YulBlock","src":"6215:1935:50","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6424:3:50","type":"","value":"0x0"},{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"6429:14:50"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6417:6:50"},"nodeType":"YulFunctionCall","src":"6417:27:50"},"nodeType":"YulExpressionStatement","src":"6417:27:50"},{"nodeType":"YulVariableDeclaration","src":"6461:53:50","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6485:3:50","type":"","value":"0x0"},{"kind":"number","nodeType":"YulLiteral","src":"6490:4:50","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"6475:9:50"},"nodeType":"YulFunctionCall","src":"6475:20:50"},{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"6501:7:50"},{"kind":"number","nodeType":"YulLiteral","src":"6510:2:50","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6497:3:50"},"nodeType":"YulFunctionCall","src":"6497:16:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6471:3:50"},"nodeType":"YulFunctionCall","src":"6471:43:50"},"variables":[{"name":"sc","nodeType":"YulTypedName","src":"6465:2:50","type":""}]},{"expression":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"6574:14:50"},{"arguments":[{"arguments":[{"name":"newlength","nodeType":"YulIdentifier","src":"6598:9:50"},{"kind":"number","nodeType":"YulLiteral","src":"6609:1:50","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6594:3:50"},"nodeType":"YulFunctionCall","src":"6594:17:50"},{"kind":"number","nodeType":"YulLiteral","src":"6613:1:50","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6590:3:50"},"nodeType":"YulFunctionCall","src":"6590:25:50"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"6567:6:50"},"nodeType":"YulFunctionCall","src":"6567:49:50"},"nodeType":"YulExpressionStatement","src":"6567:49:50"},{"nodeType":"YulVariableDeclaration","src":"7204:30:50","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7222:2:50","type":"","value":"32"},{"name":"slength","nodeType":"YulIdentifier","src":"7226:7:50"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7218:3:50"},"nodeType":"YulFunctionCall","src":"7218:16:50"},"variables":[{"name":"submod","nodeType":"YulTypedName","src":"7208:6:50","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7251:33:50","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"7265:10:50"},{"name":"submod","nodeType":"YulIdentifier","src":"7277:6:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7261:3:50"},"nodeType":"YulFunctionCall","src":"7261:23:50"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"7255:2:50","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7301:35:50","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"7316:10:50"},{"name":"mlength","nodeType":"YulIdentifier","src":"7328:7:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7312:3:50"},"nodeType":"YulFunctionCall","src":"7312:24:50"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"7305:3:50","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7353:38:50","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7373:5:50","type":"","value":"0x100"},{"name":"submod","nodeType":"YulIdentifier","src":"7380:6:50"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"7369:3:50"},"nodeType":"YulFunctionCall","src":"7369:18:50"},{"kind":"number","nodeType":"YulLiteral","src":"7389:1:50","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7365:3:50"},"nodeType":"YulFunctionCall","src":"7365:26:50"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"7357:4:50","type":""}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7437:2:50"},{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"7523:5:50"},{"kind":"number","nodeType":"YulLiteral","src":"7558:66:50","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7490:3:50"},"nodeType":"YulFunctionCall","src":"7490:160:50"},{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7686:2:50"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7680:5:50"},"nodeType":"YulFunctionCall","src":"7680:9:50"},{"name":"mask","nodeType":"YulIdentifier","src":"7691:4:50"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7676:3:50"},"nodeType":"YulFunctionCall","src":"7676:20:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7461:3:50"},"nodeType":"YulFunctionCall","src":"7461:257:50"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7409:6:50"},"nodeType":"YulFunctionCall","src":"7409:327:50"},"nodeType":"YulExpressionStatement","src":"7409:327:50"},{"body":{"nodeType":"YulBlock","src":"7964:61:50","statements":[{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7993:2:50"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"8003:2:50"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7997:5:50"},"nodeType":"YulFunctionCall","src":"7997:9:50"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7986:6:50"},"nodeType":"YulFunctionCall","src":"7986:21:50"},"nodeType":"YulExpressionStatement","src":"7986:21:50"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7858:2:50"},{"name":"end","nodeType":"YulIdentifier","src":"7862:3:50"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7855:2:50"},"nodeType":"YulFunctionCall","src":"7855:11:50"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7867:96:50","statements":[{"nodeType":"YulAssignment","src":"7889:16:50","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7899:2:50"},{"kind":"number","nodeType":"YulLiteral","src":"7903:1:50","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7895:3:50"},"nodeType":"YulFunctionCall","src":"7895:10:50"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"7889:2:50"}]},{"nodeType":"YulAssignment","src":"7926:19:50","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7936:2:50"},{"kind":"number","nodeType":"YulLiteral","src":"7940:4:50","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7932:3:50"},"nodeType":"YulFunctionCall","src":"7932:13:50"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"7926:2:50"}]}]},"pre":{"nodeType":"YulBlock","src":"7758:96:50","statements":[{"nodeType":"YulAssignment","src":"7780:19:50","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"7790:2:50"},{"kind":"number","nodeType":"YulLiteral","src":"7794:4:50","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7786:3:50"},"nodeType":"YulFunctionCall","src":"7786:13:50"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"7780:2:50"}]},{"nodeType":"YulAssignment","src":"7820:16:50","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"7830:2:50"},{"kind":"number","nodeType":"YulLiteral","src":"7834:1:50","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7826:3:50"},"nodeType":"YulFunctionCall","src":"7826:10:50"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"7820:2:50"}]}]},"src":"7754:271:50"},{"nodeType":"YulAssignment","src":"8043:32:50","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8055:5:50","type":"","value":"0x100"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"8066:2:50"},{"name":"end","nodeType":"YulIdentifier","src":"8070:3:50"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8062:3:50"},"nodeType":"YulFunctionCall","src":"8062:12:50"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"8051:3:50"},"nodeType":"YulFunctionCall","src":"8051:24:50"},"variableNames":[{"name":"mask","nodeType":"YulIdentifier","src":"8043:4:50"}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8100:2:50"},{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"8118:2:50"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8112:5:50"},"nodeType":"YulFunctionCall","src":"8112:9:50"},{"name":"mask","nodeType":"YulIdentifier","src":"8123:4:50"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8108:3:50"},"nodeType":"YulFunctionCall","src":"8108:20:50"},{"name":"mask","nodeType":"YulIdentifier","src":"8130:4:50"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8104:3:50"},"nodeType":"YulFunctionCall","src":"8104:31:50"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8093:6:50"},"nodeType":"YulFunctionCall","src":"8093:43:50"},"nodeType":"YulExpressionStatement","src":"8093:43:50"}]},"nodeType":"YulCase","src":"6208:1942:50","value":{"kind":"number","nodeType":"YulLiteral","src":"6213:1:50","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8171:1264:50","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8268:3:50","type":"","value":"0x0"},{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"8273:14:50"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8261:6:50"},"nodeType":"YulFunctionCall","src":"8261:27:50"},"nodeType":"YulExpressionStatement","src":"8261:27:50"},{"nodeType":"YulVariableDeclaration","src":"8381:53:50","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8405:3:50","type":"","value":"0x0"},{"kind":"number","nodeType":"YulLiteral","src":"8410:4:50","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8395:9:50"},"nodeType":"YulFunctionCall","src":"8395:20:50"},{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"8421:7:50"},{"kind":"number","nodeType":"YulLiteral","src":"8430:2:50","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8417:3:50"},"nodeType":"YulFunctionCall","src":"8417:16:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8391:3:50"},"nodeType":"YulFunctionCall","src":"8391:43:50"},"variables":[{"name":"sc","nodeType":"YulTypedName","src":"8385:2:50","type":""}]},{"expression":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"8494:14:50"},{"arguments":[{"arguments":[{"name":"newlength","nodeType":"YulIdentifier","src":"8518:9:50"},{"kind":"number","nodeType":"YulLiteral","src":"8529:1:50","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8514:3:50"},"nodeType":"YulFunctionCall","src":"8514:17:50"},{"kind":"number","nodeType":"YulLiteral","src":"8533:1:50","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8510:3:50"},"nodeType":"YulFunctionCall","src":"8510:25:50"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8487:6:50"},"nodeType":"YulFunctionCall","src":"8487:49:50"},"nodeType":"YulExpressionStatement","src":"8487:49:50"},{"nodeType":"YulVariableDeclaration","src":"8663:34:50","value":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"8685:7:50"},{"kind":"number","nodeType":"YulLiteral","src":"8694:2:50","type":"","value":"32"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"8681:3:50"},"nodeType":"YulFunctionCall","src":"8681:16:50"},"variables":[{"name":"slengthmod","nodeType":"YulTypedName","src":"8667:10:50","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8714:34:50","value":{"arguments":[{"name":"mlength","nodeType":"YulIdentifier","src":"8736:7:50"},{"kind":"number","nodeType":"YulLiteral","src":"8745:2:50","type":"","value":"32"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"8732:3:50"},"nodeType":"YulFunctionCall","src":"8732:16:50"},"variables":[{"name":"mlengthmod","nodeType":"YulTypedName","src":"8718:10:50","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8765:33:50","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8783:2:50","type":"","value":"32"},{"name":"slengthmod","nodeType":"YulIdentifier","src":"8787:10:50"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8779:3:50"},"nodeType":"YulFunctionCall","src":"8779:19:50"},"variables":[{"name":"submod","nodeType":"YulTypedName","src":"8769:6:50","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8815:33:50","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"8829:10:50"},{"name":"submod","nodeType":"YulIdentifier","src":"8841:6:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8825:3:50"},"nodeType":"YulFunctionCall","src":"8825:23:50"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"8819:2:50","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8865:35:50","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"8880:10:50"},{"name":"mlength","nodeType":"YulIdentifier","src":"8892:7:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8876:3:50"},"nodeType":"YulFunctionCall","src":"8876:24:50"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"8869:3:50","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8917:38:50","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8937:5:50","type":"","value":"0x100"},{"name":"submod","nodeType":"YulIdentifier","src":"8944:6:50"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"8933:3:50"},"nodeType":"YulFunctionCall","src":"8933:18:50"},{"kind":"number","nodeType":"YulLiteral","src":"8953:1:50","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8929:3:50"},"nodeType":"YulFunctionCall","src":"8929:26:50"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"8921:4:50","type":""}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8980:2:50"},{"arguments":[{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"8994:2:50"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"8988:5:50"},"nodeType":"YulFunctionCall","src":"8988:9:50"},{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9009:2:50"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9003:5:50"},"nodeType":"YulFunctionCall","src":"9003:9:50"},{"name":"mask","nodeType":"YulIdentifier","src":"9014:4:50"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8999:3:50"},"nodeType":"YulFunctionCall","src":"8999:20:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8984:3:50"},"nodeType":"YulFunctionCall","src":"8984:36:50"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8973:6:50"},"nodeType":"YulFunctionCall","src":"8973:48:50"},"nodeType":"YulExpressionStatement","src":"8973:48:50"},{"body":{"nodeType":"YulBlock","src":"9249:61:50","statements":[{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"9278:2:50"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9288:2:50"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9282:5:50"},"nodeType":"YulFunctionCall","src":"9282:9:50"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9271:6:50"},"nodeType":"YulFunctionCall","src":"9271:21:50"},"nodeType":"YulExpressionStatement","src":"9271:21:50"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9143:2:50"},{"name":"end","nodeType":"YulIdentifier","src":"9147:3:50"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9140:2:50"},"nodeType":"YulFunctionCall","src":"9140:11:50"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9152:96:50","statements":[{"nodeType":"YulAssignment","src":"9174:16:50","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"9184:2:50"},{"kind":"number","nodeType":"YulLiteral","src":"9188:1:50","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9180:3:50"},"nodeType":"YulFunctionCall","src":"9180:10:50"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"9174:2:50"}]},{"nodeType":"YulAssignment","src":"9211:19:50","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9221:2:50"},{"kind":"number","nodeType":"YulLiteral","src":"9225:4:50","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9217:3:50"},"nodeType":"YulFunctionCall","src":"9217:13:50"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"9211:2:50"}]}]},"pre":{"nodeType":"YulBlock","src":"9043:96:50","statements":[{"nodeType":"YulAssignment","src":"9065:16:50","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"9075:2:50"},{"kind":"number","nodeType":"YulLiteral","src":"9079:1:50","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9071:3:50"},"nodeType":"YulFunctionCall","src":"9071:10:50"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"9065:2:50"}]},{"nodeType":"YulAssignment","src":"9102:19:50","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9112:2:50"},{"kind":"number","nodeType":"YulLiteral","src":"9116:4:50","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9108:3:50"},"nodeType":"YulFunctionCall","src":"9108:13:50"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"9102:2:50"}]}]},"src":"9039:271:50"},{"nodeType":"YulAssignment","src":"9328:32:50","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9340:5:50","type":"","value":"0x100"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9351:2:50"},{"name":"end","nodeType":"YulIdentifier","src":"9355:3:50"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9347:3:50"},"nodeType":"YulFunctionCall","src":"9347:12:50"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"9336:3:50"},"nodeType":"YulFunctionCall","src":"9336:24:50"},"variableNames":[{"name":"mask","nodeType":"YulIdentifier","src":"9328:4:50"}]},{"expression":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"9385:2:50"},{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"9403:2:50"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9397:5:50"},"nodeType":"YulFunctionCall","src":"9397:9:50"},{"name":"mask","nodeType":"YulIdentifier","src":"9408:4:50"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9393:3:50"},"nodeType":"YulFunctionCall","src":"9393:20:50"},{"name":"mask","nodeType":"YulIdentifier","src":"9415:4:50"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9389:3:50"},"nodeType":"YulFunctionCall","src":"9389:31:50"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9378:6:50"},"nodeType":"YulFunctionCall","src":"9378:43:50"},"nodeType":"YulExpressionStatement","src":"9378:43:50"}]},"nodeType":"YulCase","src":"8163:1272:50","value":"default"}],"expression":{"arguments":[{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"4658:7:50"},{"kind":"number","nodeType":"YulLiteral","src":"4667:2:50","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4655:2:50"},"nodeType":"YulFunctionCall","src":"4655:15:50"},{"arguments":[{"name":"newlength","nodeType":"YulIdentifier","src":"4675:9:50"},{"kind":"number","nodeType":"YulLiteral","src":"4686:2:50","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4672:2:50"},"nodeType":"YulFunctionCall","src":"4672:17:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4651:3:50"},"nodeType":"YulFunctionCall","src":"4651:39:50"},"nodeType":"YulSwitch","src":"4644:4791:50"}]},"evmVersion":"paris","externalReferences":[{"declaration":8184,"isOffset":false,"isSlot":false,"src":"4315:10:50","valueSize":1},{"declaration":8184,"isOffset":false,"isSlot":false,"src":"5521:10:50","valueSize":1},{"declaration":8184,"isOffset":false,"isSlot":false,"src":"7265:10:50","valueSize":1},{"declaration":8184,"isOffset":false,"isSlot":false,"src":"7316:10:50","valueSize":1},{"declaration":8184,"isOffset":false,"isSlot":false,"src":"8829:10:50","valueSize":1},{"declaration":8184,"isOffset":false,"isSlot":false,"src":"8880:10:50","valueSize":1},{"declaration":8182,"isOffset":false,"isSlot":true,"src":"3697:14:50","suffix":"slot","valueSize":1},{"declaration":8182,"isOffset":false,"isSlot":true,"src":"4991:14:50","suffix":"slot","valueSize":1},{"declaration":8182,"isOffset":false,"isSlot":true,"src":"6429:14:50","suffix":"slot","valueSize":1},{"declaration":8182,"isOffset":false,"isSlot":true,"src":"6574:14:50","suffix":"slot","valueSize":1},{"declaration":8182,"isOffset":false,"isSlot":true,"src":"8273:14:50","suffix":"slot","valueSize":1},{"declaration":8182,"isOffset":false,"isSlot":true,"src":"8494:14:50","suffix":"slot","valueSize":1}],"id":8187,"nodeType":"InlineAssembly","src":"3446:5999:50"}]},"id":8189,"implemented":true,"kind":"function","modifiers":[],"name":"concatStorage","nameLocation":"3363:13:50","nodeType":"FunctionDefinition","parameters":{"id":8185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8182,"mutability":"mutable","name":"_preBytes","nameLocation":"3391:9:50","nodeType":"VariableDeclaration","scope":8189,"src":"3377:23:50","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":8181,"name":"bytes","nodeType":"ElementaryTypeName","src":"3377:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8184,"mutability":"mutable","name":"_postBytes","nameLocation":"3415:10:50","nodeType":"VariableDeclaration","scope":8189,"src":"3402:23:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8183,"name":"bytes","nodeType":"ElementaryTypeName","src":"3402:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3376:50:50"},"returnParameters":{"id":8186,"nodeType":"ParameterList","parameters":[],"src":"3436:0:50"},"scope":8495,"src":"3354:6097:50","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8225,"nodeType":"Block","src":"9621:2640:50","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8201,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8195,"src":"9639:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3331","id":8202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9649:2:50","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"9639:12:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":8204,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8195,"src":"9655:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9639:23:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736c6963655f6f766572666c6f77","id":8206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9664:16:50","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","typeString":"literal_string \"slice_overflow\""},"value":"slice_overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","typeString":"literal_string \"slice_overflow\""}],"id":8200,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9631:7:50","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9631:50:50","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8208,"nodeType":"ExpressionStatement","src":"9631:50:50"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8210,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8191,"src":"9699:6:50","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9706:6:50","memberName":"length","nodeType":"MemberAccess","src":"9699:13:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8212,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8193,"src":"9716:6:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8213,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8195,"src":"9725:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9716:16:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9699:33:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736c6963655f6f75744f66426f756e6473","id":8216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9734:19:50","typeDescriptions":{"typeIdentifier":"t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0","typeString":"literal_string \"slice_outOfBounds\""},"value":"slice_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0","typeString":"literal_string \"slice_outOfBounds\""}],"id":8209,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9691:7:50","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9691:63:50","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8218,"nodeType":"ExpressionStatement","src":"9691:63:50"},{"assignments":[8220],"declarations":[{"constant":false,"id":8220,"mutability":"mutable","name":"tempBytes","nameLocation":"9778:9:50","nodeType":"VariableDeclaration","scope":8225,"src":"9765:22:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8219,"name":"bytes","nodeType":"ElementaryTypeName","src":"9765:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":8221,"nodeType":"VariableDeclarationStatement","src":"9765:22:50"},{"AST":{"nodeType":"YulBlock","src":"9807:2421:50","statements":[{"cases":[{"body":{"nodeType":"YulBlock","src":"9863:1960:50","statements":[{"nodeType":"YulAssignment","src":"10019:24:50","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10038:4:50","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10032:5:50"},"nodeType":"YulFunctionCall","src":"10032:11:50"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"10019:9:50"}]},{"nodeType":"YulVariableDeclaration","src":"10667:33:50","value":{"arguments":[{"name":"_length","nodeType":"YulIdentifier","src":"10688:7:50"},{"kind":"number","nodeType":"YulLiteral","src":"10697:2:50","type":"","value":"31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10684:3:50"},"nodeType":"YulFunctionCall","src":"10684:16:50"},"variables":[{"name":"lengthmod","nodeType":"YulTypedName","src":"10671:9:50","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11021:70:50","value":{"arguments":[{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"11039:9:50"},{"name":"lengthmod","nodeType":"YulIdentifier","src":"11050:9:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11035:3:50"},"nodeType":"YulFunctionCall","src":"11035:25:50"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11066:4:50","type":"","value":"0x20"},{"arguments":[{"name":"lengthmod","nodeType":"YulIdentifier","src":"11079:9:50"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11072:6:50"},"nodeType":"YulFunctionCall","src":"11072:17:50"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11062:3:50"},"nodeType":"YulFunctionCall","src":"11062:28:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11031:3:50"},"nodeType":"YulFunctionCall","src":"11031:60:50"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"11025:2:50","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11108:27:50","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11123:2:50"},{"name":"_length","nodeType":"YulIdentifier","src":"11127:7:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11119:3:50"},"nodeType":"YulFunctionCall","src":"11119:16:50"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"11112:3:50","type":""}]},{"body":{"nodeType":"YulBlock","src":"11517:61:50","statements":[{"expression":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11546:2:50"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"11556:2:50"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11550:5:50"},"nodeType":"YulFunctionCall","src":"11550:9:50"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11539:6:50"},"nodeType":"YulFunctionCall","src":"11539:21:50"},"nodeType":"YulExpressionStatement","src":"11539:21:50"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11408:2:50"},{"name":"end","nodeType":"YulIdentifier","src":"11412:3:50"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11405:2:50"},"nodeType":"YulFunctionCall","src":"11405:11:50"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11417:99:50","statements":[{"nodeType":"YulAssignment","src":"11439:19:50","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11449:2:50"},{"kind":"number","nodeType":"YulLiteral","src":"11453:4:50","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11445:3:50"},"nodeType":"YulFunctionCall","src":"11445:13:50"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"11439:2:50"}]},{"nodeType":"YulAssignment","src":"11479:19:50","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"11489:2:50"},{"kind":"number","nodeType":"YulLiteral","src":"11493:4:50","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11485:3:50"},"nodeType":"YulFunctionCall","src":"11485:13:50"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"11479:2:50"}]}]},"pre":{"nodeType":"YulBlock","src":"11157:247:50","statements":[{"nodeType":"YulVariableDeclaration","src":"11306:80:50","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"11328:6:50"},{"name":"lengthmod","nodeType":"YulIdentifier","src":"11336:9:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11324:3:50"},"nodeType":"YulFunctionCall","src":"11324:22:50"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11352:4:50","type":"","value":"0x20"},{"arguments":[{"name":"lengthmod","nodeType":"YulIdentifier","src":"11365:9:50"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11358:6:50"},"nodeType":"YulFunctionCall","src":"11358:17:50"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11348:3:50"},"nodeType":"YulFunctionCall","src":"11348:28:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11320:3:50"},"nodeType":"YulFunctionCall","src":"11320:57:50"},{"name":"_start","nodeType":"YulIdentifier","src":"11379:6:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11316:3:50"},"nodeType":"YulFunctionCall","src":"11316:70:50"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"11310:2:50","type":""}]}]},"src":"11153:425:50"},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"11603:9:50"},{"name":"_length","nodeType":"YulIdentifier","src":"11614:7:50"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11596:6:50"},"nodeType":"YulFunctionCall","src":"11596:26:50"},"nodeType":"YulExpressionStatement","src":"11596:26:50"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11777:4:50","type":"","value":"0x40"},{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"11791:2:50"},{"kind":"number","nodeType":"YulLiteral","src":"11795:2:50","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11787:3:50"},"nodeType":"YulFunctionCall","src":"11787:11:50"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11804:2:50","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11800:3:50"},"nodeType":"YulFunctionCall","src":"11800:7:50"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11783:3:50"},"nodeType":"YulFunctionCall","src":"11783:25:50"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11770:6:50"},"nodeType":"YulFunctionCall","src":"11770:39:50"},"nodeType":"YulExpressionStatement","src":"11770:39:50"}]},"nodeType":"YulCase","src":"9856:1967:50","value":{"kind":"number","nodeType":"YulLiteral","src":"9861:1:50","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"11927:291:50","statements":[{"nodeType":"YulAssignment","src":"11945:24:50","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11964:4:50","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11958:5:50"},"nodeType":"YulFunctionCall","src":"11958:11:50"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"11945:9:50"}]},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"12139:9:50"},{"kind":"number","nodeType":"YulLiteral","src":"12150:1:50","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12132:6:50"},"nodeType":"YulFunctionCall","src":"12132:20:50"},"nodeType":"YulExpressionStatement","src":"12132:20:50"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12177:4:50","type":"","value":"0x40"},{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"12187:9:50"},{"kind":"number","nodeType":"YulLiteral","src":"12198:4:50","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12183:3:50"},"nodeType":"YulFunctionCall","src":"12183:20:50"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12170:6:50"},"nodeType":"YulFunctionCall","src":"12170:34:50"},"nodeType":"YulExpressionStatement","src":"12170:34:50"}]},"nodeType":"YulCase","src":"11919:299:50","value":"default"}],"expression":{"arguments":[{"name":"_length","nodeType":"YulIdentifier","src":"9835:7:50"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9828:6:50"},"nodeType":"YulFunctionCall","src":"9828:15:50"},"nodeType":"YulSwitch","src":"9821:2397:50"}]},"evmVersion":"paris","externalReferences":[{"declaration":8191,"isOffset":false,"isSlot":false,"src":"11328:6:50","valueSize":1},{"declaration":8195,"isOffset":false,"isSlot":false,"src":"10688:7:50","valueSize":1},{"declaration":8195,"isOffset":false,"isSlot":false,"src":"11127:7:50","valueSize":1},{"declaration":8195,"isOffset":false,"isSlot":false,"src":"11614:7:50","valueSize":1},{"declaration":8195,"isOffset":false,"isSlot":false,"src":"9835:7:50","valueSize":1},{"declaration":8193,"isOffset":false,"isSlot":false,"src":"11379:6:50","valueSize":1},{"declaration":8220,"isOffset":false,"isSlot":false,"src":"10019:9:50","valueSize":1},{"declaration":8220,"isOffset":false,"isSlot":false,"src":"11039:9:50","valueSize":1},{"declaration":8220,"isOffset":false,"isSlot":false,"src":"11603:9:50","valueSize":1},{"declaration":8220,"isOffset":false,"isSlot":false,"src":"11945:9:50","valueSize":1},{"declaration":8220,"isOffset":false,"isSlot":false,"src":"12139:9:50","valueSize":1},{"declaration":8220,"isOffset":false,"isSlot":false,"src":"12187:9:50","valueSize":1}],"id":8222,"nodeType":"InlineAssembly","src":"9798:2430:50"},{"expression":{"id":8223,"name":"tempBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8220,"src":"12245:9:50","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":8199,"id":8224,"nodeType":"Return","src":"12238:16:50"}]},"id":8226,"implemented":true,"kind":"function","modifiers":[],"name":"slice","nameLocation":"9466:5:50","nodeType":"FunctionDefinition","parameters":{"id":8196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8191,"mutability":"mutable","name":"_bytes","nameLocation":"9494:6:50","nodeType":"VariableDeclaration","scope":8226,"src":"9481:19:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8190,"name":"bytes","nodeType":"ElementaryTypeName","src":"9481:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8193,"mutability":"mutable","name":"_start","nameLocation":"9518:6:50","nodeType":"VariableDeclaration","scope":8226,"src":"9510:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8192,"name":"uint256","nodeType":"ElementaryTypeName","src":"9510:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8195,"mutability":"mutable","name":"_length","nameLocation":"9542:7:50","nodeType":"VariableDeclaration","scope":8226,"src":"9534:15:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8194,"name":"uint256","nodeType":"ElementaryTypeName","src":"9534:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9471:84:50"},"returnParameters":{"id":8199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8226,"src":"9603:12:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8197,"name":"bytes","nodeType":"ElementaryTypeName","src":"9603:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9602:14:50"},"scope":8495,"src":"9457:2804:50","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8251,"nodeType":"Block","src":"12355:266:50","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8236,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8228,"src":"12373:6:50","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12380:6:50","memberName":"length","nodeType":"MemberAccess","src":"12373:13:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8238,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"12390:6:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3230","id":8239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12399:2:50","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"12390:11:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12373:28:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f416464726573735f6f75744f66426f756e6473","id":8242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12403:23:50","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d","typeString":"literal_string \"toAddress_outOfBounds\""},"value":"toAddress_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d","typeString":"literal_string \"toAddress_outOfBounds\""}],"id":8235,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12365:7:50","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12365:62:50","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8244,"nodeType":"ExpressionStatement","src":"12365:62:50"},{"assignments":[8246],"declarations":[{"constant":false,"id":8246,"mutability":"mutable","name":"tempAddress","nameLocation":"12445:11:50","nodeType":"VariableDeclaration","scope":8251,"src":"12437:19:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8245,"name":"address","nodeType":"ElementaryTypeName","src":"12437:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8247,"nodeType":"VariableDeclarationStatement","src":"12437:19:50"},{"AST":{"nodeType":"YulBlock","src":"12476:110:50","statements":[{"nodeType":"YulAssignment","src":"12490:86:50","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"12523:6:50"},{"kind":"number","nodeType":"YulLiteral","src":"12531:4:50","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12519:3:50"},"nodeType":"YulFunctionCall","src":"12519:17:50"},{"name":"_start","nodeType":"YulIdentifier","src":"12538:6:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12515:3:50"},"nodeType":"YulFunctionCall","src":"12515:30:50"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12509:5:50"},"nodeType":"YulFunctionCall","src":"12509:37:50"},{"kind":"number","nodeType":"YulLiteral","src":"12548:27:50","type":"","value":"0x1000000000000000000000000"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12505:3:50"},"nodeType":"YulFunctionCall","src":"12505:71:50"},"variableNames":[{"name":"tempAddress","nodeType":"YulIdentifier","src":"12490:11:50"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8228,"isOffset":false,"isSlot":false,"src":"12523:6:50","valueSize":1},{"declaration":8230,"isOffset":false,"isSlot":false,"src":"12538:6:50","valueSize":1},{"declaration":8246,"isOffset":false,"isSlot":false,"src":"12490:11:50","valueSize":1}],"id":8248,"nodeType":"InlineAssembly","src":"12467:119:50"},{"expression":{"id":8249,"name":"tempAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8246,"src":"12603:11:50","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":8234,"id":8250,"nodeType":"Return","src":"12596:18:50"}]},"id":8252,"implemented":true,"kind":"function","modifiers":[],"name":"toAddress","nameLocation":"12276:9:50","nodeType":"FunctionDefinition","parameters":{"id":8231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8228,"mutability":"mutable","name":"_bytes","nameLocation":"12299:6:50","nodeType":"VariableDeclaration","scope":8252,"src":"12286:19:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8227,"name":"bytes","nodeType":"ElementaryTypeName","src":"12286:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8230,"mutability":"mutable","name":"_start","nameLocation":"12315:6:50","nodeType":"VariableDeclaration","scope":8252,"src":"12307:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8229,"name":"uint256","nodeType":"ElementaryTypeName","src":"12307:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12285:37:50"},"returnParameters":{"id":8234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8252,"src":"12346:7:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8232,"name":"address","nodeType":"ElementaryTypeName","src":"12346:7:50","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12345:9:50"},"scope":8495,"src":"12267:354:50","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8277,"nodeType":"Block","src":"12711:218:50","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8262,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8254,"src":"12729:6:50","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12736:6:50","memberName":"length","nodeType":"MemberAccess","src":"12729:13:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8264,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8256,"src":"12746:6:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":8265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12755:1:50","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12746:10:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12729:27:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e74385f6f75744f66426f756e6473","id":8268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12759:21:50","typeDescriptions":{"typeIdentifier":"t_stringliteral_ce6d7be00009dd45cc670fb6c2ceee25786f142bcb64e7f1ee73012b26bb6ca1","typeString":"literal_string \"toUint8_outOfBounds\""},"value":"toUint8_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ce6d7be00009dd45cc670fb6c2ceee25786f142bcb64e7f1ee73012b26bb6ca1","typeString":"literal_string \"toUint8_outOfBounds\""}],"id":8261,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12721:7:50","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12721:60:50","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8270,"nodeType":"ExpressionStatement","src":"12721:60:50"},{"assignments":[8272],"declarations":[{"constant":false,"id":8272,"mutability":"mutable","name":"tempUint","nameLocation":"12797:8:50","nodeType":"VariableDeclaration","scope":8277,"src":"12791:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8271,"name":"uint8","nodeType":"ElementaryTypeName","src":"12791:5:50","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":8273,"nodeType":"VariableDeclarationStatement","src":"12791:14:50"},{"AST":{"nodeType":"YulBlock","src":"12825:72:50","statements":[{"nodeType":"YulAssignment","src":"12839:48:50","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"12865:6:50"},{"kind":"number","nodeType":"YulLiteral","src":"12873:3:50","type":"","value":"0x1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12861:3:50"},"nodeType":"YulFunctionCall","src":"12861:16:50"},{"name":"_start","nodeType":"YulIdentifier","src":"12879:6:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12857:3:50"},"nodeType":"YulFunctionCall","src":"12857:29:50"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12851:5:50"},"nodeType":"YulFunctionCall","src":"12851:36:50"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"12839:8:50"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8254,"isOffset":false,"isSlot":false,"src":"12865:6:50","valueSize":1},{"declaration":8256,"isOffset":false,"isSlot":false,"src":"12879:6:50","valueSize":1},{"declaration":8272,"isOffset":false,"isSlot":false,"src":"12839:8:50","valueSize":1}],"id":8274,"nodeType":"InlineAssembly","src":"12816:81:50"},{"expression":{"id":8275,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8272,"src":"12914:8:50","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":8260,"id":8276,"nodeType":"Return","src":"12907:15:50"}]},"id":8278,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"12636:7:50","nodeType":"FunctionDefinition","parameters":{"id":8257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8254,"mutability":"mutable","name":"_bytes","nameLocation":"12657:6:50","nodeType":"VariableDeclaration","scope":8278,"src":"12644:19:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8253,"name":"bytes","nodeType":"ElementaryTypeName","src":"12644:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8256,"mutability":"mutable","name":"_start","nameLocation":"12673:6:50","nodeType":"VariableDeclaration","scope":8278,"src":"12665:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8255,"name":"uint256","nodeType":"ElementaryTypeName","src":"12665:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12643:37:50"},"returnParameters":{"id":8260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8278,"src":"12704:5:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8258,"name":"uint8","nodeType":"ElementaryTypeName","src":"12704:5:50","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"12703:7:50"},"scope":8495,"src":"12627:302:50","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8303,"nodeType":"Block","src":"13021:219:50","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8288,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8280,"src":"13039:6:50","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13046:6:50","memberName":"length","nodeType":"MemberAccess","src":"13039:13:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8290,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8282,"src":"13056:6:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":8291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13065:1:50","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13056:10:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13039:27:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7431365f6f75744f66426f756e6473","id":8294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13068:22:50","typeDescriptions":{"typeIdentifier":"t_stringliteral_414233483a71244a4f2700455a9733e71511b5279e381bdd2af6d44b1b09ecab","typeString":"literal_string \"toUint16_outOfBounds\""},"value":"toUint16_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_414233483a71244a4f2700455a9733e71511b5279e381bdd2af6d44b1b09ecab","typeString":"literal_string \"toUint16_outOfBounds\""}],"id":8287,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13031:7:50","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13031:60:50","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8296,"nodeType":"ExpressionStatement","src":"13031:60:50"},{"assignments":[8298],"declarations":[{"constant":false,"id":8298,"mutability":"mutable","name":"tempUint","nameLocation":"13108:8:50","nodeType":"VariableDeclaration","scope":8303,"src":"13101:15:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":8297,"name":"uint16","nodeType":"ElementaryTypeName","src":"13101:6:50","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"id":8299,"nodeType":"VariableDeclarationStatement","src":"13101:15:50"},{"AST":{"nodeType":"YulBlock","src":"13136:72:50","statements":[{"nodeType":"YulAssignment","src":"13150:48:50","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"13176:6:50"},{"kind":"number","nodeType":"YulLiteral","src":"13184:3:50","type":"","value":"0x2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13172:3:50"},"nodeType":"YulFunctionCall","src":"13172:16:50"},{"name":"_start","nodeType":"YulIdentifier","src":"13190:6:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13168:3:50"},"nodeType":"YulFunctionCall","src":"13168:29:50"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13162:5:50"},"nodeType":"YulFunctionCall","src":"13162:36:50"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"13150:8:50"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8280,"isOffset":false,"isSlot":false,"src":"13176:6:50","valueSize":1},{"declaration":8282,"isOffset":false,"isSlot":false,"src":"13190:6:50","valueSize":1},{"declaration":8298,"isOffset":false,"isSlot":false,"src":"13150:8:50","valueSize":1}],"id":8300,"nodeType":"InlineAssembly","src":"13127:81:50"},{"expression":{"id":8301,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8298,"src":"13225:8:50","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":8286,"id":8302,"nodeType":"Return","src":"13218:15:50"}]},"id":8304,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"12944:8:50","nodeType":"FunctionDefinition","parameters":{"id":8283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8280,"mutability":"mutable","name":"_bytes","nameLocation":"12966:6:50","nodeType":"VariableDeclaration","scope":8304,"src":"12953:19:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8279,"name":"bytes","nodeType":"ElementaryTypeName","src":"12953:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8282,"mutability":"mutable","name":"_start","nameLocation":"12982:6:50","nodeType":"VariableDeclaration","scope":8304,"src":"12974:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8281,"name":"uint256","nodeType":"ElementaryTypeName","src":"12974:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12952:37:50"},"returnParameters":{"id":8286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8304,"src":"13013:6:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":8284,"name":"uint16","nodeType":"ElementaryTypeName","src":"13013:6:50","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"13012:8:50"},"scope":8495,"src":"12935:305:50","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8329,"nodeType":"Block","src":"13332:219:50","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8314,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8306,"src":"13350:6:50","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13357:6:50","memberName":"length","nodeType":"MemberAccess","src":"13350:13:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8316,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8308,"src":"13367:6:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"34","id":8317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13376:1:50","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"13367:10:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13350:27:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7433325f6f75744f66426f756e6473","id":8320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13379:22:50","typeDescriptions":{"typeIdentifier":"t_stringliteral_e0a09853867d05bef4b1d534052126bc72acd3515e1725b9b280e16d988e6ccf","typeString":"literal_string \"toUint32_outOfBounds\""},"value":"toUint32_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e0a09853867d05bef4b1d534052126bc72acd3515e1725b9b280e16d988e6ccf","typeString":"literal_string \"toUint32_outOfBounds\""}],"id":8313,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13342:7:50","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13342:60:50","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8322,"nodeType":"ExpressionStatement","src":"13342:60:50"},{"assignments":[8324],"declarations":[{"constant":false,"id":8324,"mutability":"mutable","name":"tempUint","nameLocation":"13419:8:50","nodeType":"VariableDeclaration","scope":8329,"src":"13412:15:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8323,"name":"uint32","nodeType":"ElementaryTypeName","src":"13412:6:50","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":8325,"nodeType":"VariableDeclarationStatement","src":"13412:15:50"},{"AST":{"nodeType":"YulBlock","src":"13447:72:50","statements":[{"nodeType":"YulAssignment","src":"13461:48:50","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"13487:6:50"},{"kind":"number","nodeType":"YulLiteral","src":"13495:3:50","type":"","value":"0x4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13483:3:50"},"nodeType":"YulFunctionCall","src":"13483:16:50"},{"name":"_start","nodeType":"YulIdentifier","src":"13501:6:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13479:3:50"},"nodeType":"YulFunctionCall","src":"13479:29:50"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13473:5:50"},"nodeType":"YulFunctionCall","src":"13473:36:50"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"13461:8:50"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8306,"isOffset":false,"isSlot":false,"src":"13487:6:50","valueSize":1},{"declaration":8308,"isOffset":false,"isSlot":false,"src":"13501:6:50","valueSize":1},{"declaration":8324,"isOffset":false,"isSlot":false,"src":"13461:8:50","valueSize":1}],"id":8326,"nodeType":"InlineAssembly","src":"13438:81:50"},{"expression":{"id":8327,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8324,"src":"13536:8:50","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":8312,"id":8328,"nodeType":"Return","src":"13529:15:50"}]},"id":8330,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"13255:8:50","nodeType":"FunctionDefinition","parameters":{"id":8309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8306,"mutability":"mutable","name":"_bytes","nameLocation":"13277:6:50","nodeType":"VariableDeclaration","scope":8330,"src":"13264:19:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8305,"name":"bytes","nodeType":"ElementaryTypeName","src":"13264:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8308,"mutability":"mutable","name":"_start","nameLocation":"13293:6:50","nodeType":"VariableDeclaration","scope":8330,"src":"13285:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8307,"name":"uint256","nodeType":"ElementaryTypeName","src":"13285:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13263:37:50"},"returnParameters":{"id":8312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8330,"src":"13324:6:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8310,"name":"uint32","nodeType":"ElementaryTypeName","src":"13324:6:50","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"13323:8:50"},"scope":8495,"src":"13246:305:50","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8355,"nodeType":"Block","src":"13643:219:50","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8340,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8332,"src":"13661:6:50","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13668:6:50","memberName":"length","nodeType":"MemberAccess","src":"13661:13:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8342,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8334,"src":"13678:6:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"38","id":8343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13687:1:50","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"13678:10:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13661:27:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7436345f6f75744f66426f756e6473","id":8346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13690:22:50","typeDescriptions":{"typeIdentifier":"t_stringliteral_55885cc1e15ebd0ff3d9803b39476f6ee2279f42aa3070b40f2de433347c0145","typeString":"literal_string \"toUint64_outOfBounds\""},"value":"toUint64_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_55885cc1e15ebd0ff3d9803b39476f6ee2279f42aa3070b40f2de433347c0145","typeString":"literal_string \"toUint64_outOfBounds\""}],"id":8339,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13653:7:50","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13653:60:50","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8348,"nodeType":"ExpressionStatement","src":"13653:60:50"},{"assignments":[8350],"declarations":[{"constant":false,"id":8350,"mutability":"mutable","name":"tempUint","nameLocation":"13730:8:50","nodeType":"VariableDeclaration","scope":8355,"src":"13723:15:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":8349,"name":"uint64","nodeType":"ElementaryTypeName","src":"13723:6:50","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":8351,"nodeType":"VariableDeclarationStatement","src":"13723:15:50"},{"AST":{"nodeType":"YulBlock","src":"13758:72:50","statements":[{"nodeType":"YulAssignment","src":"13772:48:50","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"13798:6:50"},{"kind":"number","nodeType":"YulLiteral","src":"13806:3:50","type":"","value":"0x8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13794:3:50"},"nodeType":"YulFunctionCall","src":"13794:16:50"},{"name":"_start","nodeType":"YulIdentifier","src":"13812:6:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13790:3:50"},"nodeType":"YulFunctionCall","src":"13790:29:50"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13784:5:50"},"nodeType":"YulFunctionCall","src":"13784:36:50"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"13772:8:50"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8332,"isOffset":false,"isSlot":false,"src":"13798:6:50","valueSize":1},{"declaration":8334,"isOffset":false,"isSlot":false,"src":"13812:6:50","valueSize":1},{"declaration":8350,"isOffset":false,"isSlot":false,"src":"13772:8:50","valueSize":1}],"id":8352,"nodeType":"InlineAssembly","src":"13749:81:50"},{"expression":{"id":8353,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8350,"src":"13847:8:50","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":8338,"id":8354,"nodeType":"Return","src":"13840:15:50"}]},"id":8356,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13566:8:50","nodeType":"FunctionDefinition","parameters":{"id":8335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8332,"mutability":"mutable","name":"_bytes","nameLocation":"13588:6:50","nodeType":"VariableDeclaration","scope":8356,"src":"13575:19:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8331,"name":"bytes","nodeType":"ElementaryTypeName","src":"13575:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8334,"mutability":"mutable","name":"_start","nameLocation":"13604:6:50","nodeType":"VariableDeclaration","scope":8356,"src":"13596:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8333,"name":"uint256","nodeType":"ElementaryTypeName","src":"13596:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13574:37:50"},"returnParameters":{"id":8338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8356,"src":"13635:6:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":8336,"name":"uint64","nodeType":"ElementaryTypeName","src":"13635:6:50","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13634:8:50"},"scope":8495,"src":"13557:305:50","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8381,"nodeType":"Block","src":"13954:220:50","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8366,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8358,"src":"13972:6:50","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13979:6:50","memberName":"length","nodeType":"MemberAccess","src":"13972:13:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8368,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8360,"src":"13989:6:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3132","id":8369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:50","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"src":"13989:11:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13972:28:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e7439365f6f75744f66426f756e6473","id":8372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14002:22:50","typeDescriptions":{"typeIdentifier":"t_stringliteral_245175b34ac1d95c460f2a4fcb106dbfea12949a3cbb7ae3362c49144bb9feb7","typeString":"literal_string \"toUint96_outOfBounds\""},"value":"toUint96_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245175b34ac1d95c460f2a4fcb106dbfea12949a3cbb7ae3362c49144bb9feb7","typeString":"literal_string \"toUint96_outOfBounds\""}],"id":8365,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13964:7:50","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13964:61:50","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8374,"nodeType":"ExpressionStatement","src":"13964:61:50"},{"assignments":[8376],"declarations":[{"constant":false,"id":8376,"mutability":"mutable","name":"tempUint","nameLocation":"14042:8:50","nodeType":"VariableDeclaration","scope":8381,"src":"14035:15:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8375,"name":"uint96","nodeType":"ElementaryTypeName","src":"14035:6:50","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":8377,"nodeType":"VariableDeclarationStatement","src":"14035:15:50"},{"AST":{"nodeType":"YulBlock","src":"14070:72:50","statements":[{"nodeType":"YulAssignment","src":"14084:48:50","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"14110:6:50"},{"kind":"number","nodeType":"YulLiteral","src":"14118:3:50","type":"","value":"0xc"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14106:3:50"},"nodeType":"YulFunctionCall","src":"14106:16:50"},{"name":"_start","nodeType":"YulIdentifier","src":"14124:6:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14102:3:50"},"nodeType":"YulFunctionCall","src":"14102:29:50"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14096:5:50"},"nodeType":"YulFunctionCall","src":"14096:36:50"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"14084:8:50"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8358,"isOffset":false,"isSlot":false,"src":"14110:6:50","valueSize":1},{"declaration":8360,"isOffset":false,"isSlot":false,"src":"14124:6:50","valueSize":1},{"declaration":8376,"isOffset":false,"isSlot":false,"src":"14084:8:50","valueSize":1}],"id":8378,"nodeType":"InlineAssembly","src":"14061:81:50"},{"expression":{"id":8379,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8376,"src":"14159:8:50","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":8364,"id":8380,"nodeType":"Return","src":"14152:15:50"}]},"id":8382,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"13877:8:50","nodeType":"FunctionDefinition","parameters":{"id":8361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8358,"mutability":"mutable","name":"_bytes","nameLocation":"13899:6:50","nodeType":"VariableDeclaration","scope":8382,"src":"13886:19:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8357,"name":"bytes","nodeType":"ElementaryTypeName","src":"13886:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8360,"mutability":"mutable","name":"_start","nameLocation":"13915:6:50","nodeType":"VariableDeclaration","scope":8382,"src":"13907:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8359,"name":"uint256","nodeType":"ElementaryTypeName","src":"13907:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13885:37:50"},"returnParameters":{"id":8364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8382,"src":"13946:6:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8362,"name":"uint96","nodeType":"ElementaryTypeName","src":"13946:6:50","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"13945:8:50"},"scope":8495,"src":"13868:306:50","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8407,"nodeType":"Block","src":"14268:223:50","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8392,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8384,"src":"14286:6:50","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14293:6:50","memberName":"length","nodeType":"MemberAccess","src":"14286:13:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8394,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8386,"src":"14303:6:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3136","id":8395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14312:2:50","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14303:11:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14286:28:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e743132385f6f75744f66426f756e6473","id":8398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14316:23:50","typeDescriptions":{"typeIdentifier":"t_stringliteral_17474b965d7fdba029328487966488b63c32338e60aea74eafb22325bb8d90dc","typeString":"literal_string \"toUint128_outOfBounds\""},"value":"toUint128_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17474b965d7fdba029328487966488b63c32338e60aea74eafb22325bb8d90dc","typeString":"literal_string \"toUint128_outOfBounds\""}],"id":8391,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14278:7:50","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14278:62:50","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8400,"nodeType":"ExpressionStatement","src":"14278:62:50"},{"assignments":[8402],"declarations":[{"constant":false,"id":8402,"mutability":"mutable","name":"tempUint","nameLocation":"14358:8:50","nodeType":"VariableDeclaration","scope":8407,"src":"14350:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":8401,"name":"uint128","nodeType":"ElementaryTypeName","src":"14350:7:50","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"id":8403,"nodeType":"VariableDeclarationStatement","src":"14350:16:50"},{"AST":{"nodeType":"YulBlock","src":"14386:73:50","statements":[{"nodeType":"YulAssignment","src":"14400:49:50","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"14426:6:50"},{"kind":"number","nodeType":"YulLiteral","src":"14434:4:50","type":"","value":"0x10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14422:3:50"},"nodeType":"YulFunctionCall","src":"14422:17:50"},{"name":"_start","nodeType":"YulIdentifier","src":"14441:6:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14418:3:50"},"nodeType":"YulFunctionCall","src":"14418:30:50"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14412:5:50"},"nodeType":"YulFunctionCall","src":"14412:37:50"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"14400:8:50"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8384,"isOffset":false,"isSlot":false,"src":"14426:6:50","valueSize":1},{"declaration":8386,"isOffset":false,"isSlot":false,"src":"14441:6:50","valueSize":1},{"declaration":8402,"isOffset":false,"isSlot":false,"src":"14400:8:50","valueSize":1}],"id":8404,"nodeType":"InlineAssembly","src":"14377:82:50"},{"expression":{"id":8405,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8402,"src":"14476:8:50","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":8390,"id":8406,"nodeType":"Return","src":"14469:15:50"}]},"id":8408,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"14189:9:50","nodeType":"FunctionDefinition","parameters":{"id":8387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8384,"mutability":"mutable","name":"_bytes","nameLocation":"14212:6:50","nodeType":"VariableDeclaration","scope":8408,"src":"14199:19:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8383,"name":"bytes","nodeType":"ElementaryTypeName","src":"14199:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8386,"mutability":"mutable","name":"_start","nameLocation":"14228:6:50","nodeType":"VariableDeclaration","scope":8408,"src":"14220:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8385,"name":"uint256","nodeType":"ElementaryTypeName","src":"14220:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14198:37:50"},"returnParameters":{"id":8390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8389,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8408,"src":"14259:7:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":8388,"name":"uint128","nodeType":"ElementaryTypeName","src":"14259:7:50","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"14258:9:50"},"scope":8495,"src":"14180:311:50","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8433,"nodeType":"Block","src":"14585:223:50","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8418,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8410,"src":"14603:6:50","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14610:6:50","memberName":"length","nodeType":"MemberAccess","src":"14603:13:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8420,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8412,"src":"14620:6:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3332","id":8421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14629:2:50","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14620:11:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14603:28:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f55696e743235365f6f75744f66426f756e6473","id":8424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14633:23:50","typeDescriptions":{"typeIdentifier":"t_stringliteral_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b","typeString":"literal_string \"toUint256_outOfBounds\""},"value":"toUint256_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87a32b96294a395a4fb365d8b27a23d532fa10419cffd7dc13367cdc71bf4d7b","typeString":"literal_string \"toUint256_outOfBounds\""}],"id":8417,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14595:7:50","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14595:62:50","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8426,"nodeType":"ExpressionStatement","src":"14595:62:50"},{"assignments":[8428],"declarations":[{"constant":false,"id":8428,"mutability":"mutable","name":"tempUint","nameLocation":"14675:8:50","nodeType":"VariableDeclaration","scope":8433,"src":"14667:16:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8427,"name":"uint256","nodeType":"ElementaryTypeName","src":"14667:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8429,"nodeType":"VariableDeclarationStatement","src":"14667:16:50"},{"AST":{"nodeType":"YulBlock","src":"14703:73:50","statements":[{"nodeType":"YulAssignment","src":"14717:49:50","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"14743:6:50"},{"kind":"number","nodeType":"YulLiteral","src":"14751:4:50","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14739:3:50"},"nodeType":"YulFunctionCall","src":"14739:17:50"},{"name":"_start","nodeType":"YulIdentifier","src":"14758:6:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14735:3:50"},"nodeType":"YulFunctionCall","src":"14735:30:50"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14729:5:50"},"nodeType":"YulFunctionCall","src":"14729:37:50"},"variableNames":[{"name":"tempUint","nodeType":"YulIdentifier","src":"14717:8:50"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8410,"isOffset":false,"isSlot":false,"src":"14743:6:50","valueSize":1},{"declaration":8412,"isOffset":false,"isSlot":false,"src":"14758:6:50","valueSize":1},{"declaration":8428,"isOffset":false,"isSlot":false,"src":"14717:8:50","valueSize":1}],"id":8430,"nodeType":"InlineAssembly","src":"14694:82:50"},{"expression":{"id":8431,"name":"tempUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8428,"src":"14793:8:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8416,"id":8432,"nodeType":"Return","src":"14786:15:50"}]},"id":8434,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"14506:9:50","nodeType":"FunctionDefinition","parameters":{"id":8413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8410,"mutability":"mutable","name":"_bytes","nameLocation":"14529:6:50","nodeType":"VariableDeclaration","scope":8434,"src":"14516:19:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8409,"name":"bytes","nodeType":"ElementaryTypeName","src":"14516:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8412,"mutability":"mutable","name":"_start","nameLocation":"14545:6:50","nodeType":"VariableDeclaration","scope":8434,"src":"14537:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8411,"name":"uint256","nodeType":"ElementaryTypeName","src":"14537:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14515:37:50"},"returnParameters":{"id":8416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8434,"src":"14576:7:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8414,"name":"uint256","nodeType":"ElementaryTypeName","src":"14576:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14575:9:50"},"scope":8495,"src":"14497:311:50","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8459,"nodeType":"Block","src":"14902:232:50","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8444,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8436,"src":"14920:6:50","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14927:6:50","memberName":"length","nodeType":"MemberAccess","src":"14920:13:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8446,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8438,"src":"14937:6:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3332","id":8447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14946:2:50","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14937:11:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14920:28:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f427974657333325f6f75744f66426f756e6473","id":8450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14950:23:50","typeDescriptions":{"typeIdentifier":"t_stringliteral_95abc635681816f3b423f999d8035c1cc722b70e3d801f56cd1748a4f5810fa2","typeString":"literal_string \"toBytes32_outOfBounds\""},"value":"toBytes32_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_95abc635681816f3b423f999d8035c1cc722b70e3d801f56cd1748a4f5810fa2","typeString":"literal_string \"toBytes32_outOfBounds\""}],"id":8443,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14912:7:50","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14912:62:50","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8452,"nodeType":"ExpressionStatement","src":"14912:62:50"},{"assignments":[8454],"declarations":[{"constant":false,"id":8454,"mutability":"mutable","name":"tempBytes32","nameLocation":"14992:11:50","nodeType":"VariableDeclaration","scope":8459,"src":"14984:19:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8453,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14984:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8455,"nodeType":"VariableDeclarationStatement","src":"14984:19:50"},{"AST":{"nodeType":"YulBlock","src":"15023:76:50","statements":[{"nodeType":"YulAssignment","src":"15037:52:50","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"15066:6:50"},{"kind":"number","nodeType":"YulLiteral","src":"15074:4:50","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15062:3:50"},"nodeType":"YulFunctionCall","src":"15062:17:50"},{"name":"_start","nodeType":"YulIdentifier","src":"15081:6:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15058:3:50"},"nodeType":"YulFunctionCall","src":"15058:30:50"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15052:5:50"},"nodeType":"YulFunctionCall","src":"15052:37:50"},"variableNames":[{"name":"tempBytes32","nodeType":"YulIdentifier","src":"15037:11:50"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8436,"isOffset":false,"isSlot":false,"src":"15066:6:50","valueSize":1},{"declaration":8438,"isOffset":false,"isSlot":false,"src":"15081:6:50","valueSize":1},{"declaration":8454,"isOffset":false,"isSlot":false,"src":"15037:11:50","valueSize":1}],"id":8456,"nodeType":"InlineAssembly","src":"15014:85:50"},{"expression":{"id":8457,"name":"tempBytes32","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8454,"src":"15116:11:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":8442,"id":8458,"nodeType":"Return","src":"15109:18:50"}]},"id":8460,"implemented":true,"kind":"function","modifiers":[],"name":"toBytes32","nameLocation":"14823:9:50","nodeType":"FunctionDefinition","parameters":{"id":8439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8436,"mutability":"mutable","name":"_bytes","nameLocation":"14846:6:50","nodeType":"VariableDeclaration","scope":8460,"src":"14833:19:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8435,"name":"bytes","nodeType":"ElementaryTypeName","src":"14833:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8438,"mutability":"mutable","name":"_start","nameLocation":"14862:6:50","nodeType":"VariableDeclaration","scope":8460,"src":"14854:14:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8437,"name":"uint256","nodeType":"ElementaryTypeName","src":"14854:7:50","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14832:37:50"},"returnParameters":{"id":8442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8460,"src":"14893:7:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8440,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14893:7:50","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14892:9:50"},"scope":8495,"src":"14814:320:50","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8476,"nodeType":"Block","src":"15233:1323:50","statements":[{"assignments":[8470],"declarations":[{"constant":false,"id":8470,"mutability":"mutable","name":"success","nameLocation":"15248:7:50","nodeType":"VariableDeclaration","scope":8476,"src":"15243:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8469,"name":"bool","nodeType":"ElementaryTypeName","src":"15243:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":8472,"initialValue":{"hexValue":"74727565","id":8471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15258:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"nodeType":"VariableDeclarationStatement","src":"15243:19:50"},{"AST":{"nodeType":"YulBlock","src":"15282:1243:50","statements":[{"nodeType":"YulVariableDeclaration","src":"15296:30:50","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"15316:9:50"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15310:5:50"},"nodeType":"YulFunctionCall","src":"15310:16:50"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15300:6:50","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"15459:961:50","statements":[{"nodeType":"YulVariableDeclaration","src":"15688:11:50","value":{"kind":"number","nodeType":"YulLiteral","src":"15698:1:50","type":"","value":"1"},"variables":[{"name":"cb","nodeType":"YulTypedName","src":"15692:2:50","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15717:30:50","value":{"arguments":[{"name":"_preBytes","nodeType":"YulIdentifier","src":"15731:9:50"},{"kind":"number","nodeType":"YulLiteral","src":"15742:4:50","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15727:3:50"},"nodeType":"YulFunctionCall","src":"15727:20:50"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"15721:2:50","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15764:26:50","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"15779:2:50"},{"name":"length","nodeType":"YulIdentifier","src":"15783:6:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15775:3:50"},"nodeType":"YulFunctionCall","src":"15775:15:50"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"15768:3:50","type":""}]},{"body":{"nodeType":"YulBlock","src":"16122:284:50","statements":[{"body":{"nodeType":"YulBlock","src":"16258:130:50","statements":[{"nodeType":"YulAssignment","src":"16322:12:50","value":{"kind":"number","nodeType":"YulLiteral","src":"16333:1:50","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"16322:7:50"}]},{"nodeType":"YulAssignment","src":"16359:7:50","value":{"kind":"number","nodeType":"YulLiteral","src":"16365:1:50","type":"","value":"0"},"variableNames":[{"name":"cb","nodeType":"YulIdentifier","src":"16359:2:50"}]}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"16241:2:50"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16235:5:50"},"nodeType":"YulFunctionCall","src":"16235:9:50"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"16252:2:50"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16246:5:50"},"nodeType":"YulFunctionCall","src":"16246:9:50"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16232:2:50"},"nodeType":"YulFunctionCall","src":"16232:24:50"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16225:6:50"},"nodeType":"YulFunctionCall","src":"16225:32:50"},"nodeType":"YulIf","src":"16222:166:50"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"16004:2:50"},{"name":"end","nodeType":"YulIdentifier","src":"16008:3:50"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16001:2:50"},"nodeType":"YulFunctionCall","src":"16001:11:50"},{"name":"cb","nodeType":"YulIdentifier","src":"16014:2:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15997:3:50"},"nodeType":"YulFunctionCall","src":"15997:20:50"},{"kind":"number","nodeType":"YulLiteral","src":"16019:1:50","type":"","value":"2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15994:2:50"},"nodeType":"YulFunctionCall","src":"15994:27:50"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"16022:99:50","statements":[{"nodeType":"YulAssignment","src":"16044:19:50","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"16054:2:50"},{"kind":"number","nodeType":"YulLiteral","src":"16058:4:50","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16050:3:50"},"nodeType":"YulFunctionCall","src":"16050:13:50"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"16044:2:50"}]},{"nodeType":"YulAssignment","src":"16084:19:50","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"16094:2:50"},{"kind":"number","nodeType":"YulLiteral","src":"16098:4:50","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16090:3:50"},"nodeType":"YulFunctionCall","src":"16090:13:50"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"16084:2:50"}]}]},"pre":{"nodeType":"YulBlock","src":"15812:181:50","statements":[{"nodeType":"YulVariableDeclaration","src":"15834:31:50","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"15848:10:50"},{"kind":"number","nodeType":"YulLiteral","src":"15860:4:50","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15844:3:50"},"nodeType":"YulFunctionCall","src":"15844:21:50"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"15838:2:50","type":""}]}]},"src":"15808:598:50"}]},"nodeType":"YulCase","src":"15452:968:50","value":{"kind":"number","nodeType":"YulLiteral","src":"15457:1:50","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"16441:74:50","statements":[{"nodeType":"YulAssignment","src":"16489:12:50","value":{"kind":"number","nodeType":"YulLiteral","src":"16500:1:50","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"16489:7:50"}]}]},"nodeType":"YulCase","src":"16433:82:50","value":"default"}],"expression":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15413:6:50"},{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"15427:10:50"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15421:5:50"},"nodeType":"YulFunctionCall","src":"15421:17:50"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15410:2:50"},"nodeType":"YulFunctionCall","src":"15410:29:50"},"nodeType":"YulSwitch","src":"15403:1112:50"}]},"evmVersion":"paris","externalReferences":[{"declaration":8464,"isOffset":false,"isSlot":false,"src":"15427:10:50","valueSize":1},{"declaration":8464,"isOffset":false,"isSlot":false,"src":"15848:10:50","valueSize":1},{"declaration":8462,"isOffset":false,"isSlot":false,"src":"15316:9:50","valueSize":1},{"declaration":8462,"isOffset":false,"isSlot":false,"src":"15731:9:50","valueSize":1},{"declaration":8470,"isOffset":false,"isSlot":false,"src":"16322:7:50","valueSize":1},{"declaration":8470,"isOffset":false,"isSlot":false,"src":"16489:7:50","valueSize":1}],"id":8473,"nodeType":"InlineAssembly","src":"15273:1252:50"},{"expression":{"id":8474,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8470,"src":"16542:7:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8468,"id":8475,"nodeType":"Return","src":"16535:14:50"}]},"id":8477,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"15149:5:50","nodeType":"FunctionDefinition","parameters":{"id":8465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8462,"mutability":"mutable","name":"_preBytes","nameLocation":"15168:9:50","nodeType":"VariableDeclaration","scope":8477,"src":"15155:22:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8461,"name":"bytes","nodeType":"ElementaryTypeName","src":"15155:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8464,"mutability":"mutable","name":"_postBytes","nameLocation":"15192:10:50","nodeType":"VariableDeclaration","scope":8477,"src":"15179:23:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8463,"name":"bytes","nodeType":"ElementaryTypeName","src":"15179:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15154:49:50"},"returnParameters":{"id":8468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8477,"src":"15227:4:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8466,"name":"bool","nodeType":"ElementaryTypeName","src":"15227:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15226:6:50"},"scope":8495,"src":"15140:1416:50","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8493,"nodeType":"Block","src":"16713:2559:50","statements":[{"assignments":[8487],"declarations":[{"constant":false,"id":8487,"mutability":"mutable","name":"success","nameLocation":"16728:7:50","nodeType":"VariableDeclaration","scope":8493,"src":"16723:12:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8486,"name":"bool","nodeType":"ElementaryTypeName","src":"16723:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":8489,"initialValue":{"hexValue":"74727565","id":8488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16738:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"nodeType":"VariableDeclarationStatement","src":"16723:19:50"},{"AST":{"nodeType":"YulBlock","src":"16762:2479:50","statements":[{"nodeType":"YulVariableDeclaration","src":"16821:34:50","value":{"arguments":[{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"16840:14:50"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"16834:5:50"},"nodeType":"YulFunctionCall","src":"16834:21:50"},"variables":[{"name":"fslot","nodeType":"YulTypedName","src":"16825:5:50","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16946:76:50","value":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"16969:5:50"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16984:5:50","type":"","value":"0x100"},{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"17002:5:50"},{"kind":"number","nodeType":"YulLiteral","src":"17009:1:50","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16998:3:50"},"nodeType":"YulFunctionCall","src":"16998:13:50"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16991:6:50"},"nodeType":"YulFunctionCall","src":"16991:21:50"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16980:3:50"},"nodeType":"YulFunctionCall","src":"16980:33:50"},{"kind":"number","nodeType":"YulLiteral","src":"17015:1:50","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16976:3:50"},"nodeType":"YulFunctionCall","src":"16976:41:50"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16965:3:50"},"nodeType":"YulFunctionCall","src":"16965:53:50"},{"kind":"number","nodeType":"YulLiteral","src":"17020:1:50","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16961:3:50"},"nodeType":"YulFunctionCall","src":"16961:61:50"},"variables":[{"name":"slength","nodeType":"YulTypedName","src":"16950:7:50","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17035:32:50","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"17056:10:50"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17050:5:50"},"nodeType":"YulFunctionCall","src":"17050:17:50"},"variables":[{"name":"mlength","nodeType":"YulTypedName","src":"17039:7:50","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"17191:1945:50","statements":[{"body":{"nodeType":"YulBlock","src":"17502:1620:50","statements":[{"cases":[{"body":{"nodeType":"YulBlock","src":"17574:340:50","statements":[{"nodeType":"YulAssignment","src":"17667:38:50","value":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"17684:5:50"},{"kind":"number","nodeType":"YulLiteral","src":"17691:5:50","type":"","value":"0x100"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17680:3:50"},"nodeType":"YulFunctionCall","src":"17680:17:50"},{"kind":"number","nodeType":"YulLiteral","src":"17699:5:50","type":"","value":"0x100"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17676:3:50"},"nodeType":"YulFunctionCall","src":"17676:29:50"},"variableNames":[{"name":"fslot","nodeType":"YulIdentifier","src":"17667:5:50"}]},{"body":{"nodeType":"YulBlock","src":"17782:110:50","statements":[{"nodeType":"YulAssignment","src":"17854:12:50","value":{"kind":"number","nodeType":"YulLiteral","src":"17865:1:50","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"17854:7:50"}]}]},"condition":{"arguments":[{"arguments":[{"name":"fslot","nodeType":"YulIdentifier","src":"17744:5:50"},{"arguments":[{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"17761:10:50"},{"kind":"number","nodeType":"YulLiteral","src":"17773:4:50","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17757:3:50"},"nodeType":"YulFunctionCall","src":"17757:21:50"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17751:5:50"},"nodeType":"YulFunctionCall","src":"17751:28:50"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17741:2:50"},"nodeType":"YulFunctionCall","src":"17741:39:50"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17734:6:50"},"nodeType":"YulFunctionCall","src":"17734:47:50"},"nodeType":"YulIf","src":"17731:161:50"}]},"nodeType":"YulCase","src":"17567:347:50","value":{"kind":"number","nodeType":"YulLiteral","src":"17572:1:50","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"17943:1161:50","statements":[{"nodeType":"YulVariableDeclaration","src":"18212:11:50","value":{"kind":"number","nodeType":"YulLiteral","src":"18222:1:50","type":"","value":"1"},"variables":[{"name":"cb","nodeType":"YulTypedName","src":"18216:2:50","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18336:3:50","type":"","value":"0x0"},{"name":"_preBytes.slot","nodeType":"YulIdentifier","src":"18341:14:50"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18329:6:50"},"nodeType":"YulFunctionCall","src":"18329:27:50"},"nodeType":"YulExpressionStatement","src":"18329:27:50"},{"nodeType":"YulVariableDeclaration","src":"18381:30:50","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18401:3:50","type":"","value":"0x0"},{"kind":"number","nodeType":"YulLiteral","src":"18406:4:50","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"18391:9:50"},"nodeType":"YulFunctionCall","src":"18391:20:50"},"variables":[{"name":"sc","nodeType":"YulTypedName","src":"18385:2:50","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18437:31:50","value":{"arguments":[{"name":"_postBytes","nodeType":"YulIdentifier","src":"18451:10:50"},{"kind":"number","nodeType":"YulLiteral","src":"18463:4:50","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18447:3:50"},"nodeType":"YulFunctionCall","src":"18447:21:50"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"18441:2:50","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18493:27:50","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18508:2:50"},{"name":"mlength","nodeType":"YulIdentifier","src":"18512:7:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18504:3:50"},"nodeType":"YulFunctionCall","src":"18504:16:50"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"18497:3:50","type":""}]},{"body":{"nodeType":"YulBlock","src":"18828:254:50","statements":[{"body":{"nodeType":"YulBlock","src":"18894:162:50","statements":[{"nodeType":"YulAssignment","src":"18974:12:50","value":{"kind":"number","nodeType":"YulLiteral","src":"18985:1:50","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18974:7:50"}]},{"nodeType":"YulAssignment","src":"19019:7:50","value":{"kind":"number","nodeType":"YulLiteral","src":"19025:1:50","type":"","value":"0"},"variableNames":[{"name":"cb","nodeType":"YulIdentifier","src":"19019:2:50"}]}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"18877:2:50"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"18871:5:50"},"nodeType":"YulFunctionCall","src":"18871:9:50"},{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18888:2:50"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18882:5:50"},"nodeType":"YulFunctionCall","src":"18882:9:50"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18868:2:50"},"nodeType":"YulFunctionCall","src":"18868:24:50"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18861:6:50"},"nodeType":"YulFunctionCall","src":"18861:32:50"},"nodeType":"YulIf","src":"18858:198:50"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18689:2:50"},{"name":"end","nodeType":"YulIdentifier","src":"18693:3:50"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18686:2:50"},"nodeType":"YulFunctionCall","src":"18686:11:50"},{"name":"cb","nodeType":"YulIdentifier","src":"18699:2:50"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18682:3:50"},"nodeType":"YulFunctionCall","src":"18682:20:50"},{"kind":"number","nodeType":"YulLiteral","src":"18704:1:50","type":"","value":"2"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18679:2:50"},"nodeType":"YulFunctionCall","src":"18679:27:50"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18707:120:50","statements":[{"nodeType":"YulAssignment","src":"18737:16:50","value":{"arguments":[{"name":"sc","nodeType":"YulIdentifier","src":"18747:2:50"},{"kind":"number","nodeType":"YulLiteral","src":"18751:1:50","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18743:3:50"},"nodeType":"YulFunctionCall","src":"18743:10:50"},"variableNames":[{"name":"sc","nodeType":"YulIdentifier","src":"18737:2:50"}]},{"nodeType":"YulAssignment","src":"18782:19:50","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"18792:2:50"},{"kind":"number","nodeType":"YulLiteral","src":"18796:4:50","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18788:3:50"},"nodeType":"YulFunctionCall","src":"18788:13:50"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"18782:2:50"}]}]},"pre":{"nodeType":"YulBlock","src":"18676:2:50","statements":[]},"src":"18672:410:50"}]},"nodeType":"YulCase","src":"17935:1169:50","value":"default"}],"expression":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"17534:7:50"},{"kind":"number","nodeType":"YulLiteral","src":"17543:2:50","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17531:2:50"},"nodeType":"YulFunctionCall","src":"17531:15:50"},"nodeType":"YulSwitch","src":"17524:1580:50"}]},"condition":{"arguments":[{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"17492:7:50"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17485:6:50"},"nodeType":"YulFunctionCall","src":"17485:15:50"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17478:6:50"},"nodeType":"YulFunctionCall","src":"17478:23:50"},"nodeType":"YulIf","src":"17475:1647:50"}]},"nodeType":"YulCase","src":"17184:1952:50","value":{"kind":"number","nodeType":"YulLiteral","src":"17189:1:50","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"19157:74:50","statements":[{"nodeType":"YulAssignment","src":"19205:12:50","value":{"kind":"number","nodeType":"YulLiteral","src":"19216:1:50","type":"","value":"0"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19205:7:50"}]}]},"nodeType":"YulCase","src":"19149:82:50","value":"default"}],"expression":{"arguments":[{"name":"slength","nodeType":"YulIdentifier","src":"17154:7:50"},{"name":"mlength","nodeType":"YulIdentifier","src":"17163:7:50"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17151:2:50"},"nodeType":"YulFunctionCall","src":"17151:20:50"},"nodeType":"YulSwitch","src":"17144:2087:50"}]},"evmVersion":"paris","externalReferences":[{"declaration":8481,"isOffset":false,"isSlot":false,"src":"17056:10:50","valueSize":1},{"declaration":8481,"isOffset":false,"isSlot":false,"src":"17761:10:50","valueSize":1},{"declaration":8481,"isOffset":false,"isSlot":false,"src":"18451:10:50","valueSize":1},{"declaration":8479,"isOffset":false,"isSlot":true,"src":"16840:14:50","suffix":"slot","valueSize":1},{"declaration":8479,"isOffset":false,"isSlot":true,"src":"18341:14:50","suffix":"slot","valueSize":1},{"declaration":8487,"isOffset":false,"isSlot":false,"src":"17854:7:50","valueSize":1},{"declaration":8487,"isOffset":false,"isSlot":false,"src":"18974:7:50","valueSize":1},{"declaration":8487,"isOffset":false,"isSlot":false,"src":"19205:7:50","valueSize":1}],"id":8490,"nodeType":"InlineAssembly","src":"16753:2488:50"},{"expression":{"id":8491,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8487,"src":"19258:7:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8485,"id":8492,"nodeType":"Return","src":"19251:14:50"}]},"id":8494,"implemented":true,"kind":"function","modifiers":[],"name":"equalStorage","nameLocation":"16571:12:50","nodeType":"FunctionDefinition","parameters":{"id":8482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8479,"mutability":"mutable","name":"_preBytes","nameLocation":"16607:9:50","nodeType":"VariableDeclaration","scope":8494,"src":"16593:23:50","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":8478,"name":"bytes","nodeType":"ElementaryTypeName","src":"16593:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8481,"mutability":"mutable","name":"_postBytes","nameLocation":"16639:10:50","nodeType":"VariableDeclaration","scope":8494,"src":"16626:23:50","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8480,"name":"bytes","nodeType":"ElementaryTypeName","src":"16626:5:50","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16583:72:50"},"returnParameters":{"id":8485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8494,"src":"16703:4:50","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8483,"name":"bool","nodeType":"ElementaryTypeName","src":"16703:4:50","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16702:6:50"},"scope":8495,"src":"16562:2710:50","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":8496,"src":"370:18904:50","usedErrors":[],"usedEvents":[]}],"src":"336:18939:50"},"id":50}},"contracts":{"@erc725/smart-contracts/contracts/ERC725XCore.sol":{"ERC725XCore":{"abi":[{"inputs":[],"name":"ERC725X_ContractDeploymentFailed","type":"error"},{"inputs":[],"name":"ERC725X_CreateOperationsRequireEmptyRecipientAddress","type":"error"},{"inputs":[],"name":"ERC725X_ExecuteParametersEmptyArray","type":"error"},{"inputs":[],"name":"ERC725X_ExecuteParametersLengthMismatch","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"ERC725X_InsufficientBalance","type":"error"},{"inputs":[],"name":"ERC725X_MsgValueDisallowedInDelegateCall","type":"error"},{"inputs":[],"name":"ERC725X_MsgValueDisallowedInStaticCall","type":"error"},{"inputs":[],"name":"ERC725X_NoContractBytecodeProvided","type":"error"},{"inputs":[{"internalType":"uint256","name":"operationTypeProvided","type":"uint256"}],"name":"ERC725X_UnknownOperationType","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"operationType","type":"uint256"},{"indexed":true,"internalType":"address","name":"contractAddress","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"salt","type":"bytes32"}],"name":"ContractCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"operationType","type":"uint256"},{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"Executed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"uint256","name":"operationType","type":"uint256"},{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"execute","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"operationsType","type":"uint256[]"},{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"datas","type":"bytes[]"}],"name":"executeBatch","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"execute(uint256,address,uint256,bytes)":"44c028fe","executeBatch(uint256[],address[],uint256[],bytes[])":"31858452","owner()":"8da5cb5b","renounceOwnership()":"715018a6","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC725X_ContractDeploymentFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725X_CreateOperationsRequireEmptyRecipientAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725X_ExecuteParametersEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725X_ExecuteParametersLengthMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ERC725X_InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725X_MsgValueDisallowedInDelegateCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725X_MsgValueDisallowedInStaticCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725X_NoContractBytecodeProvided\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"operationTypeProvided\",\"type\":\"uint256\"}],\"name\":\"ERC725X_UnknownOperationType\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"operationType\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"ContractCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"operationType\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"operationType\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"operationsType\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"datas\",\"type\":\"bytes[]\"}],\"name\":\"executeBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Fabian Vogelsteller <fabian@lukso.network> It allows to use different type of message calls to interact with addresses such as `call`, `staticcall` and `delegatecall`. It also allows to deploy and create new contracts via both the `create` and `create2` opcodes. This is the basis for a smart contract based account system, but could also be used as a proxy account system.\",\"errors\":{\"ERC725X_ContractDeploymentFailed()\":[{\"details\":\"Reverts when contract deployment failed via {execute} or {executeBatch} functions, This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`).\"}],\"ERC725X_CreateOperationsRequireEmptyRecipientAddress()\":[{\"details\":\"Reverts when passing a `to` address that is not `address(0)` (= address zero) while deploying a contract via {execute} or {executeBatch} functions. This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`).\"}],\"ERC725X_ExecuteParametersEmptyArray()\":[{\"details\":\"Reverts when one of the array parameter provided to the {executeBatch} function is an empty array.\"}],\"ERC725X_ExecuteParametersLengthMismatch()\":[{\"details\":\"Reverts when there is not the same number of elements in the `operationTypes`, `targets` addresses, `values`, and `datas` array parameters provided when calling the {executeBatch} function.\"}],\"ERC725X_InsufficientBalance(uint256,uint256)\":[{\"details\":\"Reverts when trying to send more native tokens `value` than available in current `balance`.\",\"params\":{\"balance\":\"The balance of native tokens of the ERC725X smart contract.\",\"value\":\"The amount of native tokens sent via `ERC725X.execute(...)`/`ERC725X.executeBatch(...)` that is greater than the contract's `balance`.\"}}],\"ERC725X_MsgValueDisallowedInDelegateCall()\":[{\"details\":\"Reverts when trying to send native tokens (`value` / `values[]` parameter of {execute} or {executeBatch} functions) while making a `delegatecall` (`operationType == 4`). Sending native tokens via `staticcall` is not allowed because `msg.value` is persisting.\"}],\"ERC725X_MsgValueDisallowedInStaticCall()\":[{\"details\":\"Reverts when trying to send native tokens (`value` / `values[]` parameter of {execute} or {executeBatch} functions) while making a `staticcall` (`operationType == 3`). Sending native tokens via `staticcall` is not allowed because it is a state changing operation.\"}],\"ERC725X_NoContractBytecodeProvided()\":[{\"details\":\"Reverts when no contract bytecode was provided as parameter when trying to deploy a contract via {execute} or {executeBatch}. This error can occur using either operation type 1 (`CREATE`) or 2 (`CREATE2`).\"}],\"ERC725X_UnknownOperationType(uint256)\":[{\"details\":\"Reverts when the `operationTypeProvided` is none of the default operation types available. (CALL = 0; CREATE = 1; CREATE2 = 2; STATICCALL = 3; DELEGATECALL = 4)\",\"params\":{\"operationTypeProvided\":\"The unrecognised operation type number provided to `ERC725X.execute(...)`/`ERC725X.executeBatch(...)`.\"}}]},\"events\":{\"ContractCreated(uint256,address,uint256,bytes32)\":{\"details\":\"Emitted when a new contract was created and deployed.\",\"params\":{\"contractAddress\":\"The created contract address.\",\"operationType\":\"The opcode used to deploy the contract (`CREATE` or `CREATE2`).\",\"salt\":\"The salt used to deterministically deploy the contract (`CREATE2` only). If `CREATE` opcode is used, the salt value will be `bytes32(0)`.\",\"value\":\"The amount of native tokens (in Wei) sent to fund the created contract on deployment.\"}},\"Executed(uint256,address,uint256,bytes4)\":{\"details\":\"Emitted when calling an address `target` (EOA or contract) with `value`.\",\"params\":{\"operationType\":\"The low-level call opcode used to call the `target` address (`CALL`, `STATICALL` or `DELEGATECALL`).\",\"selector\":\"The first 4 bytes (= function selector) of the data sent with the call.\",\"target\":\"The address to call. `target` will be unused if a contract is created (operation types 1 and 2).\",\"value\":\"The amount of native tokens transferred along the call (in Wei).\"}}},\"kind\":\"dev\",\"methods\":{\"execute(uint256,address,uint256,bytes)\":{\"custom:events\":\"- {Executed} event when a call is made with `operationType` 0 (CALL), 3 (STATICCALL) or 4 (DELEGATECALL). - {ContractCreated} event when deploying a new contract with `operationType` 1 (CREATE) or 2 (CREATE2).\",\"custom:requirements\":\"- SHOULD only be callable by the {owner} of the contract. - if a `value` is provided, the contract MUST have at least this amount to transfer to `target` from its balance and execute successfully. - if the operation type is `STATICCALL` (`3`) or `DELEGATECALL` (`4`), `value` transfer is disallowed and SHOULD be 0. - `target` SHOULD be `address(0)` when deploying a new contract via `operationType` `CREATE` (`1`), or `CREATE2` (`2`).\",\"details\":\"Generic executor function to: - send native tokens to any address. - interact with any contract by passing an abi-encoded function call in the `data` parameter. - deploy a contract by providing its creation bytecode in the `data` parameter.\",\"params\":{\"data\":\"The call data, or the creation bytecode of the contract to deploy if `operationType` is `1` or `2`.\",\"operationType\":\"The operation type used: CALL = 0; CREATE = 1; CREATE2 = 2; STATICCALL = 3; DELEGATECALL = 4\",\"target\":\"The address of the EOA or smart contract.  (unused if a contract is created via operation type 1 or 2)\",\"value\":\"The amount of native tokens to transfer (in Wei)\"}},\"executeBatch(uint256[],address[],uint256[],bytes[])\":{\"custom:events\":\"- {Executed} event, when a call is made with `operationType` 0 (CALL), 3 (STATICCALL) or 4 (DELEGATECALL) - {ContractCreated} event, when deploying a contract with `operationType` 1 (CREATE) or 2 (CREATE2)\",\"custom:requirements\":\"- All the array parameters provided MUST be equal and have the same length. - SHOULD only be callable by the {owner} of the contract. - The contract MUST have in its balance **at least the sum of all the `values`** to transfer and execute successfully each calldata payloads.\",\"details\":\"Batch executor function that behaves the same as {execute} but allowing multiple operations in the same transaction.\",\"params\":{\"datas\":\"The list of calldata, or the creation bytecode of the contract to deploy if `operationType` is `1` or `2`.\",\"operationsType\":\"The list of operations type used: `CALL = 0`; `CREATE = 1`; `CREATE2 = 2`; `STATICCALL = 3`; `DELEGATECALL = 4`\",\"targets\":\"The list of addresses to call. `targets` will be unused if a contract is created (operation types 1 and 2).\",\"values\":\"The list of native token amounts to transfer (in Wei).\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Core implementation of ERC725X sub-standard, a generic executor.\",\"version\":1},\"userdoc\":{\"events\":{\"ContractCreated(uint256,address,uint256,bytes32)\":{\"notice\":\"Deployed new contract at address `contractAddress` and funded with `value` wei (deployed using opcode: `operationType`).\"},\"Executed(uint256,address,uint256,bytes4)\":{\"notice\":\"Called address `target` using `operationType` with `value` wei and `data`.\"}},\"kind\":\"user\",\"methods\":{\"execute(uint256,address,uint256,bytes)\":{\"notice\":\"Calling address `target` using `operationType`, transferring `value` wei and data: `data`.\"},\"executeBatch(uint256[],address[],uint256[],bytes[])\":{\"notice\":\"Calling multiple addresses `targets` using `operationsType`, transferring `values` wei and data: `datas`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@erc725/smart-contracts/contracts/ERC725XCore.sol\":\"ERC725XCore\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/ERC725XCore.sol\":{\"keccak256\":\"0xc86aae7d79e9536e0f81887c4d2ca4b834b55a2678cdd55b6ad05588175a247c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5ac10ef4d545fa962b0ea1d83793cac527a3b83c24a98638108da177faedc5de\",\"dweb:/ipfs/QmaUZraSBuxzoGeGJoUzZUU6uD3nLS1oubsicVZx4btBVX\"]},\"@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xb198a56711fbe79cce967068f9c7f41760cee018b9ce330a82e8cca8ed7909a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5108bd75251da5980d5021cb6114d7d706eaa82d269fa96adb40709d440f683\",\"dweb:/ipfs/QmdWj75HZYdJLahnmiPEAshFjempzGR7hjj5gGi9LSqnqj\"]},\"@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0x8b5760e40f04b9ec9de9339136a481fb3cd4fe29f5528fa6756320cd256d58fb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://28211f3a6bb2c6bf3d7dbb855d9eb46099ecc132213688e550ad314c619e8bf8\",\"dweb:/ipfs/QmUcuXAELqMDFmSxKWbhiBmuEKzw92h7U1ev3pgeDX4xm7\"]},\"@erc725/smart-contracts/contracts/interfaces/IERC725X.sol\":{\"keccak256\":\"0x2864f62b1f5a40a79b50c438d737ea5cb15d36265fbc7239dcfb62f494de8278\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://6b5b237cdc86b254b2c27e015f0a402f7f38ef36bbb98ca45636f1cee781264e\",\"dweb:/ipfs/QmbzeRMW8R5kRA4d6JAC596oSp78et64iwiYM8gJUaBFNr\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0x6e00f269073ffc4350e56b7e8153c9092d5f70bfba423299990514183101ef89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc5ff5c204604be7594ce2fa9100a0638f22b5aada6ebec1e165b0f50a48447\",\"dweb:/ipfs/QmfH7uWphPrq8jqwGvyh4pFnLEgEPmLwyGV2Bvx1Acjggh\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"solidity-bytes-utils/contracts/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]}},\"version\":1}"}},"@erc725/smart-contracts/contracts/ERC725Y.sol":{"ERC725Y":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"payable","type":"constructor"},{"inputs":[],"name":"ERC725Y_DataKeysValuesEmptyArray","type":"error"},{"inputs":[],"name":"ERC725Y_DataKeysValuesLengthMismatch","type":"error"},{"inputs":[],"name":"ERC725Y_MsgValueDisallowed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_609":{"entryPoint":null,"id":609,"parameterSlots":1,"returnSlots":0},"@_setOwner_970":{"entryPoint":154,"id":970,"parameterSlots":1,"returnSlots":0},"@owner_885":{"entryPoint":null,"id":885,"parameterSlots":0,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":256,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:713:51","statements":[{"nodeType":"YulBlock","src":"6:3:51","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:51","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:51"},"nodeType":"YulFunctionCall","src":"143:12:51"},"nodeType":"YulExpressionStatement","src":"143:12:51"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:51"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:51"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:51"},"nodeType":"YulFunctionCall","src":"112:23:51"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:51","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:51"},"nodeType":"YulFunctionCall","src":"108:32:51"},"nodeType":"YulIf","src":"105:52:51"},{"nodeType":"YulVariableDeclaration","src":"166:29:51","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:51"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:51"},"nodeType":"YulFunctionCall","src":"179:16:51"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:51"},"nodeType":"YulFunctionCall","src":"260:12:51"},"nodeType":"YulExpressionStatement","src":"260:12:51"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:51"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:51"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:51","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:51","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:51"},"nodeType":"YulFunctionCall","src":"239:11:51"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:51","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:51"},"nodeType":"YulFunctionCall","src":"235:19:51"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:51"},"nodeType":"YulFunctionCall","src":"224:31:51"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:51"},"nodeType":"YulFunctionCall","src":"214:42:51"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:51"},"nodeType":"YulFunctionCall","src":"207:50:51"},"nodeType":"YulIf","src":"204:70:51"},{"nodeType":"YulAssignment","src":"283:15:51","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:51"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:51"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:51","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:51","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:51","type":""}],"src":"14:290:51"},{"body":{"nodeType":"YulBlock","src":"483:228:51","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"500:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"511:2:51","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"493:6:51"},"nodeType":"YulFunctionCall","src":"493:21:51"},"nodeType":"YulExpressionStatement","src":"493:21:51"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"534:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"545:2:51","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"530:3:51"},"nodeType":"YulFunctionCall","src":"530:18:51"},{"kind":"number","nodeType":"YulLiteral","src":"550:2:51","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"523:6:51"},"nodeType":"YulFunctionCall","src":"523:30:51"},"nodeType":"YulExpressionStatement","src":"523:30:51"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"573:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"584:2:51","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"569:3:51"},"nodeType":"YulFunctionCall","src":"569:18:51"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"589:34:51","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"562:6:51"},"nodeType":"YulFunctionCall","src":"562:62:51"},"nodeType":"YulExpressionStatement","src":"562:62:51"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"644:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"655:2:51","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"640:3:51"},"nodeType":"YulFunctionCall","src":"640:18:51"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"660:8:51","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"633:6:51"},"nodeType":"YulFunctionCall","src":"633:36:51"},"nodeType":"YulExpressionStatement","src":"633:36:51"},{"nodeType":"YulAssignment","src":"678:27:51","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"690:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"701:3:51","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"686:3:51"},"nodeType":"YulFunctionCall","src":"686:19:51"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"678:4:51"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"460:9:51","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"474:4:51","type":""}],"src":"309:402:51"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}","id":51,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6080604052604051610c4f380380610c4f83398101604081905261002291610100565b6001600160a01b03811661008b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840160405180910390fd5b6100948161009a565b50610130565b6000546001600160a01b038281169116146100fd57600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a3505b50565b60006020828403121561011257600080fd5b81516001600160a01b038116811461012957600080fd5b9392505050565b610b108061013f6000396000f3fe60806040526004361061006b5760003560e01c806301ffc9a71461007057806354f6127f146100a5578063715018a6146100d25780637f23690c146100e95780638da5cb5b146100fc5780639790242114610124578063dedff9c614610137578063f2fde38b14610164575b600080fd5b34801561007c57600080fd5b5061009061008b3660046105bc565b610184565b60405190151581526020015b60405180910390f35b3480156100b157600080fd5b506100c56100c03660046105ed565b6101bb565b60405161009c919061064c565b3480156100de57600080fd5b506100e76101c6565b005b6100e76100f7366004610714565b6101da565b34801561010857600080fd5b506000546040516001600160a01b03909116815260200161009c565b6100e76101323660046107e8565b61020f565b34801561014357600080fd5b506101576101523660046108bc565b6102cf565b60405161009c91906108f8565b34801561017057600080fd5b506100e761017f36600461095a565b610379565b60006001600160e01b031982166318a6a9a560e21b14806101b557506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606101b5826103f7565b6101ce610499565b6101d86000610502565b565b6101e2610499565b34156102015760405163f36ba73760e01b815260040160405180910390fd5b61020b8282610567565b5050565b610217610499565b34156102365760405163f36ba73760e01b815260040160405180910390fd5b805182511461025857604051633bcc897960e01b815260040160405180910390fd5b815160000361027a576040516397da5f9560e01b815260040160405180910390fd5b60005b82518110156102ca576102c283828151811061029b5761029b610983565b60200260200101518383815181106102b5576102b5610983565b6020026020010151610567565b60010161027d565b505050565b606081516001600160401b038111156102ea576102ea61065f565b60405190808252806020026020018201604052801561031d57816020015b60608152602001906001900390816103085790505b50905060005b82518110156103735761034e83828151811061034157610341610983565b60200260200101516103f7565b82828151811061036057610360610983565b6020908102919091010152600101610323565b50919050565b610381610499565b6001600160a01b0381166103eb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6103f481610502565b50565b600081815260016020526040902080546060919061041490610999565b80601f016020809104026020016040519081016040528092919081815260200182805461044090610999565b801561048d5780601f106104625761010080835404028352916020019161048d565b820191906000526020600020905b81548152906001019060200180831161047057829003601f168201915b50505050509050919050565b336104ac6000546001600160a01b031690565b6001600160a01b0316146101d85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103e2565b6000546001600160a01b038281169116146103f457600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600082815260016020526040902061057f8282610a1b565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2826040516105b0919061064c565b60405180910390a25050565b6000602082840312156105ce57600080fd5b81356001600160e01b0319811681146105e657600080fd5b9392505050565b6000602082840312156105ff57600080fd5b5035919050565b6000815180845260005b8181101561062c57602081850181015186830182015201610610565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006105e66020830184610606565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561069d5761069d61065f565b604052919050565b600082601f8301126106b657600080fd5b81356001600160401b038111156106cf576106cf61065f565b6106e2601f8201601f1916602001610675565b8181528460208386010111156106f757600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561072757600080fd5b8235915060208301356001600160401b0381111561074457600080fd5b610750858286016106a5565b9150509250929050565b60006001600160401b038211156107735761077361065f565b5060051b60200190565b600082601f83011261078e57600080fd5b813560206107a361079e8361075a565b610675565b82815260059290921b840181019181810190868411156107c257600080fd5b8286015b848110156107dd57803583529183019183016107c6565b509695505050505050565b600080604083850312156107fb57600080fd5b82356001600160401b038082111561081257600080fd5b61081e8683870161077d565b935060209150818501358181111561083557600080fd5b8501601f8101871361084657600080fd5b803561085461079e8261075a565b81815260059190911b8201840190848101908983111561087357600080fd5b8584015b838110156108ab5780358681111561088f5760008081fd5b61089d8c89838901016106a5565b845250918601918601610877565b508096505050505050509250929050565b6000602082840312156108ce57600080fd5b81356001600160401b038111156108e457600080fd5b6108f08482850161077d565b949350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561094d57603f1988860301845261093b858351610606565b9450928501929085019060010161091f565b5092979650505050505050565b60006020828403121561096c57600080fd5b81356001600160a01b03811681146105e657600080fd5b634e487b7160e01b600052603260045260246000fd5b600181811c908216806109ad57607f821691505b60208210810361037357634e487b7160e01b600052602260045260246000fd5b601f8211156102ca57600081815260208120601f850160051c810160208610156109f45750805b601f850160051c820191505b81811015610a1357828155600101610a00565b505050505050565b81516001600160401b03811115610a3457610a3461065f565b610a4881610a428454610999565b846109cd565b602080601f831160018114610a7d5760008415610a655750858301515b600019600386901b1c1916600185901b178555610a13565b600085815260208120601f198616915b82811015610aac57888601518255948401946001909101908401610a8d565b5085821015610aca5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212207621a33bb2a35cf49e9cacc9e5f6fc59ed5adb67f158c28ca667dda278f4e41064736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xC4F CODESIZE SUB DUP1 PUSH2 0xC4F DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x22 SWAP2 PUSH2 0x100 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x94 DUP2 PUSH2 0x9A JUMP JUMPDEST POP PUSH2 0x130 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB10 DUP1 PUSH2 0x13F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x70 JUMPI DUP1 PUSH4 0x54F6127F EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x7F23690C EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x97902421 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0xDEDFF9C6 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x90 PUSH2 0x8B CALLDATASIZE PUSH1 0x4 PUSH2 0x5BC JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x64C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE7 PUSH2 0x1C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE7 PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x714 JUMP JUMPDEST PUSH2 0x1DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9C JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x132 CALLDATASIZE PUSH1 0x4 PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0x20F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x157 PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0x8BC JUMP JUMPDEST PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x8F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE7 PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0x95A JUMP JUMPDEST PUSH2 0x379 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x18A6A9A5 PUSH1 0xE2 SHL EQ DUP1 PUSH2 0x1B5 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1B5 DUP3 PUSH2 0x3F7 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x499 JUMP JUMPDEST PUSH2 0x1D8 PUSH1 0x0 PUSH2 0x502 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1E2 PUSH2 0x499 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x201 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF36BA737 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x20B DUP3 DUP3 PUSH2 0x567 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x217 PUSH2 0x499 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x236 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF36BA737 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x258 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3BCC8979 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x0 SUB PUSH2 0x27A JUMPI PUSH1 0x40 MLOAD PUSH4 0x97DA5F95 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2CA JUMPI PUSH2 0x2C2 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x29B JUMPI PUSH2 0x29B PUSH2 0x983 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2B5 JUMPI PUSH2 0x2B5 PUSH2 0x983 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x27D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2EA JUMPI PUSH2 0x2EA PUSH2 0x65F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x31D JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x308 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x373 JUMPI PUSH2 0x34E DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x341 JUMPI PUSH2 0x341 PUSH2 0x983 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3F7 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x360 JUMPI PUSH2 0x360 PUSH2 0x983 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x323 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x381 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3F4 DUP2 PUSH2 0x502 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH2 0x414 SWAP1 PUSH2 0x999 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x440 SWAP1 PUSH2 0x999 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x48D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x462 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x48D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x470 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH2 0x4AC PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ PUSH2 0x3F4 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x57F DUP3 DUP3 PUSH2 0xA1B JUMP JUMPDEST POP DUP2 PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0x64C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x5E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x62C JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x610 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x5E6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x606 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x69D JUMPI PUSH2 0x69D PUSH2 0x65F JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x6CF JUMPI PUSH2 0x6CF PUSH2 0x65F JUMP JUMPDEST PUSH2 0x6E2 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x675 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x6F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x727 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x744 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x750 DUP6 DUP3 DUP7 ADD PUSH2 0x6A5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x773 JUMPI PUSH2 0x773 PUSH2 0x65F JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x78E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x7A3 PUSH2 0x79E DUP4 PUSH2 0x75A JUMP JUMPDEST PUSH2 0x675 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x7C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x7DD JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x7C6 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81E DUP7 DUP4 DUP8 ADD PUSH2 0x77D JUMP JUMPDEST SWAP4 POP PUSH1 0x20 SWAP2 POP DUP2 DUP6 ADD CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x835 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x846 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x854 PUSH2 0x79E DUP3 PUSH2 0x75A JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP10 DUP4 GT ISZERO PUSH2 0x873 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP5 ADD JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8AB JUMPI DUP1 CALLDATALOAD DUP7 DUP2 GT ISZERO PUSH2 0x88F JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x89D DUP13 DUP10 DUP4 DUP10 ADD ADD PUSH2 0x6A5 JUMP JUMPDEST DUP5 MSTORE POP SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x877 JUMP JUMPDEST POP DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x8E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8F0 DUP5 DUP3 DUP6 ADD PUSH2 0x77D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x94D JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x93B DUP6 DUP4 MLOAD PUSH2 0x606 JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x91F JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x96C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x9AD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x373 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2CA JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x9F4 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA13 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xA00 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xA34 JUMPI PUSH2 0xA34 PUSH2 0x65F JUMP JUMPDEST PUSH2 0xA48 DUP2 PUSH2 0xA42 DUP5 SLOAD PUSH2 0x999 JUMP JUMPDEST DUP5 PUSH2 0x9CD JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xA7D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0xA65 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xAAC JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0xA8D JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0xACA JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x21A33BB2A35CF49E9CACC9E5F6FC59ED5ADB67F158C28C 0xA6 PUSH8 0xDDA278F4E4106473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"652:622:1:-:0;;;1056:216;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1129:26:1;;1108:111;;;;-1:-1:-1;;;1108:111:1;;511:2:51;1108:111:1;;;493:21:51;550:2;530:18;;;523:30;589:34;569:18;;;562:62;-1:-1:-1;;;640:18:51;;;633:36;686:19;;1108:111:1;;;;;;;;1229:36;1252:12;1229:22;:36::i;:::-;1056:216;652:622;;2004:235:4;669:7;695:6;-1:-1:-1;;;;;2072:19:4;;;695:6;;2072:19;2068:165;;2107:16;2126:6;;-1:-1:-1;;;;;2146:17:4;;;-1:-1:-1;;;;;;2146:17:4;;;;;;2182:40;;2126:6;;;;;;;2182:40;;2107:16;2182:40;2093:140;2068:165;2004:235;:::o;14:290:51:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:51;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:51:o;309:402::-;652:622:1;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_944":{"entryPoint":1177,"id":944,"parameterSlots":0,"returnSlots":0},"@_getData_800":{"entryPoint":1015,"id":800,"parameterSlots":1,"returnSlots":1},"@_setData_820":{"entryPoint":1383,"id":820,"parameterSlots":2,"returnSlots":0},"@_setOwner_970":{"entryPoint":1282,"id":970,"parameterSlots":1,"returnSlots":0},"@getDataBatch_698":{"entryPoint":719,"id":698,"parameterSlots":1,"returnSlots":1},"@getData_651":{"entryPoint":443,"id":651,"parameterSlots":1,"returnSlots":1},"@owner_885":{"entryPoint":null,"id":885,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_907":{"entryPoint":454,"id":907,"parameterSlots":0,"returnSlots":0},"@setDataBatch_787":{"entryPoint":527,"id":787,"parameterSlots":2,"returnSlots":0},"@setData_723":{"entryPoint":474,"id":723,"parameterSlots":2,"returnSlots":0},"@supportsInterface_5705":{"entryPoint":null,"id":5705,"parameterSlots":1,"returnSlots":1},"@supportsInterface_841":{"entryPoint":388,"id":841,"parameterSlots":1,"returnSlots":1},"@transferOwnership_930":{"entryPoint":889,"id":930,"parameterSlots":1,"returnSlots":0},"abi_decode_array_bytes32_dyn":{"entryPoint":1917,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":1701,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2394,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":2236,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr":{"entryPoint":2024,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":1517,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_bytes_memory_ptr":{"entryPoint":1812,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":1468,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes":{"entryPoint":1542,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":2296,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":1612,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":1653,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_bytes32_dyn":{"entryPoint":1882,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_bytes_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_bytes_storage":{"entryPoint":2509,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage":{"entryPoint":2587,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":2457,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x32":{"entryPoint":2435,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1631,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:10025:51","statements":[{"nodeType":"YulBlock","src":"6:3:51","statements":[]},{"body":{"nodeType":"YulBlock","src":"83:217:51","statements":[{"body":{"nodeType":"YulBlock","src":"129:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"138:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"141:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"131:6:51"},"nodeType":"YulFunctionCall","src":"131:12:51"},"nodeType":"YulExpressionStatement","src":"131:12:51"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"104:7:51"},{"name":"headStart","nodeType":"YulIdentifier","src":"113:9:51"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"100:3:51"},"nodeType":"YulFunctionCall","src":"100:23:51"},{"kind":"number","nodeType":"YulLiteral","src":"125:2:51","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"96:3:51"},"nodeType":"YulFunctionCall","src":"96:32:51"},"nodeType":"YulIf","src":"93:52:51"},{"nodeType":"YulVariableDeclaration","src":"154:36:51","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"180:9:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"167:12:51"},"nodeType":"YulFunctionCall","src":"167:23:51"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"158:5:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"254:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"263:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"266:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"256:6:51"},"nodeType":"YulFunctionCall","src":"256:12:51"},"nodeType":"YulExpressionStatement","src":"256:12:51"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"212:5:51"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:51"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"234:3:51","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"239:10:51","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"230:3:51"},"nodeType":"YulFunctionCall","src":"230:20:51"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"219:3:51"},"nodeType":"YulFunctionCall","src":"219:32:51"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"209:2:51"},"nodeType":"YulFunctionCall","src":"209:43:51"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"202:6:51"},"nodeType":"YulFunctionCall","src":"202:51:51"},"nodeType":"YulIf","src":"199:71:51"},{"nodeType":"YulAssignment","src":"279:15:51","value":{"name":"value","nodeType":"YulIdentifier","src":"289:5:51"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"279:6:51"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49:9:51","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"60:7:51","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"72:6:51","type":""}],"src":"14:286:51"},{"body":{"nodeType":"YulBlock","src":"400:92:51","statements":[{"nodeType":"YulAssignment","src":"410:26:51","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"422:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"433:2:51","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"418:3:51"},"nodeType":"YulFunctionCall","src":"418:18:51"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"410:4:51"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"452:9:51"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"477:6:51"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"470:6:51"},"nodeType":"YulFunctionCall","src":"470:14:51"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"463:6:51"},"nodeType":"YulFunctionCall","src":"463:22:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"445:6:51"},"nodeType":"YulFunctionCall","src":"445:41:51"},"nodeType":"YulExpressionStatement","src":"445:41:51"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"369:9:51","type":""},{"name":"value0","nodeType":"YulTypedName","src":"380:6:51","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"391:4:51","type":""}],"src":"305:187:51"},{"body":{"nodeType":"YulBlock","src":"567:110:51","statements":[{"body":{"nodeType":"YulBlock","src":"613:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"622:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"625:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"615:6:51"},"nodeType":"YulFunctionCall","src":"615:12:51"},"nodeType":"YulExpressionStatement","src":"615:12:51"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"588:7:51"},{"name":"headStart","nodeType":"YulIdentifier","src":"597:9:51"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"584:3:51"},"nodeType":"YulFunctionCall","src":"584:23:51"},{"kind":"number","nodeType":"YulLiteral","src":"609:2:51","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"580:3:51"},"nodeType":"YulFunctionCall","src":"580:32:51"},"nodeType":"YulIf","src":"577:52:51"},{"nodeType":"YulAssignment","src":"638:33:51","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"661:9:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"648:12:51"},"nodeType":"YulFunctionCall","src":"648:23:51"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"638:6:51"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"533:9:51","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"544:7:51","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"556:6:51","type":""}],"src":"497:180:51"},{"body":{"nodeType":"YulBlock","src":"731:373:51","statements":[{"nodeType":"YulVariableDeclaration","src":"741:26:51","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"761:5:51"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"755:5:51"},"nodeType":"YulFunctionCall","src":"755:12:51"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"745:6:51","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"783:3:51"},{"name":"length","nodeType":"YulIdentifier","src":"788:6:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"776:6:51"},"nodeType":"YulFunctionCall","src":"776:19:51"},"nodeType":"YulExpressionStatement","src":"776:19:51"},{"nodeType":"YulVariableDeclaration","src":"804:10:51","value":{"kind":"number","nodeType":"YulLiteral","src":"813:1:51","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"808:1:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"875:110:51","statements":[{"nodeType":"YulVariableDeclaration","src":"889:14:51","value":{"kind":"number","nodeType":"YulLiteral","src":"899:4:51","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"893:2:51","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"931:3:51"},{"name":"i","nodeType":"YulIdentifier","src":"936:1:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"927:3:51"},"nodeType":"YulFunctionCall","src":"927:11:51"},{"name":"_1","nodeType":"YulIdentifier","src":"940:2:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"923:3:51"},"nodeType":"YulFunctionCall","src":"923:20:51"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"959:5:51"},{"name":"i","nodeType":"YulIdentifier","src":"966:1:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"955:3:51"},"nodeType":"YulFunctionCall","src":"955:13:51"},{"name":"_1","nodeType":"YulIdentifier","src":"970:2:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"951:3:51"},"nodeType":"YulFunctionCall","src":"951:22:51"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"945:5:51"},"nodeType":"YulFunctionCall","src":"945:29:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"916:6:51"},"nodeType":"YulFunctionCall","src":"916:59:51"},"nodeType":"YulExpressionStatement","src":"916:59:51"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"834:1:51"},{"name":"length","nodeType":"YulIdentifier","src":"837:6:51"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"831:2:51"},"nodeType":"YulFunctionCall","src":"831:13:51"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"845:21:51","statements":[{"nodeType":"YulAssignment","src":"847:17:51","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"856:1:51"},{"kind":"number","nodeType":"YulLiteral","src":"859:4:51","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"852:3:51"},"nodeType":"YulFunctionCall","src":"852:12:51"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"847:1:51"}]}]},"pre":{"nodeType":"YulBlock","src":"827:3:51","statements":[]},"src":"823:162:51"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1009:3:51"},{"name":"length","nodeType":"YulIdentifier","src":"1014:6:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1005:3:51"},"nodeType":"YulFunctionCall","src":"1005:16:51"},{"kind":"number","nodeType":"YulLiteral","src":"1023:4:51","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1001:3:51"},"nodeType":"YulFunctionCall","src":"1001:27:51"},{"kind":"number","nodeType":"YulLiteral","src":"1030:1:51","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"994:6:51"},"nodeType":"YulFunctionCall","src":"994:38:51"},"nodeType":"YulExpressionStatement","src":"994:38:51"},{"nodeType":"YulAssignment","src":"1041:57:51","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1056:3:51"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1069:6:51"},{"kind":"number","nodeType":"YulLiteral","src":"1077:2:51","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1065:3:51"},"nodeType":"YulFunctionCall","src":"1065:15:51"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1086:2:51","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1082:3:51"},"nodeType":"YulFunctionCall","src":"1082:7:51"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1061:3:51"},"nodeType":"YulFunctionCall","src":"1061:29:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1052:3:51"},"nodeType":"YulFunctionCall","src":"1052:39:51"},{"kind":"number","nodeType":"YulLiteral","src":"1093:4:51","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1048:3:51"},"nodeType":"YulFunctionCall","src":"1048:50:51"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1041:3:51"}]}]},"name":"abi_encode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"708:5:51","type":""},{"name":"pos","nodeType":"YulTypedName","src":"715:3:51","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"723:3:51","type":""}],"src":"682:422:51"},{"body":{"nodeType":"YulBlock","src":"1228:98:51","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1245:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"1256:2:51","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1238:6:51"},"nodeType":"YulFunctionCall","src":"1238:21:51"},"nodeType":"YulExpressionStatement","src":"1238:21:51"},{"nodeType":"YulAssignment","src":"1268:52:51","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1293:6:51"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1305:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"1316:2:51","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1301:3:51"},"nodeType":"YulFunctionCall","src":"1301:18:51"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"1276:16:51"},"nodeType":"YulFunctionCall","src":"1276:44:51"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1268:4:51"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1197:9:51","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1208:6:51","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1219:4:51","type":""}],"src":"1109:217:51"},{"body":{"nodeType":"YulBlock","src":"1363:95:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1380:1:51","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1387:3:51","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1392:10:51","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1383:3:51"},"nodeType":"YulFunctionCall","src":"1383:20:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1373:6:51"},"nodeType":"YulFunctionCall","src":"1373:31:51"},"nodeType":"YulExpressionStatement","src":"1373:31:51"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1420:1:51","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1423:4:51","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1413:6:51"},"nodeType":"YulFunctionCall","src":"1413:15:51"},"nodeType":"YulExpressionStatement","src":"1413:15:51"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1444:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1447:4:51","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1437:6:51"},"nodeType":"YulFunctionCall","src":"1437:15:51"},"nodeType":"YulExpressionStatement","src":"1437:15:51"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1331:127:51"},{"body":{"nodeType":"YulBlock","src":"1508:230:51","statements":[{"nodeType":"YulAssignment","src":"1518:19:51","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1534:2:51","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1528:5:51"},"nodeType":"YulFunctionCall","src":"1528:9:51"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1518:6:51"}]},{"nodeType":"YulVariableDeclaration","src":"1546:58:51","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1568:6:51"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1584:4:51"},{"kind":"number","nodeType":"YulLiteral","src":"1590:2:51","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1580:3:51"},"nodeType":"YulFunctionCall","src":"1580:13:51"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1599:2:51","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1595:3:51"},"nodeType":"YulFunctionCall","src":"1595:7:51"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1576:3:51"},"nodeType":"YulFunctionCall","src":"1576:27:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1564:3:51"},"nodeType":"YulFunctionCall","src":"1564:40:51"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1550:10:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"1679:22:51","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1681:16:51"},"nodeType":"YulFunctionCall","src":"1681:18:51"},"nodeType":"YulExpressionStatement","src":"1681:18:51"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1622:10:51"},{"kind":"number","nodeType":"YulLiteral","src":"1634:18:51","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1619:2:51"},"nodeType":"YulFunctionCall","src":"1619:34:51"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1658:10:51"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1670:6:51"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1655:2:51"},"nodeType":"YulFunctionCall","src":"1655:22:51"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1616:2:51"},"nodeType":"YulFunctionCall","src":"1616:62:51"},"nodeType":"YulIf","src":"1613:88:51"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1717:2:51","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1721:10:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1710:6:51"},"nodeType":"YulFunctionCall","src":"1710:22:51"},"nodeType":"YulExpressionStatement","src":"1710:22:51"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1488:4:51","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1497:6:51","type":""}],"src":"1463:275:51"},{"body":{"nodeType":"YulBlock","src":"1795:478:51","statements":[{"body":{"nodeType":"YulBlock","src":"1844:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1853:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1856:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1846:6:51"},"nodeType":"YulFunctionCall","src":"1846:12:51"},"nodeType":"YulExpressionStatement","src":"1846:12:51"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1823:6:51"},{"kind":"number","nodeType":"YulLiteral","src":"1831:4:51","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1819:3:51"},"nodeType":"YulFunctionCall","src":"1819:17:51"},{"name":"end","nodeType":"YulIdentifier","src":"1838:3:51"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1815:3:51"},"nodeType":"YulFunctionCall","src":"1815:27:51"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1808:6:51"},"nodeType":"YulFunctionCall","src":"1808:35:51"},"nodeType":"YulIf","src":"1805:55:51"},{"nodeType":"YulVariableDeclaration","src":"1869:30:51","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1892:6:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1879:12:51"},"nodeType":"YulFunctionCall","src":"1879:20:51"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1873:2:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"1938:22:51","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1940:16:51"},"nodeType":"YulFunctionCall","src":"1940:18:51"},"nodeType":"YulExpressionStatement","src":"1940:18:51"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1914:2:51"},{"kind":"number","nodeType":"YulLiteral","src":"1918:18:51","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1911:2:51"},"nodeType":"YulFunctionCall","src":"1911:26:51"},"nodeType":"YulIf","src":"1908:52:51"},{"nodeType":"YulVariableDeclaration","src":"1969:70:51","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2012:2:51"},{"kind":"number","nodeType":"YulLiteral","src":"2016:4:51","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2008:3:51"},"nodeType":"YulFunctionCall","src":"2008:13:51"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2027:2:51","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2023:3:51"},"nodeType":"YulFunctionCall","src":"2023:7:51"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2004:3:51"},"nodeType":"YulFunctionCall","src":"2004:27:51"},{"kind":"number","nodeType":"YulLiteral","src":"2033:4:51","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2000:3:51"},"nodeType":"YulFunctionCall","src":"2000:38:51"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1984:15:51"},"nodeType":"YulFunctionCall","src":"1984:55:51"},"variables":[{"name":"array_1","nodeType":"YulTypedName","src":"1973:7:51","type":""}]},{"expression":{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"2055:7:51"},{"name":"_1","nodeType":"YulIdentifier","src":"2064:2:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2048:6:51"},"nodeType":"YulFunctionCall","src":"2048:19:51"},"nodeType":"YulExpressionStatement","src":"2048:19:51"},{"body":{"nodeType":"YulBlock","src":"2115:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2124:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2127:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2117:6:51"},"nodeType":"YulFunctionCall","src":"2117:12:51"},"nodeType":"YulExpressionStatement","src":"2117:12:51"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2090:6:51"},{"name":"_1","nodeType":"YulIdentifier","src":"2098:2:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2086:3:51"},"nodeType":"YulFunctionCall","src":"2086:15:51"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:51","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2082:3:51"},"nodeType":"YulFunctionCall","src":"2082:26:51"},{"name":"end","nodeType":"YulIdentifier","src":"2110:3:51"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2079:2:51"},"nodeType":"YulFunctionCall","src":"2079:35:51"},"nodeType":"YulIf","src":"2076:55:51"},{"expression":{"arguments":[{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"2157:7:51"},{"kind":"number","nodeType":"YulLiteral","src":"2166:4:51","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2153:3:51"},"nodeType":"YulFunctionCall","src":"2153:18:51"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2177:6:51"},{"kind":"number","nodeType":"YulLiteral","src":"2185:4:51","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2173:3:51"},"nodeType":"YulFunctionCall","src":"2173:17:51"},{"name":"_1","nodeType":"YulIdentifier","src":"2192:2:51"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"2140:12:51"},"nodeType":"YulFunctionCall","src":"2140:55:51"},"nodeType":"YulExpressionStatement","src":"2140:55:51"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"2219:7:51"},{"name":"_1","nodeType":"YulIdentifier","src":"2228:2:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2215:3:51"},"nodeType":"YulFunctionCall","src":"2215:16:51"},{"kind":"number","nodeType":"YulLiteral","src":"2233:4:51","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2211:3:51"},"nodeType":"YulFunctionCall","src":"2211:27:51"},{"kind":"number","nodeType":"YulLiteral","src":"2240:1:51","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2204:6:51"},"nodeType":"YulFunctionCall","src":"2204:38:51"},"nodeType":"YulExpressionStatement","src":"2204:38:51"},{"nodeType":"YulAssignment","src":"2251:16:51","value":{"name":"array_1","nodeType":"YulIdentifier","src":"2260:7:51"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2251:5:51"}]}]},"name":"abi_decode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1769:6:51","type":""},{"name":"end","nodeType":"YulTypedName","src":"1777:3:51","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1785:5:51","type":""}],"src":"1743:530:51"},{"body":{"nodeType":"YulBlock","src":"2374:292:51","statements":[{"body":{"nodeType":"YulBlock","src":"2420:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2429:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2432:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2422:6:51"},"nodeType":"YulFunctionCall","src":"2422:12:51"},"nodeType":"YulExpressionStatement","src":"2422:12:51"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2395:7:51"},{"name":"headStart","nodeType":"YulIdentifier","src":"2404:9:51"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2391:3:51"},"nodeType":"YulFunctionCall","src":"2391:23:51"},{"kind":"number","nodeType":"YulLiteral","src":"2416:2:51","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2387:3:51"},"nodeType":"YulFunctionCall","src":"2387:32:51"},"nodeType":"YulIf","src":"2384:52:51"},{"nodeType":"YulAssignment","src":"2445:33:51","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2468:9:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2455:12:51"},"nodeType":"YulFunctionCall","src":"2455:23:51"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2445:6:51"}]},{"nodeType":"YulVariableDeclaration","src":"2487:46:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2518:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"2529:2:51","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2514:3:51"},"nodeType":"YulFunctionCall","src":"2514:18:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2501:12:51"},"nodeType":"YulFunctionCall","src":"2501:32:51"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2491:6:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"2576:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2585:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2588:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2578:6:51"},"nodeType":"YulFunctionCall","src":"2578:12:51"},"nodeType":"YulExpressionStatement","src":"2578:12:51"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2548:6:51"},{"kind":"number","nodeType":"YulLiteral","src":"2556:18:51","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2545:2:51"},"nodeType":"YulFunctionCall","src":"2545:30:51"},"nodeType":"YulIf","src":"2542:50:51"},{"nodeType":"YulAssignment","src":"2601:59:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2632:9:51"},{"name":"offset","nodeType":"YulIdentifier","src":"2643:6:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2628:3:51"},"nodeType":"YulFunctionCall","src":"2628:22:51"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2652:7:51"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"2611:16:51"},"nodeType":"YulFunctionCall","src":"2611:49:51"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2601:6:51"}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2332:9:51","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2343:7:51","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2355:6:51","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2363:6:51","type":""}],"src":"2278:388:51"},{"body":{"nodeType":"YulBlock","src":"2772:102:51","statements":[{"nodeType":"YulAssignment","src":"2782:26:51","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2794:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"2805:2:51","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2790:3:51"},"nodeType":"YulFunctionCall","src":"2790:18:51"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2782:4:51"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2824:9:51"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2839:6:51"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2855:3:51","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2860:1:51","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2851:3:51"},"nodeType":"YulFunctionCall","src":"2851:11:51"},{"kind":"number","nodeType":"YulLiteral","src":"2864:1:51","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2847:3:51"},"nodeType":"YulFunctionCall","src":"2847:19:51"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2835:3:51"},"nodeType":"YulFunctionCall","src":"2835:32:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2817:6:51"},"nodeType":"YulFunctionCall","src":"2817:51:51"},"nodeType":"YulExpressionStatement","src":"2817:51:51"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2741:9:51","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2752:6:51","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2763:4:51","type":""}],"src":"2671:203:51"},{"body":{"nodeType":"YulBlock","src":"2948:114:51","statements":[{"body":{"nodeType":"YulBlock","src":"2992:22:51","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2994:16:51"},"nodeType":"YulFunctionCall","src":"2994:18:51"},"nodeType":"YulExpressionStatement","src":"2994:18:51"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2964:6:51"},{"kind":"number","nodeType":"YulLiteral","src":"2972:18:51","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2961:2:51"},"nodeType":"YulFunctionCall","src":"2961:30:51"},"nodeType":"YulIf","src":"2958:56:51"},{"nodeType":"YulAssignment","src":"3023:33:51","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3039:1:51","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"3042:6:51"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3035:3:51"},"nodeType":"YulFunctionCall","src":"3035:14:51"},{"kind":"number","nodeType":"YulLiteral","src":"3051:4:51","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3031:3:51"},"nodeType":"YulFunctionCall","src":"3031:25:51"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3023:4:51"}]}]},"name":"array_allocation_size_array_bytes32_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2928:6:51","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2939:4:51","type":""}],"src":"2879:183:51"},{"body":{"nodeType":"YulBlock","src":"3131:598:51","statements":[{"body":{"nodeType":"YulBlock","src":"3180:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3189:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3192:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3182:6:51"},"nodeType":"YulFunctionCall","src":"3182:12:51"},"nodeType":"YulExpressionStatement","src":"3182:12:51"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3159:6:51"},{"kind":"number","nodeType":"YulLiteral","src":"3167:4:51","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3155:3:51"},"nodeType":"YulFunctionCall","src":"3155:17:51"},{"name":"end","nodeType":"YulIdentifier","src":"3174:3:51"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3151:3:51"},"nodeType":"YulFunctionCall","src":"3151:27:51"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3144:6:51"},"nodeType":"YulFunctionCall","src":"3144:35:51"},"nodeType":"YulIf","src":"3141:55:51"},{"nodeType":"YulVariableDeclaration","src":"3205:30:51","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3228:6:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3215:12:51"},"nodeType":"YulFunctionCall","src":"3215:20:51"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3209:2:51","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3244:14:51","value":{"kind":"number","nodeType":"YulLiteral","src":"3254:4:51","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3248:2:51","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3267:71:51","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3334:2:51"}],"functionName":{"name":"array_allocation_size_array_bytes32_dyn","nodeType":"YulIdentifier","src":"3294:39:51"},"nodeType":"YulFunctionCall","src":"3294:43:51"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3278:15:51"},"nodeType":"YulFunctionCall","src":"3278:60:51"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"3271:3:51","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3347:16:51","value":{"name":"dst","nodeType":"YulIdentifier","src":"3360:3:51"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"3351:5:51","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3379:3:51"},{"name":"_1","nodeType":"YulIdentifier","src":"3384:2:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3372:6:51"},"nodeType":"YulFunctionCall","src":"3372:15:51"},"nodeType":"YulExpressionStatement","src":"3372:15:51"},{"nodeType":"YulAssignment","src":"3396:19:51","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3407:3:51"},{"name":"_2","nodeType":"YulIdentifier","src":"3412:2:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3403:3:51"},"nodeType":"YulFunctionCall","src":"3403:12:51"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3396:3:51"}]},{"nodeType":"YulVariableDeclaration","src":"3424:46:51","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3446:6:51"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3458:1:51","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"3461:2:51"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3454:3:51"},"nodeType":"YulFunctionCall","src":"3454:10:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3442:3:51"},"nodeType":"YulFunctionCall","src":"3442:23:51"},{"name":"_2","nodeType":"YulIdentifier","src":"3467:2:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3438:3:51"},"nodeType":"YulFunctionCall","src":"3438:32:51"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"3428:6:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"3498:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3507:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3510:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3500:6:51"},"nodeType":"YulFunctionCall","src":"3500:12:51"},"nodeType":"YulExpressionStatement","src":"3500:12:51"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"3485:6:51"},{"name":"end","nodeType":"YulIdentifier","src":"3493:3:51"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3482:2:51"},"nodeType":"YulFunctionCall","src":"3482:15:51"},"nodeType":"YulIf","src":"3479:35:51"},{"nodeType":"YulVariableDeclaration","src":"3523:26:51","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3538:6:51"},{"name":"_2","nodeType":"YulIdentifier","src":"3546:2:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3534:3:51"},"nodeType":"YulFunctionCall","src":"3534:15:51"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"3527:3:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"3614:86:51","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3635:3:51"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3653:3:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3640:12:51"},"nodeType":"YulFunctionCall","src":"3640:17:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3628:6:51"},"nodeType":"YulFunctionCall","src":"3628:30:51"},"nodeType":"YulExpressionStatement","src":"3628:30:51"},{"nodeType":"YulAssignment","src":"3671:19:51","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3682:3:51"},{"name":"_2","nodeType":"YulIdentifier","src":"3687:2:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3678:3:51"},"nodeType":"YulFunctionCall","src":"3678:12:51"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"3671:3:51"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3569:3:51"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"3574:6:51"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3566:2:51"},"nodeType":"YulFunctionCall","src":"3566:15:51"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3582:23:51","statements":[{"nodeType":"YulAssignment","src":"3584:19:51","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3595:3:51"},{"name":"_2","nodeType":"YulIdentifier","src":"3600:2:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3591:3:51"},"nodeType":"YulFunctionCall","src":"3591:12:51"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"3584:3:51"}]}]},"pre":{"nodeType":"YulBlock","src":"3562:3:51","statements":[]},"src":"3558:142:51"},{"nodeType":"YulAssignment","src":"3709:14:51","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"3718:5:51"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3709:5:51"}]}]},"name":"abi_decode_array_bytes32_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3105:6:51","type":""},{"name":"end","nodeType":"YulTypedName","src":"3113:3:51","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3121:5:51","type":""}],"src":"3067:662:51"},{"body":{"nodeType":"YulBlock","src":"3880:1211:51","statements":[{"body":{"nodeType":"YulBlock","src":"3926:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3935:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3938:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3928:6:51"},"nodeType":"YulFunctionCall","src":"3928:12:51"},"nodeType":"YulExpressionStatement","src":"3928:12:51"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3901:7:51"},{"name":"headStart","nodeType":"YulIdentifier","src":"3910:9:51"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3897:3:51"},"nodeType":"YulFunctionCall","src":"3897:23:51"},{"kind":"number","nodeType":"YulLiteral","src":"3922:2:51","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3893:3:51"},"nodeType":"YulFunctionCall","src":"3893:32:51"},"nodeType":"YulIf","src":"3890:52:51"},{"nodeType":"YulVariableDeclaration","src":"3951:37:51","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3978:9:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3965:12:51"},"nodeType":"YulFunctionCall","src":"3965:23:51"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3955:6:51","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3997:28:51","value":{"kind":"number","nodeType":"YulLiteral","src":"4007:18:51","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4001:2:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"4052:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4061:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4064:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4054:6:51"},"nodeType":"YulFunctionCall","src":"4054:12:51"},"nodeType":"YulExpressionStatement","src":"4054:12:51"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4040:6:51"},{"name":"_1","nodeType":"YulIdentifier","src":"4048:2:51"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4037:2:51"},"nodeType":"YulFunctionCall","src":"4037:14:51"},"nodeType":"YulIf","src":"4034:34:51"},{"nodeType":"YulAssignment","src":"4077:71:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4120:9:51"},{"name":"offset","nodeType":"YulIdentifier","src":"4131:6:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4116:3:51"},"nodeType":"YulFunctionCall","src":"4116:22:51"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4140:7:51"}],"functionName":{"name":"abi_decode_array_bytes32_dyn","nodeType":"YulIdentifier","src":"4087:28:51"},"nodeType":"YulFunctionCall","src":"4087:61:51"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4077:6:51"}]},{"nodeType":"YulVariableDeclaration","src":"4157:12:51","value":{"kind":"number","nodeType":"YulLiteral","src":"4167:2:51","type":"","value":"32"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"4161:2:51","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4178:48:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4211:9:51"},{"name":"_2","nodeType":"YulIdentifier","src":"4222:2:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4207:3:51"},"nodeType":"YulFunctionCall","src":"4207:18:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4194:12:51"},"nodeType":"YulFunctionCall","src":"4194:32:51"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"4182:8:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"4255:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4264:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4267:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4257:6:51"},"nodeType":"YulFunctionCall","src":"4257:12:51"},"nodeType":"YulExpressionStatement","src":"4257:12:51"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"4241:8:51"},{"name":"_1","nodeType":"YulIdentifier","src":"4251:2:51"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4238:2:51"},"nodeType":"YulFunctionCall","src":"4238:16:51"},"nodeType":"YulIf","src":"4235:36:51"},{"nodeType":"YulVariableDeclaration","src":"4280:34:51","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4294:9:51"},{"name":"offset_1","nodeType":"YulIdentifier","src":"4305:8:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4290:3:51"},"nodeType":"YulFunctionCall","src":"4290:24:51"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"4284:2:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"4362:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4371:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4374:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4364:6:51"},"nodeType":"YulFunctionCall","src":"4364:12:51"},"nodeType":"YulExpressionStatement","src":"4364:12:51"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4341:2:51"},{"kind":"number","nodeType":"YulLiteral","src":"4345:4:51","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4337:3:51"},"nodeType":"YulFunctionCall","src":"4337:13:51"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4352:7:51"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4333:3:51"},"nodeType":"YulFunctionCall","src":"4333:27:51"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4326:6:51"},"nodeType":"YulFunctionCall","src":"4326:35:51"},"nodeType":"YulIf","src":"4323:55:51"},{"nodeType":"YulVariableDeclaration","src":"4387:26:51","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4410:2:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4397:12:51"},"nodeType":"YulFunctionCall","src":"4397:16:51"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"4391:2:51","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4422:71:51","value":{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"4489:2:51"}],"functionName":{"name":"array_allocation_size_array_bytes32_dyn","nodeType":"YulIdentifier","src":"4449:39:51"},"nodeType":"YulFunctionCall","src":"4449:43:51"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4433:15:51"},"nodeType":"YulFunctionCall","src":"4433:60:51"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4426:3:51","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4502:16:51","value":{"name":"dst","nodeType":"YulIdentifier","src":"4515:3:51"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"4506:5:51","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4534:3:51"},{"name":"_4","nodeType":"YulIdentifier","src":"4539:2:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4527:6:51"},"nodeType":"YulFunctionCall","src":"4527:15:51"},"nodeType":"YulExpressionStatement","src":"4527:15:51"},{"nodeType":"YulAssignment","src":"4551:19:51","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4562:3:51"},{"name":"_2","nodeType":"YulIdentifier","src":"4567:2:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4558:3:51"},"nodeType":"YulFunctionCall","src":"4558:12:51"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"4551:3:51"}]},{"nodeType":"YulVariableDeclaration","src":"4579:42:51","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4601:2:51"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4609:1:51","type":"","value":"5"},{"name":"_4","nodeType":"YulIdentifier","src":"4612:2:51"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4605:3:51"},"nodeType":"YulFunctionCall","src":"4605:10:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4597:3:51"},"nodeType":"YulFunctionCall","src":"4597:19:51"},{"name":"_2","nodeType":"YulIdentifier","src":"4618:2:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4593:3:51"},"nodeType":"YulFunctionCall","src":"4593:28:51"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"4583:6:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"4653:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4662:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4665:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4655:6:51"},"nodeType":"YulFunctionCall","src":"4655:12:51"},"nodeType":"YulExpressionStatement","src":"4655:12:51"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"4636:6:51"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4644:7:51"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4633:2:51"},"nodeType":"YulFunctionCall","src":"4633:19:51"},"nodeType":"YulIf","src":"4630:39:51"},{"nodeType":"YulVariableDeclaration","src":"4678:22:51","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4693:2:51"},{"name":"_2","nodeType":"YulIdentifier","src":"4697:2:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4689:3:51"},"nodeType":"YulFunctionCall","src":"4689:11:51"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"4682:3:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"4765:296:51","statements":[{"nodeType":"YulVariableDeclaration","src":"4779:36:51","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4811:3:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4798:12:51"},"nodeType":"YulFunctionCall","src":"4798:17:51"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"4783:11:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"4863:74:51","statements":[{"nodeType":"YulVariableDeclaration","src":"4881:11:51","value":{"kind":"number","nodeType":"YulLiteral","src":"4891:1:51","type":"","value":"0"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"4885:2:51","type":""}]},{"expression":{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"4916:2:51"},{"name":"_5","nodeType":"YulIdentifier","src":"4920:2:51"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4909:6:51"},"nodeType":"YulFunctionCall","src":"4909:14:51"},"nodeType":"YulExpressionStatement","src":"4909:14:51"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"4834:11:51"},{"name":"_1","nodeType":"YulIdentifier","src":"4847:2:51"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4831:2:51"},"nodeType":"YulFunctionCall","src":"4831:19:51"},"nodeType":"YulIf","src":"4828:109:51"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4957:3:51"},{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"4987:2:51"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"4991:11:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4983:3:51"},"nodeType":"YulFunctionCall","src":"4983:20:51"},{"name":"_2","nodeType":"YulIdentifier","src":"5005:2:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4979:3:51"},"nodeType":"YulFunctionCall","src":"4979:29:51"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5010:7:51"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"4962:16:51"},"nodeType":"YulFunctionCall","src":"4962:56:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4950:6:51"},"nodeType":"YulFunctionCall","src":"4950:69:51"},"nodeType":"YulExpressionStatement","src":"4950:69:51"},{"nodeType":"YulAssignment","src":"5032:19:51","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5043:3:51"},{"name":"_2","nodeType":"YulIdentifier","src":"5048:2:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5039:3:51"},"nodeType":"YulFunctionCall","src":"5039:12:51"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5032:3:51"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4720:3:51"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"4725:6:51"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4717:2:51"},"nodeType":"YulFunctionCall","src":"4717:15:51"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4733:23:51","statements":[{"nodeType":"YulAssignment","src":"4735:19:51","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4746:3:51"},{"name":"_2","nodeType":"YulIdentifier","src":"4751:2:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4742:3:51"},"nodeType":"YulFunctionCall","src":"4742:12:51"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"4735:3:51"}]}]},"pre":{"nodeType":"YulBlock","src":"4713:3:51","statements":[]},"src":"4709:352:51"},{"nodeType":"YulAssignment","src":"5070:15:51","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"5080:5:51"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5070:6:51"}]}]},"name":"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3838:9:51","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3849:7:51","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3861:6:51","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3869:6:51","type":""}],"src":"3734:1357:51"},{"body":{"nodeType":"YulBlock","src":"5191:253:51","statements":[{"body":{"nodeType":"YulBlock","src":"5237:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5246:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5249:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5239:6:51"},"nodeType":"YulFunctionCall","src":"5239:12:51"},"nodeType":"YulExpressionStatement","src":"5239:12:51"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5212:7:51"},{"name":"headStart","nodeType":"YulIdentifier","src":"5221:9:51"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5208:3:51"},"nodeType":"YulFunctionCall","src":"5208:23:51"},{"kind":"number","nodeType":"YulLiteral","src":"5233:2:51","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5204:3:51"},"nodeType":"YulFunctionCall","src":"5204:32:51"},"nodeType":"YulIf","src":"5201:52:51"},{"nodeType":"YulVariableDeclaration","src":"5262:37:51","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5289:9:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5276:12:51"},"nodeType":"YulFunctionCall","src":"5276:23:51"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5266:6:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"5342:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5351:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5354:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5344:6:51"},"nodeType":"YulFunctionCall","src":"5344:12:51"},"nodeType":"YulExpressionStatement","src":"5344:12:51"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5314:6:51"},{"kind":"number","nodeType":"YulLiteral","src":"5322:18:51","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5311:2:51"},"nodeType":"YulFunctionCall","src":"5311:30:51"},"nodeType":"YulIf","src":"5308:50:51"},{"nodeType":"YulAssignment","src":"5367:71:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5410:9:51"},{"name":"offset","nodeType":"YulIdentifier","src":"5421:6:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5406:3:51"},"nodeType":"YulFunctionCall","src":"5406:22:51"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5430:7:51"}],"functionName":{"name":"abi_decode_array_bytes32_dyn","nodeType":"YulIdentifier","src":"5377:28:51"},"nodeType":"YulFunctionCall","src":"5377:61:51"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5367:6:51"}]}]},"name":"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5157:9:51","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5168:7:51","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5180:6:51","type":""}],"src":"5096:348:51"},{"body":{"nodeType":"YulBlock","src":"5618:631:51","statements":[{"nodeType":"YulVariableDeclaration","src":"5628:12:51","value":{"kind":"number","nodeType":"YulLiteral","src":"5638:2:51","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5632:2:51","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5649:32:51","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5667:9:51"},{"name":"_1","nodeType":"YulIdentifier","src":"5678:2:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5663:3:51"},"nodeType":"YulFunctionCall","src":"5663:18:51"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"5653:6:51","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5697:9:51"},{"name":"_1","nodeType":"YulIdentifier","src":"5708:2:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5690:6:51"},"nodeType":"YulFunctionCall","src":"5690:21:51"},"nodeType":"YulExpressionStatement","src":"5690:21:51"},{"nodeType":"YulVariableDeclaration","src":"5720:17:51","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"5731:6:51"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"5724:3:51","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5746:27:51","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5766:6:51"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5760:5:51"},"nodeType":"YulFunctionCall","src":"5760:13:51"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5750:6:51","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"5789:6:51"},{"name":"length","nodeType":"YulIdentifier","src":"5797:6:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5782:6:51"},"nodeType":"YulFunctionCall","src":"5782:22:51"},"nodeType":"YulExpressionStatement","src":"5782:22:51"},{"nodeType":"YulAssignment","src":"5813:25:51","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5824:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"5835:2:51","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5820:3:51"},"nodeType":"YulFunctionCall","src":"5820:18:51"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5813:3:51"}]},{"nodeType":"YulVariableDeclaration","src":"5847:53:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5869:9:51"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5884:1:51","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"5887:6:51"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5880:3:51"},"nodeType":"YulFunctionCall","src":"5880:14:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5865:3:51"},"nodeType":"YulFunctionCall","src":"5865:30:51"},{"kind":"number","nodeType":"YulLiteral","src":"5897:2:51","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5861:3:51"},"nodeType":"YulFunctionCall","src":"5861:39:51"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"5851:6:51","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5909:29:51","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5927:6:51"},{"name":"_1","nodeType":"YulIdentifier","src":"5935:2:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5923:3:51"},"nodeType":"YulFunctionCall","src":"5923:15:51"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"5913:6:51","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5947:10:51","value":{"kind":"number","nodeType":"YulLiteral","src":"5956:1:51","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5951:1:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"6015:205:51","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6036:3:51"},{"arguments":[{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"6049:6:51"},{"name":"headStart","nodeType":"YulIdentifier","src":"6057:9:51"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6045:3:51"},"nodeType":"YulFunctionCall","src":"6045:22:51"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6073:2:51","type":"","value":"63"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6069:3:51"},"nodeType":"YulFunctionCall","src":"6069:7:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6041:3:51"},"nodeType":"YulFunctionCall","src":"6041:36:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6029:6:51"},"nodeType":"YulFunctionCall","src":"6029:49:51"},"nodeType":"YulExpressionStatement","src":"6029:49:51"},{"nodeType":"YulAssignment","src":"6091:49:51","value":{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6124:6:51"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6118:5:51"},"nodeType":"YulFunctionCall","src":"6118:13:51"},{"name":"tail_2","nodeType":"YulIdentifier","src":"6133:6:51"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"6101:16:51"},"nodeType":"YulFunctionCall","src":"6101:39:51"},"variableNames":[{"name":"tail_2","nodeType":"YulIdentifier","src":"6091:6:51"}]},{"nodeType":"YulAssignment","src":"6153:25:51","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6167:6:51"},{"name":"_1","nodeType":"YulIdentifier","src":"6175:2:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6163:3:51"},"nodeType":"YulFunctionCall","src":"6163:15:51"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6153:6:51"}]},{"nodeType":"YulAssignment","src":"6191:19:51","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6202:3:51"},{"name":"_1","nodeType":"YulIdentifier","src":"6207:2:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6198:3:51"},"nodeType":"YulFunctionCall","src":"6198:12:51"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6191:3:51"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5977:1:51"},{"name":"length","nodeType":"YulIdentifier","src":"5980:6:51"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5974:2:51"},"nodeType":"YulFunctionCall","src":"5974:13:51"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5988:18:51","statements":[{"nodeType":"YulAssignment","src":"5990:14:51","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5999:1:51"},{"kind":"number","nodeType":"YulLiteral","src":"6002:1:51","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5995:3:51"},"nodeType":"YulFunctionCall","src":"5995:9:51"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5990:1:51"}]}]},"pre":{"nodeType":"YulBlock","src":"5970:3:51","statements":[]},"src":"5966:254:51"},{"nodeType":"YulAssignment","src":"6229:14:51","value":{"name":"tail_2","nodeType":"YulIdentifier","src":"6237:6:51"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6229:4:51"}]}]},"name":"abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5587:9:51","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5598:6:51","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5609:4:51","type":""}],"src":"5449:800:51"},{"body":{"nodeType":"YulBlock","src":"6324:216:51","statements":[{"body":{"nodeType":"YulBlock","src":"6370:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6379:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6382:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6372:6:51"},"nodeType":"YulFunctionCall","src":"6372:12:51"},"nodeType":"YulExpressionStatement","src":"6372:12:51"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6345:7:51"},{"name":"headStart","nodeType":"YulIdentifier","src":"6354:9:51"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6341:3:51"},"nodeType":"YulFunctionCall","src":"6341:23:51"},{"kind":"number","nodeType":"YulLiteral","src":"6366:2:51","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6337:3:51"},"nodeType":"YulFunctionCall","src":"6337:32:51"},"nodeType":"YulIf","src":"6334:52:51"},{"nodeType":"YulVariableDeclaration","src":"6395:36:51","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6421:9:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6408:12:51"},"nodeType":"YulFunctionCall","src":"6408:23:51"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6399:5:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"6494:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6503:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6506:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6496:6:51"},"nodeType":"YulFunctionCall","src":"6496:12:51"},"nodeType":"YulExpressionStatement","src":"6496:12:51"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6453:5:51"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6464:5:51"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6479:3:51","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6484:1:51","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6475:3:51"},"nodeType":"YulFunctionCall","src":"6475:11:51"},{"kind":"number","nodeType":"YulLiteral","src":"6488:1:51","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6471:3:51"},"nodeType":"YulFunctionCall","src":"6471:19:51"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6460:3:51"},"nodeType":"YulFunctionCall","src":"6460:31:51"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6450:2:51"},"nodeType":"YulFunctionCall","src":"6450:42:51"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6443:6:51"},"nodeType":"YulFunctionCall","src":"6443:50:51"},"nodeType":"YulIf","src":"6440:70:51"},{"nodeType":"YulAssignment","src":"6519:15:51","value":{"name":"value","nodeType":"YulIdentifier","src":"6529:5:51"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6519:6:51"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6290:9:51","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6301:7:51","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6313:6:51","type":""}],"src":"6254:286:51"},{"body":{"nodeType":"YulBlock","src":"6577:95:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6594:1:51","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6601:3:51","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6606:10:51","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6597:3:51"},"nodeType":"YulFunctionCall","src":"6597:20:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6587:6:51"},"nodeType":"YulFunctionCall","src":"6587:31:51"},"nodeType":"YulExpressionStatement","src":"6587:31:51"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6634:1:51","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6637:4:51","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6627:6:51"},"nodeType":"YulFunctionCall","src":"6627:15:51"},"nodeType":"YulExpressionStatement","src":"6627:15:51"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6658:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6661:4:51","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6651:6:51"},"nodeType":"YulFunctionCall","src":"6651:15:51"},"nodeType":"YulExpressionStatement","src":"6651:15:51"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"6545:127:51"},{"body":{"nodeType":"YulBlock","src":"6851:228:51","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6868:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"6879:2:51","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6861:6:51"},"nodeType":"YulFunctionCall","src":"6861:21:51"},"nodeType":"YulExpressionStatement","src":"6861:21:51"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6902:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"6913:2:51","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6898:3:51"},"nodeType":"YulFunctionCall","src":"6898:18:51"},{"kind":"number","nodeType":"YulLiteral","src":"6918:2:51","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6891:6:51"},"nodeType":"YulFunctionCall","src":"6891:30:51"},"nodeType":"YulExpressionStatement","src":"6891:30:51"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6941:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"6952:2:51","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6937:3:51"},"nodeType":"YulFunctionCall","src":"6937:18:51"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"6957:34:51","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6930:6:51"},"nodeType":"YulFunctionCall","src":"6930:62:51"},"nodeType":"YulExpressionStatement","src":"6930:62:51"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7012:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"7023:2:51","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7008:3:51"},"nodeType":"YulFunctionCall","src":"7008:18:51"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"7028:8:51","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7001:6:51"},"nodeType":"YulFunctionCall","src":"7001:36:51"},"nodeType":"YulExpressionStatement","src":"7001:36:51"},{"nodeType":"YulAssignment","src":"7046:27:51","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7058:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"7069:3:51","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7054:3:51"},"nodeType":"YulFunctionCall","src":"7054:19:51"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7046:4:51"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6828:9:51","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6842:4:51","type":""}],"src":"6677:402:51"},{"body":{"nodeType":"YulBlock","src":"7139:325:51","statements":[{"nodeType":"YulAssignment","src":"7149:22:51","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7163:1:51","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"7166:4:51"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7159:3:51"},"nodeType":"YulFunctionCall","src":"7159:12:51"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7149:6:51"}]},{"nodeType":"YulVariableDeclaration","src":"7180:38:51","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7210:4:51"},{"kind":"number","nodeType":"YulLiteral","src":"7216:1:51","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7206:3:51"},"nodeType":"YulFunctionCall","src":"7206:12:51"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"7184:18:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"7257:31:51","statements":[{"nodeType":"YulAssignment","src":"7259:27:51","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7273:6:51"},{"kind":"number","nodeType":"YulLiteral","src":"7281:4:51","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7269:3:51"},"nodeType":"YulFunctionCall","src":"7269:17:51"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7259:6:51"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7237:18:51"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7230:6:51"},"nodeType":"YulFunctionCall","src":"7230:26:51"},"nodeType":"YulIf","src":"7227:61:51"},{"body":{"nodeType":"YulBlock","src":"7347:111:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7368:1:51","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7375:3:51","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7380:10:51","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7371:3:51"},"nodeType":"YulFunctionCall","src":"7371:20:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7361:6:51"},"nodeType":"YulFunctionCall","src":"7361:31:51"},"nodeType":"YulExpressionStatement","src":"7361:31:51"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7412:1:51","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7415:4:51","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7405:6:51"},"nodeType":"YulFunctionCall","src":"7405:15:51"},"nodeType":"YulExpressionStatement","src":"7405:15:51"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7440:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7443:4:51","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7433:6:51"},"nodeType":"YulFunctionCall","src":"7433:15:51"},"nodeType":"YulExpressionStatement","src":"7433:15:51"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7303:18:51"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7326:6:51"},{"kind":"number","nodeType":"YulLiteral","src":"7334:2:51","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7323:2:51"},"nodeType":"YulFunctionCall","src":"7323:14:51"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7300:2:51"},"nodeType":"YulFunctionCall","src":"7300:38:51"},"nodeType":"YulIf","src":"7297:161:51"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7119:4:51","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7128:6:51","type":""}],"src":"7084:380:51"},{"body":{"nodeType":"YulBlock","src":"7643:182:51","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7660:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"7671:2:51","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7653:6:51"},"nodeType":"YulFunctionCall","src":"7653:21:51"},"nodeType":"YulExpressionStatement","src":"7653:21:51"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7694:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"7705:2:51","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7690:3:51"},"nodeType":"YulFunctionCall","src":"7690:18:51"},{"kind":"number","nodeType":"YulLiteral","src":"7710:2:51","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7683:6:51"},"nodeType":"YulFunctionCall","src":"7683:30:51"},"nodeType":"YulExpressionStatement","src":"7683:30:51"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7733:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"7744:2:51","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7729:3:51"},"nodeType":"YulFunctionCall","src":"7729:18:51"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"7749:34:51","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7722:6:51"},"nodeType":"YulFunctionCall","src":"7722:62:51"},"nodeType":"YulExpressionStatement","src":"7722:62:51"},{"nodeType":"YulAssignment","src":"7793:26:51","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7805:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"7816:2:51","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7801:3:51"},"nodeType":"YulFunctionCall","src":"7801:18:51"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7793:4:51"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7620:9:51","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7634:4:51","type":""}],"src":"7469:356:51"},{"body":{"nodeType":"YulBlock","src":"7885:65:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7902:1:51","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"7905:3:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7895:6:51"},"nodeType":"YulFunctionCall","src":"7895:14:51"},"nodeType":"YulExpressionStatement","src":"7895:14:51"},{"nodeType":"YulAssignment","src":"7918:26:51","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7936:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7939:4:51","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7926:9:51"},"nodeType":"YulFunctionCall","src":"7926:18:51"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7918:4:51"}]}]},"name":"array_dataslot_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"7868:3:51","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"7876:4:51","type":""}],"src":"7830:120:51"},{"body":{"nodeType":"YulBlock","src":"8035:464:51","statements":[{"body":{"nodeType":"YulBlock","src":"8068:425:51","statements":[{"nodeType":"YulVariableDeclaration","src":"8082:11:51","value":{"kind":"number","nodeType":"YulLiteral","src":"8092:1:51","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8086:2:51","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"8113:2:51"},{"name":"array","nodeType":"YulIdentifier","src":"8117:5:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8106:6:51"},"nodeType":"YulFunctionCall","src":"8106:17:51"},"nodeType":"YulExpressionStatement","src":"8106:17:51"},{"nodeType":"YulVariableDeclaration","src":"8136:31:51","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"8158:2:51"},{"kind":"number","nodeType":"YulLiteral","src":"8162:4:51","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8148:9:51"},"nodeType":"YulFunctionCall","src":"8148:19:51"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"8140:4:51","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8180:57:51","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8203:4:51"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8213:1:51","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"8220:10:51"},{"kind":"number","nodeType":"YulLiteral","src":"8232:2:51","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8216:3:51"},"nodeType":"YulFunctionCall","src":"8216:19:51"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8209:3:51"},"nodeType":"YulFunctionCall","src":"8209:27:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8199:3:51"},"nodeType":"YulFunctionCall","src":"8199:38:51"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"8184:11:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"8274:23:51","statements":[{"nodeType":"YulAssignment","src":"8276:19:51","value":{"name":"data","nodeType":"YulIdentifier","src":"8291:4:51"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"8276:11:51"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"8256:10:51"},{"kind":"number","nodeType":"YulLiteral","src":"8268:4:51","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8253:2:51"},"nodeType":"YulFunctionCall","src":"8253:20:51"},"nodeType":"YulIf","src":"8250:47:51"},{"nodeType":"YulVariableDeclaration","src":"8310:41:51","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8324:4:51"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8334:1:51","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"8341:3:51"},{"kind":"number","nodeType":"YulLiteral","src":"8346:2:51","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8337:3:51"},"nodeType":"YulFunctionCall","src":"8337:12:51"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8330:3:51"},"nodeType":"YulFunctionCall","src":"8330:20:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8320:3:51"},"nodeType":"YulFunctionCall","src":"8320:31:51"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"8314:2:51","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8364:24:51","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"8377:11:51"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"8368:5:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"8462:21:51","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"8471:5:51"},{"name":"_1","nodeType":"YulIdentifier","src":"8478:2:51"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8464:6:51"},"nodeType":"YulFunctionCall","src":"8464:17:51"},"nodeType":"YulExpressionStatement","src":"8464:17:51"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"8412:5:51"},{"name":"_2","nodeType":"YulIdentifier","src":"8419:2:51"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8409:2:51"},"nodeType":"YulFunctionCall","src":"8409:13:51"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8423:26:51","statements":[{"nodeType":"YulAssignment","src":"8425:22:51","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"8438:5:51"},{"kind":"number","nodeType":"YulLiteral","src":"8445:1:51","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8434:3:51"},"nodeType":"YulFunctionCall","src":"8434:13:51"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"8425:5:51"}]}]},"pre":{"nodeType":"YulBlock","src":"8405:3:51","statements":[]},"src":"8401:82:51"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"8051:3:51"},{"kind":"number","nodeType":"YulLiteral","src":"8056:2:51","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8048:2:51"},"nodeType":"YulFunctionCall","src":"8048:11:51"},"nodeType":"YulIf","src":"8045:448:51"}]},"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"8007:5:51","type":""},{"name":"len","nodeType":"YulTypedName","src":"8014:3:51","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"8019:10:51","type":""}],"src":"7955:544:51"},{"body":{"nodeType":"YulBlock","src":"8589:81:51","statements":[{"nodeType":"YulAssignment","src":"8599:65:51","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8614:4:51"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8632:1:51","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"8635:3:51"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8628:3:51"},"nodeType":"YulFunctionCall","src":"8628:11:51"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8645:1:51","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8641:3:51"},"nodeType":"YulFunctionCall","src":"8641:6:51"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8624:3:51"},"nodeType":"YulFunctionCall","src":"8624:24:51"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8620:3:51"},"nodeType":"YulFunctionCall","src":"8620:29:51"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8610:3:51"},"nodeType":"YulFunctionCall","src":"8610:40:51"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8656:1:51","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"8659:3:51"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8652:3:51"},"nodeType":"YulFunctionCall","src":"8652:11:51"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8607:2:51"},"nodeType":"YulFunctionCall","src":"8607:57:51"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"8599:4:51"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8566:4:51","type":""},{"name":"len","nodeType":"YulTypedName","src":"8572:3:51","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"8580:4:51","type":""}],"src":"8504:166:51"},{"body":{"nodeType":"YulBlock","src":"8769:1254:51","statements":[{"nodeType":"YulVariableDeclaration","src":"8779:24:51","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8799:3:51"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8793:5:51"},"nodeType":"YulFunctionCall","src":"8793:10:51"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"8783:6:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"8846:22:51","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8848:16:51"},"nodeType":"YulFunctionCall","src":"8848:18:51"},"nodeType":"YulExpressionStatement","src":"8848:18:51"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8818:6:51"},{"kind":"number","nodeType":"YulLiteral","src":"8826:18:51","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8815:2:51"},"nodeType":"YulFunctionCall","src":"8815:30:51"},"nodeType":"YulIf","src":"8812:56:51"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8920:4:51"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8958:4:51"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"8952:5:51"},"nodeType":"YulFunctionCall","src":"8952:11:51"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"8926:25:51"},"nodeType":"YulFunctionCall","src":"8926:38:51"},{"name":"newLen","nodeType":"YulIdentifier","src":"8966:6:51"}],"functionName":{"name":"clean_up_bytearray_end_slots_bytes_storage","nodeType":"YulIdentifier","src":"8877:42:51"},"nodeType":"YulFunctionCall","src":"8877:96:51"},"nodeType":"YulExpressionStatement","src":"8877:96:51"},{"nodeType":"YulVariableDeclaration","src":"8982:18:51","value":{"kind":"number","nodeType":"YulLiteral","src":"8999:1:51","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"8986:9:51","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9009:23:51","value":{"kind":"number","nodeType":"YulLiteral","src":"9028:4:51","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"9013:11:51","type":""}]},{"nodeType":"YulAssignment","src":"9041:24:51","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"9054:11:51"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"9041:9:51"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"9111:655:51","statements":[{"nodeType":"YulVariableDeclaration","src":"9125:35:51","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9144:6:51"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9156:2:51","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9152:3:51"},"nodeType":"YulFunctionCall","src":"9152:7:51"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9140:3:51"},"nodeType":"YulFunctionCall","src":"9140:20:51"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"9129:7:51","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9173:48:51","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9216:4:51"}],"functionName":{"name":"array_dataslot_bytes_storage","nodeType":"YulIdentifier","src":"9187:28:51"},"nodeType":"YulFunctionCall","src":"9187:34:51"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"9177:6:51","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9234:10:51","value":{"kind":"number","nodeType":"YulLiteral","src":"9243:1:51","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9238:1:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"9321:172:51","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9346:6:51"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9364:3:51"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"9369:9:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9360:3:51"},"nodeType":"YulFunctionCall","src":"9360:19:51"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9354:5:51"},"nodeType":"YulFunctionCall","src":"9354:26:51"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9339:6:51"},"nodeType":"YulFunctionCall","src":"9339:42:51"},"nodeType":"YulExpressionStatement","src":"9339:42:51"},{"nodeType":"YulAssignment","src":"9398:24:51","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9412:6:51"},{"kind":"number","nodeType":"YulLiteral","src":"9420:1:51","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9408:3:51"},"nodeType":"YulFunctionCall","src":"9408:14:51"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9398:6:51"}]},{"nodeType":"YulAssignment","src":"9439:40:51","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"9456:9:51"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"9467:11:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9452:3:51"},"nodeType":"YulFunctionCall","src":"9452:27:51"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"9439:9:51"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9268:1:51"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"9271:7:51"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9265:2:51"},"nodeType":"YulFunctionCall","src":"9265:14:51"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9280:28:51","statements":[{"nodeType":"YulAssignment","src":"9282:24:51","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9291:1:51"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"9294:11:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9287:3:51"},"nodeType":"YulFunctionCall","src":"9287:19:51"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9282:1:51"}]}]},"pre":{"nodeType":"YulBlock","src":"9261:3:51","statements":[]},"src":"9257:236:51"},{"body":{"nodeType":"YulBlock","src":"9541:166:51","statements":[{"nodeType":"YulVariableDeclaration","src":"9559:43:51","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9586:3:51"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"9591:9:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9582:3:51"},"nodeType":"YulFunctionCall","src":"9582:19:51"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9576:5:51"},"nodeType":"YulFunctionCall","src":"9576:26:51"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"9563:9:51","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9626:6:51"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"9638:9:51"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9665:1:51","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"9668:6:51"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9661:3:51"},"nodeType":"YulFunctionCall","src":"9661:14:51"},{"kind":"number","nodeType":"YulLiteral","src":"9677:3:51","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9657:3:51"},"nodeType":"YulFunctionCall","src":"9657:24:51"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9687:1:51","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9683:3:51"},"nodeType":"YulFunctionCall","src":"9683:6:51"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9653:3:51"},"nodeType":"YulFunctionCall","src":"9653:37:51"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9649:3:51"},"nodeType":"YulFunctionCall","src":"9649:42:51"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9634:3:51"},"nodeType":"YulFunctionCall","src":"9634:58:51"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9619:6:51"},"nodeType":"YulFunctionCall","src":"9619:74:51"},"nodeType":"YulExpressionStatement","src":"9619:74:51"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"9512:7:51"},{"name":"newLen","nodeType":"YulIdentifier","src":"9521:6:51"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9509:2:51"},"nodeType":"YulFunctionCall","src":"9509:19:51"},"nodeType":"YulIf","src":"9506:201:51"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9727:4:51"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9741:1:51","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"9744:6:51"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9737:3:51"},"nodeType":"YulFunctionCall","src":"9737:14:51"},{"kind":"number","nodeType":"YulLiteral","src":"9753:1:51","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9733:3:51"},"nodeType":"YulFunctionCall","src":"9733:22:51"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9720:6:51"},"nodeType":"YulFunctionCall","src":"9720:36:51"},"nodeType":"YulExpressionStatement","src":"9720:36:51"}]},"nodeType":"YulCase","src":"9104:662:51","value":{"kind":"number","nodeType":"YulLiteral","src":"9109:1:51","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"9783:234:51","statements":[{"nodeType":"YulVariableDeclaration","src":"9797:14:51","value":{"kind":"number","nodeType":"YulLiteral","src":"9810:1:51","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"9801:5:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"9846:67:51","statements":[{"nodeType":"YulAssignment","src":"9864:35:51","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9883:3:51"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"9888:9:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9879:3:51"},"nodeType":"YulFunctionCall","src":"9879:19:51"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9873:5:51"},"nodeType":"YulFunctionCall","src":"9873:26:51"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9864:5:51"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"9827:6:51"},"nodeType":"YulIf","src":"9824:89:51"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9933:4:51"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9992:5:51"},{"name":"newLen","nodeType":"YulIdentifier","src":"9999:6:51"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"9939:52:51"},"nodeType":"YulFunctionCall","src":"9939:67:51"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9926:6:51"},"nodeType":"YulFunctionCall","src":"9926:81:51"},"nodeType":"YulExpressionStatement","src":"9926:81:51"}]},"nodeType":"YulCase","src":"9775:242:51","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9084:6:51"},{"kind":"number","nodeType":"YulLiteral","src":"9092:2:51","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9081:2:51"},"nodeType":"YulFunctionCall","src":"9081:14:51"},"nodeType":"YulSwitch","src":"9074:943:51"}]},"name":"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"8754:4:51","type":""},{"name":"src","nodeType":"YulTypedName","src":"8760:3:51","type":""}],"src":"8675:1348:51"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function array_allocation_size_array_bytes32_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_bytes32_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_bytes32_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_array_bytes32_dyn(add(headStart, offset), dataEnd)\n        let _2 := 32\n        let offset_1 := calldataload(add(headStart, _2))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let _3 := add(headStart, offset_1)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        let dst := allocate_memory(array_allocation_size_array_bytes32_dyn(_4))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _2)\n        let srcEnd := add(add(_3, shl(5, _4)), _2)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, _1)\n            {\n                let _5 := 0\n                revert(_5, _5)\n            }\n            mstore(dst, abi_decode_bytes(add(add(_3, innerOffset), _2), dataEnd))\n            dst := add(dst, _2)\n        }\n        value1 := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_array_bytes32_dyn(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let tail_2 := add(add(headStart, shl(5, length)), 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(63)))\n            tail_2 := abi_encode_bytes(mload(srcPtr), tail_2)\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_bytes_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_bytes_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_bytes_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":51,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"60806040526004361061006b5760003560e01c806301ffc9a71461007057806354f6127f146100a5578063715018a6146100d25780637f23690c146100e95780638da5cb5b146100fc5780639790242114610124578063dedff9c614610137578063f2fde38b14610164575b600080fd5b34801561007c57600080fd5b5061009061008b3660046105bc565b610184565b60405190151581526020015b60405180910390f35b3480156100b157600080fd5b506100c56100c03660046105ed565b6101bb565b60405161009c919061064c565b3480156100de57600080fd5b506100e76101c6565b005b6100e76100f7366004610714565b6101da565b34801561010857600080fd5b506000546040516001600160a01b03909116815260200161009c565b6100e76101323660046107e8565b61020f565b34801561014357600080fd5b506101576101523660046108bc565b6102cf565b60405161009c91906108f8565b34801561017057600080fd5b506100e761017f36600461095a565b610379565b60006001600160e01b031982166318a6a9a560e21b14806101b557506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606101b5826103f7565b6101ce610499565b6101d86000610502565b565b6101e2610499565b34156102015760405163f36ba73760e01b815260040160405180910390fd5b61020b8282610567565b5050565b610217610499565b34156102365760405163f36ba73760e01b815260040160405180910390fd5b805182511461025857604051633bcc897960e01b815260040160405180910390fd5b815160000361027a576040516397da5f9560e01b815260040160405180910390fd5b60005b82518110156102ca576102c283828151811061029b5761029b610983565b60200260200101518383815181106102b5576102b5610983565b6020026020010151610567565b60010161027d565b505050565b606081516001600160401b038111156102ea576102ea61065f565b60405190808252806020026020018201604052801561031d57816020015b60608152602001906001900390816103085790505b50905060005b82518110156103735761034e83828151811061034157610341610983565b60200260200101516103f7565b82828151811061036057610360610983565b6020908102919091010152600101610323565b50919050565b610381610499565b6001600160a01b0381166103eb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6103f481610502565b50565b600081815260016020526040902080546060919061041490610999565b80601f016020809104026020016040519081016040528092919081815260200182805461044090610999565b801561048d5780601f106104625761010080835404028352916020019161048d565b820191906000526020600020905b81548152906001019060200180831161047057829003601f168201915b50505050509050919050565b336104ac6000546001600160a01b031690565b6001600160a01b0316146101d85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103e2565b6000546001600160a01b038281169116146103f457600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600082815260016020526040902061057f8282610a1b565b50817fece574603820d07bc9b91f2a932baadf4628aabcb8afba49776529c14a6104b2826040516105b0919061064c565b60405180910390a25050565b6000602082840312156105ce57600080fd5b81356001600160e01b0319811681146105e657600080fd5b9392505050565b6000602082840312156105ff57600080fd5b5035919050565b6000815180845260005b8181101561062c57602081850181015186830182015201610610565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006105e66020830184610606565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561069d5761069d61065f565b604052919050565b600082601f8301126106b657600080fd5b81356001600160401b038111156106cf576106cf61065f565b6106e2601f8201601f1916602001610675565b8181528460208386010111156106f757600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561072757600080fd5b8235915060208301356001600160401b0381111561074457600080fd5b610750858286016106a5565b9150509250929050565b60006001600160401b038211156107735761077361065f565b5060051b60200190565b600082601f83011261078e57600080fd5b813560206107a361079e8361075a565b610675565b82815260059290921b840181019181810190868411156107c257600080fd5b8286015b848110156107dd57803583529183019183016107c6565b509695505050505050565b600080604083850312156107fb57600080fd5b82356001600160401b038082111561081257600080fd5b61081e8683870161077d565b935060209150818501358181111561083557600080fd5b8501601f8101871361084657600080fd5b803561085461079e8261075a565b81815260059190911b8201840190848101908983111561087357600080fd5b8584015b838110156108ab5780358681111561088f5760008081fd5b61089d8c89838901016106a5565b845250918601918601610877565b508096505050505050509250929050565b6000602082840312156108ce57600080fd5b81356001600160401b038111156108e457600080fd5b6108f08482850161077d565b949350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561094d57603f1988860301845261093b858351610606565b9450928501929085019060010161091f565b5092979650505050505050565b60006020828403121561096c57600080fd5b81356001600160a01b03811681146105e657600080fd5b634e487b7160e01b600052603260045260246000fd5b600181811c908216806109ad57607f821691505b60208210810361037357634e487b7160e01b600052602260045260246000fd5b601f8211156102ca57600081815260208120601f850160051c810160208610156109f45750805b601f850160051c820191505b81811015610a1357828155600101610a00565b505050505050565b81516001600160401b03811115610a3457610a3461065f565b610a4881610a428454610999565b846109cd565b602080601f831160018114610a7d5760008415610a655750858301515b600019600386901b1c1916600185901b178555610a13565b600085815260208120601f198616915b82811015610aac57888601518255948401946001909101908401610a8d565b5085821015610aca5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212207621a33bb2a35cf49e9cacc9e5f6fc59ed5adb67f158c28ca667dda278f4e41064736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x70 JUMPI DUP1 PUSH4 0x54F6127F EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x7F23690C EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x97902421 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0xDEDFF9C6 EQ PUSH2 0x137 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x90 PUSH2 0x8B CALLDATASIZE PUSH1 0x4 PUSH2 0x5BC JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x64C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE7 PUSH2 0x1C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE7 PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x714 JUMP JUMPDEST PUSH2 0x1DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9C JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x132 CALLDATASIZE PUSH1 0x4 PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0x20F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x157 PUSH2 0x152 CALLDATASIZE PUSH1 0x4 PUSH2 0x8BC JUMP JUMPDEST PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x8F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE7 PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0x95A JUMP JUMPDEST PUSH2 0x379 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x18A6A9A5 PUSH1 0xE2 SHL EQ DUP1 PUSH2 0x1B5 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1B5 DUP3 PUSH2 0x3F7 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x499 JUMP JUMPDEST PUSH2 0x1D8 PUSH1 0x0 PUSH2 0x502 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1E2 PUSH2 0x499 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x201 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF36BA737 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x20B DUP3 DUP3 PUSH2 0x567 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x217 PUSH2 0x499 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x236 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF36BA737 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x258 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3BCC8979 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x0 SUB PUSH2 0x27A JUMPI PUSH1 0x40 MLOAD PUSH4 0x97DA5F95 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2CA JUMPI PUSH2 0x2C2 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x29B JUMPI PUSH2 0x29B PUSH2 0x983 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2B5 JUMPI PUSH2 0x2B5 PUSH2 0x983 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x27D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2EA JUMPI PUSH2 0x2EA PUSH2 0x65F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x31D JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x308 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x373 JUMPI PUSH2 0x34E DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x341 JUMPI PUSH2 0x341 PUSH2 0x983 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x3F7 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x360 JUMPI PUSH2 0x360 PUSH2 0x983 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x323 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x381 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3F4 DUP2 PUSH2 0x502 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH2 0x414 SWAP1 PUSH2 0x999 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x440 SWAP1 PUSH2 0x999 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x48D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x462 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x48D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x470 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH2 0x4AC PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ PUSH2 0x3F4 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x57F DUP3 DUP3 PUSH2 0xA1B JUMP JUMPDEST POP DUP2 PUSH32 0xECE574603820D07BC9B91F2A932BAADF4628AABCB8AFBA49776529C14A6104B2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x5B0 SWAP2 SWAP1 PUSH2 0x64C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x5E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x62C JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x610 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x5E6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x606 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x69D JUMPI PUSH2 0x69D PUSH2 0x65F JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x6CF JUMPI PUSH2 0x6CF PUSH2 0x65F JUMP JUMPDEST PUSH2 0x6E2 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x675 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x6F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x727 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x744 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x750 DUP6 DUP3 DUP7 ADD PUSH2 0x6A5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x773 JUMPI PUSH2 0x773 PUSH2 0x65F JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x78E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x7A3 PUSH2 0x79E DUP4 PUSH2 0x75A JUMP JUMPDEST PUSH2 0x675 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x7C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x7DD JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x7C6 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81E DUP7 DUP4 DUP8 ADD PUSH2 0x77D JUMP JUMPDEST SWAP4 POP PUSH1 0x20 SWAP2 POP DUP2 DUP6 ADD CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x835 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x846 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x854 PUSH2 0x79E DUP3 PUSH2 0x75A JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP10 DUP4 GT ISZERO PUSH2 0x873 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP5 ADD JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8AB JUMPI DUP1 CALLDATALOAD DUP7 DUP2 GT ISZERO PUSH2 0x88F JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x89D DUP13 DUP10 DUP4 DUP10 ADD ADD PUSH2 0x6A5 JUMP JUMPDEST DUP5 MSTORE POP SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x877 JUMP JUMPDEST POP DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x8E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8F0 DUP5 DUP3 DUP6 ADD PUSH2 0x77D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x94D JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x93B DUP6 DUP4 MLOAD PUSH2 0x606 JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x91F JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x96C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x9AD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x373 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2CA JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x9F4 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA13 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xA00 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xA34 JUMPI PUSH2 0xA34 PUSH2 0x65F JUMP JUMPDEST PUSH2 0xA48 DUP2 PUSH2 0xA42 DUP5 SLOAD PUSH2 0x999 JUMP JUMPDEST DUP5 PUSH2 0x9CD JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xA7D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0xA65 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xAAC JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0xA8D JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0xACA JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x21A33BB2A35CF49E9CACC9E5F6FC59ED5ADB67F158C28C 0xA6 PUSH8 0xDDA278F4E4106473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"652:622:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5148:245:2;;;;;;;;;;-1:-1:-1;5148:245:2;;;;;:::i;:::-;;:::i;:::-;;;470:14:51;;463:22;445:41;;433:2;418:18;5148:245:2;;;;;;;;1077:156;;;;;;;;;;-1:-1:-1;1077:156:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1200:92:4:-;;;;;;;;;;;;;:::i;:::-;;2206:232:2;;;;;;:::i;:::-;;:::i;623:85:4:-;;;;;;;;;;-1:-1:-1;669:7:4;695:6;623:85;;-1:-1:-1;;;;;695:6:4;;;2817:51:51;;2805:2;2790:18;623:85:4;2671:203:51;2956:763:2;;;;;;:::i;:::-;;:::i;1283:458::-;;;;;;;;;;-1:-1:-1;1283:458:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1441:223:4:-;;;;;;;;;;-1:-1:-1;1441:223:4;;;;;:::i;:::-;;:::i;5148:245:2:-;5264:4;-1:-1:-1;;;;;;5299:35:2;;-1:-1:-1;;;5299:35:2;;:87;;-1:-1:-1;;;;;;;;;;937:40:42;;;5350:36:2;5280:106;5148:245;-1:-1:-1;;5148:245:2:o;1077:156::-;1163:22;1209:17;1218:7;1209:8;:17::i;1200:92:4:-;827:13;:11;:13::i;:::-;1264:21:::1;1282:1;1264:9;:21::i;:::-;1200:92::o:0;2206:232:2:-;827:13:4;:11;:13::i;:::-;2342:9:2::1;:14:::0;2338:55:::1;;2365:28;;-1:-1:-1::0;;;2365:28:2::1;;;;;;;;;;;2338:55;2403:28;2412:7;2421:9;2403:8;:28::i;:::-;2206:232:::0;;:::o;2956:763::-;827:13:4;:11;:13::i;:::-;3194:9:2::1;:14:::0;3190:55:::1;;3217:28;;-1:-1:-1::0;;;3217:28:2::1;;;;;;;;;;;3190:55;3279:10;:17;3260:8;:15;:36;3256:112;;3319:38;;-1:-1:-1::0;;;3319:38:2::1;;;;;;;;;;;3256:112;3382:8;:15;3401:1;3382:20:::0;3378:92:::1;;3425:34;;-1:-1:-1::0;;;3425:34:2::1;;;;;;;;;;;3378:92;3485:9;3480:233;3504:8;:15;3500:1;:19;3480:233;;;3537:36;3546:8;3555:1;3546:11;;;;;;;;:::i;:::-;;;;;;;3559:10;3570:1;3559:13;;;;;;;;:::i;:::-;;;;;;;3537:8;:36::i;:::-;3685:3;;3480:233;;;;2956:763:::0;;:::o;1283:458::-;1384:25;1446:8;:15;-1:-1:-1;;;;;1434:28:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1421:41;;1478:9;1473:234;1497:8;:15;1493:1;:19;1473:234;;;1546:21;1555:8;1564:1;1555:11;;;;;;;;:::i;:::-;;;;;;;1546:8;:21::i;:::-;1530:10;1541:1;1530:13;;;;;;;;:::i;:::-;;;;;;;;;;:37;1679:3;;1473:234;;;;1283:458;;;:::o;1441:223:4:-;827:13;:11;:13::i;:::-;-1:-1:-1;;;;;1542:22:4;::::1;1521:107;;;::::0;-1:-1:-1;;;1521:107:4;;6879:2:51;1521:107:4::1;::::0;::::1;6861:21:51::0;6918:2;6898:18;;;6891:30;6957:34;6937:18;;;6930:62;-1:-1:-1;;;7008:18:51;;;7001:36;7054:19;;1521:107:4::1;;;;;;;;;1638:19;1648:8;1638:9;:19::i;:::-;1441:223:::0;:::o;4215:143:2:-;4336:15;;;;:6;:15;;;;;4329:22;;4295;;4336:15;4329:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4215:143;;;:::o;1737:128:4:-;1811:10;1800:7;669;695:6;-1:-1:-1;;;;;695:6:4;;623:85;1800:7;-1:-1:-1;;;;;1800:21:4;;1792:66;;;;-1:-1:-1;;;1792:66:4;;7671:2:51;1792:66:4;;;7653:21:51;;;7690:18;;;7683:30;7749:34;7729:18;;;7722:62;7801:18;;1792:66:4;7469:356:51;2004:235:4;669:7;695:6;-1:-1:-1;;;;;2072:19:4;;;695:6;;2072:19;2068:165;;2107:16;2126:6;;-1:-1:-1;;;;;2146:17:4;;;-1:-1:-1;;;;;;2146:17:4;;;;;;2182:40;;2126:6;;;;;;;2182:40;;2107:16;2182:40;2093:140;2004:235;:::o;4912:188:2:-;5020:15;;;;:6;:15;;;;;:27;5038:9;5020:15;:27;:::i;:::-;;5074:7;5062:31;5083:9;5062:31;;;;;;:::i;:::-;;;;;;;;4912:188;;:::o;14:286:51:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:51;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:51:o;497:180::-;556:6;609:2;597:9;588:7;584:23;580:32;577:52;;;625:1;622;615:12;577:52;-1:-1:-1;648:23:51;;497:180;-1:-1:-1;497:180:51:o;682:422::-;723:3;761:5;755:12;788:6;783:3;776:19;813:1;823:162;837:6;834:1;831:13;823:162;;;899:4;955:13;;;951:22;;945:29;927:11;;;923:20;;916:59;852:12;823:162;;;827:3;1030:1;1023:4;1014:6;1009:3;1005:16;1001:27;994:38;1093:4;1086:2;1082:7;1077:2;1069:6;1065:15;1061:29;1056:3;1052:39;1048:50;1041:57;;;682:422;;;;:::o;1109:217::-;1256:2;1245:9;1238:21;1219:4;1276:44;1316:2;1305:9;1301:18;1293:6;1276:44;:::i;1331:127::-;1392:10;1387:3;1383:20;1380:1;1373:31;1423:4;1420:1;1413:15;1447:4;1444:1;1437:15;1463:275;1534:2;1528:9;1599:2;1580:13;;-1:-1:-1;;1576:27:51;1564:40;;-1:-1:-1;;;;;1619:34:51;;1655:22;;;1616:62;1613:88;;;1681:18;;:::i;:::-;1717:2;1710:22;1463:275;;-1:-1:-1;1463:275:51:o;1743:530::-;1785:5;1838:3;1831:4;1823:6;1819:17;1815:27;1805:55;;1856:1;1853;1846:12;1805:55;1892:6;1879:20;-1:-1:-1;;;;;1914:2:51;1911:26;1908:52;;;1940:18;;:::i;:::-;1984:55;2027:2;2008:13;;-1:-1:-1;;2004:27:51;2033:4;2000:38;1984:55;:::i;:::-;2064:2;2055:7;2048:19;2110:3;2103:4;2098:2;2090:6;2086:15;2082:26;2079:35;2076:55;;;2127:1;2124;2117:12;2076:55;2192:2;2185:4;2177:6;2173:17;2166:4;2157:7;2153:18;2140:55;2240:1;2215:16;;;2233:4;2211:27;2204:38;;;;2219:7;1743:530;-1:-1:-1;;;1743:530:51:o;2278:388::-;2355:6;2363;2416:2;2404:9;2395:7;2391:23;2387:32;2384:52;;;2432:1;2429;2422:12;2384:52;2468:9;2455:23;2445:33;;2529:2;2518:9;2514:18;2501:32;-1:-1:-1;;;;;2548:6:51;2545:30;2542:50;;;2588:1;2585;2578:12;2542:50;2611:49;2652:7;2643:6;2632:9;2628:22;2611:49;:::i;:::-;2601:59;;;2278:388;;;;;:::o;2879:183::-;2939:4;-1:-1:-1;;;;;2964:6:51;2961:30;2958:56;;;2994:18;;:::i;:::-;-1:-1:-1;3039:1:51;3035:14;3051:4;3031:25;;2879:183::o;3067:662::-;3121:5;3174:3;3167:4;3159:6;3155:17;3151:27;3141:55;;3192:1;3189;3182:12;3141:55;3228:6;3215:20;3254:4;3278:60;3294:43;3334:2;3294:43;:::i;:::-;3278:60;:::i;:::-;3372:15;;;3458:1;3454:10;;;;3442:23;;3438:32;;;3403:12;;;;3482:15;;;3479:35;;;3510:1;3507;3500:12;3479:35;3546:2;3538:6;3534:15;3558:142;3574:6;3569:3;3566:15;3558:142;;;3640:17;;3628:30;;3678:12;;;;3591;;3558:142;;;-1:-1:-1;3718:5:51;3067:662;-1:-1:-1;;;;;;3067:662:51:o;3734:1357::-;3861:6;3869;3922:2;3910:9;3901:7;3897:23;3893:32;3890:52;;;3938:1;3935;3928:12;3890:52;3978:9;3965:23;-1:-1:-1;;;;;4048:2:51;4040:6;4037:14;4034:34;;;4064:1;4061;4054:12;4034:34;4087:61;4140:7;4131:6;4120:9;4116:22;4087:61;:::i;:::-;4077:71;;4167:2;4157:12;;4222:2;4211:9;4207:18;4194:32;4251:2;4241:8;4238:16;4235:36;;;4267:1;4264;4257:12;4235:36;4290:24;;4345:4;4337:13;;4333:27;-1:-1:-1;4323:55:51;;4374:1;4371;4364:12;4323:55;4410:2;4397:16;4433:60;4449:43;4489:2;4449:43;:::i;4433:60::-;4527:15;;;4609:1;4605:10;;;;4597:19;;4593:28;;;4558:12;;;;4633:19;;;4630:39;;;4665:1;4662;4655:12;4630:39;4697:2;4693;4689:11;4709:352;4725:6;4720:3;4717:15;4709:352;;;4811:3;4798:17;4847:2;4834:11;4831:19;4828:109;;;4891:1;4920:2;4916;4909:14;4828:109;4962:56;5010:7;5005:2;4991:11;4987:2;4983:20;4979:29;4962:56;:::i;:::-;4950:69;;-1:-1:-1;5039:12:51;;;;4742;;4709:352;;;4713:3;5080:5;5070:15;;;;;;;;3734:1357;;;;;:::o;5096:348::-;5180:6;5233:2;5221:9;5212:7;5208:23;5204:32;5201:52;;;5249:1;5246;5239:12;5201:52;5289:9;5276:23;-1:-1:-1;;;;;5314:6:51;5311:30;5308:50;;;5354:1;5351;5344:12;5308:50;5377:61;5430:7;5421:6;5410:9;5406:22;5377:61;:::i;:::-;5367:71;5096:348;-1:-1:-1;;;;5096:348:51:o;5449:800::-;5609:4;5638:2;5678;5667:9;5663:18;5708:2;5697:9;5690:21;5731:6;5766;5760:13;5797:6;5789;5782:22;5835:2;5824:9;5820:18;5813:25;;5897:2;5887:6;5884:1;5880:14;5869:9;5865:30;5861:39;5847:53;;5935:2;5927:6;5923:15;5956:1;5966:254;5980:6;5977:1;5974:13;5966:254;;;6073:2;6069:7;6057:9;6049:6;6045:22;6041:36;6036:3;6029:49;6101:39;6133:6;6124;6118:13;6101:39;:::i;:::-;6091:49;-1:-1:-1;6198:12:51;;;;6163:15;;;;6002:1;5995:9;5966:254;;;-1:-1:-1;6237:6:51;;5449:800;-1:-1:-1;;;;;;;5449:800:51:o;6254:286::-;6313:6;6366:2;6354:9;6345:7;6341:23;6337:32;6334:52;;;6382:1;6379;6372:12;6334:52;6408:23;;-1:-1:-1;;;;;6460:31:51;;6450:42;;6440:70;;6506:1;6503;6496:12;6545:127;6606:10;6601:3;6597:20;6594:1;6587:31;6637:4;6634:1;6627:15;6661:4;6658:1;6651:15;7084:380;7163:1;7159:12;;;;7206;;;7227:61;;7281:4;7273:6;7269:17;7259:27;;7227:61;7334:2;7326:6;7323:14;7303:18;7300:38;7297:161;;7380:10;7375:3;7371:20;7368:1;7361:31;7415:4;7412:1;7405:15;7443:4;7440:1;7433:15;7955:544;8056:2;8051:3;8048:11;8045:448;;;8092:1;8117:5;8113:2;8106:17;8162:4;8158:2;8148:19;8232:2;8220:10;8216:19;8213:1;8209:27;8203:4;8199:38;8268:4;8256:10;8253:20;8250:47;;;-1:-1:-1;8291:4:51;8250:47;8346:2;8341:3;8337:12;8334:1;8330:20;8324:4;8320:31;8310:41;;8401:82;8419:2;8412:5;8409:13;8401:82;;;8464:17;;;8445:1;8434:13;8401:82;;;8405:3;;;7955:544;;;:::o;8675:1348::-;8799:3;8793:10;-1:-1:-1;;;;;8818:6:51;8815:30;8812:56;;;8848:18;;:::i;:::-;8877:96;8966:6;8926:38;8958:4;8952:11;8926:38;:::i;:::-;8920:4;8877:96;:::i;:::-;9028:4;;9092:2;9081:14;;9109:1;9104:662;;;;9810:1;9827:6;9824:89;;;-1:-1:-1;9879:19:51;;;9873:26;9824:89;-1:-1:-1;;8632:1:51;8628:11;;;8624:24;8620:29;8610:40;8656:1;8652:11;;;8607:57;9926:81;;9074:943;;9104:662;7902:1;7895:14;;;7939:4;7926:18;;-1:-1:-1;;9140:20:51;;;9257:236;9271:7;9268:1;9265:14;9257:236;;;9360:19;;;9354:26;9339:42;;9452:27;;;;9420:1;9408:14;;;;9287:19;;9257:236;;;9261:3;9521:6;9512:7;9509:19;9506:201;;;9582:19;;;9576:26;-1:-1:-1;;9665:1:51;9661:14;;;9677:3;9657:24;9653:37;9649:42;9634:58;9619:74;;9506:201;-1:-1:-1;;;;;9753:1:51;9737:14;;;9733:22;9720:36;;-1:-1:-1;8675:1348:51:o"},"methodIdentifiers":{"getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_MsgValueDisallowed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Fabian Vogelsteller <fabian@lukso.network>\",\"details\":\"ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time. It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\",\"errors\":{\"ERC725Y_DataKeysValuesEmptyArray()\":[{\"details\":\"Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\"}],\"ERC725Y_DataKeysValuesLengthMismatch()\":[{\"details\":\"Reverts when there is not the same number of elements in the `datakeys` and `dataValues` array parameters provided when calling the {setDataBatch} function.\"}],\"ERC725Y_MsgValueDisallowed()\":[{\"details\":\"Reverts when sending value to the {setData} or {setDataBatch} function.\"}]},\"events\":{\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:requirements\":\"- `initialOwner` CANNOT be the zero address.\",\"details\":\"Deploy a new ERC725Y contract with the provided `initialOwner` as the contract {owner}.\",\"params\":{\"initialOwner\":\"the owner of the contract.\"}},\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setData(bytes32,bytes)\":{\"custom:events\":\"{DataChanged} event.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner}.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\",\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"custom:events\":\"{DataChanged} event **for each data key/value pair set**.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner} of the contract.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\",\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Deployable implementation with `constructor` of ERC725Y, a generic data key/value store.\",\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Deploying an ERC725Y smart contract and setting address `initialOwner` as the contract owner.\"},\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@erc725/smart-contracts/contracts/ERC725Y.sol\":\"ERC725Y\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/ERC725Y.sol\":{\"keccak256\":\"0xeab1c553ab3ef1d83b99d2d93dacbb03af8ef43eca7df4ac91cdf5b15882abcc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://492663e0fedaea5fc7f008ba780d160e290fa4bd455f3af78e456d2188835533\",\"dweb:/ipfs/QmSoMLfrXAjHnTzBerxDiZ5X9wq6RPfSpvqUJ3brKS4Y4s\"]},\"@erc725/smart-contracts/contracts/ERC725YCore.sol\":{\"keccak256\":\"0x54b779c764317ccecb181608112ff7440bb28ef8c0770e7340bc5cac4fc7d0f9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cacac6f06bde5d7cd9852e45ef2baa949dc21a89b3224194bdb1490857cfb08b\",\"dweb:/ipfs/QmPHnXHiB65UZPk7thKvW2C1DpxCJ2UeBsj7u78r2HLTJG\"]},\"@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xb198a56711fbe79cce967068f9c7f41760cee018b9ce330a82e8cca8ed7909a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5108bd75251da5980d5021cb6114d7d706eaa82d269fa96adb40709d440f683\",\"dweb:/ipfs/QmdWj75HZYdJLahnmiPEAshFjempzGR7hjj5gGi9LSqnqj\"]},\"@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0x8b5760e40f04b9ec9de9339136a481fb3cd4fe29f5528fa6756320cd256d58fb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://28211f3a6bb2c6bf3d7dbb855d9eb46099ecc132213688e550ad314c619e8bf8\",\"dweb:/ipfs/QmUcuXAELqMDFmSxKWbhiBmuEKzw92h7U1ev3pgeDX4xm7\"]},\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@erc725/smart-contracts/contracts/ERC725YCore.sol":{"ERC725YCore":{"abi":[{"inputs":[],"name":"ERC725Y_DataKeysValuesEmptyArray","type":"error"},{"inputs":[],"name":"ERC725Y_DataKeysValuesLengthMismatch","type":"error"},{"inputs":[],"name":"ERC725Y_MsgValueDisallowed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_MsgValueDisallowed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Fabian Vogelsteller <fabian@lukso.network>\",\"details\":\"ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time. It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\",\"errors\":{\"ERC725Y_DataKeysValuesEmptyArray()\":[{\"details\":\"Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\"}],\"ERC725Y_DataKeysValuesLengthMismatch()\":[{\"details\":\"Reverts when there is not the same number of elements in the `datakeys` and `dataValues` array parameters provided when calling the {setDataBatch} function.\"}],\"ERC725Y_MsgValueDisallowed()\":[{\"details\":\"Reverts when sending value to the {setData} or {setDataBatch} function.\"}]},\"events\":{\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}}},\"kind\":\"dev\",\"methods\":{\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setData(bytes32,bytes)\":{\"custom:events\":\"{DataChanged} event.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner}.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\",\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"custom:events\":\"{DataChanged} event **for each data key/value pair set**.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner} of the contract.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\",\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"_store\":{\"details\":\"Map `bytes32` data keys to their `bytes` data values.\"}},\"title\":\"Core implementation of ERC725Y sub-standard, a general data key/value store.\",\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@erc725/smart-contracts/contracts/ERC725YCore.sol\":\"ERC725YCore\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/ERC725YCore.sol\":{\"keccak256\":\"0x54b779c764317ccecb181608112ff7440bb28ef8c0770e7340bc5cac4fc7d0f9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cacac6f06bde5d7cd9852e45ef2baa949dc21a89b3224194bdb1490857cfb08b\",\"dweb:/ipfs/QmPHnXHiB65UZPk7thKvW2C1DpxCJ2UeBsj7u78r2HLTJG\"]},\"@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xb198a56711fbe79cce967068f9c7f41760cee018b9ce330a82e8cca8ed7909a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5108bd75251da5980d5021cb6114d7d706eaa82d269fa96adb40709d440f683\",\"dweb:/ipfs/QmdWj75HZYdJLahnmiPEAshFjempzGR7hjj5gGi9LSqnqj\"]},\"@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0x8b5760e40f04b9ec9de9339136a481fb3cd4fe29f5528fa6756320cd256d58fb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://28211f3a6bb2c6bf3d7dbb855d9eb46099ecc132213688e550ad314c619e8bf8\",\"dweb:/ipfs/QmUcuXAELqMDFmSxKWbhiBmuEKzw92h7U1ev3pgeDX4xm7\"]},\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol":{"OwnableUnset":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"modified version of OpenZeppelin implementation, where: - _setOwner(address) function is internal, so this function can be used in constructor of contracts implementation (instead of using transferOwnership(address) - the contract does not inherit from Context contract\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"OwnableUnset\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":\"OwnableUnset\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xb198a56711fbe79cce967068f9c7f41760cee018b9ce330a82e8cca8ed7909a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5108bd75251da5980d5021cb6114d7d706eaa82d269fa96adb40709d440f683\",\"dweb:/ipfs/QmdWj75HZYdJLahnmiPEAshFjempzGR7hjj5gGi9LSqnqj\"]}},\"version\":1}"}},"@erc725/smart-contracts/contracts/interfaces/IERC725X.sol":{"IERC725X":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"operationType","type":"uint256"},{"indexed":true,"internalType":"address","name":"contractAddress","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"salt","type":"bytes32"}],"name":"ContractCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"operationType","type":"uint256"},{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"Executed","type":"event"},{"inputs":[{"internalType":"uint256","name":"operationType","type":"uint256"},{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"execute","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"operationsType","type":"uint256[]"},{"internalType":"address[]","name":"targets","type":"address[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes[]","name":"datas","type":"bytes[]"}],"name":"executeBatch","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"execute(uint256,address,uint256,bytes)":"44c028fe","executeBatch(uint256[],address[],uint256[],bytes[])":"31858452","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"operationType\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"ContractCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"operationType\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"operationType\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"operationsType\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"datas\",\"type\":\"bytes[]\"}],\"name\":\"executeBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC725X provides the ability to call arbitrary functions on any other smart contract (including itself). It allows to use different type of message calls to interact with addresses such as `call`, `staticcall` and `delegatecall`. It also allows to deploy and create new contracts via both the `create` and `create2` opcodes. This is the basis for a smart contract based account system, but could also be used as a proxy account system.\",\"events\":{\"ContractCreated(uint256,address,uint256,bytes32)\":{\"details\":\"Emitted when a new contract was created and deployed.\",\"params\":{\"contractAddress\":\"The created contract address.\",\"operationType\":\"The opcode used to deploy the contract (`CREATE` or `CREATE2`).\",\"salt\":\"The salt used to deterministically deploy the contract (`CREATE2` only). If `CREATE` opcode is used, the salt value will be `bytes32(0)`.\",\"value\":\"The amount of native tokens (in Wei) sent to fund the created contract on deployment.\"}},\"Executed(uint256,address,uint256,bytes4)\":{\"details\":\"Emitted when calling an address `target` (EOA or contract) with `value`.\",\"params\":{\"operationType\":\"The low-level call opcode used to call the `target` address (`CALL`, `STATICALL` or `DELEGATECALL`).\",\"selector\":\"The first 4 bytes (= function selector) of the data sent with the call.\",\"target\":\"The address to call. `target` will be unused if a contract is created (operation types 1 and 2).\",\"value\":\"The amount of native tokens transferred along the call (in Wei).\"}}},\"kind\":\"dev\",\"methods\":{\"execute(uint256,address,uint256,bytes)\":{\"details\":\"Generic executor function to: - send native tokens to any address. - interact with any contract by passing an abi-encoded function call in the `data` parameter. - deploy a contract by providing its creation bytecode in the `data` parameter.\",\"params\":{\"data\":\"The call data, or the creation bytecode of the contract to deploy if `operationType` is `1` or `2`.\",\"operationType\":\"The operation type used: CALL = 0; CREATE = 1; CREATE2 = 2; STATICCALL = 3; DELEGATECALL = 4\",\"target\":\"The address of the EOA or smart contract.  (unused if a contract is created via operation type 1 or 2)\",\"value\":\"The amount of native tokens to transfer (in Wei)\"}},\"executeBatch(uint256[],address[],uint256[],bytes[])\":{\"details\":\"Batch executor function that behaves the same as {execute} but allowing multiple operations in the same transaction.\",\"params\":{\"datas\":\"The list of calldata, or the creation bytecode of the contract to deploy if `operationType` is `1` or `2`.\",\"operationsType\":\"The list of operations type used: `CALL = 0`; `CREATE = 1`; `CREATE2 = 2`; `STATICCALL = 3`; `DELEGATECALL = 4`\",\"targets\":\"The list of addresses to call. `targets` will be unused if a contract is created (operation types 1 and 2).\",\"values\":\"The list of native token amounts to transfer (in Wei).\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"The interface for the ERC725X sub-standard, a generic executor.\",\"version\":1},\"userdoc\":{\"events\":{\"ContractCreated(uint256,address,uint256,bytes32)\":{\"notice\":\"Deployed new contract at address `contractAddress` and funded with `value` wei (deployed using opcode: `operationType`).\"},\"Executed(uint256,address,uint256,bytes4)\":{\"notice\":\"Called address `target` using `operationType` with `value` wei and `data`.\"}},\"kind\":\"user\",\"methods\":{\"execute(uint256,address,uint256,bytes)\":{\"notice\":\"Calling address `target` using `operationType`, transferring `value` wei and data: `data`.\"},\"executeBatch(uint256[],address[],uint256[],bytes[])\":{\"notice\":\"Calling multiple addresses `targets` using `operationsType`, transferring `values` wei and data: `datas`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725X.sol\":\"IERC725X\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725X.sol\":{\"keccak256\":\"0x2864f62b1f5a40a79b50c438d737ea5cb15d36265fbc7239dcfb62f494de8278\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://6b5b237cdc86b254b2c27e015f0a402f7f38ef36bbb98ca45636f1cee781264e\",\"dweb:/ipfs/QmbzeRMW8R5kRA4d6JAC596oSp78et64iwiYM8gJUaBFNr\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol":{"IERC725Y":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC725Y provides the ability to set arbitrary data key/value pairs that can be changed over time. It is intended to standardise certain data key/value pairs to allow automated read and writes from/to the contract storage.\",\"events\":{\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}}},\"kind\":\"dev\",\"methods\":{\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"setData(bytes32,bytes)\":{\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"The interface for ERC725Y sub-standard, a generic data key/value store.\",\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":\"IERC725Y\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp0-contracts/contracts/ILSP0ERC725Account.sol":{"ILSP0ERC725Account":{"abi":[{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"batchCalls","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"batchCalls(bytes[])":"6963d438"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"batchCalls\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Fabian Vogelsteller <fabian@lukso.network>, Jean Cavallera (CJ42)\",\"kind\":\"dev\",\"methods\":{\"batchCalls(bytes[])\":{\"details\":\"Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\",\"params\":{\"data\":\"An array of ABI encoded function calls to be called on the contract.\"},\"returns\":{\"results\":\"An array of abi-encoded data returned by the functions executed.\"}}},\"title\":\"Interface of the [LSP-0-ERC725Account] standard, an account based smart contract that represents an identity on-chain.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"batchCalls(bytes[])\":{\"notice\":\"Executing the following batch of abi-encoded function calls on the contract: `data`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp0-contracts/contracts/ILSP0ERC725Account.sol\":\"ILSP0ERC725Account\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@lukso/lsp0-contracts/contracts/ILSP0ERC725Account.sol\":{\"keccak256\":\"0x8a8baf99256d7af9389700213dff72587e3a7083da9f25fbe20940244da58a8e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b203d51255de422125cfbe57c6acd8f8730d1df430b8cc838b8773e64e952f6d\",\"dweb:/ipfs/QmNMjDiUrgMAaRWM3PjZkRTQSgTQS1GRinwBDPESbvW2ER\"]}},\"version\":1}"}},"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol":{"ILSP1UniversalReceiver":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"typeId","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"receivedData","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"returnedValue","type":"bytes"}],"name":"UniversalReceiver","type":"event"},{"inputs":[{"internalType":"bytes32","name":"typeId","type":"bytes32"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"universalReceiver","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"universalReceiver(bytes32,bytes)":"6bb56a14"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"typeId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"receivedData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"returnedValue\",\"type\":\"bytes\"}],\"name\":\"UniversalReceiver\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"typeId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"universalReceiver\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"LSP1UniversalReceiver allows to receive arbitrary messages and to be informed when assets are sent or received.\",\"events\":{\"UniversalReceiver(address,uint256,bytes32,bytes,bytes)\":{\"details\":\"Emitted when the {universalReceiver} function was called with a specific `typeId` and some `receivedData`\",\"params\":{\"from\":\"The address of the EOA or smart contract that called the {universalReceiver(...)} function.\",\"receivedData\":\"Any arbitrary data that was sent to the {universalReceiver(...)} function.\",\"returnedValue\":\"The value returned by the {universalReceiver(...)} function.\",\"typeId\":\"A `bytes32` unique identifier (= _\\\"hook\\\"_)that describe the type of notification, information or transaction received by the contract. Can be related to a specific standard or a hook.\",\"value\":\"The amount sent to the {universalReceiver(...)} function.\"}}},\"kind\":\"dev\",\"methods\":{\"universalReceiver(bytes32,bytes)\":{\"custom:events\":\"{UniversalReceiver} event.\",\"details\":\"Generic function that can be used to notify the contract about specific incoming transactions or events like asset transfers, vault transfers, etc. Allows for custom on-chain and off-chain reactions based on the `typeId` and `data`.\",\"params\":{\"data\":\"The arbitrary data received with the call.\",\"typeId\":\"The hash of a specific standard or a hook.\"}}},\"title\":\"Interface of the LSP1 - Universal Receiver standard, an entry function for a contract to receive arbitrary information.\",\"version\":1},\"userdoc\":{\"events\":{\"UniversalReceiver(address,uint256,bytes32,bytes,bytes)\":{\"notice\":\"Address `from` called the `universalReceiver(...)` function while sending `value` LYX. Notification type (typeId): `typeId` - Data received: `receivedData`.\"}},\"kind\":\"user\",\"methods\":{\"universalReceiver(bytes32,bytes)\":{\"notice\":\"Reacted on received notification with `typeId` & `data`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol\":\"ILSP1UniversalReceiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x5b8764a678dc9d6673eafa8ad0ee6053cdea30acb58015bdf9c93f9f1788b49b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e26dcf5d66120b7a0895ddcaec92207e17c63344fca885d2b7e3fe953ec027c\",\"dweb:/ipfs/QmetAuz9etfz9BG9oPJCwMthnhfd8XvZYLBmMfrPNUm3qV\"]}},\"version\":1}"}},"@lukso/lsp1-contracts/contracts/LSP1Utils.sol":{"LSP1Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220984520ab60f00fc9799232e01a0541762a41ba9837979a96ef74c32c11d56c1564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 GASLIMIT KECCAK256 0xAB PUSH1 0xF0 0xF 0xC9 PUSH26 0x9232E01A0541762A41BA9837979A96EF74C32C11D56C1564736F PUSH13 0x63430008140033000000000000 ","sourceMap":"877:2519:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;877:2519:18;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220984520ab60f00fc9799232e01a0541762a41ba9837979a96ef74c32c11d56c1564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 GASLIMIT KECCAK256 0xAB PUSH1 0xF0 0xF 0xC9 PUSH26 0x9232E01A0541762A41BA9837979A96EF74C32C11D56C1564736F PUSH13 0x63430008140033000000000000 ","sourceMap":"877:2519:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\",\"details\":\"LSP1Utils is a library of utility functions that can be used to notify the `universalReceiver` function of a contract that implements LSP1 and retrieve informations related to LSP1 `typeId`. Based on LSP1 Universal Receiver standard.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"LSP1 Utility library.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp1-contracts/contracts/LSP1Utils.sol\":\"LSP1Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x5b8764a678dc9d6673eafa8ad0ee6053cdea30acb58015bdf9c93f9f1788b49b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e26dcf5d66120b7a0895ddcaec92207e17c63344fca885d2b7e3fe953ec027c\",\"dweb:/ipfs/QmetAuz9etfz9BG9oPJCwMthnhfd8XvZYLBmMfrPNUm3qV\"]},\"@lukso/lsp1-contracts/contracts/LSP1Constants.sol\":{\"keccak256\":\"0x0f87fc38243fc70316e22814f5a79d9c0770a39f64077cbc6fb5fddfa1d4c23c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c7d83f054b71dfa5ca48a9a811e6a985ff6b38a9e5f4c220ea2ec3a322cce7cf\",\"dweb:/ipfs/QmaehpHpqc5dtRCm9BoU8vCY59AeEnmGvmmwPirVr47oGp\"]},\"@lukso/lsp1-contracts/contracts/LSP1Utils.sol\":{\"keccak256\":\"0xa81bf1910c3b56b43bf58d0be2105c434ed3b65cfb3674e282b5aba3fd35afb0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://374e7bef39522d65cf8e45c365178eb54d159b9267d0c2a2b97dfea10e52d41f\",\"dweb:/ipfs/QmfVYVnVSTRVAAifFSyFk8icePgw3eeqpjAKWAwfHMu6vX\"]},\"@lukso/lsp2-contracts/contracts/LSP2Utils.sol\":{\"keccak256\":\"0x86ce8a85d12c79b76db5413b05b9bff16cd865b395efdc0e85b06b3b5e17219b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7ebb6d1152f88b459b9e8fc3ef6361a9fb9d03bfa994148e6b125a2ee4025487\",\"dweb:/ipfs/QmX18bCecAtrjqKTyCPqRrUuvVYSW1XZZJUgvjfYnqfmEH\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol":{"LSP17Extendable":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the `fallback(...)` logic according to LSP17 - Contract Extension standard. This module can be inherited to extend the functionality of the parent contract when calling a function that doesn't exist on the parent contract via forwarding the call to an extension mapped to the function selector being called, set originally by the parent contract\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"title\":\"Module to add more functionalities to a contract using extensions.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol\":\"LSP17Extendable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol\":{\"keccak256\":\"0x6d4bb208587872ad563fef31655c44f7de03baa5b4a513910c0003aea0c04036\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://880c3b21e2090a14e7bba94ac5c8d4633e8a81d93c6f619454167a01dcc866d8\",\"dweb:/ipfs/QmZp6YVM4Eor5XtuXXqGRaPAJ3u5KCmLwuNRAGf4JY7sK1\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol\":{\"keccak256\":\"0x75a0159f76a3c5bf26b13aa404aca2f588ea41928eb1483683e29d2031fe5abf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f1b93e7eb5a88a2f42a9dfa061ca5e93e7650cd9114010faa18faf0a5508f579\",\"dweb:/ipfs/QmXmLhf1ejsF7G1FZnvpTBRS9oQ9ZTuqCBRT1im3vAuUYW\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol\":{\"keccak256\":\"0x5983e916a4cb604a45b585d7f745f5ac8bf69ef51fbc78cf8e70408e29e008c2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e1e9a7b8dc210030d35b4e2c3dbb7107f51c063256f7e6120997ed638f033db1\",\"dweb:/ipfs/QmRQgkaDnC9sAb9mZJtVgBsAR1xfmcTA2erCVUiyszy15o\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp17contractextension-contracts/contracts/LSP17Extension.sol":{"LSP17Extension":{"abi":[{"inputs":[],"name":"VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"VERSION()":"ffa1ad74","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the extension logic according to LSP17ContractExtension. This module can be inherited to provide context of the msg variable related to the extendable contract\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"title\":\"Module to create a contract that can act as an extension.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"VERSION()\":{\"notice\":\"Contract version.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp17contractextension-contracts/contracts/LSP17Extension.sol\":\"LSP17Extension\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol\":{\"keccak256\":\"0x6d4bb208587872ad563fef31655c44f7de03baa5b4a513910c0003aea0c04036\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://880c3b21e2090a14e7bba94ac5c8d4633e8a81d93c6f619454167a01dcc866d8\",\"dweb:/ipfs/QmZp6YVM4Eor5XtuXXqGRaPAJ3u5KCmLwuNRAGf4JY7sK1\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Extension.sol\":{\"keccak256\":\"0xf7c32664318c67cc6e8da0c4fa5e0ffc0fc5d6f3f61e246ec76d4efb683f8f5d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f23d68359b81686c6fe7e31e1a9d6f88d9686ed6c1e4089154d0223d2c131677\",\"dweb:/ipfs/QmP7ybjTzGjYokLV8Fvr66P9MLbLD4WkEwYMr3j4DrU59c\"]},\"@lukso/lsp17contractextension-contracts/contracts/Version.sol\":{\"keccak256\":\"0xa9f8166be1961869bdcda4d7f87a71dd35c7159b2d8255bb89be21a6038664c8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3466bfba099b86dfbfa61ddbffec7167d29bb23017231ff6b079502f966caee4\",\"dweb:/ipfs/QmfUDAk1vU28XE2kX9dpSz6hzGB3aRsJ43zXjgNzR6a1du\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp17contractextension-contracts/contracts/Version.sol":{"Version":{"abi":[{"inputs":[],"name":"VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"VERSION()":"ffa1ad74"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"VERSION\":{\"details\":\"Get the version of the contract.\",\"return\":\"The version of the the contract.\",\"returns\":{\"_0\":\"The version of the the contract.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"VERSION()\":{\"notice\":\"Contract version.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp17contractextension-contracts/contracts/Version.sol\":\"Version\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@lukso/lsp17contractextension-contracts/contracts/Version.sol\":{\"keccak256\":\"0xa9f8166be1961869bdcda4d7f87a71dd35c7159b2d8255bb89be21a6038664c8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3466bfba099b86dfbfa61ddbffec7167d29bb23017231ff6b079502f966caee4\",\"dweb:/ipfs/QmfUDAk1vU28XE2kX9dpSz6hzGB3aRsJ43zXjgNzR6a1du\"]}},\"version\":1}"}},"@lukso/lsp2-contracts/contracts/LSP2Utils.sol":{"LSP2Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122029e20b3e9f2bce2e8b2100e3cc92511d20a7d2f86c5d8b8ff2a6634ac34ab22064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 0xE2 SIGNEXTEND RETURNDATACOPY SWAP16 0x2B 0xCE 0x2E DUP12 0x21 STOP 0xE3 0xCC SWAP3 MLOAD SAR KECCAK256 0xA7 0xD2 0xF8 PUSH13 0x5D8B8FF2A6634AC34AB2206473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"482:15762:24:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:15762:24;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122029e20b3e9f2bce2e8b2100e3cc92511d20a7d2f86c5d8b8ff2a6634ac34ab22064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 0xE2 SIGNEXTEND RETURNDATACOPY SWAP16 0x2B 0xCE 0x2E DUP12 0x21 STOP 0xE3 0xCC SWAP3 MLOAD SAR KECCAK256 0xA7 0xD2 0xF8 PUSH13 0x5D8B8FF2A6634AC34AB2206473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"482:15762:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Jean Cavallera <CJ42>, Yamen Merhi <YamenMerhi>, Daniel Afteni <B00ste>\",\"details\":\"LSP2Utils is a library of utility functions that can be used to encode data key of different key type defined on the LSP2 standard. Based on LSP2 ERC725Y JSON Schema standard.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"LSP2 Utility library.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp2-contracts/contracts/LSP2Utils.sol\":\"LSP2Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp2-contracts/contracts/LSP2Utils.sol\":{\"keccak256\":\"0x86ce8a85d12c79b76db5413b05b9bff16cd865b395efdc0e85b06b3b5e17219b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7ebb6d1152f88b459b9e8fc3ef6361a9fb9d03bfa994148e6b125a2ee4025487\",\"dweb:/ipfs/QmX18bCecAtrjqKTyCPqRrUuvVYSW1XZZJUgvjfYnqfmEH\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol":{"LSP4DigitalAssetMetadata":{"abi":[{"inputs":[],"name":"ERC725Y_DataKeysValuesEmptyArray","type":"error"},{"inputs":[],"name":"ERC725Y_DataKeysValuesLengthMismatch","type":"error"},{"inputs":[],"name":"ERC725Y_MsgValueDisallowed","type":"error"},{"inputs":[],"name":"LSP4TokenNameNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenSymbolNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenTypeNotEditable","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_MsgValueDisallowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenNameNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenSymbolNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenTypeNotEditable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Matthew Stevens\",\"details\":\"Standard Implementation of the LSP4 standard.\",\"errors\":{\"ERC725Y_DataKeysValuesEmptyArray()\":[{\"details\":\"Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\"}],\"ERC725Y_DataKeysValuesLengthMismatch()\":[{\"details\":\"Reverts when there is not the same number of elements in the `datakeys` and `dataValues` array parameters provided when calling the {setDataBatch} function.\"}],\"ERC725Y_MsgValueDisallowed()\":[{\"details\":\"Reverts when sending value to the {setData} or {setDataBatch} function.\"}],\"LSP4TokenNameNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed / initialized. The `LSP4TokenName` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenSymbolNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed / initialized. The `LSP4TokenSymbol` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenTypeNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenType` after the digital asset contract has been deployed / initialized. The `LSP4TokenType` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor / initializer when the digital asset contract is being deployed / initialized.\"}]},\"events\":{\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"initialOwner_\":\"The owner of the token contract.\",\"lsp4TokenType_\":\"The type of token this digital asset contract represents (`0` = Token, `1` = NFT, `2` = Collection).\",\"name_\":\"The name of the token.\",\"symbol_\":\"The symbol of the token.\"}},\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setData(bytes32,bytes)\":{\"custom:events\":\"{DataChanged} event.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner}.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\",\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"custom:events\":\"{DataChanged} event **for each data key/value pair set**.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner} of the contract.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\",\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Implementation of a LSP4DigitalAssetMetadata contract that stores the **Token-Metadata** (`LSP4TokenName` and `LSP4TokenSymbol`) in its ERC725Y data store.\",\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Deploying a digital asset `name_` with the `symbol_` symbol.\"},\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol\":\"LSP4DigitalAssetMetadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/ERC725Y.sol\":{\"keccak256\":\"0xeab1c553ab3ef1d83b99d2d93dacbb03af8ef43eca7df4ac91cdf5b15882abcc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://492663e0fedaea5fc7f008ba780d160e290fa4bd455f3af78e456d2188835533\",\"dweb:/ipfs/QmSoMLfrXAjHnTzBerxDiZ5X9wq6RPfSpvqUJ3brKS4Y4s\"]},\"@erc725/smart-contracts/contracts/ERC725YCore.sol\":{\"keccak256\":\"0x54b779c764317ccecb181608112ff7440bb28ef8c0770e7340bc5cac4fc7d0f9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cacac6f06bde5d7cd9852e45ef2baa949dc21a89b3224194bdb1490857cfb08b\",\"dweb:/ipfs/QmPHnXHiB65UZPk7thKvW2C1DpxCJ2UeBsj7u78r2HLTJG\"]},\"@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xb198a56711fbe79cce967068f9c7f41760cee018b9ce330a82e8cca8ed7909a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5108bd75251da5980d5021cb6114d7d706eaa82d269fa96adb40709d440f683\",\"dweb:/ipfs/QmdWj75HZYdJLahnmiPEAshFjempzGR7hjj5gGi9LSqnqj\"]},\"@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0x8b5760e40f04b9ec9de9339136a481fb3cd4fe29f5528fa6756320cd256d58fb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://28211f3a6bb2c6bf3d7dbb855d9eb46099ecc132213688e550ad314c619e8bf8\",\"dweb:/ipfs/QmUcuXAELqMDFmSxKWbhiBmuEKzw92h7U1ev3pgeDX4xm7\"]},\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp4-contracts/contracts/LSP4Constants.sol\":{\"keccak256\":\"0xdf9b7c688d39a92cb3238136a9f56554245d5ae9b6568dcd6164d0e15c6f56c7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bb36a427cdfa0f394d2d78014f85152ab383499fc3c3d6285d4b801c656e7c3f\",\"dweb:/ipfs/QmZJehfeWKfHLyZLufhs9u4ZyVztGCUNWXzFgfZSU837vU\"]},\"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol\":{\"keccak256\":\"0xd120529845267176d7658eb3b610fd9412012ce58cfde05a42f7fcee1c371dce\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4e2919d97ff39ae203dc57f53a7ae6a4f1dfe9354e564744ee3752771687b796\",\"dweb:/ipfs/QmbNwNCDnLcD4jrboPJhAMXVEiVGbagBteXM5sVByZ8A1h\"]},\"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadataCore.sol\":{\"keccak256\":\"0xc442e52d34bb98acc1494675856b1f1d124af1375d8e23a9bfcc3b6c1865e1fc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://84254359ed929c1991136f9c3e934ddfa74cd85684de6c44cb70afa70d12f837\",\"dweb:/ipfs/QmWfmionUJJYyYDoeSQLGUHhou2sWxhWzwtU5GVjpumiSS\"]},\"@lukso/lsp4-contracts/contracts/LSP4Errors.sol\":{\"keccak256\":\"0x3db7fd252ed02ce27686141125c3d65d3ff682a32601e1e8611becd9357a57b5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5aded62a160ed7f9860996004d1656e8592b3f97d478d8597f8ad6afbe4f34b7\",\"dweb:/ipfs/QmcnmLVt8cmz1iRNaX5c6iNYckRgUXGz8YkjHW9T1KNB5A\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadataCore.sol":{"LSP4DigitalAssetMetadataCore":{"abi":[{"inputs":[],"name":"ERC725Y_DataKeysValuesEmptyArray","type":"error"},{"inputs":[],"name":"ERC725Y_DataKeysValuesLengthMismatch","type":"error"},{"inputs":[],"name":"ERC725Y_MsgValueDisallowed","type":"error"},{"inputs":[],"name":"LSP4TokenNameNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenSymbolNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenTypeNotEditable","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_MsgValueDisallowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenNameNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenSymbolNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenTypeNotEditable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Matthew Stevens\",\"details\":\"Standard Implementation of the LSP4 standard.\",\"errors\":{\"ERC725Y_DataKeysValuesEmptyArray()\":[{\"details\":\"Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\"}],\"ERC725Y_DataKeysValuesLengthMismatch()\":[{\"details\":\"Reverts when there is not the same number of elements in the `datakeys` and `dataValues` array parameters provided when calling the {setDataBatch} function.\"}],\"ERC725Y_MsgValueDisallowed()\":[{\"details\":\"Reverts when sending value to the {setData} or {setDataBatch} function.\"}],\"LSP4TokenNameNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed / initialized. The `LSP4TokenName` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenSymbolNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed / initialized. The `LSP4TokenSymbol` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenTypeNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenType` after the digital asset contract has been deployed / initialized. The `LSP4TokenType` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor / initializer when the digital asset contract is being deployed / initialized.\"}]},\"events\":{\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}}},\"kind\":\"dev\",\"methods\":{\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setData(bytes32,bytes)\":{\"custom:events\":\"{DataChanged} event.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner}.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\",\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"custom:events\":\"{DataChanged} event **for each data key/value pair set**.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner} of the contract.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\",\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Implementation of a LSP4DigitalAssetMetadata contract that stores the **Token-Metadata** (`LSP4TokenName` and `LSP4TokenSymbol`) in its ERC725Y data store.\",\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadataCore.sol\":\"LSP4DigitalAssetMetadataCore\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/ERC725YCore.sol\":{\"keccak256\":\"0x54b779c764317ccecb181608112ff7440bb28ef8c0770e7340bc5cac4fc7d0f9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cacac6f06bde5d7cd9852e45ef2baa949dc21a89b3224194bdb1490857cfb08b\",\"dweb:/ipfs/QmPHnXHiB65UZPk7thKvW2C1DpxCJ2UeBsj7u78r2HLTJG\"]},\"@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xb198a56711fbe79cce967068f9c7f41760cee018b9ce330a82e8cca8ed7909a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5108bd75251da5980d5021cb6114d7d706eaa82d269fa96adb40709d440f683\",\"dweb:/ipfs/QmdWj75HZYdJLahnmiPEAshFjempzGR7hjj5gGi9LSqnqj\"]},\"@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0x8b5760e40f04b9ec9de9339136a481fb3cd4fe29f5528fa6756320cd256d58fb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://28211f3a6bb2c6bf3d7dbb855d9eb46099ecc132213688e550ad314c619e8bf8\",\"dweb:/ipfs/QmUcuXAELqMDFmSxKWbhiBmuEKzw92h7U1ev3pgeDX4xm7\"]},\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp4-contracts/contracts/LSP4Constants.sol\":{\"keccak256\":\"0xdf9b7c688d39a92cb3238136a9f56554245d5ae9b6568dcd6164d0e15c6f56c7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bb36a427cdfa0f394d2d78014f85152ab383499fc3c3d6285d4b801c656e7c3f\",\"dweb:/ipfs/QmZJehfeWKfHLyZLufhs9u4ZyVztGCUNWXzFgfZSU837vU\"]},\"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadataCore.sol\":{\"keccak256\":\"0xc442e52d34bb98acc1494675856b1f1d124af1375d8e23a9bfcc3b6c1865e1fc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://84254359ed929c1991136f9c3e934ddfa74cd85684de6c44cb70afa70d12f837\",\"dweb:/ipfs/QmWfmionUJJYyYDoeSQLGUHhou2sWxhWzwtU5GVjpumiSS\"]},\"@lukso/lsp4-contracts/contracts/LSP4Errors.sol\":{\"keccak256\":\"0x3db7fd252ed02ce27686141125c3d65d3ff682a32601e1e8611becd9357a57b5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5aded62a160ed7f9860996004d1656e8592b3f97d478d8597f8ad6afbe4f34b7\",\"dweb:/ipfs/QmcnmLVt8cmz1iRNaX5c6iNYckRgUXGz8YkjHW9T1KNB5A\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp8-contracts/contracts/ILSP8IdentifiableDigitalAsset.sol":{"ILSP8IdentifiableDigitalAsset":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorAuthorizationChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"notified","type":"bool"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"TokenIdDataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"force","type":"bool"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"authorizeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"batchCalls","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"tokenIds","type":"bytes32[]"},{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatchForTokenIds","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getDataForTokenId","outputs":[{"internalType":"bytes","name":"dataValues","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"getOperatorsOf","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"isOperatorFor","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bool","name":"notify","type":"bool"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"revokeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"tokenIds","type":"bytes32[]"},{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatchForTokenIds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setDataForTokenId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"tokenIdsOf","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"tokenOwnerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bool","name":"force","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"from","type":"address[]"},{"internalType":"address[]","name":"to","type":"address[]"},{"internalType":"bytes32[]","name":"tokenId","type":"bytes32[]"},{"internalType":"bool[]","name":"force","type":"bool[]"},{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"transferBatch","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"authorizeOperator(address,bytes32,bytes)":"86a10ddd","balanceOf(address)":"70a08231","batchCalls(bytes[])":"6963d438","getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","getDataBatchForTokenIds(bytes32[],bytes32[])":"1d26fce6","getDataForTokenId(bytes32,bytes32)":"16e023b3","getOperatorsOf(bytes32)":"49a6078d","isOperatorFor(address,bytes32)":"2a3654a4","revokeOperator(address,bytes32,bool,bytes)":"db8c9663","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])":"be9f0e6f","setDataForTokenId(bytes32,bytes32,bytes)":"d6c1407c","supportsInterface(bytes4)":"01ffc9a7","tokenIdsOf(address)":"a3b261f2","tokenOwnerOf(bytes32)":"217b2270","totalSupply()":"18160ddd","transfer(address,address,bytes32,bool,bytes)":"511b6952","transferBatch(address[],address[],bytes32[],bool[],bytes[])":"7e87632c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorAuthorizationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"notified\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"TokenIdDataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"batchCalls\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"tokenIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatchForTokenIds\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getDataForTokenId\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValues\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"getOperatorsOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"notify\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"tokenIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatchForTokenIds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setDataForTokenId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokenIdsOf\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"tokenOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"tokenId\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool[]\",\"name\":\"force\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"transferBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}},\"OperatorAuthorizationChanged(address,address,bytes32,bytes)\":{\"details\":\"Emitted when `tokenOwner` enables `operator` to transfer or burn the `tokenId`.\",\"params\":{\"operator\":\"The address authorized as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` address has access on behalf of `tokenOwner`.\",\"tokenOwner\":\"The owner of the `tokenId`.\"}},\"OperatorRevoked(address,address,bytes32,bool,bytes)\":{\"details\":\"Emitted when `tokenOwner` disables `operator` to transfer or burn `tokenId` on its behalf.\",\"params\":{\"notified\":\"Bool indicating whether the operator has been notified or not\",\"operator\":\"The address revoked from the operator array ({getOperatorsOf}).\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` is revoked from operating on.\",\"tokenOwner\":\"The owner of the `tokenId`.\"}},\"TokenIdDataChanged(bytes32,bytes32,bytes)\":{\"details\":\"Emitted when setting data for `tokenId`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\",\"tokenId\":\"The tokenId which data is set for.\"}},\"Transfer(address,address,address,bytes32,bool,bytes)\":{\"details\":\"Emitted when `tokenId` token is transferred from the `from` to the `to` address.\",\"params\":{\"data\":\"Any additional data the caller included by the caller during the transfer, and sent in the hooks to the `from` and `to` addresses.\",\"force\":\"If the token transfer enforces the `to` recipient address to be a contract that implements the LSP1 standard or not.\",\"from\":\"The previous owner of the `tokenId`\",\"operator\":\"The address of operator that sent the `tokenId`\",\"to\":\"The new owner of `tokenId`\",\"tokenId\":\"The tokenId that was transferred\"}}},\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address,bytes32,bytes)\":{\"custom:events\":\"{OperatorAuthorizationChanged} event.\",\"custom:requirements\":\"- `tokenId` must exist. - caller MUST be the {tokenOwnerOf} `tokenId`. - the owner of a `tokenId` cannot grant itself as an `operator` (`operator` cannot be the calling address). - `operator` cannot be the zero address.\",\"details\":\"Allow an `operator` address to transfer or burn a specific `tokenId` on behalf of its token owner. See {isOperatorFor}. Notify the operator based on the LSP1-UniversalReceiver standard\",\"params\":{\"operator\":\"The address to authorize as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The token ID operator has access to.\"}},\"balanceOf(address)\":{\"details\":\"Get the number of token IDs owned by `tokenOwner`.\",\"params\":{\"tokenOwner\":\"The address to query     *\"},\"returns\":{\"_0\":\"The total number of token IDs that `tokenOwner` owns.\"}},\"batchCalls(bytes[])\":{\"details\":\"Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\",\"params\":{\"data\":\"An array of ABI encoded function calls to be called on the contract.\"},\"returns\":{\"results\":\"An array of abi-encoded data returned by the functions executed.\"}},\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"getDataBatchForTokenIds(bytes32[],bytes32[])\":{\"params\":{\"dataKeys\":\"An array of data keys corresponding to the token IDs.\",\"tokenIds\":\"An array of token IDs.\"},\"returns\":{\"dataValues\":\"An array of data values for each pair of `tokenId` and `dataKey`.\"}},\"getDataForTokenId(bytes32,bytes32)\":{\"params\":{\"dataKey\":\"The key for the data to retrieve.\",\"tokenId\":\"The unique identifier for a token.\"},\"returns\":{\"dataValues\":\"The data value associated with the given `tokenId` and `dataKey`.\"}},\"getOperatorsOf(bytes32)\":{\"details\":\"Returns all `operator` addresses that are allowed to transfer or burn a specific `tokenId` on behalf of its owner.\",\"params\":{\"tokenId\":\"The token ID to get the operators for.\"},\"returns\":{\"_0\":\"An array of operators allowed to transfer or burn a specific `tokenId`. Requirements - `tokenId` must exist.\"}},\"isOperatorFor(address,bytes32)\":{\"custom:info\":\"The tokenOwner is its own operator.\",\"custom:requirements\":\"- `tokenId` must exist. - caller must be the current {tokenOwnerOf} `tokenId`.\",\"details\":\"Returns whether `operator` address is an operator for a given `tokenId`.\",\"params\":{\"operator\":\"The address to query operator status for.\",\"tokenId\":\"The token ID to check if `operator` is allowed to operate on.\"},\"returns\":{\"_0\":\"`true` if `operator` is an operator for `tokenId`, `false` otherwise.\"}},\"revokeOperator(address,bytes32,bool,bytes)\":{\"custom:events\":\"{OperatorRevoked} event with address of the operator being revoked for the caller (token owner)..\",\"custom:requirements\":\"- `tokenId` must exist. - caller must be the {tokenOwnerOf} `tokenId`. - the owner of a `tokenId` cannot grant revoke itself as an `operator` (`operator` cannot be the calling address). - `operator` cannot be the zero address.\",\"details\":\"Remove access of `operator` for a given `tokenId`, disallowing it to transfer `tokenId` on behalf of its owner. See also {isOperatorFor}.\",\"params\":{\"notify\":\"Boolean indicating whether to notify the operator or not\",\"operator\":\"The address to revoke as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` is revoked from operating on.\"}},\"setData(bytes32,bytes)\":{\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])\":{\"custom:events\":\"{TokenIdDataChanged} event for each pair.\",\"params\":{\"dataKeys\":\"An array of data keys corresponding to the token IDs.\",\"dataValues\":\"An array of values to set for the given data keys.\",\"tokenIds\":\"An array of token IDs.\"}},\"setDataForTokenId(bytes32,bytes32,bytes)\":{\"custom:events\":\"{TokenIdDataChanged} event.\",\"params\":{\"dataKey\":\"The key for the data to set.\",\"dataValue\":\"The value to set for the given data key.\",\"tokenId\":\"The unique identifier for a token.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenIdsOf(address)\":{\"details\":\"Returns the list of token IDs that the `tokenOwner` address owns.\",\"params\":{\"tokenOwner\":\"The address that we want to get the list of token IDs for.\"},\"returns\":{\"_0\":\"An array of `bytes32[] tokenIds` owned by `tokenOwner`.\"}},\"tokenOwnerOf(bytes32)\":{\"custom:info\":\"if the `tokenId` is not owned by any address, the returned address will be `address(0)`\",\"custom:requirements\":\"`tokenId` must exist.\",\"details\":\"Returns the address that owns a given `tokenId`.\",\"params\":{\"tokenId\":\"The token ID to query the owner for.\"},\"returns\":{\"_0\":\"The owner address of the given `tokenId`.\"}},\"totalSupply()\":{\"details\":\"Returns the number of existing tokens that have been minted in this contract.\",\"returns\":{\"_0\":\"The number of existing tokens.\"}},\"transfer(address,address,bytes32,bool,bytes)\":{\"custom:events\":\"- {Transfer} event when the `tokenId` is successfully transferred.\",\"custom:hint\":\"The `force` parameter **MUST be set to `true`** to transfer tokens to Externally Owned Accounts (EOAs) or contracts that do not implement the LSP1 Universal Receiver Standard. Otherwise the function will revert making the transfer fail.\",\"custom:info\":\"if the `to` address is a contract that implements LSP1, it will always be notified via its `universalReceiver(...)` function, regardless if `force` is set to `true` or `false`.\",\"custom:requirements\":\"- `from` cannot be the zero address. - `to` cannot be the zero address. - `from` and `to` cannot be the same address (`from` cannot send the `tokenId` to itself). - `from` must own the given `tokenId`. - If the caller is not `from`, it must be an operator for the `tokenId`.\",\"custom:warning\":\"Be aware that when either the sender or the recipient can have logic that revert in their `universalReceiver(...)` function when being notified. This even if the `force` was set to `true`.\",\"details\":\"Transfer a given `tokenId` token from the `from` address to the `to` address. If operators are set for a specific `tokenId`, all the operators are revoked after the tokenId have been transferred. The `force` parameter MUST be set to `true` when transferring tokens to Externally Owned Accounts (EOAs) or contracts that do not implement the LSP1 standard.\",\"params\":{\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\",\"force\":\"When set to `true`, the `to` address CAN be any addres. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\",\"from\":\"The address that owns the given `tokenId`.\",\"to\":\"The address that will receive the `tokenId`.\",\"tokenId\":\"The token ID to transfer.\"}},\"transferBatch(address[],address[],bytes32[],bool[],bytes[])\":{\"custom:events\":\"- {Transfer} events on each successful token transfer.\",\"custom:requirements\":\"- The arrays of `from`, `to` and `tokenId` must have the same length. - no values in the `from` array can be the zero address. - no values in the `to` array can be the zero address. - `from` and `to` cannot be the same address at the same index on each arrays. - each `tokenId` must be owned by `from`. - If the caller is not `from`, it must be an operator of each `tokenId`.\",\"details\":\"Transfers multiple tokens at once based on the arrays of `from`, `to` and `tokenId`. If any transfer fails, the whole call will revert.\",\"params\":{\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks to the `from` and `to` addresses.\",\"force\":\"When set to `true`, `to` may be any address. When set to `false`, `to` must be a contract that supports the LSP1 standard and not revert.\",\"from\":\"An array of sending addresses.\",\"to\":\"An array of recipient addresses.\",\"tokenId\":\"An array of token IDs to transfer.\"}}},\"title\":\"Interface of the LSP8 - Identifiable Digital Asset standard, a non-fungible digital asset.\",\"version\":1},\"userdoc\":{\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"batchCalls(bytes[])\":{\"notice\":\"Executing the following batch of abi-encoded function calls on the contract: `data`.\"},\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"getDataBatchForTokenIds(bytes32[],bytes32[])\":{\"notice\":\"Retrieves data in batch for multiple `tokenId` and `dataKey` pairs.\"},\"getDataForTokenId(bytes32,bytes32)\":{\"notice\":\"Retrieves data for a specific `tokenId` and `dataKey`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"},\"setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])\":{\"notice\":\"Sets data in batch for multiple `tokenId` and `dataKey` pairs.\"},\"setDataForTokenId(bytes32,bytes32,bytes)\":{\"notice\":\"Sets data for a specific `tokenId` and `dataKey`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp8-contracts/contracts/ILSP8IdentifiableDigitalAsset.sol\":\"ILSP8IdentifiableDigitalAsset\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp8-contracts/contracts/ILSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0x16dccaeb35168c4e61763a2c35b075eeed7505661b10fc9c16194af6eb3751ad\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://48f03e83068c241fb7f380b8ad31c8aa3c0f3de59df6ff4c4881b2589d7610b7\",\"dweb:/ipfs/QmW1wmc6kkUXF9gMdAwX7GxjrF4mLqUd7dognerLVRod4v\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAsset.sol":{"LSP8IdentifiableDigitalAsset":{"abi":[{"inputs":[],"name":"ERC725Y_DataKeysValuesEmptyArray","type":"error"},{"inputs":[],"name":"ERC725Y_DataKeysValuesLengthMismatch","type":"error"},{"inputs":[],"name":"ERC725Y_MsgValueDisallowed","type":"error"},{"inputs":[{"internalType":"bytes","name":"storedData","type":"bytes"}],"name":"InvalidExtensionAddress","type":"error"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"InvalidFunctionSelector","type":"error"},{"inputs":[],"name":"LSP4TokenNameNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenSymbolNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenTypeNotEditable","type":"error"},{"inputs":[{"internalType":"uint256","name":"callIndex","type":"uint256"}],"name":"LSP8BatchCallFailed","type":"error"},{"inputs":[],"name":"LSP8CannotSendToAddressZero","type":"error"},{"inputs":[],"name":"LSP8CannotUseAddressZeroAsOperator","type":"error"},{"inputs":[],"name":"LSP8InvalidTransferBatch","type":"error"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8NonExistentTokenId","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8NonExistingOperator","type":"error"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"address","name":"caller","type":"address"}],"name":"LSP8NotTokenOperator","type":"error"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"address","name":"caller","type":"address"}],"name":"LSP8NotTokenOwner","type":"error"},{"inputs":[{"internalType":"address","name":"tokenReceiver","type":"address"}],"name":"LSP8NotifyTokenReceiverContractMissingLSP1Interface","type":"error"},{"inputs":[{"internalType":"address","name":"tokenReceiver","type":"address"}],"name":"LSP8NotifyTokenReceiverIsEOA","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8OperatorAlreadyAuthorized","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8RevokeOperatorNotAuthorized","type":"error"},{"inputs":[],"name":"LSP8TokenContractCannotHoldValue","type":"error"},{"inputs":[],"name":"LSP8TokenIdFormatNotEditable","type":"error"},{"inputs":[],"name":"LSP8TokenIdsDataEmptyArray","type":"error"},{"inputs":[],"name":"LSP8TokenIdsDataLengthMismatch","type":"error"},{"inputs":[],"name":"LSP8TokenOwnerCannotBeOperator","type":"error"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"address","name":"oldOwner","type":"address"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"LSP8TokenOwnerChanged","type":"error"},{"inputs":[{"internalType":"bytes4","name":"functionSelector","type":"bytes4"}],"name":"NoExtensionFoundForFunctionSelector","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorAuthorizationChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"notified","type":"bool"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"TokenIdDataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"force","type":"bool"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"Transfer","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"authorizeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"batchCalls","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"tokenIds","type":"bytes32[]"},{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatchForTokenIds","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getDataForTokenId","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"getOperatorsOf","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"isOperatorFor","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bool","name":"notify","type":"bool"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"revokeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"tokenIds","type":"bytes32[]"},{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatchForTokenIds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setDataForTokenId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"tokenIdsOf","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"tokenOwnerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bool","name":"force","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"from","type":"address[]"},{"internalType":"address[]","name":"to","type":"address[]"},{"internalType":"bytes32[]","name":"tokenId","type":"bytes32[]"},{"internalType":"bool[]","name":"force","type":"bool[]"},{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"transferBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"authorizeOperator(address,bytes32,bytes)":"86a10ddd","balanceOf(address)":"70a08231","batchCalls(bytes[])":"6963d438","getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","getDataBatchForTokenIds(bytes32[],bytes32[])":"1d26fce6","getDataForTokenId(bytes32,bytes32)":"16e023b3","getOperatorsOf(bytes32)":"49a6078d","isOperatorFor(address,bytes32)":"2a3654a4","owner()":"8da5cb5b","renounceOwnership()":"715018a6","revokeOperator(address,bytes32,bool,bytes)":"db8c9663","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])":"be9f0e6f","setDataForTokenId(bytes32,bytes32,bytes)":"d6c1407c","supportsInterface(bytes4)":"01ffc9a7","tokenIdsOf(address)":"a3b261f2","tokenOwnerOf(bytes32)":"217b2270","totalSupply()":"18160ddd","transfer(address,address,bytes32,bool,bytes)":"511b6952","transferBatch(address[],address[],bytes32[],bool[],bytes[])":"7e87632c","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_MsgValueDisallowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"storedData\",\"type\":\"bytes\"}],\"name\":\"InvalidExtensionAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"InvalidFunctionSelector\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenNameNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenSymbolNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenTypeNotEditable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"callIndex\",\"type\":\"uint256\"}],\"name\":\"LSP8BatchCallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotUseAddressZeroAsOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8InvalidTransferBatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistentTokenId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistingOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverContractMissingLSP1Interface\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverIsEOA\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8OperatorAlreadyAuthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8RevokeOperatorNotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenContractCannotHoldValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenIdFormatNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenIdsDataEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenIdsDataLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenOwnerCannotBeOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"LSP8TokenOwnerChanged\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"functionSelector\",\"type\":\"bytes4\"}],\"name\":\"NoExtensionFoundForFunctionSelector\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorAuthorizationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"notified\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"TokenIdDataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"batchCalls\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"tokenIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatchForTokenIds\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getDataForTokenId\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"getOperatorsOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"notify\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"tokenIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatchForTokenIds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setDataForTokenId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokenIdsOf\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"tokenOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"tokenId\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool[]\",\"name\":\"force\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"transferBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Matthew Stevens\",\"details\":\"Standard implementation contract of the LSP8 standard. Minting and transferring are done by providing a unique `tokenId`. This implementation is agnostic to the way tokens are created. A supply mechanism has to be added in a derived contract using {_mint} For a generic mechanism, see {LSP7Mintable}.\",\"errors\":{\"ERC725Y_DataKeysValuesEmptyArray()\":[{\"details\":\"Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\"}],\"ERC725Y_DataKeysValuesLengthMismatch()\":[{\"details\":\"Reverts when there is not the same number of elements in the `datakeys` and `dataValues` array parameters provided when calling the {setDataBatch} function.\"}],\"ERC725Y_MsgValueDisallowed()\":[{\"details\":\"Reverts when sending value to the {setData} or {setDataBatch} function.\"}],\"InvalidExtensionAddress(bytes)\":[{\"details\":\"reverts when the bytes retrieved from the LSP17 data key is not a valid address (not 20 bytes)\"}],\"InvalidFunctionSelector(bytes)\":[{\"details\":\"reverts when the contract is called with a function selector not valid (less than 4 bytes of data)\"}],\"LSP4TokenNameNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed / initialized. The `LSP4TokenName` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenSymbolNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed / initialized. The `LSP4TokenSymbol` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenTypeNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenType` after the digital asset contract has been deployed / initialized. The `LSP4TokenType` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor / initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP8BatchCallFailed(uint256)\":[{\"details\":\"Reverts when a batch call failed.\"}],\"LSP8CannotSendToAddressZero()\":[{\"details\":\"Reverts when trying to send token to the zero address.\"}],\"LSP8CannotUseAddressZeroAsOperator()\":[{\"details\":\"Reverts when trying to set the zero address as an operator.\"}],\"LSP8InvalidTransferBatch()\":[{\"details\":\"Reverts when the parameters used for `transferBatch` have different lengths.\"}],\"LSP8NonExistentTokenId(bytes32)\":[{\"details\":\"Reverts when `tokenId` has not been minted.\"}],\"LSP8NonExistingOperator(address,bytes32)\":[{\"details\":\"Reverts when `operator` is not an operator for the `tokenId`.\"}],\"LSP8NotTokenOperator(bytes32,address)\":[{\"details\":\"Reverts when `caller` is not an allowed operator for `tokenId`.\"}],\"LSP8NotTokenOwner(address,bytes32,address)\":[{\"details\":\"Reverts when `caller` is not the `tokenOwner` of the `tokenId`.\"}],\"LSP8NotifyTokenReceiverContractMissingLSP1Interface(address)\":[{\"details\":\"Reverts if the `tokenReceiver` does not implement LSP1 when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8NotifyTokenReceiverIsEOA(address)\":[{\"details\":\"Reverts if the `tokenReceiver` is an EOA when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8OperatorAlreadyAuthorized(address,bytes32)\":[{\"details\":\"Reverts when `operator` is already authorized for the `tokenId`.\"}],\"LSP8RevokeOperatorNotAuthorized(address,address,bytes32)\":[{\"details\":\"Reverts when the call to revoke operator is not authorized.\"}],\"LSP8TokenContractCannotHoldValue()\":[{\"details\":\"Error occurs when sending native tokens to the LSP8 contract without sending any data. E.g. Sending value without passing a bytes4 function selector to call a LSP17 Extension.\"}],\"LSP8TokenIdFormatNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP8TokenIdFormat` after the identifiable digital asset contract has been deployed. The `LSP8TokenIdFormat` data key is located inside the ERC725Y Data key-value store of the identifiable digital asset contract. It can be set only once inside the constructor/initializer when the identifiable digital asset contract is being deployed.\"}],\"LSP8TokenIdsDataEmptyArray()\":[{\"details\":\"Reverts when empty arrays is passed to the function\"}],\"LSP8TokenIdsDataLengthMismatch()\":[{\"details\":\"Reverts when the length of the token IDs data arrays is not equal\"}],\"LSP8TokenOwnerCannotBeOperator()\":[{\"details\":\"Reverts when trying to authorize or revoke the token's owner as an operator.\"}],\"LSP8TokenOwnerChanged(bytes32,address,address)\":[{\"details\":\"Reverts when the token owner changed inside the {_beforeTokenTransfer} hook.\"}],\"NoExtensionFoundForFunctionSelector(bytes4)\":[{\"details\":\"reverts when there is no extension for the function selector being called with\"}]},\"events\":{\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}},\"OperatorAuthorizationChanged(address,address,bytes32,bytes)\":{\"details\":\"Emitted when `tokenOwner` enables `operator` to transfer or burn the `tokenId`.\",\"params\":{\"operator\":\"The address authorized as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` address has access on behalf of `tokenOwner`.\",\"tokenOwner\":\"The owner of the `tokenId`.\"}},\"OperatorRevoked(address,address,bytes32,bool,bytes)\":{\"details\":\"Emitted when `tokenOwner` disables `operator` to transfer or burn `tokenId` on its behalf.\",\"params\":{\"notified\":\"Bool indicating whether the operator has been notified or not\",\"operator\":\"The address revoked from the operator array ({getOperatorsOf}).\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` is revoked from operating on.\",\"tokenOwner\":\"The owner of the `tokenId`.\"}},\"TokenIdDataChanged(bytes32,bytes32,bytes)\":{\"details\":\"Emitted when setting data for `tokenId`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\",\"tokenId\":\"The tokenId which data is set for.\"}},\"Transfer(address,address,address,bytes32,bool,bytes)\":{\"details\":\"Emitted when `tokenId` token is transferred from the `from` to the `to` address.\",\"params\":{\"data\":\"Any additional data the caller included by the caller during the transfer, and sent in the hooks to the `from` and `to` addresses.\",\"force\":\"If the token transfer enforces the `to` recipient address to be a contract that implements the LSP1 standard or not.\",\"from\":\"The previous owner of the `tokenId`\",\"operator\":\"The address of operator that sent the `tokenId`\",\"to\":\"The new owner of `tokenId`\",\"tokenId\":\"The tokenId that was transferred\"}}},\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address,bytes32,bytes)\":{\"details\":\"Allow an `operator` address to transfer or burn a specific `tokenId` on behalf of its token owner. See {isOperatorFor}. Notify the operator based on the LSP1-UniversalReceiver standard\",\"params\":{\"operator\":\"The address to authorize as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The token ID operator has access to.\"}},\"balanceOf(address)\":{\"details\":\"Get the number of token IDs owned by `tokenOwner`.\",\"params\":{\"tokenOwner\":\"The address to query     *\"},\"returns\":{\"_0\":\"The total number of token IDs that `tokenOwner` owns.\"}},\"batchCalls(bytes[])\":{\"custom:info\":\"It's not possible to send value along the functions call due to the use of `delegatecall`.\",\"details\":\"Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\",\"params\":{\"data\":\"An array of ABI encoded function calls to be called on the contract.\"},\"returns\":{\"results\":\"An array of abi-encoded data returned by the functions executed.\"}},\"constructor\":{\"custom:warning\":\"Make sure the tokenId format provided on deployment is correct, as it can only be set once and cannot be changed in the ERC725Y storage after the contract has been deployed.\",\"details\":\"Deploy a `LSP8IdentifiableDigitalAsset` contract and set the tokenId format inside the ERC725Y storage of the contract. This will also set the token `name_` and `symbol_` under the ERC725Y data keys `LSP4TokenName` and `LSP4TokenSymbol`.\",\"params\":{\"lsp4TokenType_\":\"The type of token this digital asset contract represents (`0` = Token, `1` = NFT, `2` = Collection).\",\"lsp8TokenIdFormat_\":\"The format of tokenIds (= NFTs) that this contract will create.\",\"name_\":\"The name of the token\",\"newOwner_\":\"The owner of the the token-Metadata\",\"symbol_\":\"The symbol of the token\"}},\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"getDataBatchForTokenIds(bytes32[],bytes32[])\":{\"params\":{\"dataKeys\":\"An array of data keys corresponding to the token IDs.\",\"tokenIds\":\"An array of token IDs.\"},\"returns\":{\"dataValues\":\"An array of data values for each pair of `tokenId` and `dataKey`.\"}},\"getDataForTokenId(bytes32,bytes32)\":{\"params\":{\"dataKey\":\"The key for the data to retrieve.\",\"tokenId\":\"The unique identifier for a token.\"},\"returns\":{\"dataValue\":\"The data value associated with the given `tokenId` and `dataKey`.\"}},\"getOperatorsOf(bytes32)\":{\"details\":\"Returns all `operator` addresses that are allowed to transfer or burn a specific `tokenId` on behalf of its owner.\",\"params\":{\"tokenId\":\"The token ID to get the operators for.\"},\"returns\":{\"_0\":\"An array of operators allowed to transfer or burn a specific `tokenId`. Requirements - `tokenId` must exist.\"}},\"isOperatorFor(address,bytes32)\":{\"details\":\"Returns whether `operator` address is an operator for a given `tokenId`.\",\"params\":{\"operator\":\"The address to query operator status for.\",\"tokenId\":\"The token ID to check if `operator` is allowed to operate on.\"},\"returns\":{\"_0\":\"`true` if `operator` is an operator for `tokenId`, `false` otherwise.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revokeOperator(address,bytes32,bool,bytes)\":{\"details\":\"Remove access of `operator` for a given `tokenId`, disallowing it to transfer `tokenId` on behalf of its owner. See also {isOperatorFor}.\",\"params\":{\"notify\":\"Boolean indicating whether to notify the operator or not\",\"operator\":\"The address to revoke as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` is revoked from operating on.\"}},\"setData(bytes32,bytes)\":{\"custom:events\":\"{DataChanged} event.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner}.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\",\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"custom:events\":\"{DataChanged} event **for each data key/value pair set**.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner} of the contract.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\",\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])\":{\"params\":{\"dataKeys\":\"An array of data keys corresponding to the token IDs.\",\"dataValues\":\"An array of values to set for the given data keys.\",\"tokenIds\":\"An array of token IDs.\"}},\"setDataForTokenId(bytes32,bytes32,bytes)\":{\"params\":{\"dataKey\":\"The key for the data to set.\",\"dataValue\":\"The value to set for the given data key.\",\"tokenId\":\"The unique identifier for a token.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenIdsOf(address)\":{\"details\":\"Returns the list of token IDs that the `tokenOwner` address owns.\",\"params\":{\"tokenOwner\":\"The address that we want to get the list of token IDs for.\"},\"returns\":{\"_0\":\"An array of `bytes32[] tokenIds` owned by `tokenOwner`.\"}},\"tokenOwnerOf(bytes32)\":{\"details\":\"Returns the address that owns a given `tokenId`.\",\"params\":{\"tokenId\":\"The token ID to query the owner for.\"},\"returns\":{\"_0\":\"The owner address of the given `tokenId`.\"}},\"totalSupply()\":{\"details\":\"Returns the number of existing tokens that have been minted in this contract.\",\"returns\":{\"_0\":\"The number of existing tokens.\"}},\"transfer(address,address,bytes32,bool,bytes)\":{\"details\":\"Transfer a given `tokenId` token from the `from` address to the `to` address. If operators are set for a specific `tokenId`, all the operators are revoked after the tokenId have been transferred. The `force` parameter MUST be set to `true` when transferring tokens to Externally Owned Accounts (EOAs) or contracts that do not implement the LSP1 standard.\",\"params\":{\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\",\"force\":\"When set to `true`, the `to` address CAN be any addres. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\",\"from\":\"The address that owns the given `tokenId`.\",\"to\":\"The address that will receive the `tokenId`.\",\"tokenId\":\"The token ID to transfer.\"}},\"transferBatch(address[],address[],bytes32[],bool[],bytes[])\":{\"details\":\"Transfers multiple tokens at once based on the arrays of `from`, `to` and `tokenId`. If any transfer fails, the whole call will revert.\",\"params\":{\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks to the `from` and `to` addresses.\",\"force\":\"When set to `true`, `to` may be any address. When set to `false`, `to` must be a contract that supports the LSP1 standard and not revert.\",\"from\":\"An array of sending addresses.\",\"to\":\"An array of recipient addresses.\",\"tokenId\":\"An array of token IDs to transfer.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Implementation of a LSP8 Identifiable Digital Asset, a contract that represents a non-fungible token.\",\"version\":1},\"userdoc\":{\"errors\":{\"LSP8BatchCallFailed(uint256)\":[{\"notice\":\"Batch call failed.\"}],\"LSP8TokenContractCannotHoldValue()\":[{\"notice\":\"LSP8 contract cannot receive native tokens.\"}]},\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"batchCalls(bytes[])\":{\"notice\":\"Executing the following batch of abi-encoded function calls on the contract: `data`.\"},\"constructor\":{\"notice\":\"Deploying a LSP8IdentifiableDigitalAsset with name `name_`, symbol `symbol_`, owned by address `newOwner_` with tokenId format `lsp8TokenIdFormat_`.\"},\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"getDataBatchForTokenIds(bytes32[],bytes32[])\":{\"notice\":\"Retrieves data in batch for multiple `tokenId` and `dataKey` pairs.\"},\"getDataForTokenId(bytes32,bytes32)\":{\"notice\":\"Retrieves data for a specific `tokenId` and `dataKey`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"},\"setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])\":{\"notice\":\"Sets data in batch for multiple `tokenId` and `dataKey` pairs.\"},\"setDataForTokenId(bytes32,bytes32,bytes)\":{\"notice\":\"Sets data for a specific `tokenId` and `dataKey`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAsset.sol\":\"LSP8IdentifiableDigitalAsset\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/ERC725Y.sol\":{\"keccak256\":\"0xeab1c553ab3ef1d83b99d2d93dacbb03af8ef43eca7df4ac91cdf5b15882abcc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://492663e0fedaea5fc7f008ba780d160e290fa4bd455f3af78e456d2188835533\",\"dweb:/ipfs/QmSoMLfrXAjHnTzBerxDiZ5X9wq6RPfSpvqUJ3brKS4Y4s\"]},\"@erc725/smart-contracts/contracts/ERC725YCore.sol\":{\"keccak256\":\"0x54b779c764317ccecb181608112ff7440bb28ef8c0770e7340bc5cac4fc7d0f9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cacac6f06bde5d7cd9852e45ef2baa949dc21a89b3224194bdb1490857cfb08b\",\"dweb:/ipfs/QmPHnXHiB65UZPk7thKvW2C1DpxCJ2UeBsj7u78r2HLTJG\"]},\"@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xb198a56711fbe79cce967068f9c7f41760cee018b9ce330a82e8cca8ed7909a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5108bd75251da5980d5021cb6114d7d706eaa82d269fa96adb40709d440f683\",\"dweb:/ipfs/QmdWj75HZYdJLahnmiPEAshFjempzGR7hjj5gGi9LSqnqj\"]},\"@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0x8b5760e40f04b9ec9de9339136a481fb3cd4fe29f5528fa6756320cd256d58fb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://28211f3a6bb2c6bf3d7dbb855d9eb46099ecc132213688e550ad314c619e8bf8\",\"dweb:/ipfs/QmUcuXAELqMDFmSxKWbhiBmuEKzw92h7U1ev3pgeDX4xm7\"]},\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x5b8764a678dc9d6673eafa8ad0ee6053cdea30acb58015bdf9c93f9f1788b49b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e26dcf5d66120b7a0895ddcaec92207e17c63344fca885d2b7e3fe953ec027c\",\"dweb:/ipfs/QmetAuz9etfz9BG9oPJCwMthnhfd8XvZYLBmMfrPNUm3qV\"]},\"@lukso/lsp1-contracts/contracts/LSP1Constants.sol\":{\"keccak256\":\"0x0f87fc38243fc70316e22814f5a79d9c0770a39f64077cbc6fb5fddfa1d4c23c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c7d83f054b71dfa5ca48a9a811e6a985ff6b38a9e5f4c220ea2ec3a322cce7cf\",\"dweb:/ipfs/QmaehpHpqc5dtRCm9BoU8vCY59AeEnmGvmmwPirVr47oGp\"]},\"@lukso/lsp1-contracts/contracts/LSP1Utils.sol\":{\"keccak256\":\"0xa81bf1910c3b56b43bf58d0be2105c434ed3b65cfb3674e282b5aba3fd35afb0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://374e7bef39522d65cf8e45c365178eb54d159b9267d0c2a2b97dfea10e52d41f\",\"dweb:/ipfs/QmfVYVnVSTRVAAifFSyFk8icePgw3eeqpjAKWAwfHMu6vX\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol\":{\"keccak256\":\"0x6d4bb208587872ad563fef31655c44f7de03baa5b4a513910c0003aea0c04036\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://880c3b21e2090a14e7bba94ac5c8d4633e8a81d93c6f619454167a01dcc866d8\",\"dweb:/ipfs/QmZp6YVM4Eor5XtuXXqGRaPAJ3u5KCmLwuNRAGf4JY7sK1\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol\":{\"keccak256\":\"0x75a0159f76a3c5bf26b13aa404aca2f588ea41928eb1483683e29d2031fe5abf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f1b93e7eb5a88a2f42a9dfa061ca5e93e7650cd9114010faa18faf0a5508f579\",\"dweb:/ipfs/QmXmLhf1ejsF7G1FZnvpTBRS9oQ9ZTuqCBRT1im3vAuUYW\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol\":{\"keccak256\":\"0x5983e916a4cb604a45b585d7f745f5ac8bf69ef51fbc78cf8e70408e29e008c2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e1e9a7b8dc210030d35b4e2c3dbb7107f51c063256f7e6120997ed638f033db1\",\"dweb:/ipfs/QmRQgkaDnC9sAb9mZJtVgBsAR1xfmcTA2erCVUiyszy15o\"]},\"@lukso/lsp2-contracts/contracts/LSP2Utils.sol\":{\"keccak256\":\"0x86ce8a85d12c79b76db5413b05b9bff16cd865b395efdc0e85b06b3b5e17219b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7ebb6d1152f88b459b9e8fc3ef6361a9fb9d03bfa994148e6b125a2ee4025487\",\"dweb:/ipfs/QmX18bCecAtrjqKTyCPqRrUuvVYSW1XZZJUgvjfYnqfmEH\"]},\"@lukso/lsp4-contracts/contracts/LSP4Constants.sol\":{\"keccak256\":\"0xdf9b7c688d39a92cb3238136a9f56554245d5ae9b6568dcd6164d0e15c6f56c7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bb36a427cdfa0f394d2d78014f85152ab383499fc3c3d6285d4b801c656e7c3f\",\"dweb:/ipfs/QmZJehfeWKfHLyZLufhs9u4ZyVztGCUNWXzFgfZSU837vU\"]},\"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol\":{\"keccak256\":\"0xd120529845267176d7658eb3b610fd9412012ce58cfde05a42f7fcee1c371dce\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4e2919d97ff39ae203dc57f53a7ae6a4f1dfe9354e564744ee3752771687b796\",\"dweb:/ipfs/QmbNwNCDnLcD4jrboPJhAMXVEiVGbagBteXM5sVByZ8A1h\"]},\"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadataCore.sol\":{\"keccak256\":\"0xc442e52d34bb98acc1494675856b1f1d124af1375d8e23a9bfcc3b6c1865e1fc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://84254359ed929c1991136f9c3e934ddfa74cd85684de6c44cb70afa70d12f837\",\"dweb:/ipfs/QmWfmionUJJYyYDoeSQLGUHhou2sWxhWzwtU5GVjpumiSS\"]},\"@lukso/lsp4-contracts/contracts/LSP4Errors.sol\":{\"keccak256\":\"0x3db7fd252ed02ce27686141125c3d65d3ff682a32601e1e8611becd9357a57b5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5aded62a160ed7f9860996004d1656e8592b3f97d478d8597f8ad6afbe4f34b7\",\"dweb:/ipfs/QmcnmLVt8cmz1iRNaX5c6iNYckRgUXGz8YkjHW9T1KNB5A\"]},\"@lukso/lsp8-contracts/contracts/ILSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0x16dccaeb35168c4e61763a2c35b075eeed7505661b10fc9c16194af6eb3751ad\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://48f03e83068c241fb7f380b8ad31c8aa3c0f3de59df6ff4c4881b2589d7610b7\",\"dweb:/ipfs/QmW1wmc6kkUXF9gMdAwX7GxjrF4mLqUd7dognerLVRod4v\"]},\"@lukso/lsp8-contracts/contracts/LSP8Constants.sol\":{\"keccak256\":\"0x2372e7ec422a13ce3e7968e5fbb081b67816b5de974bd76ec61cfed787abbe1b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6d147e2f290ed60e36e9187dc7cce7d7ee1a62eee1c25c761e6090d88e3fa383\",\"dweb:/ipfs/Qmf9HEYCCjx2xBopvq7WhhtjvL9AEihvNcZ512751Wg6LN\"]},\"@lukso/lsp8-contracts/contracts/LSP8Errors.sol\":{\"keccak256\":\"0xff2c1791043272eb4a7c05bc77fa0a0234678991b0700f84d92edbd31fefd905\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://72b32242e8a4b7c12355de3f1c463437a81d8d5f8d34b3a8d25d726340b891c0\",\"dweb:/ipfs/Qmbhz53zdudSQbPwES2qMHqLHaph4GhigNETC481VWwK6J\"]},\"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0xe8cc62169bfbf1e6472e217ab5833428dc8234a1db77f7cc65e360bea7ff89c9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4939ef03cba6fbb74d409ab712721017095542f100fd95666af7ace58fa176c8\",\"dweb:/ipfs/QmSau5c7tUcawWgGEqwe5U14dop6x9YkLDsaUWTzAktHik\"]},\"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAssetCore.sol\":{\"keccak256\":\"0xe536b1021d51a20951a3d1446aee234c3ea558a008d023343a30c8d2fb83f4ad\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c9366d571daaf4dc1fef4820c4f7ea1e2546753f9b01aa8ff9926d7d96653da3\",\"dweb:/ipfs/QmTfJhHp5HK2oTAm1Ttr8bGcLGWHguj2dNqnvVqzGuWfb1\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}"}},"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAssetCore.sol":{"LSP8IdentifiableDigitalAssetCore":{"abi":[{"inputs":[],"name":"ERC725Y_DataKeysValuesEmptyArray","type":"error"},{"inputs":[],"name":"ERC725Y_DataKeysValuesLengthMismatch","type":"error"},{"inputs":[],"name":"ERC725Y_MsgValueDisallowed","type":"error"},{"inputs":[],"name":"LSP4TokenNameNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenSymbolNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenTypeNotEditable","type":"error"},{"inputs":[{"internalType":"uint256","name":"callIndex","type":"uint256"}],"name":"LSP8BatchCallFailed","type":"error"},{"inputs":[],"name":"LSP8CannotSendToAddressZero","type":"error"},{"inputs":[],"name":"LSP8CannotUseAddressZeroAsOperator","type":"error"},{"inputs":[],"name":"LSP8InvalidTransferBatch","type":"error"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8NonExistentTokenId","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8NonExistingOperator","type":"error"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"address","name":"caller","type":"address"}],"name":"LSP8NotTokenOperator","type":"error"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"address","name":"caller","type":"address"}],"name":"LSP8NotTokenOwner","type":"error"},{"inputs":[{"internalType":"address","name":"tokenReceiver","type":"address"}],"name":"LSP8NotifyTokenReceiverContractMissingLSP1Interface","type":"error"},{"inputs":[{"internalType":"address","name":"tokenReceiver","type":"address"}],"name":"LSP8NotifyTokenReceiverIsEOA","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8OperatorAlreadyAuthorized","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8RevokeOperatorNotAuthorized","type":"error"},{"inputs":[],"name":"LSP8TokenIdsDataEmptyArray","type":"error"},{"inputs":[],"name":"LSP8TokenIdsDataLengthMismatch","type":"error"},{"inputs":[],"name":"LSP8TokenOwnerCannotBeOperator","type":"error"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"address","name":"oldOwner","type":"address"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"LSP8TokenOwnerChanged","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorAuthorizationChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"notified","type":"bool"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"TokenIdDataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"force","type":"bool"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"authorizeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"batchCalls","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"tokenIds","type":"bytes32[]"},{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatchForTokenIds","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getDataForTokenId","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"getOperatorsOf","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"isOperatorFor","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bool","name":"notify","type":"bool"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"revokeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"tokenIds","type":"bytes32[]"},{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatchForTokenIds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setDataForTokenId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"tokenIdsOf","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"tokenOwnerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bool","name":"force","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"from","type":"address[]"},{"internalType":"address[]","name":"to","type":"address[]"},{"internalType":"bytes32[]","name":"tokenId","type":"bytes32[]"},{"internalType":"bool[]","name":"force","type":"bool[]"},{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"transferBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"authorizeOperator(address,bytes32,bytes)":"86a10ddd","balanceOf(address)":"70a08231","batchCalls(bytes[])":"6963d438","getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","getDataBatchForTokenIds(bytes32[],bytes32[])":"1d26fce6","getDataForTokenId(bytes32,bytes32)":"16e023b3","getOperatorsOf(bytes32)":"49a6078d","isOperatorFor(address,bytes32)":"2a3654a4","owner()":"8da5cb5b","renounceOwnership()":"715018a6","revokeOperator(address,bytes32,bool,bytes)":"db8c9663","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])":"be9f0e6f","setDataForTokenId(bytes32,bytes32,bytes)":"d6c1407c","supportsInterface(bytes4)":"01ffc9a7","tokenIdsOf(address)":"a3b261f2","tokenOwnerOf(bytes32)":"217b2270","totalSupply()":"18160ddd","transfer(address,address,bytes32,bool,bytes)":"511b6952","transferBatch(address[],address[],bytes32[],bool[],bytes[])":"7e87632c","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_MsgValueDisallowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenNameNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenSymbolNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenTypeNotEditable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"callIndex\",\"type\":\"uint256\"}],\"name\":\"LSP8BatchCallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotUseAddressZeroAsOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8InvalidTransferBatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistentTokenId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistingOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverContractMissingLSP1Interface\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverIsEOA\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8OperatorAlreadyAuthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8RevokeOperatorNotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenIdsDataEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenIdsDataLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenOwnerCannotBeOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"LSP8TokenOwnerChanged\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorAuthorizationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"notified\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"TokenIdDataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"batchCalls\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"tokenIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatchForTokenIds\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getDataForTokenId\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"getOperatorsOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"notify\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"tokenIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatchForTokenIds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setDataForTokenId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokenIdsOf\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"tokenOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"tokenId\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool[]\",\"name\":\"force\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"transferBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Matthew Stevens\",\"details\":\"Core Implementation of a LSP8 compliant contract.\",\"errors\":{\"ERC725Y_DataKeysValuesEmptyArray()\":[{\"details\":\"Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\"}],\"ERC725Y_DataKeysValuesLengthMismatch()\":[{\"details\":\"Reverts when there is not the same number of elements in the `datakeys` and `dataValues` array parameters provided when calling the {setDataBatch} function.\"}],\"ERC725Y_MsgValueDisallowed()\":[{\"details\":\"Reverts when sending value to the {setData} or {setDataBatch} function.\"}],\"LSP4TokenNameNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed / initialized. The `LSP4TokenName` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenSymbolNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed / initialized. The `LSP4TokenSymbol` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenTypeNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenType` after the digital asset contract has been deployed / initialized. The `LSP4TokenType` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor / initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP8BatchCallFailed(uint256)\":[{\"details\":\"Reverts when a batch call failed.\"}],\"LSP8CannotSendToAddressZero()\":[{\"details\":\"Reverts when trying to send token to the zero address.\"}],\"LSP8CannotUseAddressZeroAsOperator()\":[{\"details\":\"Reverts when trying to set the zero address as an operator.\"}],\"LSP8InvalidTransferBatch()\":[{\"details\":\"Reverts when the parameters used for `transferBatch` have different lengths.\"}],\"LSP8NonExistentTokenId(bytes32)\":[{\"details\":\"Reverts when `tokenId` has not been minted.\"}],\"LSP8NonExistingOperator(address,bytes32)\":[{\"details\":\"Reverts when `operator` is not an operator for the `tokenId`.\"}],\"LSP8NotTokenOperator(bytes32,address)\":[{\"details\":\"Reverts when `caller` is not an allowed operator for `tokenId`.\"}],\"LSP8NotTokenOwner(address,bytes32,address)\":[{\"details\":\"Reverts when `caller` is not the `tokenOwner` of the `tokenId`.\"}],\"LSP8NotifyTokenReceiverContractMissingLSP1Interface(address)\":[{\"details\":\"Reverts if the `tokenReceiver` does not implement LSP1 when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8NotifyTokenReceiverIsEOA(address)\":[{\"details\":\"Reverts if the `tokenReceiver` is an EOA when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8OperatorAlreadyAuthorized(address,bytes32)\":[{\"details\":\"Reverts when `operator` is already authorized for the `tokenId`.\"}],\"LSP8RevokeOperatorNotAuthorized(address,address,bytes32)\":[{\"details\":\"Reverts when the call to revoke operator is not authorized.\"}],\"LSP8TokenIdsDataEmptyArray()\":[{\"details\":\"Reverts when empty arrays is passed to the function\"}],\"LSP8TokenIdsDataLengthMismatch()\":[{\"details\":\"Reverts when the length of the token IDs data arrays is not equal\"}],\"LSP8TokenOwnerCannotBeOperator()\":[{\"details\":\"Reverts when trying to authorize or revoke the token's owner as an operator.\"}],\"LSP8TokenOwnerChanged(bytes32,address,address)\":[{\"details\":\"Reverts when the token owner changed inside the {_beforeTokenTransfer} hook.\"}]},\"events\":{\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}},\"OperatorAuthorizationChanged(address,address,bytes32,bytes)\":{\"details\":\"Emitted when `tokenOwner` enables `operator` to transfer or burn the `tokenId`.\",\"params\":{\"operator\":\"The address authorized as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` address has access on behalf of `tokenOwner`.\",\"tokenOwner\":\"The owner of the `tokenId`.\"}},\"OperatorRevoked(address,address,bytes32,bool,bytes)\":{\"details\":\"Emitted when `tokenOwner` disables `operator` to transfer or burn `tokenId` on its behalf.\",\"params\":{\"notified\":\"Bool indicating whether the operator has been notified or not\",\"operator\":\"The address revoked from the operator array ({getOperatorsOf}).\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` is revoked from operating on.\",\"tokenOwner\":\"The owner of the `tokenId`.\"}},\"TokenIdDataChanged(bytes32,bytes32,bytes)\":{\"details\":\"Emitted when setting data for `tokenId`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\",\"tokenId\":\"The tokenId which data is set for.\"}},\"Transfer(address,address,address,bytes32,bool,bytes)\":{\"details\":\"Emitted when `tokenId` token is transferred from the `from` to the `to` address.\",\"params\":{\"data\":\"Any additional data the caller included by the caller during the transfer, and sent in the hooks to the `from` and `to` addresses.\",\"force\":\"If the token transfer enforces the `to` recipient address to be a contract that implements the LSP1 standard or not.\",\"from\":\"The previous owner of the `tokenId`\",\"operator\":\"The address of operator that sent the `tokenId`\",\"to\":\"The new owner of `tokenId`\",\"tokenId\":\"The tokenId that was transferred\"}}},\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address,bytes32,bytes)\":{\"details\":\"Allow an `operator` address to transfer or burn a specific `tokenId` on behalf of its token owner. See {isOperatorFor}. Notify the operator based on the LSP1-UniversalReceiver standard\",\"params\":{\"operator\":\"The address to authorize as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The token ID operator has access to.\"}},\"balanceOf(address)\":{\"details\":\"Get the number of token IDs owned by `tokenOwner`.\",\"params\":{\"tokenOwner\":\"The address to query     *\"},\"returns\":{\"_0\":\"The total number of token IDs that `tokenOwner` owns.\"}},\"batchCalls(bytes[])\":{\"custom:info\":\"It's not possible to send value along the functions call due to the use of `delegatecall`.\",\"details\":\"Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\",\"params\":{\"data\":\"An array of ABI encoded function calls to be called on the contract.\"},\"returns\":{\"results\":\"An array of abi-encoded data returned by the functions executed.\"}},\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"getDataBatchForTokenIds(bytes32[],bytes32[])\":{\"params\":{\"dataKeys\":\"An array of data keys corresponding to the token IDs.\",\"tokenIds\":\"An array of token IDs.\"},\"returns\":{\"dataValues\":\"An array of data values for each pair of `tokenId` and `dataKey`.\"}},\"getDataForTokenId(bytes32,bytes32)\":{\"params\":{\"dataKey\":\"The key for the data to retrieve.\",\"tokenId\":\"The unique identifier for a token.\"},\"returns\":{\"dataValue\":\"The data value associated with the given `tokenId` and `dataKey`.\"}},\"getOperatorsOf(bytes32)\":{\"details\":\"Returns all `operator` addresses that are allowed to transfer or burn a specific `tokenId` on behalf of its owner.\",\"params\":{\"tokenId\":\"The token ID to get the operators for.\"},\"returns\":{\"_0\":\"An array of operators allowed to transfer or burn a specific `tokenId`. Requirements - `tokenId` must exist.\"}},\"isOperatorFor(address,bytes32)\":{\"details\":\"Returns whether `operator` address is an operator for a given `tokenId`.\",\"params\":{\"operator\":\"The address to query operator status for.\",\"tokenId\":\"The token ID to check if `operator` is allowed to operate on.\"},\"returns\":{\"_0\":\"`true` if `operator` is an operator for `tokenId`, `false` otherwise.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revokeOperator(address,bytes32,bool,bytes)\":{\"details\":\"Remove access of `operator` for a given `tokenId`, disallowing it to transfer `tokenId` on behalf of its owner. See also {isOperatorFor}.\",\"params\":{\"notify\":\"Boolean indicating whether to notify the operator or not\",\"operator\":\"The address to revoke as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` is revoked from operating on.\"}},\"setData(bytes32,bytes)\":{\"custom:events\":\"{DataChanged} event.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner}.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\",\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"custom:events\":\"{DataChanged} event **for each data key/value pair set**.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner} of the contract.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\",\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])\":{\"params\":{\"dataKeys\":\"An array of data keys corresponding to the token IDs.\",\"dataValues\":\"An array of values to set for the given data keys.\",\"tokenIds\":\"An array of token IDs.\"}},\"setDataForTokenId(bytes32,bytes32,bytes)\":{\"params\":{\"dataKey\":\"The key for the data to set.\",\"dataValue\":\"The value to set for the given data key.\",\"tokenId\":\"The unique identifier for a token.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"tokenIdsOf(address)\":{\"details\":\"Returns the list of token IDs that the `tokenOwner` address owns.\",\"params\":{\"tokenOwner\":\"The address that we want to get the list of token IDs for.\"},\"returns\":{\"_0\":\"An array of `bytes32[] tokenIds` owned by `tokenOwner`.\"}},\"tokenOwnerOf(bytes32)\":{\"details\":\"Returns the address that owns a given `tokenId`.\",\"params\":{\"tokenId\":\"The token ID to query the owner for.\"},\"returns\":{\"_0\":\"The owner address of the given `tokenId`.\"}},\"totalSupply()\":{\"details\":\"Returns the number of existing tokens that have been minted in this contract.\",\"returns\":{\"_0\":\"The number of existing tokens.\"}},\"transfer(address,address,bytes32,bool,bytes)\":{\"details\":\"Transfer a given `tokenId` token from the `from` address to the `to` address. If operators are set for a specific `tokenId`, all the operators are revoked after the tokenId have been transferred. The `force` parameter MUST be set to `true` when transferring tokens to Externally Owned Accounts (EOAs) or contracts that do not implement the LSP1 standard.\",\"params\":{\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\",\"force\":\"When set to `true`, the `to` address CAN be any addres. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\",\"from\":\"The address that owns the given `tokenId`.\",\"to\":\"The address that will receive the `tokenId`.\",\"tokenId\":\"The token ID to transfer.\"}},\"transferBatch(address[],address[],bytes32[],bool[],bytes[])\":{\"details\":\"Transfers multiple tokens at once based on the arrays of `from`, `to` and `tokenId`. If any transfer fails, the whole call will revert.\",\"params\":{\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks to the `from` and `to` addresses.\",\"force\":\"When set to `true`, `to` may be any address. When set to `false`, `to` must be a contract that supports the LSP1 standard and not revert.\",\"from\":\"An array of sending addresses.\",\"to\":\"An array of recipient addresses.\",\"tokenId\":\"An array of token IDs to transfer.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"LSP8IdentifiableDigitalAsset contract\",\"version\":1},\"userdoc\":{\"errors\":{\"LSP8BatchCallFailed(uint256)\":[{\"notice\":\"Batch call failed.\"}]},\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"batchCalls(bytes[])\":{\"notice\":\"Executing the following batch of abi-encoded function calls on the contract: `data`.\"},\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"getDataBatchForTokenIds(bytes32[],bytes32[])\":{\"notice\":\"Retrieves data in batch for multiple `tokenId` and `dataKey` pairs.\"},\"getDataForTokenId(bytes32,bytes32)\":{\"notice\":\"Retrieves data for a specific `tokenId` and `dataKey`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"},\"setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])\":{\"notice\":\"Sets data in batch for multiple `tokenId` and `dataKey` pairs.\"},\"setDataForTokenId(bytes32,bytes32,bytes)\":{\"notice\":\"Sets data for a specific `tokenId` and `dataKey`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAssetCore.sol\":\"LSP8IdentifiableDigitalAssetCore\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/ERC725YCore.sol\":{\"keccak256\":\"0x54b779c764317ccecb181608112ff7440bb28ef8c0770e7340bc5cac4fc7d0f9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cacac6f06bde5d7cd9852e45ef2baa949dc21a89b3224194bdb1490857cfb08b\",\"dweb:/ipfs/QmPHnXHiB65UZPk7thKvW2C1DpxCJ2UeBsj7u78r2HLTJG\"]},\"@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xb198a56711fbe79cce967068f9c7f41760cee018b9ce330a82e8cca8ed7909a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5108bd75251da5980d5021cb6114d7d706eaa82d269fa96adb40709d440f683\",\"dweb:/ipfs/QmdWj75HZYdJLahnmiPEAshFjempzGR7hjj5gGi9LSqnqj\"]},\"@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0x8b5760e40f04b9ec9de9339136a481fb3cd4fe29f5528fa6756320cd256d58fb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://28211f3a6bb2c6bf3d7dbb855d9eb46099ecc132213688e550ad314c619e8bf8\",\"dweb:/ipfs/QmUcuXAELqMDFmSxKWbhiBmuEKzw92h7U1ev3pgeDX4xm7\"]},\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x5b8764a678dc9d6673eafa8ad0ee6053cdea30acb58015bdf9c93f9f1788b49b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e26dcf5d66120b7a0895ddcaec92207e17c63344fca885d2b7e3fe953ec027c\",\"dweb:/ipfs/QmetAuz9etfz9BG9oPJCwMthnhfd8XvZYLBmMfrPNUm3qV\"]},\"@lukso/lsp1-contracts/contracts/LSP1Constants.sol\":{\"keccak256\":\"0x0f87fc38243fc70316e22814f5a79d9c0770a39f64077cbc6fb5fddfa1d4c23c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c7d83f054b71dfa5ca48a9a811e6a985ff6b38a9e5f4c220ea2ec3a322cce7cf\",\"dweb:/ipfs/QmaehpHpqc5dtRCm9BoU8vCY59AeEnmGvmmwPirVr47oGp\"]},\"@lukso/lsp1-contracts/contracts/LSP1Utils.sol\":{\"keccak256\":\"0xa81bf1910c3b56b43bf58d0be2105c434ed3b65cfb3674e282b5aba3fd35afb0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://374e7bef39522d65cf8e45c365178eb54d159b9267d0c2a2b97dfea10e52d41f\",\"dweb:/ipfs/QmfVYVnVSTRVAAifFSyFk8icePgw3eeqpjAKWAwfHMu6vX\"]},\"@lukso/lsp2-contracts/contracts/LSP2Utils.sol\":{\"keccak256\":\"0x86ce8a85d12c79b76db5413b05b9bff16cd865b395efdc0e85b06b3b5e17219b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7ebb6d1152f88b459b9e8fc3ef6361a9fb9d03bfa994148e6b125a2ee4025487\",\"dweb:/ipfs/QmX18bCecAtrjqKTyCPqRrUuvVYSW1XZZJUgvjfYnqfmEH\"]},\"@lukso/lsp4-contracts/contracts/LSP4Constants.sol\":{\"keccak256\":\"0xdf9b7c688d39a92cb3238136a9f56554245d5ae9b6568dcd6164d0e15c6f56c7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bb36a427cdfa0f394d2d78014f85152ab383499fc3c3d6285d4b801c656e7c3f\",\"dweb:/ipfs/QmZJehfeWKfHLyZLufhs9u4ZyVztGCUNWXzFgfZSU837vU\"]},\"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadataCore.sol\":{\"keccak256\":\"0xc442e52d34bb98acc1494675856b1f1d124af1375d8e23a9bfcc3b6c1865e1fc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://84254359ed929c1991136f9c3e934ddfa74cd85684de6c44cb70afa70d12f837\",\"dweb:/ipfs/QmWfmionUJJYyYDoeSQLGUHhou2sWxhWzwtU5GVjpumiSS\"]},\"@lukso/lsp4-contracts/contracts/LSP4Errors.sol\":{\"keccak256\":\"0x3db7fd252ed02ce27686141125c3d65d3ff682a32601e1e8611becd9357a57b5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5aded62a160ed7f9860996004d1656e8592b3f97d478d8597f8ad6afbe4f34b7\",\"dweb:/ipfs/QmcnmLVt8cmz1iRNaX5c6iNYckRgUXGz8YkjHW9T1KNB5A\"]},\"@lukso/lsp8-contracts/contracts/ILSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0x16dccaeb35168c4e61763a2c35b075eeed7505661b10fc9c16194af6eb3751ad\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://48f03e83068c241fb7f380b8ad31c8aa3c0f3de59df6ff4c4881b2589d7610b7\",\"dweb:/ipfs/QmW1wmc6kkUXF9gMdAwX7GxjrF4mLqUd7dognerLVRod4v\"]},\"@lukso/lsp8-contracts/contracts/LSP8Constants.sol\":{\"keccak256\":\"0x2372e7ec422a13ce3e7968e5fbb081b67816b5de974bd76ec61cfed787abbe1b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6d147e2f290ed60e36e9187dc7cce7d7ee1a62eee1c25c761e6090d88e3fa383\",\"dweb:/ipfs/Qmf9HEYCCjx2xBopvq7WhhtjvL9AEihvNcZ512751Wg6LN\"]},\"@lukso/lsp8-contracts/contracts/LSP8Errors.sol\":{\"keccak256\":\"0xff2c1791043272eb4a7c05bc77fa0a0234678991b0700f84d92edbd31fefd905\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://72b32242e8a4b7c12355de3f1c463437a81d8d5f8d34b3a8d25d726340b891c0\",\"dweb:/ipfs/Qmbhz53zdudSQbPwES2qMHqLHaph4GhigNETC481VWwK6J\"]},\"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAssetCore.sol\":{\"keccak256\":\"0xe536b1021d51a20951a3d1446aee234c3ea558a008d023343a30c8d2fb83f4ad\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c9366d571daaf4dc1fef4820c4f7ea1e2546753f9b01aa8ff9926d7d96653da3\",\"dweb:/ipfs/QmTfJhHp5HK2oTAm1Ttr8bGcLGWHguj2dNqnvVqzGuWfb1\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}"}},"@lukso/lsp8-contracts/contracts/extensions/LSP8Burnable.sol":{"LSP8Burnable":{"abi":[{"inputs":[],"name":"ERC725Y_DataKeysValuesEmptyArray","type":"error"},{"inputs":[],"name":"ERC725Y_DataKeysValuesLengthMismatch","type":"error"},{"inputs":[],"name":"ERC725Y_MsgValueDisallowed","type":"error"},{"inputs":[{"internalType":"bytes","name":"storedData","type":"bytes"}],"name":"InvalidExtensionAddress","type":"error"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"InvalidFunctionSelector","type":"error"},{"inputs":[],"name":"LSP4TokenNameNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenSymbolNotEditable","type":"error"},{"inputs":[],"name":"LSP4TokenTypeNotEditable","type":"error"},{"inputs":[{"internalType":"uint256","name":"callIndex","type":"uint256"}],"name":"LSP8BatchCallFailed","type":"error"},{"inputs":[],"name":"LSP8CannotSendToAddressZero","type":"error"},{"inputs":[],"name":"LSP8CannotUseAddressZeroAsOperator","type":"error"},{"inputs":[],"name":"LSP8InvalidTransferBatch","type":"error"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8NonExistentTokenId","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8NonExistingOperator","type":"error"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"address","name":"caller","type":"address"}],"name":"LSP8NotTokenOperator","type":"error"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"address","name":"caller","type":"address"}],"name":"LSP8NotTokenOwner","type":"error"},{"inputs":[{"internalType":"address","name":"tokenReceiver","type":"address"}],"name":"LSP8NotifyTokenReceiverContractMissingLSP1Interface","type":"error"},{"inputs":[{"internalType":"address","name":"tokenReceiver","type":"address"}],"name":"LSP8NotifyTokenReceiverIsEOA","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8OperatorAlreadyAuthorized","type":"error"},{"inputs":[{"internalType":"address","name":"caller","type":"address"},{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"LSP8RevokeOperatorNotAuthorized","type":"error"},{"inputs":[],"name":"LSP8TokenContractCannotHoldValue","type":"error"},{"inputs":[],"name":"LSP8TokenIdFormatNotEditable","type":"error"},{"inputs":[],"name":"LSP8TokenIdsDataEmptyArray","type":"error"},{"inputs":[],"name":"LSP8TokenIdsDataLengthMismatch","type":"error"},{"inputs":[],"name":"LSP8TokenOwnerCannotBeOperator","type":"error"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"address","name":"oldOwner","type":"address"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"LSP8TokenOwnerChanged","type":"error"},{"inputs":[{"internalType":"bytes4","name":"functionSelector","type":"bytes4"}],"name":"NoExtensionFoundForFunctionSelector","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"DataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorAuthorizationChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOwner","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"notified","type":"bool"},{"indexed":false,"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"OperatorRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"TokenIdDataChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"indexed":false,"internalType":"bool","name":"force","type":"bool"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"Transfer","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"authorizeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"batchCalls","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getData","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatch","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"tokenIds","type":"bytes32[]"},{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"}],"name":"getDataBatchForTokenIds","outputs":[{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes32","name":"dataKey","type":"bytes32"}],"name":"getDataForTokenId","outputs":[{"internalType":"bytes","name":"dataValue","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"getOperatorsOf","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"isOperatorFor","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bool","name":"notify","type":"bool"},{"internalType":"bytes","name":"operatorNotificationData","type":"bytes"}],"name":"revokeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setData","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"tokenIds","type":"bytes32[]"},{"internalType":"bytes32[]","name":"dataKeys","type":"bytes32[]"},{"internalType":"bytes[]","name":"dataValues","type":"bytes[]"}],"name":"setDataBatchForTokenIds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bytes32","name":"dataKey","type":"bytes32"},{"internalType":"bytes","name":"dataValue","type":"bytes"}],"name":"setDataForTokenId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"}],"name":"tokenIdsOf","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"tokenId","type":"bytes32"}],"name":"tokenOwnerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes32","name":"tokenId","type":"bytes32"},{"internalType":"bool","name":"force","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"from","type":"address[]"},{"internalType":"address[]","name":"to","type":"address[]"},{"internalType":"bytes32[]","name":"tokenId","type":"bytes32[]"},{"internalType":"bool[]","name":"force","type":"bool[]"},{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"transferBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"authorizeOperator(address,bytes32,bytes)":"86a10ddd","balanceOf(address)":"70a08231","batchCalls(bytes[])":"6963d438","burn(bytes32,bytes)":"6c79b70b","getData(bytes32)":"54f6127f","getDataBatch(bytes32[])":"dedff9c6","getDataBatchForTokenIds(bytes32[],bytes32[])":"1d26fce6","getDataForTokenId(bytes32,bytes32)":"16e023b3","getOperatorsOf(bytes32)":"49a6078d","isOperatorFor(address,bytes32)":"2a3654a4","owner()":"8da5cb5b","renounceOwnership()":"715018a6","revokeOperator(address,bytes32,bool,bytes)":"db8c9663","setData(bytes32,bytes)":"7f23690c","setDataBatch(bytes32[],bytes[])":"97902421","setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])":"be9f0e6f","setDataForTokenId(bytes32,bytes32,bytes)":"d6c1407c","supportsInterface(bytes4)":"01ffc9a7","tokenIdsOf(address)":"a3b261f2","tokenOwnerOf(bytes32)":"217b2270","totalSupply()":"18160ddd","transfer(address,address,bytes32,bool,bytes)":"511b6952","transferBatch(address[],address[],bytes32[],bool[],bytes[])":"7e87632c","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_DataKeysValuesLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC725Y_MsgValueDisallowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"storedData\",\"type\":\"bytes\"}],\"name\":\"InvalidExtensionAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"InvalidFunctionSelector\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenNameNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenSymbolNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP4TokenTypeNotEditable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"callIndex\",\"type\":\"uint256\"}],\"name\":\"LSP8BatchCallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotSendToAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8CannotUseAddressZeroAsOperator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8InvalidTransferBatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistentTokenId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8NonExistingOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LSP8NotTokenOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverContractMissingLSP1Interface\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenReceiver\",\"type\":\"address\"}],\"name\":\"LSP8NotifyTokenReceiverIsEOA\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8OperatorAlreadyAuthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"LSP8RevokeOperatorNotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenContractCannotHoldValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenIdFormatNotEditable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenIdsDataEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenIdsDataLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LSP8TokenOwnerCannotBeOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"LSP8TokenOwnerChanged\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"functionSelector\",\"type\":\"bytes4\"}],\"name\":\"NoExtensionFoundForFunctionSelector\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"DataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorAuthorizationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"notified\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"OperatorRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"TokenIdDataChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"batchCalls\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatch\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"tokenIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"}],\"name\":\"getDataBatchForTokenIds\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"}],\"name\":\"getDataForTokenId\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"getOperatorsOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"notify\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"operatorNotificationData\",\"type\":\"bytes\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setData\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"tokenIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"dataKeys\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"dataValues\",\"type\":\"bytes[]\"}],\"name\":\"setDataBatchForTokenIds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"dataKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"dataValue\",\"type\":\"bytes\"}],\"name\":\"setDataForTokenId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"tokenIdsOf\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"}],\"name\":\"tokenOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"tokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"force\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"from\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"tokenId\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool[]\",\"name\":\"force\",\"type\":\"bool[]\"},{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"transferBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"LSP8 token extension that allows token holders to destroy both their own tokens and those that they have an allowance for as an operator.\",\"errors\":{\"ERC725Y_DataKeysValuesEmptyArray()\":[{\"details\":\"Reverts when one of the array parameter provided to {setDataBatch} function is an empty array.\"}],\"ERC725Y_DataKeysValuesLengthMismatch()\":[{\"details\":\"Reverts when there is not the same number of elements in the `datakeys` and `dataValues` array parameters provided when calling the {setDataBatch} function.\"}],\"ERC725Y_MsgValueDisallowed()\":[{\"details\":\"Reverts when sending value to the {setData} or {setDataBatch} function.\"}],\"InvalidExtensionAddress(bytes)\":[{\"details\":\"reverts when the bytes retrieved from the LSP17 data key is not a valid address (not 20 bytes)\"}],\"InvalidFunctionSelector(bytes)\":[{\"details\":\"reverts when the contract is called with a function selector not valid (less than 4 bytes of data)\"}],\"LSP4TokenNameNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenName` after the digital asset contract has been deployed / initialized. The `LSP4TokenName` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenSymbolNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenSymbol` after the digital asset contract has been deployed / initialized. The `LSP4TokenSymbol` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor/initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP4TokenTypeNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP4TokenType` after the digital asset contract has been deployed / initialized. The `LSP4TokenType` data key is located inside the ERC725Y data key-value store of the digital asset contract. It can be set only once inside the constructor / initializer when the digital asset contract is being deployed / initialized.\"}],\"LSP8BatchCallFailed(uint256)\":[{\"details\":\"Reverts when a batch call failed.\"}],\"LSP8CannotSendToAddressZero()\":[{\"details\":\"Reverts when trying to send token to the zero address.\"}],\"LSP8CannotUseAddressZeroAsOperator()\":[{\"details\":\"Reverts when trying to set the zero address as an operator.\"}],\"LSP8InvalidTransferBatch()\":[{\"details\":\"Reverts when the parameters used for `transferBatch` have different lengths.\"}],\"LSP8NonExistentTokenId(bytes32)\":[{\"details\":\"Reverts when `tokenId` has not been minted.\"}],\"LSP8NonExistingOperator(address,bytes32)\":[{\"details\":\"Reverts when `operator` is not an operator for the `tokenId`.\"}],\"LSP8NotTokenOperator(bytes32,address)\":[{\"details\":\"Reverts when `caller` is not an allowed operator for `tokenId`.\"}],\"LSP8NotTokenOwner(address,bytes32,address)\":[{\"details\":\"Reverts when `caller` is not the `tokenOwner` of the `tokenId`.\"}],\"LSP8NotifyTokenReceiverContractMissingLSP1Interface(address)\":[{\"details\":\"Reverts if the `tokenReceiver` does not implement LSP1 when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8NotifyTokenReceiverIsEOA(address)\":[{\"details\":\"Reverts if the `tokenReceiver` is an EOA when minting or transferring tokens with `bool force` set as `false`.\"}],\"LSP8OperatorAlreadyAuthorized(address,bytes32)\":[{\"details\":\"Reverts when `operator` is already authorized for the `tokenId`.\"}],\"LSP8RevokeOperatorNotAuthorized(address,address,bytes32)\":[{\"details\":\"Reverts when the call to revoke operator is not authorized.\"}],\"LSP8TokenContractCannotHoldValue()\":[{\"details\":\"Error occurs when sending native tokens to the LSP8 contract without sending any data. E.g. Sending value without passing a bytes4 function selector to call a LSP17 Extension.\"}],\"LSP8TokenIdFormatNotEditable()\":[{\"details\":\"Reverts when trying to edit the data key `LSP8TokenIdFormat` after the identifiable digital asset contract has been deployed. The `LSP8TokenIdFormat` data key is located inside the ERC725Y Data key-value store of the identifiable digital asset contract. It can be set only once inside the constructor/initializer when the identifiable digital asset contract is being deployed.\"}],\"LSP8TokenIdsDataEmptyArray()\":[{\"details\":\"Reverts when empty arrays is passed to the function\"}],\"LSP8TokenIdsDataLengthMismatch()\":[{\"details\":\"Reverts when the length of the token IDs data arrays is not equal\"}],\"LSP8TokenOwnerCannotBeOperator()\":[{\"details\":\"Reverts when trying to authorize or revoke the token's owner as an operator.\"}],\"LSP8TokenOwnerChanged(bytes32,address,address)\":[{\"details\":\"Reverts when the token owner changed inside the {_beforeTokenTransfer} hook.\"}],\"NoExtensionFoundForFunctionSelector(bytes4)\":[{\"details\":\"reverts when there is no extension for the function selector being called with\"}]},\"events\":{\"DataChanged(bytes32,bytes)\":{\"details\":\"Emitted when data at a specific `dataKey` was changed to a new value `dataValue`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\"}},\"OperatorAuthorizationChanged(address,address,bytes32,bytes)\":{\"details\":\"Emitted when `tokenOwner` enables `operator` to transfer or burn the `tokenId`.\",\"params\":{\"operator\":\"The address authorized as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` address has access on behalf of `tokenOwner`.\",\"tokenOwner\":\"The owner of the `tokenId`.\"}},\"OperatorRevoked(address,address,bytes32,bool,bytes)\":{\"details\":\"Emitted when `tokenOwner` disables `operator` to transfer or burn `tokenId` on its behalf.\",\"params\":{\"notified\":\"Bool indicating whether the operator has been notified or not\",\"operator\":\"The address revoked from the operator array ({getOperatorsOf}).\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` is revoked from operating on.\",\"tokenOwner\":\"The owner of the `tokenId`.\"}},\"TokenIdDataChanged(bytes32,bytes32,bytes)\":{\"details\":\"Emitted when setting data for `tokenId`.\",\"params\":{\"dataKey\":\"The data key for which a bytes value is set.\",\"dataValue\":\"The value to set for the given data key.\",\"tokenId\":\"The tokenId which data is set for.\"}},\"Transfer(address,address,address,bytes32,bool,bytes)\":{\"details\":\"Emitted when `tokenId` token is transferred from the `from` to the `to` address.\",\"params\":{\"data\":\"Any additional data the caller included by the caller during the transfer, and sent in the hooks to the `from` and `to` addresses.\",\"force\":\"If the token transfer enforces the `to` recipient address to be a contract that implements the LSP1 standard or not.\",\"from\":\"The previous owner of the `tokenId`\",\"operator\":\"The address of operator that sent the `tokenId`\",\"to\":\"The new owner of `tokenId`\",\"tokenId\":\"The tokenId that was transferred\"}}},\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address,bytes32,bytes)\":{\"details\":\"Allow an `operator` address to transfer or burn a specific `tokenId` on behalf of its token owner. See {isOperatorFor}. Notify the operator based on the LSP1-UniversalReceiver standard\",\"params\":{\"operator\":\"The address to authorize as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The token ID operator has access to.\"}},\"balanceOf(address)\":{\"details\":\"Get the number of token IDs owned by `tokenOwner`.\",\"params\":{\"tokenOwner\":\"The address to query     *\"},\"returns\":{\"_0\":\"The total number of token IDs that `tokenOwner` owns.\"}},\"batchCalls(bytes[])\":{\"custom:info\":\"It's not possible to send value along the functions call due to the use of `delegatecall`.\",\"details\":\"Allows a caller to batch different function calls in one call. Perform a `delegatecall` on self, to call different functions with preserving the context.\",\"params\":{\"data\":\"An array of ABI encoded function calls to be called on the contract.\"},\"returns\":{\"results\":\"An array of abi-encoded data returned by the functions executed.\"}},\"burn(bytes32,bytes)\":{\"details\":\"See internal {_burn} function for details.\",\"params\":{\"data\":\"Any extra data to be sent alongside burning the tokenId.\",\"tokenId\":\"The tokenId to burn.\"}},\"getData(bytes32)\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at a specific data key `dataKey`.\",\"params\":{\"dataKey\":\"The data key for which to retrieve the value.\"},\"returns\":{\"dataValue\":\"The bytes value stored under the specified data key.\"}},\"getDataBatch(bytes32[])\":{\"details\":\"Get in the ERC725Y storage the bytes data stored at multiple data keys `dataKeys`.\",\"params\":{\"dataKeys\":\"The array of keys which values to retrieve\"},\"returns\":{\"dataValues\":\"The array of data stored at multiple keys\"}},\"getDataBatchForTokenIds(bytes32[],bytes32[])\":{\"params\":{\"dataKeys\":\"An array of data keys corresponding to the token IDs.\",\"tokenIds\":\"An array of token IDs.\"},\"returns\":{\"dataValues\":\"An array of data values for each pair of `tokenId` and `dataKey`.\"}},\"getDataForTokenId(bytes32,bytes32)\":{\"params\":{\"dataKey\":\"The key for the data to retrieve.\",\"tokenId\":\"The unique identifier for a token.\"},\"returns\":{\"dataValue\":\"The data value associated with the given `tokenId` and `dataKey`.\"}},\"getOperatorsOf(bytes32)\":{\"details\":\"Returns all `operator` addresses that are allowed to transfer or burn a specific `tokenId` on behalf of its owner.\",\"params\":{\"tokenId\":\"The token ID to get the operators for.\"},\"returns\":{\"_0\":\"An array of operators allowed to transfer or burn a specific `tokenId`. Requirements - `tokenId` must exist.\"}},\"isOperatorFor(address,bytes32)\":{\"details\":\"Returns whether `operator` address is an operator for a given `tokenId`.\",\"params\":{\"operator\":\"The address to query operator status for.\",\"tokenId\":\"The token ID to check if `operator` is allowed to operate on.\"},\"returns\":{\"_0\":\"`true` if `operator` is an operator for `tokenId`, `false` otherwise.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revokeOperator(address,bytes32,bool,bytes)\":{\"details\":\"Remove access of `operator` for a given `tokenId`, disallowing it to transfer `tokenId` on behalf of its owner. See also {isOperatorFor}.\",\"params\":{\"notify\":\"Boolean indicating whether to notify the operator or not\",\"operator\":\"The address to revoke as an operator.\",\"operatorNotificationData\":\"The data to notify the operator about via LSP1.\",\"tokenId\":\"The tokenId `operator` is revoked from operating on.\"}},\"setData(bytes32,bytes)\":{\"custom:events\":\"{DataChanged} event.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner}.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\",\"details\":\"Sets a single bytes value `dataValue` in the ERC725Y storage for a specific data key `dataKey`. The function is marked as payable to enable flexibility on child contracts. For instance to implement a fee mechanism for setting specific data.\",\"params\":{\"dataKey\":\"The data key for which to set a new value.\",\"dataValue\":\"The new bytes value to set.\"}},\"setDataBatch(bytes32[],bytes[])\":{\"custom:events\":\"{DataChanged} event **for each data key/value pair set**.\",\"custom:requirements\":\"- SHOULD only be callable by the {owner} of the contract.\",\"custom:warning\":\"**Note for developers:** despite the fact that this function is set as `payable`, if the function is not intended to receive value (= native tokens), **an additional check should be implemented to ensure that `msg.value` sent was equal to 0**.\",\"details\":\"Batch data setting function that behaves the same as {setData} but allowing to set multiple data key/value pairs in the ERC725Y storage in the same transaction.\",\"params\":{\"dataKeys\":\"An array of data keys to set bytes values for.\",\"dataValues\":\"An array of bytes values to set for each `dataKeys`.\"}},\"setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])\":{\"params\":{\"dataKeys\":\"An array of data keys corresponding to the token IDs.\",\"dataValues\":\"An array of values to set for the given data keys.\",\"tokenIds\":\"An array of token IDs.\"}},\"setDataForTokenId(bytes32,bytes32,bytes)\":{\"params\":{\"dataKey\":\"The key for the data to set.\",\"dataValue\":\"The value to set for the given data key.\",\"tokenId\":\"The unique identifier for a token.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenIdsOf(address)\":{\"details\":\"Returns the list of token IDs that the `tokenOwner` address owns.\",\"params\":{\"tokenOwner\":\"The address that we want to get the list of token IDs for.\"},\"returns\":{\"_0\":\"An array of `bytes32[] tokenIds` owned by `tokenOwner`.\"}},\"tokenOwnerOf(bytes32)\":{\"details\":\"Returns the address that owns a given `tokenId`.\",\"params\":{\"tokenId\":\"The token ID to query the owner for.\"},\"returns\":{\"_0\":\"The owner address of the given `tokenId`.\"}},\"totalSupply()\":{\"details\":\"Returns the number of existing tokens that have been minted in this contract.\",\"returns\":{\"_0\":\"The number of existing tokens.\"}},\"transfer(address,address,bytes32,bool,bytes)\":{\"details\":\"Transfer a given `tokenId` token from the `from` address to the `to` address. If operators are set for a specific `tokenId`, all the operators are revoked after the tokenId have been transferred. The `force` parameter MUST be set to `true` when transferring tokens to Externally Owned Accounts (EOAs) or contracts that do not implement the LSP1 standard.\",\"params\":{\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks of the `from` and `to` addresses.\",\"force\":\"When set to `true`, the `to` address CAN be any addres. When set to `false`, the `to` address MUST be a contract that supports the LSP1 UniversalReceiver standard.\",\"from\":\"The address that owns the given `tokenId`.\",\"to\":\"The address that will receive the `tokenId`.\",\"tokenId\":\"The token ID to transfer.\"}},\"transferBatch(address[],address[],bytes32[],bool[],bytes[])\":{\"details\":\"Transfers multiple tokens at once based on the arrays of `from`, `to` and `tokenId`. If any transfer fails, the whole call will revert.\",\"params\":{\"data\":\"Any additional data the caller wants included in the emitted event, and sent in the hooks to the `from` and `to` addresses.\",\"force\":\"When set to `true`, `to` may be any address. When set to `false`, `to` must be a contract that supports the LSP1 standard and not revert.\",\"from\":\"An array of sending addresses.\",\"to\":\"An array of recipient addresses.\",\"tokenId\":\"An array of token IDs to transfer.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"LSP8BatchCallFailed(uint256)\":[{\"notice\":\"Batch call failed.\"}],\"LSP8TokenContractCannotHoldValue()\":[{\"notice\":\"LSP8 contract cannot receive native tokens.\"}]},\"events\":{\"DataChanged(bytes32,bytes)\":{\"notice\":\"The following data key/value pair has been changed in the ERC725Y storage: Data key: `dataKey`, data value: `dataValue`.\"}},\"kind\":\"user\",\"methods\":{\"batchCalls(bytes[])\":{\"notice\":\"Executing the following batch of abi-encoded function calls on the contract: `data`.\"},\"burn(bytes32,bytes)\":{\"notice\":\"Burning tokenId `tokenId`. This tokenId will not be recoverable! (additional data sent: `data`).\"},\"getData(bytes32)\":{\"notice\":\"Reading the ERC725Y storage for data key `dataKey` returned the following value: `dataValue`.\"},\"getDataBatch(bytes32[])\":{\"notice\":\"Reading the ERC725Y storage for data keys `dataKeys` returned the following values: `dataValues`.\"},\"getDataBatchForTokenIds(bytes32[],bytes32[])\":{\"notice\":\"Retrieves data in batch for multiple `tokenId` and `dataKey` pairs.\"},\"getDataForTokenId(bytes32,bytes32)\":{\"notice\":\"Retrieves data for a specific `tokenId` and `dataKey`.\"},\"setData(bytes32,bytes)\":{\"notice\":\"Setting the following data key value pair in the ERC725Y storage. Data key: `dataKey`, data value: `dataValue`.\"},\"setDataBatch(bytes32[],bytes[])\":{\"notice\":\"Setting the following data key value pairs in the ERC725Y storage. Data keys: `dataKeys`, data values: `dataValues`.\"},\"setDataBatchForTokenIds(bytes32[],bytes32[],bytes[])\":{\"notice\":\"Sets data in batch for multiple `tokenId` and `dataKey` pairs.\"},\"setDataForTokenId(bytes32,bytes32,bytes)\":{\"notice\":\"Sets data for a specific `tokenId` and `dataKey`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@lukso/lsp8-contracts/contracts/extensions/LSP8Burnable.sol\":\"LSP8Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/ERC725Y.sol\":{\"keccak256\":\"0xeab1c553ab3ef1d83b99d2d93dacbb03af8ef43eca7df4ac91cdf5b15882abcc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://492663e0fedaea5fc7f008ba780d160e290fa4bd455f3af78e456d2188835533\",\"dweb:/ipfs/QmSoMLfrXAjHnTzBerxDiZ5X9wq6RPfSpvqUJ3brKS4Y4s\"]},\"@erc725/smart-contracts/contracts/ERC725YCore.sol\":{\"keccak256\":\"0x54b779c764317ccecb181608112ff7440bb28ef8c0770e7340bc5cac4fc7d0f9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cacac6f06bde5d7cd9852e45ef2baa949dc21a89b3224194bdb1490857cfb08b\",\"dweb:/ipfs/QmPHnXHiB65UZPk7thKvW2C1DpxCJ2UeBsj7u78r2HLTJG\"]},\"@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xb198a56711fbe79cce967068f9c7f41760cee018b9ce330a82e8cca8ed7909a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5108bd75251da5980d5021cb6114d7d706eaa82d269fa96adb40709d440f683\",\"dweb:/ipfs/QmdWj75HZYdJLahnmiPEAshFjempzGR7hjj5gGi9LSqnqj\"]},\"@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0x8b5760e40f04b9ec9de9339136a481fb3cd4fe29f5528fa6756320cd256d58fb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://28211f3a6bb2c6bf3d7dbb855d9eb46099ecc132213688e550ad314c619e8bf8\",\"dweb:/ipfs/QmUcuXAELqMDFmSxKWbhiBmuEKzw92h7U1ev3pgeDX4xm7\"]},\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x5b8764a678dc9d6673eafa8ad0ee6053cdea30acb58015bdf9c93f9f1788b49b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e26dcf5d66120b7a0895ddcaec92207e17c63344fca885d2b7e3fe953ec027c\",\"dweb:/ipfs/QmetAuz9etfz9BG9oPJCwMthnhfd8XvZYLBmMfrPNUm3qV\"]},\"@lukso/lsp1-contracts/contracts/LSP1Constants.sol\":{\"keccak256\":\"0x0f87fc38243fc70316e22814f5a79d9c0770a39f64077cbc6fb5fddfa1d4c23c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c7d83f054b71dfa5ca48a9a811e6a985ff6b38a9e5f4c220ea2ec3a322cce7cf\",\"dweb:/ipfs/QmaehpHpqc5dtRCm9BoU8vCY59AeEnmGvmmwPirVr47oGp\"]},\"@lukso/lsp1-contracts/contracts/LSP1Utils.sol\":{\"keccak256\":\"0xa81bf1910c3b56b43bf58d0be2105c434ed3b65cfb3674e282b5aba3fd35afb0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://374e7bef39522d65cf8e45c365178eb54d159b9267d0c2a2b97dfea10e52d41f\",\"dweb:/ipfs/QmfVYVnVSTRVAAifFSyFk8icePgw3eeqpjAKWAwfHMu6vX\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol\":{\"keccak256\":\"0x6d4bb208587872ad563fef31655c44f7de03baa5b4a513910c0003aea0c04036\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://880c3b21e2090a14e7bba94ac5c8d4633e8a81d93c6f619454167a01dcc866d8\",\"dweb:/ipfs/QmZp6YVM4Eor5XtuXXqGRaPAJ3u5KCmLwuNRAGf4JY7sK1\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol\":{\"keccak256\":\"0x75a0159f76a3c5bf26b13aa404aca2f588ea41928eb1483683e29d2031fe5abf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f1b93e7eb5a88a2f42a9dfa061ca5e93e7650cd9114010faa18faf0a5508f579\",\"dweb:/ipfs/QmXmLhf1ejsF7G1FZnvpTBRS9oQ9ZTuqCBRT1im3vAuUYW\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol\":{\"keccak256\":\"0x5983e916a4cb604a45b585d7f745f5ac8bf69ef51fbc78cf8e70408e29e008c2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e1e9a7b8dc210030d35b4e2c3dbb7107f51c063256f7e6120997ed638f033db1\",\"dweb:/ipfs/QmRQgkaDnC9sAb9mZJtVgBsAR1xfmcTA2erCVUiyszy15o\"]},\"@lukso/lsp2-contracts/contracts/LSP2Utils.sol\":{\"keccak256\":\"0x86ce8a85d12c79b76db5413b05b9bff16cd865b395efdc0e85b06b3b5e17219b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7ebb6d1152f88b459b9e8fc3ef6361a9fb9d03bfa994148e6b125a2ee4025487\",\"dweb:/ipfs/QmX18bCecAtrjqKTyCPqRrUuvVYSW1XZZJUgvjfYnqfmEH\"]},\"@lukso/lsp4-contracts/contracts/LSP4Constants.sol\":{\"keccak256\":\"0xdf9b7c688d39a92cb3238136a9f56554245d5ae9b6568dcd6164d0e15c6f56c7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bb36a427cdfa0f394d2d78014f85152ab383499fc3c3d6285d4b801c656e7c3f\",\"dweb:/ipfs/QmZJehfeWKfHLyZLufhs9u4ZyVztGCUNWXzFgfZSU837vU\"]},\"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol\":{\"keccak256\":\"0xd120529845267176d7658eb3b610fd9412012ce58cfde05a42f7fcee1c371dce\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4e2919d97ff39ae203dc57f53a7ae6a4f1dfe9354e564744ee3752771687b796\",\"dweb:/ipfs/QmbNwNCDnLcD4jrboPJhAMXVEiVGbagBteXM5sVByZ8A1h\"]},\"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadataCore.sol\":{\"keccak256\":\"0xc442e52d34bb98acc1494675856b1f1d124af1375d8e23a9bfcc3b6c1865e1fc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://84254359ed929c1991136f9c3e934ddfa74cd85684de6c44cb70afa70d12f837\",\"dweb:/ipfs/QmWfmionUJJYyYDoeSQLGUHhou2sWxhWzwtU5GVjpumiSS\"]},\"@lukso/lsp4-contracts/contracts/LSP4Errors.sol\":{\"keccak256\":\"0x3db7fd252ed02ce27686141125c3d65d3ff682a32601e1e8611becd9357a57b5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5aded62a160ed7f9860996004d1656e8592b3f97d478d8597f8ad6afbe4f34b7\",\"dweb:/ipfs/QmcnmLVt8cmz1iRNaX5c6iNYckRgUXGz8YkjHW9T1KNB5A\"]},\"@lukso/lsp8-contracts/contracts/ILSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0x16dccaeb35168c4e61763a2c35b075eeed7505661b10fc9c16194af6eb3751ad\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://48f03e83068c241fb7f380b8ad31c8aa3c0f3de59df6ff4c4881b2589d7610b7\",\"dweb:/ipfs/QmW1wmc6kkUXF9gMdAwX7GxjrF4mLqUd7dognerLVRod4v\"]},\"@lukso/lsp8-contracts/contracts/LSP8Constants.sol\":{\"keccak256\":\"0x2372e7ec422a13ce3e7968e5fbb081b67816b5de974bd76ec61cfed787abbe1b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6d147e2f290ed60e36e9187dc7cce7d7ee1a62eee1c25c761e6090d88e3fa383\",\"dweb:/ipfs/Qmf9HEYCCjx2xBopvq7WhhtjvL9AEihvNcZ512751Wg6LN\"]},\"@lukso/lsp8-contracts/contracts/LSP8Errors.sol\":{\"keccak256\":\"0xff2c1791043272eb4a7c05bc77fa0a0234678991b0700f84d92edbd31fefd905\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://72b32242e8a4b7c12355de3f1c463437a81d8d5f8d34b3a8d25d726340b891c0\",\"dweb:/ipfs/Qmbhz53zdudSQbPwES2qMHqLHaph4GhigNETC481VWwK6J\"]},\"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0xe8cc62169bfbf1e6472e217ab5833428dc8234a1db77f7cc65e360bea7ff89c9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4939ef03cba6fbb74d409ab712721017095542f100fd95666af7ace58fa176c8\",\"dweb:/ipfs/QmSau5c7tUcawWgGEqwe5U14dop6x9YkLDsaUWTzAktHik\"]},\"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAssetCore.sol\":{\"keccak256\":\"0xe536b1021d51a20951a3d1446aee234c3ea558a008d023343a30c8d2fb83f4ad\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c9366d571daaf4dc1fef4820c4f7ea1e2546753f9b01aa8ff9926d7d96653da3\",\"dweb:/ipfs/QmTfJhHp5HK2oTAm1Ttr8bGcLGWHguj2dNqnvVqzGuWfb1\"]},\"@lukso/lsp8-contracts/contracts/extensions/LSP8Burnable.sol\":{\"keccak256\":\"0x516a83ea1433ca11c8e47848ec7bc800c3b03af44e992aadfa8a8018ad264d43\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://aa7883d7345ead14af97b77c84c959f610ab7d4d728ddcd84498af01b1794792\",\"dweb:/ipfs/QmSzUpZxhPbCzLHBevTAGjgFdPFdE1xzUoFXwgcGrBnFmA\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC1271.sol":{"IERC1271":{"abi":[{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"isValidSignature","outputs":[{"internalType":"bytes4","name":"magicValue","type":"bytes4"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"isValidSignature(bytes32,bytes)":"1626ba7e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271]. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"hash\":\"Hash of the data to be signed\",\"signature\":\"Signature byte array associated with _data\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":\"IERC1271\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220720a142612333198f704ec81f0f142a327fbb17a02383df5074b9107e9bc832c64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0xA142612333198F704EC81F0F142A327FBB17A MUL CODESIZE RETURNDATASIZE CREATE2 SMOD 0x4B SWAP2 SMOD 0xE9 0xBC DUP4 0x2C PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"194:9169:37:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9169:37;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220720a142612333198f704ec81f0f142a327fbb17a02383df5074b9107e9bc832c64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0xA142612333198F704EC81F0F142A327FBB17A MUL CODESIZE RETURNDATASIZE CREATE2 SMOD 0x4B SWAP2 SMOD 0xE9 0xBC DUP4 0x2C PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"194:9169:37:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Create2.sol":{"Create2":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204267c9b4ea3e5e0e773c54ca7c9a6b9c06e52387471a7f2173263cd9af5ab3bd64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP PUSH8 0xC9B4EA3E5E0E773C SLOAD 0xCA PUSH29 0x9A6B9C06E52387471A7F2173263CD9AF5AB3BD64736F6C634300081400 CALLER ","sourceMap":"494:3457:39:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;494:3457:39;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204267c9b4ea3e5e0e773c54ca7c9a6b9c06e52387471a7f2173263cd9af5ab3bd64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP PUSH8 0xC9B4EA3E5E0E773C SLOAD 0xCA PUSH29 0x9A6B9C06E52387471A7F2173263CD9AF5AB3BD64736F6C634300081400 CALLER ","sourceMap":"494:3457:39:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Create2.sol\":\"Create2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0x6e00f269073ffc4350e56b7e8153c9092d5f70bfba423299990514183101ef89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc5ff5c204604be7594ce2fa9100a0638f22b5aada6ebec1e165b0f50a48447\",\"dweb:/ipfs/QmfH7uWphPrq8jqwGvyh4pFnLEgEPmLwyGV2Bvx1Acjggh\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220102f88b614a79ac5cec9c9122c8a01e580be2670a2c4c5c0027e19083ba89e4a64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT 0x2F DUP9 0xB6 EQ 0xA7 SWAP11 0xC5 0xCE 0xC9 0xC9 SLT 0x2C DUP11 ADD 0xE5 DUP1 0xBE 0x26 PUSH17 0xA2C4C5C0027E19083BA89E4A64736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"220:2559:40:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;220:2559:40;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220102f88b614a79ac5cec9c9122c8a01e580be2670a2c4c5c0027e19083ba89e4a64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT 0x2F DUP9 0xB6 EQ 0xA7 SWAP11 0xC5 0xCE 0xC9 0xC9 SLT 0x2C DUP11 ADD 0xE5 DUP1 0xBE 0x26 PUSH17 0xA2C4C5C0027E19083BA89E4A64736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"220:2559:40:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cb91b603b6c37a8cc5a1590470a05f336200585f941b4fb62180b59fded3532d64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB SWAP2 0xB6 SUB 0xB6 0xC3 PUSH27 0x8CC5A1590470A05F336200585F941B4FB62180B59FDED3532D6473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"369:8761:41:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;369:8761:41;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cb91b603b6c37a8cc5a1590470a05f336200585f941b4fb62180b59fded3532d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB SWAP2 0xB6 SUB 0xB6 0xC3 PUSH27 0x8CC5A1590470A05F336200585F941B4FB62180B59FDED3532D6473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"369:8761:41:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol":{"ERC165Checker":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205951e9d0fe7a90f784f2a49176e2e8934f0fd057fb804d819c8b03f5a28cc27164736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE MLOAD 0xE9 0xD0 INVALID PUSH27 0x90F784F2A49176E2E8934F0FD057FB804D819C8B03F5A28CC27164 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"449:4621:43:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;449:4621:43;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205951e9d0fe7a90f784f2a49176e2e8934f0fd057fb804d819c8b03f5a28cc27164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE MLOAD 0xE9 0xD0 INVALID PUSH27 0x90F784F2A49176E2E8934F0FD057FB804D819C8B03F5A28CC27164 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"449:4621:43:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library used to query support of an interface declared via {IERC165}. Note that these functions return the actual result of the query: they do not `revert` if an interface is not supported. It is up to the caller to decide what to do in these cases.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":\"ERC165Checker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220326ab4ab8cdcbd14b5d293e62b6f60c0700244b0969b5aca63343fdd5246fd1964736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN PUSH11 0xB4AB8CDCBD14B5D293E62B PUSH16 0x60C0700244B0969B5ACA63343FDD5246 REVERT NOT PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"202:12582:45:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12582:45;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220326ab4ab8cdcbd14b5d293e62b6f60c0700244b0969b5aca63343fdd5246fd1964736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN PUSH11 0xB4AB8CDCBD14B5D293E62B PUSH16 0x60C0700244B0969B5ACA63343FDD5246 REVERT NOT PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"202:12582:45:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bd1deca561bc55b5892b38a3bd8266b1678e769fcad1dd732c8e97a135a50f5064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD SAR 0xEC 0xA5 PUSH2 0xBC55 0xB5 DUP10 0x2B CODESIZE LOG3 0xBD DUP3 PUSH7 0xB1678E769FCAD1 0xDD PUSH20 0x2C8E97A135A50F5064736F6C6343000814003300 ","sourceMap":"215:1047:46:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;215:1047:46;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bd1deca561bc55b5892b38a3bd8266b1678e769fcad1dd732c8e97a135a50f5064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD SAR 0xEC 0xA5 PUSH2 0xBC55 0xB5 DUP10 0x2B CODESIZE LOG3 0xBD DUP3 PUSH7 0xB1678E769FCAD1 0xDD PUSH20 0x2C8E97A135A50F5064736F6C6343000814003300 ","sourceMap":"215:1047:46:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205d687e2577aa5cf3cb92c53682c09d8da084ec46c70ef915321d6889b1a8cb3f64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D PUSH9 0x7E2577AA5CF3CB92C5 CALLDATASIZE DUP3 0xC0 SWAP14 DUP14 LOG0 DUP5 0xEC CHAINID 0xC7 0xE 0xF9 ISZERO ORIGIN SAR PUSH9 0x89B1A8CB3F64736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"1329:11630:47:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1329:11630:47;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205d687e2577aa5cf3cb92c53682c09d8da084ec46c70ef915321d6889b1a8cb3f64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D PUSH9 0x7E2577AA5CF3CB92C5 CALLDATASIZE DUP3 0xC0 SWAP14 DUP14 LOG0 DUP5 0xEC CHAINID 0xC7 0xE 0xF9 ISZERO ORIGIN SAR PUSH9 0x89B1A8CB3F64736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"1329:11630:47:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}"}},"contracts/OrderExtension.sol":{"OrderExtension":{"abi":[{"inputs":[{"internalType":"address","name":"target_","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"BlockAlreadyConfirmed","type":"error"},{"inputs":[],"name":"CallerNotPerkOwner","type":"error"},{"inputs":[],"name":"CallerNotTarget","type":"error"},{"inputs":[],"name":"IncorrectValue","type":"error"},{"inputs":[],"name":"InvalidNonce","type":"error"},{"inputs":[],"name":"InvalidSignature","type":"error"},{"inputs":[],"name":"PerkAlreadyClaimed","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"orderId","type":"bytes"}],"name":"OrderCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"newTarget","type":"address"}],"name":"TargetChanged","type":"event"},{"inputs":[],"name":"VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"collection","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"maxBlockNumber","type":"uint256"},{"internalType":"bytes32","name":"nonce","type":"bytes32"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"orderId","type":"bytes"}],"name":"getOrderHash","outputs":[{"internalType":"bytes","name":"message","type":"bytes"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"collection","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"maxBlockNumber","type":"uint256"},{"internalType":"address","name":"perkAddress","type":"address"},{"internalType":"bytes32","name":"perkTokenId","type":"bytes32"},{"internalType":"bytes32","name":"nonce","type":"bytes32"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"orderId","type":"bytes"}],"name":"getRedeemPerkHash","outputs":[{"internalType":"bytes","name":"message","type":"bytes"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"perkAddress","type":"address"},{"internalType":"address","name":"collection","type":"address"},{"internalType":"bytes32","name":"perkTokenId","type":"bytes32"}],"name":"isPerkClaimed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"collection","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"maxBlockNumber","type":"uint256"},{"internalType":"bytes32","name":"nonce","type":"bytes32"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"bytes","name":"orderId","type":"bytes"}],"name":"placeOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"collection","type":"address"},{"internalType":"address","name":"perkAddress","type":"address"},{"internalType":"bytes32","name":"perkTokenId","type":"bytes32"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"maxBlockNumber","type":"uint256"},{"internalType":"bytes32","name":"nonce","type":"bytes32"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"bytes","name":"orderId","type":"bytes"}],"name":"redeemPerk","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newTarget","type":"address"}],"name":"updateTarget","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_4551":{"entryPoint":null,"id":4551,"parameterSlots":0,"returnSlots":0},"@_7572":{"entryPoint":null,"id":7572,"parameterSlots":1,"returnSlots":0},"@_msgSender_4996":{"entryPoint":null,"id":4996,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_4639":{"entryPoint":93,"id":4639,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":173,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:306:51","statements":[{"nodeType":"YulBlock","src":"6:3:51","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:51","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:51"},"nodeType":"YulFunctionCall","src":"143:12:51"},"nodeType":"YulExpressionStatement","src":"143:12:51"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:51"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:51"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:51"},"nodeType":"YulFunctionCall","src":"112:23:51"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:51","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:51"},"nodeType":"YulFunctionCall","src":"108:32:51"},"nodeType":"YulIf","src":"105:52:51"},{"nodeType":"YulVariableDeclaration","src":"166:29:51","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:51"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:51"},"nodeType":"YulFunctionCall","src":"179:16:51"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:51"},"nodeType":"YulFunctionCall","src":"260:12:51"},"nodeType":"YulExpressionStatement","src":"260:12:51"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:51"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:51"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:51","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:51","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:51"},"nodeType":"YulFunctionCall","src":"239:11:51"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:51","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:51"},"nodeType":"YulFunctionCall","src":"235:19:51"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:51"},"nodeType":"YulFunctionCall","src":"224:31:51"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:51"},"nodeType":"YulFunctionCall","src":"214:42:51"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:51"},"nodeType":"YulFunctionCall","src":"207:50:51"},"nodeType":"YulIf","src":"204:70:51"},{"nodeType":"YulAssignment","src":"283:15:51","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:51"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:51"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:51","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:51","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:51","type":""}],"src":"14:290:51"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}","id":51,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b506040516118a33803806118a383398101604081905261002f916100ad565b6100383361005d565b600180546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b6117b7806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063bfb6e08b11610071578063bfb6e08b14610121578063d5212e3c14610141578063db1e3ef314610154578063ea1b495f14610167578063f2fde38b1461017a578063ffa1ad741461018d57600080fd5b806301ffc9a7146100ae578063285ac885146100d6578063715018a6146100e95780638da5cb5b146100f3578063bbb9ddd31461010e575b600080fd5b6100c16100bc366004610fac565b6101b2565b60405190151581526020015b60405180910390f35b6100c16100e4366004610ff6565b6101e9565b6100f1610262565b005b6000546040516001600160a01b0390911681526020016100cd565b6100f161011c3660046110fa565b610276565b61013461012f3660046111ca565b610761565b6040516100cd91906112ab565b61013461014f3660046112be565b6107d3565b6100f161016236600461136d565b610850565b6100f1610175366004611424565b610a85565b6100f1610188366004611424565b610ae1565b610134604051806040016040528060068152602001650302e31352e360d41b81525081565b60006001600160e01b0319821663033b9e2d60e61b14806101e357506301ffc9a760e01b6001600160e01b03198316145b92915050565b60008060405180604001604052808560601b6001600160601b03191681526020018481525060405160200161021e9190611441565b60408051601f1981840301815291815281516020928301206001600160a01b0388166000908152600390935291209091506102599082610b5f565b95945050505050565b61026a610b7a565b6102746000610bd4565b565b60008960601b8760405160200161028f91815260200190565b60408051601f19818403018152828252602083018a905291016040516020818303038152906040528b60601b8b868a8a6040516020016102d6989796959493929190611475565b604051602081830303815290604052905060006102f98280519060200120610c24565b6001549091506001600160a01b0316331461032757604051633ed2200160e11b815260040160405180910390fd5b8643111561034857604051631d389b0b60e11b815260040160405180910390fd5b630b135d3f60e11b61035a8286610c57565b6001600160e01b0319161461038257604051638baa579f60e01b815260040160405180910390fd5b8761038b610df1565b146103a957604051636956f2ab60e11b815260040160405180910390fd5b60008681526002602052604090205460ff16156103d957604051633ab3447f60e11b815260040160405180910390fd5b604051630217b22760e41b8152600481018a90526000906001600160a01b038c169063217b227090602401602060405180830381865afa158015610421573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104459190611505565b905061044f610e19565b6001600160a01b0316816001600160a01b0316146104805760405163f458de7160e01b815260040160405180910390fd5b600060405180604001604052808e60601b6001600160601b03191681526020018c8152506040516020016104b49190611441565b60408051601f1981840301815291815281516020928301206001600160a01b038f166000908152600390935291209091506104ef9082610b5f565b1561050d5760405163f4249fb360e01b815260040160405180910390fd5b6001600160a01b038c16600090815260036020526040902061052f9082610e52565b50600160009054906101000a90046001600160a01b03166001600160a01b03166344c028fe60008f60008b6040518563ffffffff1660e01b81526004016105799493929190611522565b6000604051808303816000875af1158015610598573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105c09190810190611559565b5060008881526002602052604090819020805460ff19166001179055517fe4a6407979da9518dfbc88bfe7f0f53a52c4c16e1f54a90bf1ff721d341ef4439061060a9087906112ab565b60405180910390a160408051808201909152600c81526b4275726e416674657255736560a01b60209091015260007ffbdb7422394d0d1e5a42ce23325710e31f051fe0ac8874d7818c181a294a86316040516354f6127f60e01b8152600481018290529091506000906001600160a01b038f16906354f6127f90602401600060405180830381865afa1580156106a4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106cc9190810190611559565b90506001600160f01b03196106e0826115c6565b6001600160f01b03191603610750578d6001600160a01b0316636c79b70b8e896040518363ffffffff1660e01b815260040161071d9291906115fd565b600060405180830381600087803b15801561073757600080fd5b505af115801561074b573d6000803e3d6000fd5b505050505b505050505050505050505050505050565b60608660601b8660405160200161077a91815260200190565b60408051601f1981840301815282825260208301899052910160408051601f19818403018152908290526107b893929188908890889060200161161e565b60405160208183030381529060405290509695505050505050565b60608860601b886040516020016107ec91815260200190565b60408051601f19818403018152828252602083018b905291016040516020818303038152906040528860601b88868989604051602001610833989796959493929190611475565b604051602081830303815290604052905098975050505050505050565b60008760601b8760405160200161086991815260200190565b60408051601f19818403018152828252602083018a9052910160408051601f19818403018152908290526108a793929189908990889060200161161e565b604051602081830303815290604052905060006108ca8280519060200120610c24565b6001549091506001600160a01b031633146108f857604051633ed2200160e11b815260040160405180910390fd5b8643111561091957604051631d389b0b60e11b815260040160405180910390fd5b630b135d3f60e11b61092b8286610c57565b6001600160e01b0319161461095357604051638baa579f60e01b815260040160405180910390fd5b8761095c610df1565b1461097a57604051636956f2ab60e11b815260040160405180910390fd5b60008681526002602052604090205460ff16156109aa57604051633ab3447f60e11b815260040160405180910390fd5b600154604051632260147f60e11b81526001600160a01b03909116906344c028fe906109e1906000908d9082908b90600401611522565b6000604051808303816000875af1158015610a00573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a289190810190611559565b5060008681526002602052604090819020805460ff19166001179055517fe4a6407979da9518dfbc88bfe7f0f53a52c4c16e1f54a90bf1ff721d341ef44390610a729085906112ab565b60405180910390a1505050505050505050565b610a8d610b7a565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f7f8cffd58ac96898bdd25ab64868bd933141d15ad1cd4a0df228fd3fcba2a26d9060200160405180910390a150565b610ae9610b7a565b6001600160a01b038116610b535760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610b5c81610bd4565b50565b600081815260018301602052604081205415155b9392505050565b6000546001600160a01b031633146102745760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b4a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b6001546000906001600160a01b03163b15610d7e5760015460405160009182916001600160a01b0390911690630b135d3f60e11b90610c9c90889088906024016115fd565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610cda9190611698565b600060405180830381855afa9150503d8060008114610d15576040519150601f19603f3d011682016040523d82523d6000602084013e610d1a565b606091505b50915091506000828015610d2f575081516020145b8015610d5657508151630b135d3f60e11b90610d5490840160209081019085016116b4565b145b905080610d6b576001600160e01b0319610d74565b630b135d3f60e11b5b93505050506101e3565b600080610d8b8585610e5e565b90925090506000816004811115610da457610da46116cd565b14610dbc57506001600160e01b031991506101e39050565b6001546001600160a01b03838116911614610ddf576001600160e01b0319610de8565b630b135d3f60e11b5b925050506101e3565b60008036610e006020826116e3565b610e0b928290611704565b610e149161172e565b919050565b60008036610e286034826116e3565b90610e346020366116e3565b92610e4193929190611704565b610e4a9161174c565b60601c905090565b6000610b738383610ea3565b6000808251604103610e945760208301516040840151606085015160001a610e8887828585610ef2565b94509450505050610e9c565b506000905060025b9250929050565b6000818152600183016020526040812054610eea575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556101e3565b5060006101e3565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b03831115610f1f5750600090506003610fa3565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610f73573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610f9c57600060019250925050610fa3565b9150600090505b94509492505050565b600060208284031215610fbe57600080fd5b81356001600160e01b031981168114610b7357600080fd5b6001600160a01b0381168114610b5c57600080fd5b8035610e1481610fd6565b60008060006060848603121561100b57600080fd5b833561101681610fd6565b9250602084013561102681610fd6565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561107557611075611037565b604052919050565b60006001600160401b0382111561109657611096611037565b50601f01601f191660200190565b600082601f8301126110b557600080fd5b81356110c86110c38261107d565b61104d565b8181528460208386010111156110dd57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060008060006101208a8c03121561111957600080fd5b6111228a610feb565b985061113060208b01610feb565b975060408a0135965060608a0135955060808a0135945060a08a0135935060c08a01356001600160401b038082111561116857600080fd5b6111748d838e016110a4565b945060e08c013591508082111561118a57600080fd5b6111968d838e016110a4565b93506101008c01359150808211156111ad57600080fd5b506111ba8c828d016110a4565b9150509295985092959850929598565b60008060008060008060c087890312156111e357600080fd5b86356111ee81610fd6565b955060208701359450604087013593506060870135925060808701356001600160401b038082111561121f57600080fd5b61122b8a838b016110a4565b935060a089013591508082111561124157600080fd5b5061124e89828a016110a4565b9150509295509295509295565b60005b8381101561127657818101518382015260200161125e565b50506000910152565b6000815180845261129781602086016020860161125b565b601f01601f19169290920160200192915050565b602081526000610b73602083018461127f565b600080600080600080600080610100898b0312156112db57600080fd5b88356112e681610fd6565b97506020890135965060408901359550606089013561130481610fd6565b94506080890135935060a0890135925060c08901356001600160401b038082111561132e57600080fd5b61133a8c838d016110a4565b935060e08b013591508082111561135057600080fd5b5061135d8b828c016110a4565b9150509295985092959890939650565b600080600080600080600060e0888a03121561138857600080fd5b873561139381610fd6565b965060208801359550604088013594506060880135935060808801356001600160401b03808211156113c457600080fd5b6113d08b838c016110a4565b945060a08a01359150808211156113e657600080fd5b6113f28b838c016110a4565b935060c08a013591508082111561140857600080fd5b506114158a828b016110a4565b91505092959891949750929550565b60006020828403121561143657600080fd5b8135610b7381610fd6565b60008183825b6002811015611466578151835260209283019290910190600101611447565b50505060408201905092915050565b60006001600160601b0319808b1683528951611498816014860160208e0161125b565b8951908401906114af816014840160208e0161125b565b8082019150508189166014820152876028820152865191506114d8826048830160208a0161125b565b016048810185905283516114f381606884016020880161125b565b016068019a9950505050505050505050565b60006020828403121561151757600080fd5b8151610b7381610fd6565b84815260018060a01b038416602082015282604082015260806060820152600061154f608083018461127f565b9695505050505050565b60006020828403121561156b57600080fd5b81516001600160401b0381111561158157600080fd5b8201601f8101841361159257600080fd5b80516115a06110c38261107d565b8181528560208385010111156115b557600080fd5b61025982602083016020860161125b565b805160208201516001600160f01b031980821692919060028310156115f55780818460020360031b1b83161693505b505050919050565b828152604060208201526000611616604083018461127f565b949350505050565b6001600160601b03198716815260008651611640816014850160208b0161125b565b865190830190611657816014840160208b0161125b565b0160148101869052845161167281603484016020890161125b565b845191019061168881603484016020880161125b565b0160340198975050505050505050565b600082516116aa81846020870161125b565b9190910192915050565b6000602082840312156116c657600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fd5b818103818111156101e357634e487b7160e01b600052601160045260246000fd5b6000808585111561171457600080fd5b8386111561172157600080fd5b5050820193919092039150565b803560208310156101e357600019602084900360031b1b1692915050565b6bffffffffffffffffffffffff1981358181169160148510156117795780818660140360031b1b83161692505b50509291505056fea264697066735822122086b76df625392d2a15b7336dde345a87d95e9f60c3e9729323d922b53fcc4f8564736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x18A3 CODESIZE SUB DUP1 PUSH2 0x18A3 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xAD JUMP JUMPDEST PUSH2 0x38 CALLER PUSH2 0x5D JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xDD JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x17B7 DUP1 PUSH2 0xEC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBFB6E08B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBFB6E08B EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0xD5212E3C EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0xDB1E3EF3 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xEA1B495F EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xFFA1AD74 EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x285AC885 EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0xBBB9DDD3 EQ PUSH2 0x10E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0xFAC JUMP JUMPDEST PUSH2 0x1B2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH2 0xE4 CALLDATASIZE PUSH1 0x4 PUSH2 0xFF6 JUMP JUMPDEST PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x262 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x11C CALLDATASIZE PUSH1 0x4 PUSH2 0x10FA JUMP JUMPDEST PUSH2 0x276 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0x11CA JUMP JUMPDEST PUSH2 0x761 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x12AB JUMP JUMPDEST PUSH2 0x134 PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0x12BE JUMP JUMPDEST PUSH2 0x7D3 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x162 CALLDATASIZE PUSH1 0x4 PUSH2 0x136D JUMP JUMPDEST PUSH2 0x850 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0xA85 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0x134 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x302E31352E3 PUSH1 0xD4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x33B9E2D PUSH1 0xE6 SHL EQ DUP1 PUSH2 0x1E3 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SWAP1 SWAP2 POP PUSH2 0x259 SWAP1 DUP3 PUSH2 0xB5F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x26A PUSH2 0xB7A JUMP JUMPDEST PUSH2 0x274 PUSH1 0x0 PUSH2 0xBD4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP10 PUSH1 0x60 SHL DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x28F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE PUSH1 0x20 DUP4 ADD DUP11 SWAP1 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP12 PUSH1 0x60 SHL DUP12 DUP7 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2D6 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1475 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x2F9 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0xC24 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x327 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3ED22001 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 NUMBER GT ISZERO PUSH2 0x348 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1D389B0B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xB135D3F PUSH1 0xE1 SHL PUSH2 0x35A DUP3 DUP7 PUSH2 0xC57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0x382 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8BAA579F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 PUSH2 0x38B PUSH2 0xDF1 JUMP JUMPDEST EQ PUSH2 0x3A9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6956F2AB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3AB3447F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x217B227 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP1 PUSH4 0x217B2270 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x421 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x1505 JUMP JUMPDEST SWAP1 POP PUSH2 0x44F PUSH2 0xE19 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x480 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF458DE71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP15 PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP13 DUP2 MSTORE POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SWAP1 SWAP2 POP PUSH2 0x4EF SWAP1 DUP3 PUSH2 0xB5F JUMP JUMPDEST ISZERO PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH4 0xF4249FB3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x52F SWAP1 DUP3 PUSH2 0xE52 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x44C028FE PUSH1 0x0 DUP16 PUSH1 0x0 DUP12 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x579 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1522 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x598 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x5C0 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1559 JUMP JUMPDEST POP PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0xE4A6407979DA9518DFBC88BFE7F0F53A52C4C16E1F54A90BF1FF721D341EF443 SWAP1 PUSH2 0x60A SWAP1 DUP8 SWAP1 PUSH2 0x12AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xC DUP2 MSTORE PUSH12 0x4275726E4166746572557365 PUSH1 0xA0 SHL PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE PUSH1 0x0 PUSH32 0xFBDB7422394D0D1E5A42CE23325710E31F051FE0AC8874D7818C181A294A8631 PUSH1 0x40 MLOAD PUSH4 0x54F6127F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND SWAP1 PUSH4 0x54F6127F SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x6CC SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1559 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xF0 SHL SUB NOT PUSH2 0x6E0 DUP3 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xF0 SHL SUB NOT AND SUB PUSH2 0x750 JUMPI DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6C79B70B DUP15 DUP10 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71D SWAP3 SWAP2 SWAP1 PUSH2 0x15FD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x737 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x74B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP7 PUSH1 0x60 SHL DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x77A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE PUSH1 0x20 DUP4 ADD DUP10 SWAP1 MSTORE SWAP2 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x7B8 SWAP4 SWAP3 SWAP2 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x20 ADD PUSH2 0x161E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP9 PUSH1 0x60 SHL DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7EC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE PUSH1 0x20 DUP4 ADD DUP12 SWAP1 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP9 PUSH1 0x60 SHL DUP9 DUP7 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x833 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1475 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP8 PUSH1 0x60 SHL DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x869 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE PUSH1 0x20 DUP4 ADD DUP11 SWAP1 MSTORE SWAP2 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x8A7 SWAP4 SWAP3 SWAP2 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 PUSH1 0x20 ADD PUSH2 0x161E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x8CA DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0xC24 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8F8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3ED22001 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 NUMBER GT ISZERO PUSH2 0x919 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1D389B0B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xB135D3F PUSH1 0xE1 SHL PUSH2 0x92B DUP3 DUP7 PUSH2 0xC57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0x953 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8BAA579F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 PUSH2 0x95C PUSH2 0xDF1 JUMP JUMPDEST EQ PUSH2 0x97A JUMPI PUSH1 0x40 MLOAD PUSH4 0x6956F2AB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x9AA JUMPI PUSH1 0x40 MLOAD PUSH4 0x3AB3447F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2260147F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x44C028FE SWAP1 PUSH2 0x9E1 SWAP1 PUSH1 0x0 SWAP1 DUP14 SWAP1 DUP3 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x1522 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA00 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xA28 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1559 JUMP JUMPDEST POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0xE4A6407979DA9518DFBC88BFE7F0F53A52C4C16E1F54A90BF1FF721D341EF443 SWAP1 PUSH2 0xA72 SWAP1 DUP6 SWAP1 PUSH2 0x12AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA8D PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x7F8CFFD58AC96898BDD25AB64868BD933141D15AD1CD4A0DF228FD3FCBA2A26D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xAE9 PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB5C DUP2 PUSH2 0xBD4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB4A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3C SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO PUSH2 0xD7E JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xB135D3F PUSH1 0xE1 SHL SWAP1 PUSH2 0xC9C SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x24 ADD PUSH2 0x15FD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0xCDA SWAP2 SWAP1 PUSH2 0x1698 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xD15 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD1A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x0 DUP3 DUP1 ISZERO PUSH2 0xD2F JUMPI POP DUP2 MLOAD PUSH1 0x20 EQ JUMPDEST DUP1 ISZERO PUSH2 0xD56 JUMPI POP DUP2 MLOAD PUSH4 0xB135D3F PUSH1 0xE1 SHL SWAP1 PUSH2 0xD54 SWAP1 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP1 DUP6 ADD PUSH2 0x16B4 JUMP JUMPDEST EQ JUMPDEST SWAP1 POP DUP1 PUSH2 0xD6B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH2 0xD74 JUMP JUMPDEST PUSH4 0xB135D3F PUSH1 0xE1 SHL JUMPDEST SWAP4 POP POP POP POP PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD8B DUP6 DUP6 PUSH2 0xE5E JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xDA4 JUMPI PUSH2 0xDA4 PUSH2 0x16CD JUMP JUMPDEST EQ PUSH2 0xDBC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP2 POP PUSH2 0x1E3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ PUSH2 0xDDF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH2 0xDE8 JUMP JUMPDEST PUSH4 0xB135D3F PUSH1 0xE1 SHL JUMPDEST SWAP3 POP POP POP PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLDATASIZE PUSH2 0xE00 PUSH1 0x20 DUP3 PUSH2 0x16E3 JUMP JUMPDEST PUSH2 0xE0B SWAP3 DUP3 SWAP1 PUSH2 0x1704 JUMP JUMPDEST PUSH2 0xE14 SWAP2 PUSH2 0x172E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLDATASIZE PUSH2 0xE28 PUSH1 0x34 DUP3 PUSH2 0x16E3 JUMP JUMPDEST SWAP1 PUSH2 0xE34 PUSH1 0x20 CALLDATASIZE PUSH2 0x16E3 JUMP JUMPDEST SWAP3 PUSH2 0xE41 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1704 JUMP JUMPDEST PUSH2 0xE4A SWAP2 PUSH2 0x174C JUMP JUMPDEST PUSH1 0x60 SHR SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB73 DUP4 DUP4 PUSH2 0xEA3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x41 SUB PUSH2 0xE94 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0xE88 DUP8 DUP3 DUP6 DUP6 PUSH2 0xEF2 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0xE9C JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP PUSH1 0x2 JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xEEA JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x1E3 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH16 0xA2A8918CA85BAFE22016D0B997E4DF60 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP4 GT ISZERO PUSH2 0xF1F JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0xFA3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF73 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF9C JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0xFA3 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xB73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0xE14 DUP2 PUSH2 0xFD6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x100B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1016 DUP2 PUSH2 0xFD6 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1026 DUP2 PUSH2 0xFD6 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1075 JUMPI PUSH2 0x1075 PUSH2 0x1037 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1096 JUMPI PUSH2 0x1096 PUSH2 0x1037 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x10B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x10C8 PUSH2 0x10C3 DUP3 PUSH2 0x107D JUMP JUMPDEST PUSH2 0x104D JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x10DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x1119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1122 DUP11 PUSH2 0xFEB JUMP JUMPDEST SWAP9 POP PUSH2 0x1130 PUSH1 0x20 DUP12 ADD PUSH2 0xFEB JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP7 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP6 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP5 POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1174 DUP14 DUP4 DUP15 ADD PUSH2 0x10A4 JUMP JUMPDEST SWAP5 POP PUSH1 0xE0 DUP13 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x118A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1196 DUP14 DUP4 DUP15 ADD PUSH2 0x10A4 JUMP JUMPDEST SWAP4 POP PUSH2 0x100 DUP13 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x11AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11BA DUP13 DUP3 DUP14 ADD PUSH2 0x10A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x11E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x11EE DUP2 PUSH2 0xFD6 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x121F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x122B DUP11 DUP4 DUP12 ADD PUSH2 0x10A4 JUMP JUMPDEST SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x124E DUP10 DUP3 DUP11 ADD PUSH2 0x10A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1276 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x125E JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1297 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x125B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xB73 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x127F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x12DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x12E6 DUP2 PUSH2 0xFD6 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH2 0x1304 DUP2 PUSH2 0xFD6 JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP3 POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x132E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x133A DUP13 DUP4 DUP14 ADD PUSH2 0x10A4 JUMP JUMPDEST SWAP4 POP PUSH1 0xE0 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x135D DUP12 DUP3 DUP13 ADD PUSH2 0x10A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x1393 DUP2 PUSH2 0xFD6 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x13C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13D0 DUP12 DUP4 DUP13 ADD PUSH2 0x10A4 JUMP JUMPDEST SWAP5 POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x13E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13F2 DUP12 DUP4 DUP13 ADD PUSH2 0x10A4 JUMP JUMPDEST SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1415 DUP11 DUP3 DUP12 ADD PUSH2 0x10A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB73 DUP2 PUSH2 0xFD6 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 DUP3 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x1466 JUMPI DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1447 JUMP JUMPDEST POP POP POP PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT DUP1 DUP12 AND DUP4 MSTORE DUP10 MLOAD PUSH2 0x1498 DUP2 PUSH1 0x14 DUP7 ADD PUSH1 0x20 DUP15 ADD PUSH2 0x125B JUMP JUMPDEST DUP10 MLOAD SWAP1 DUP5 ADD SWAP1 PUSH2 0x14AF DUP2 PUSH1 0x14 DUP5 ADD PUSH1 0x20 DUP15 ADD PUSH2 0x125B JUMP JUMPDEST DUP1 DUP3 ADD SWAP2 POP POP DUP2 DUP10 AND PUSH1 0x14 DUP3 ADD MSTORE DUP8 PUSH1 0x28 DUP3 ADD MSTORE DUP7 MLOAD SWAP2 POP PUSH2 0x14D8 DUP3 PUSH1 0x48 DUP4 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x125B JUMP JUMPDEST ADD PUSH1 0x48 DUP2 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD PUSH2 0x14F3 DUP2 PUSH1 0x68 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x125B JUMP JUMPDEST ADD PUSH1 0x68 ADD SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1517 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB73 DUP2 PUSH2 0xFD6 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x154F PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x127F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x156B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1581 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x15A0 PUSH2 0x10C3 DUP3 PUSH2 0x107D JUMP JUMPDEST DUP2 DUP2 MSTORE DUP6 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x15B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x259 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x125B JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF0 SHL SUB NOT DUP1 DUP3 AND SWAP3 SWAP2 SWAP1 PUSH1 0x2 DUP4 LT ISZERO PUSH2 0x15F5 JUMPI DUP1 DUP2 DUP5 PUSH1 0x2 SUB PUSH1 0x3 SHL SHL DUP4 AND AND SWAP4 POP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1616 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x127F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT DUP8 AND DUP2 MSTORE PUSH1 0x0 DUP7 MLOAD PUSH2 0x1640 DUP2 PUSH1 0x14 DUP6 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x125B JUMP JUMPDEST DUP7 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1657 DUP2 PUSH1 0x14 DUP5 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x125B JUMP JUMPDEST ADD PUSH1 0x14 DUP2 ADD DUP7 SWAP1 MSTORE DUP5 MLOAD PUSH2 0x1672 DUP2 PUSH1 0x34 DUP5 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x125B JUMP JUMPDEST DUP5 MLOAD SWAP2 ADD SWAP1 PUSH2 0x1688 DUP2 PUSH1 0x34 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x125B JUMP JUMPDEST ADD PUSH1 0x34 ADD SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x16AA DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x125B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1E3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x1714 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x1721 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x20 DUP4 LT ISZERO PUSH2 0x1E3 JUMPI PUSH1 0x0 NOT PUSH1 0x20 DUP5 SWAP1 SUB PUSH1 0x3 SHL SHL AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 CALLDATALOAD DUP2 DUP2 AND SWAP2 PUSH1 0x14 DUP6 LT ISZERO PUSH2 0x1779 JUMPI DUP1 DUP2 DUP7 PUSH1 0x14 SUB PUSH1 0x3 SHL SHL DUP4 AND AND SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0xB7 PUSH14 0xF625392D2A15B7336DDE345A87D9 0x5E SWAP16 PUSH1 0xC3 0xE9 PUSH19 0x9323D922B53FCC4F8564736F6C634300081400 CALLER ","sourceMap":"1104:6898:48:-:0;;;1635:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:35;719:10:38;936:18:35;:32::i;:::-;1674:6:48;:16;;-1:-1:-1;;;;;;1674:16:48;-1:-1:-1;;;;;1674:16:48;;;;;;;;;;1104:6898;;2426:187:35;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:35;;;-1:-1:-1;;;;;;2534:17:35;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;14:290:51:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:51;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:51:o;:::-;1104:6898:48;;;;;;"},"deployedBytecode":{"functionDebugData":{"@VERSION_1556":{"entryPoint":null,"id":1556,"parameterSlots":0,"returnSlots":0},"@_add_6936":{"entryPoint":3747,"id":6936,"parameterSlots":2,"returnSlots":1},"@_checkOwner_4582":{"entryPoint":2938,"id":4582,"parameterSlots":0,"returnSlots":0},"@_contains_7039":{"entryPoint":null,"id":7039,"parameterSlots":2,"returnSlots":1},"@_extendableMsgSender_1527":{"entryPoint":3609,"id":1527,"parameterSlots":0,"returnSlots":1},"@_extendableMsgValue_1549":{"entryPoint":3569,"id":1549,"parameterSlots":0,"returnSlots":1},"@_isValidSignature_8126":{"entryPoint":3159,"id":8126,"parameterSlots":2,"returnSlots":1},"@_msgSender_4996":{"entryPoint":null,"id":4996,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_4639":{"entryPoint":3028,"id":4639,"parameterSlots":1,"returnSlots":0},"@add_7106":{"entryPoint":3666,"id":7106,"parameterSlots":2,"returnSlots":1},"@contains_7142":{"entryPoint":2911,"id":7142,"parameterSlots":2,"returnSlots":1},"@generateSingletonKey_1578":{"entryPoint":null,"id":1578,"parameterSlots":1,"returnSlots":1},"@getOrderHash_7612":{"entryPoint":1889,"id":7612,"parameterSlots":6,"returnSlots":1},"@getRedeemPerkHash_7661":{"entryPoint":2003,"id":7661,"parameterSlots":8,"returnSlots":1},"@isPerkClaimed_8038":{"entryPoint":489,"id":8038,"parameterSlots":3,"returnSlots":1},"@owner_4568":{"entryPoint":null,"id":4568,"parameterSlots":0,"returnSlots":1},"@placeOrder_7989":{"entryPoint":2128,"id":7989,"parameterSlots":7,"returnSlots":0},"@redeemPerk_7872":{"entryPoint":630,"id":7872,"parameterSlots":9,"returnSlots":0},"@renounceOwnership_4596":{"entryPoint":610,"id":4596,"parameterSlots":0,"returnSlots":0},"@supportsInterface_1484":{"entryPoint":434,"id":1484,"parameterSlots":1,"returnSlots":1},"@supportsInterface_5705":{"entryPoint":null,"id":5705,"parameterSlots":1,"returnSlots":1},"@toEthSignedMessageHash_5627":{"entryPoint":3108,"id":5627,"parameterSlots":1,"returnSlots":1},"@transferOwnership_4619":{"entryPoint":2785,"id":4619,"parameterSlots":1,"returnSlots":0},"@tryRecover_5416":{"entryPoint":3678,"id":5416,"parameterSlots":2,"returnSlots":2},"@tryRecover_5584":{"entryPoint":3826,"id":5584,"parameterSlots":4,"returnSlots":2},"@updateTarget_8005":{"entryPoint":2693,"id":8005,"parameterSlots":1,"returnSlots":0},"abi_decode_address":{"entryPoint":4075,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_bytes":{"entryPoint":4260,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5156,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":5381,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_bytes32":{"entryPoint":4086,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_bytes32t_uint256t_uint256t_bytes32t_bytes_memory_ptrt_bytes_memory_ptrt_bytes_memory_ptr":{"entryPoint":4346,"id":null,"parameterSlots":2,"returnSlots":9},"abi_decode_tuple_t_addresst_uint256t_uint256t_addresst_bytes32t_bytes32t_bytes_memory_ptrt_bytes_memory_ptr":{"entryPoint":4798,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes32t_bytes_memory_ptrt_bytes_memory_ptr":{"entryPoint":4554,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes32t_bytes_memory_ptrt_bytes_memory_ptrt_bytes_memory_ptr":{"entryPoint":4973,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":5812,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4":{"entryPoint":4012,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_memory_ptr_fromMemory":{"entryPoint":5465,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes":{"entryPoint":4735,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_array$_t_bytes32_$2_memory_ptr__to_t_array$_t_bytes32_$2_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":5185,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes20_t_bytes_memory_ptr_t_bytes_memory_ptr_t_bytes20_t_bytes32_t_bytes_memory_ptr_t_bytes32_t_bytes_memory_ptr__to_t_bytes20_t_bytes_memory_ptr_t_bytes_memory_ptr_t_bytes20_t_bytes32_t_bytes_memory_ptr_t_bytes32_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":5237,"id":null,"parameterSlots":9,"returnSlots":1},"abi_encode_tuple_packed_t_bytes20_t_bytes_memory_ptr_t_bytes_memory_ptr_t_bytes32_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes20_t_bytes_memory_ptr_t_bytes_memory_ptr_t_bytes32_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":5662,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":5784,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_uint256__to_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":5629,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":4779,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_0_by_1_t_address_t_rational_0_by_1_t_bytes_memory_ptr__to_t_uint256_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":5410,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":4173,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":4221,"id":null,"parameterSlots":1,"returnSlots":1},"calldata_array_index_range_access_t_bytes_calldata_ptr":{"entryPoint":5892,"id":null,"parameterSlots":4,"returnSlots":2},"checked_sub_t_uint256":{"entryPoint":5859,"id":null,"parameterSlots":2,"returnSlots":1},"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes20":{"entryPoint":5964,"id":null,"parameterSlots":2,"returnSlots":1},"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes32":{"entryPoint":5934,"id":null,"parameterSlots":2,"returnSlots":1},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes2":{"entryPoint":5574,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":4699,"id":null,"parameterSlots":3,"returnSlots":0},"panic_error_0x21":{"entryPoint":5837,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4151,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":4054,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:16168:51","statements":[{"nodeType":"YulBlock","src":"6:3:51","statements":[]},{"body":{"nodeType":"YulBlock","src":"83:217:51","statements":[{"body":{"nodeType":"YulBlock","src":"129:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"138:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"141:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"131:6:51"},"nodeType":"YulFunctionCall","src":"131:12:51"},"nodeType":"YulExpressionStatement","src":"131:12:51"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"104:7:51"},{"name":"headStart","nodeType":"YulIdentifier","src":"113:9:51"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"100:3:51"},"nodeType":"YulFunctionCall","src":"100:23:51"},{"kind":"number","nodeType":"YulLiteral","src":"125:2:51","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"96:3:51"},"nodeType":"YulFunctionCall","src":"96:32:51"},"nodeType":"YulIf","src":"93:52:51"},{"nodeType":"YulVariableDeclaration","src":"154:36:51","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"180:9:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"167:12:51"},"nodeType":"YulFunctionCall","src":"167:23:51"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"158:5:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"254:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"263:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"266:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"256:6:51"},"nodeType":"YulFunctionCall","src":"256:12:51"},"nodeType":"YulExpressionStatement","src":"256:12:51"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"212:5:51"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:51"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"234:3:51","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"239:10:51","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"230:3:51"},"nodeType":"YulFunctionCall","src":"230:20:51"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"219:3:51"},"nodeType":"YulFunctionCall","src":"219:32:51"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"209:2:51"},"nodeType":"YulFunctionCall","src":"209:43:51"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"202:6:51"},"nodeType":"YulFunctionCall","src":"202:51:51"},"nodeType":"YulIf","src":"199:71:51"},{"nodeType":"YulAssignment","src":"279:15:51","value":{"name":"value","nodeType":"YulIdentifier","src":"289:5:51"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"279:6:51"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49:9:51","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"60:7:51","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"72:6:51","type":""}],"src":"14:286:51"},{"body":{"nodeType":"YulBlock","src":"400:92:51","statements":[{"nodeType":"YulAssignment","src":"410:26:51","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"422:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"433:2:51","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"418:3:51"},"nodeType":"YulFunctionCall","src":"418:18:51"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"410:4:51"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"452:9:51"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"477:6:51"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"470:6:51"},"nodeType":"YulFunctionCall","src":"470:14:51"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"463:6:51"},"nodeType":"YulFunctionCall","src":"463:22:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"445:6:51"},"nodeType":"YulFunctionCall","src":"445:41:51"},"nodeType":"YulExpressionStatement","src":"445:41:51"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"369:9:51","type":""},{"name":"value0","nodeType":"YulTypedName","src":"380:6:51","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"391:4:51","type":""}],"src":"305:187:51"},{"body":{"nodeType":"YulBlock","src":"542:86:51","statements":[{"body":{"nodeType":"YulBlock","src":"606:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"615:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"618:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"608:6:51"},"nodeType":"YulFunctionCall","src":"608:12:51"},"nodeType":"YulExpressionStatement","src":"608:12:51"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"565:5:51"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"576:5:51"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"591:3:51","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"596:1:51","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"587:3:51"},"nodeType":"YulFunctionCall","src":"587:11:51"},{"kind":"number","nodeType":"YulLiteral","src":"600:1:51","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"583:3:51"},"nodeType":"YulFunctionCall","src":"583:19:51"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"572:3:51"},"nodeType":"YulFunctionCall","src":"572:31:51"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"562:2:51"},"nodeType":"YulFunctionCall","src":"562:42:51"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"555:6:51"},"nodeType":"YulFunctionCall","src":"555:50:51"},"nodeType":"YulIf","src":"552:70:51"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"531:5:51","type":""}],"src":"497:131:51"},{"body":{"nodeType":"YulBlock","src":"682:85:51","statements":[{"nodeType":"YulAssignment","src":"692:29:51","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"714:6:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"701:12:51"},"nodeType":"YulFunctionCall","src":"701:20:51"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"692:5:51"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"755:5:51"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"730:24:51"},"nodeType":"YulFunctionCall","src":"730:31:51"},"nodeType":"YulExpressionStatement","src":"730:31:51"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"661:6:51","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"672:5:51","type":""}],"src":"633:134:51"},{"body":{"nodeType":"YulBlock","src":"876:352:51","statements":[{"body":{"nodeType":"YulBlock","src":"922:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"931:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"934:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"924:6:51"},"nodeType":"YulFunctionCall","src":"924:12:51"},"nodeType":"YulExpressionStatement","src":"924:12:51"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"897:7:51"},{"name":"headStart","nodeType":"YulIdentifier","src":"906:9:51"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"893:3:51"},"nodeType":"YulFunctionCall","src":"893:23:51"},{"kind":"number","nodeType":"YulLiteral","src":"918:2:51","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"889:3:51"},"nodeType":"YulFunctionCall","src":"889:32:51"},"nodeType":"YulIf","src":"886:52:51"},{"nodeType":"YulVariableDeclaration","src":"947:36:51","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"973:9:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"960:12:51"},"nodeType":"YulFunctionCall","src":"960:23:51"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"951:5:51","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1017:5:51"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"992:24:51"},"nodeType":"YulFunctionCall","src":"992:31:51"},"nodeType":"YulExpressionStatement","src":"992:31:51"},{"nodeType":"YulAssignment","src":"1032:15:51","value":{"name":"value","nodeType":"YulIdentifier","src":"1042:5:51"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1032:6:51"}]},{"nodeType":"YulVariableDeclaration","src":"1056:47:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1088:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"1099:2:51","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1084:3:51"},"nodeType":"YulFunctionCall","src":"1084:18:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1071:12:51"},"nodeType":"YulFunctionCall","src":"1071:32:51"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"1060:7:51","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1137:7:51"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1112:24:51"},"nodeType":"YulFunctionCall","src":"1112:33:51"},"nodeType":"YulExpressionStatement","src":"1112:33:51"},{"nodeType":"YulAssignment","src":"1154:17:51","value":{"name":"value_1","nodeType":"YulIdentifier","src":"1164:7:51"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1154:6:51"}]},{"nodeType":"YulAssignment","src":"1180:42:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1207:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"1218:2:51","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1203:3:51"},"nodeType":"YulFunctionCall","src":"1203:18:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1190:12:51"},"nodeType":"YulFunctionCall","src":"1190:32:51"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1180:6:51"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"826:9:51","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"837:7:51","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"849:6:51","type":""},{"name":"value1","nodeType":"YulTypedName","src":"857:6:51","type":""},{"name":"value2","nodeType":"YulTypedName","src":"865:6:51","type":""}],"src":"772:456:51"},{"body":{"nodeType":"YulBlock","src":"1334:102:51","statements":[{"nodeType":"YulAssignment","src":"1344:26:51","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1356:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"1367:2:51","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1352:3:51"},"nodeType":"YulFunctionCall","src":"1352:18:51"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1344:4:51"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1386:9:51"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1401:6:51"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1417:3:51","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1422:1:51","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1413:3:51"},"nodeType":"YulFunctionCall","src":"1413:11:51"},{"kind":"number","nodeType":"YulLiteral","src":"1426:1:51","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1409:3:51"},"nodeType":"YulFunctionCall","src":"1409:19:51"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1397:3:51"},"nodeType":"YulFunctionCall","src":"1397:32:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1379:6:51"},"nodeType":"YulFunctionCall","src":"1379:51:51"},"nodeType":"YulExpressionStatement","src":"1379:51:51"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1303:9:51","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1314:6:51","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1325:4:51","type":""}],"src":"1233:203:51"},{"body":{"nodeType":"YulBlock","src":"1473:95:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1490:1:51","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1497:3:51","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1502:10:51","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1493:3:51"},"nodeType":"YulFunctionCall","src":"1493:20:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1483:6:51"},"nodeType":"YulFunctionCall","src":"1483:31:51"},"nodeType":"YulExpressionStatement","src":"1483:31:51"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1530:1:51","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1533:4:51","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1523:6:51"},"nodeType":"YulFunctionCall","src":"1523:15:51"},"nodeType":"YulExpressionStatement","src":"1523:15:51"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1554:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1557:4:51","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1547:6:51"},"nodeType":"YulFunctionCall","src":"1547:15:51"},"nodeType":"YulExpressionStatement","src":"1547:15:51"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1441:127:51"},{"body":{"nodeType":"YulBlock","src":"1618:230:51","statements":[{"nodeType":"YulAssignment","src":"1628:19:51","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1644:2:51","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1638:5:51"},"nodeType":"YulFunctionCall","src":"1638:9:51"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1628:6:51"}]},{"nodeType":"YulVariableDeclaration","src":"1656:58:51","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1678:6:51"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1694:4:51"},{"kind":"number","nodeType":"YulLiteral","src":"1700:2:51","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1690:3:51"},"nodeType":"YulFunctionCall","src":"1690:13:51"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1709:2:51","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1705:3:51"},"nodeType":"YulFunctionCall","src":"1705:7:51"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1686:3:51"},"nodeType":"YulFunctionCall","src":"1686:27:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1674:3:51"},"nodeType":"YulFunctionCall","src":"1674:40:51"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1660:10:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"1789:22:51","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1791:16:51"},"nodeType":"YulFunctionCall","src":"1791:18:51"},"nodeType":"YulExpressionStatement","src":"1791:18:51"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1732:10:51"},{"kind":"number","nodeType":"YulLiteral","src":"1744:18:51","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1729:2:51"},"nodeType":"YulFunctionCall","src":"1729:34:51"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1768:10:51"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1780:6:51"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1765:2:51"},"nodeType":"YulFunctionCall","src":"1765:22:51"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1726:2:51"},"nodeType":"YulFunctionCall","src":"1726:62:51"},"nodeType":"YulIf","src":"1723:88:51"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1827:2:51","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1831:10:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1820:6:51"},"nodeType":"YulFunctionCall","src":"1820:22:51"},"nodeType":"YulExpressionStatement","src":"1820:22:51"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1598:4:51","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1607:6:51","type":""}],"src":"1573:275:51"},{"body":{"nodeType":"YulBlock","src":"1910:129:51","statements":[{"body":{"nodeType":"YulBlock","src":"1954:22:51","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1956:16:51"},"nodeType":"YulFunctionCall","src":"1956:18:51"},"nodeType":"YulExpressionStatement","src":"1956:18:51"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1926:6:51"},{"kind":"number","nodeType":"YulLiteral","src":"1934:18:51","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1923:2:51"},"nodeType":"YulFunctionCall","src":"1923:30:51"},"nodeType":"YulIf","src":"1920:56:51"},{"nodeType":"YulAssignment","src":"1985:48:51","value":{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2005:6:51"},{"kind":"number","nodeType":"YulLiteral","src":"2013:2:51","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2001:3:51"},"nodeType":"YulFunctionCall","src":"2001:15:51"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2022:2:51","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2018:3:51"},"nodeType":"YulFunctionCall","src":"2018:7:51"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1997:3:51"},"nodeType":"YulFunctionCall","src":"1997:29:51"},{"kind":"number","nodeType":"YulLiteral","src":"2028:4:51","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1993:3:51"},"nodeType":"YulFunctionCall","src":"1993:40:51"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1985:4:51"}]}]},"name":"array_allocation_size_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1890:6:51","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1901:4:51","type":""}],"src":"1853:186:51"},{"body":{"nodeType":"YulBlock","src":"2096:410:51","statements":[{"body":{"nodeType":"YulBlock","src":"2145:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2154:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2157:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2147:6:51"},"nodeType":"YulFunctionCall","src":"2147:12:51"},"nodeType":"YulExpressionStatement","src":"2147:12:51"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2124:6:51"},{"kind":"number","nodeType":"YulLiteral","src":"2132:4:51","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2120:3:51"},"nodeType":"YulFunctionCall","src":"2120:17:51"},{"name":"end","nodeType":"YulIdentifier","src":"2139:3:51"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2116:3:51"},"nodeType":"YulFunctionCall","src":"2116:27:51"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2109:6:51"},"nodeType":"YulFunctionCall","src":"2109:35:51"},"nodeType":"YulIf","src":"2106:55:51"},{"nodeType":"YulVariableDeclaration","src":"2170:30:51","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2193:6:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2180:12:51"},"nodeType":"YulFunctionCall","src":"2180:20:51"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2174:2:51","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2209:63:51","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2268:2:51"}],"functionName":{"name":"array_allocation_size_bytes","nodeType":"YulIdentifier","src":"2240:27:51"},"nodeType":"YulFunctionCall","src":"2240:31:51"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2224:15:51"},"nodeType":"YulFunctionCall","src":"2224:48:51"},"variables":[{"name":"array_1","nodeType":"YulTypedName","src":"2213:7:51","type":""}]},{"expression":{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"2288:7:51"},{"name":"_1","nodeType":"YulIdentifier","src":"2297:2:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2281:6:51"},"nodeType":"YulFunctionCall","src":"2281:19:51"},"nodeType":"YulExpressionStatement","src":"2281:19:51"},{"body":{"nodeType":"YulBlock","src":"2348:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2357:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2360:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2350:6:51"},"nodeType":"YulFunctionCall","src":"2350:12:51"},"nodeType":"YulExpressionStatement","src":"2350:12:51"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2323:6:51"},{"name":"_1","nodeType":"YulIdentifier","src":"2331:2:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2319:3:51"},"nodeType":"YulFunctionCall","src":"2319:15:51"},{"kind":"number","nodeType":"YulLiteral","src":"2336:4:51","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2315:3:51"},"nodeType":"YulFunctionCall","src":"2315:26:51"},{"name":"end","nodeType":"YulIdentifier","src":"2343:3:51"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2312:2:51"},"nodeType":"YulFunctionCall","src":"2312:35:51"},"nodeType":"YulIf","src":"2309:55:51"},{"expression":{"arguments":[{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"2390:7:51"},{"kind":"number","nodeType":"YulLiteral","src":"2399:4:51","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2386:3:51"},"nodeType":"YulFunctionCall","src":"2386:18:51"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2410:6:51"},{"kind":"number","nodeType":"YulLiteral","src":"2418:4:51","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2406:3:51"},"nodeType":"YulFunctionCall","src":"2406:17:51"},{"name":"_1","nodeType":"YulIdentifier","src":"2425:2:51"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"2373:12:51"},"nodeType":"YulFunctionCall","src":"2373:55:51"},"nodeType":"YulExpressionStatement","src":"2373:55:51"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"2452:7:51"},{"name":"_1","nodeType":"YulIdentifier","src":"2461:2:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2448:3:51"},"nodeType":"YulFunctionCall","src":"2448:16:51"},{"kind":"number","nodeType":"YulLiteral","src":"2466:4:51","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2444:3:51"},"nodeType":"YulFunctionCall","src":"2444:27:51"},{"kind":"number","nodeType":"YulLiteral","src":"2473:1:51","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2437:6:51"},"nodeType":"YulFunctionCall","src":"2437:38:51"},"nodeType":"YulExpressionStatement","src":"2437:38:51"},{"nodeType":"YulAssignment","src":"2484:16:51","value":{"name":"array_1","nodeType":"YulIdentifier","src":"2493:7:51"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2484:5:51"}]}]},"name":"abi_decode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2070:6:51","type":""},{"name":"end","nodeType":"YulTypedName","src":"2078:3:51","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2086:5:51","type":""}],"src":"2044:462:51"},{"body":{"nodeType":"YulBlock","src":"2744:930:51","statements":[{"body":{"nodeType":"YulBlock","src":"2791:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2800:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2803:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2793:6:51"},"nodeType":"YulFunctionCall","src":"2793:12:51"},"nodeType":"YulExpressionStatement","src":"2793:12:51"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2765:7:51"},{"name":"headStart","nodeType":"YulIdentifier","src":"2774:9:51"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2761:3:51"},"nodeType":"YulFunctionCall","src":"2761:23:51"},{"kind":"number","nodeType":"YulLiteral","src":"2786:3:51","type":"","value":"288"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2757:3:51"},"nodeType":"YulFunctionCall","src":"2757:33:51"},"nodeType":"YulIf","src":"2754:53:51"},{"nodeType":"YulAssignment","src":"2816:39:51","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2845:9:51"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2826:18:51"},"nodeType":"YulFunctionCall","src":"2826:29:51"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2816:6:51"}]},{"nodeType":"YulAssignment","src":"2864:48:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2897:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"2908:2:51","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2893:3:51"},"nodeType":"YulFunctionCall","src":"2893:18:51"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2874:18:51"},"nodeType":"YulFunctionCall","src":"2874:38:51"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2864:6:51"}]},{"nodeType":"YulAssignment","src":"2921:42:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2948:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"2959:2:51","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2944:3:51"},"nodeType":"YulFunctionCall","src":"2944:18:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2931:12:51"},"nodeType":"YulFunctionCall","src":"2931:32:51"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2921:6:51"}]},{"nodeType":"YulAssignment","src":"2972:42:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2999:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"3010:2:51","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2995:3:51"},"nodeType":"YulFunctionCall","src":"2995:18:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2982:12:51"},"nodeType":"YulFunctionCall","src":"2982:32:51"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2972:6:51"}]},{"nodeType":"YulAssignment","src":"3023:43:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3050:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"3061:3:51","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3046:3:51"},"nodeType":"YulFunctionCall","src":"3046:19:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3033:12:51"},"nodeType":"YulFunctionCall","src":"3033:33:51"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3023:6:51"}]},{"nodeType":"YulAssignment","src":"3075:43:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3102:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"3113:3:51","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3098:3:51"},"nodeType":"YulFunctionCall","src":"3098:19:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3085:12:51"},"nodeType":"YulFunctionCall","src":"3085:33:51"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"3075:6:51"}]},{"nodeType":"YulVariableDeclaration","src":"3127:47:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3158:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"3169:3:51","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3154:3:51"},"nodeType":"YulFunctionCall","src":"3154:19:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3141:12:51"},"nodeType":"YulFunctionCall","src":"3141:33:51"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3131:6:51","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3183:28:51","value":{"kind":"number","nodeType":"YulLiteral","src":"3193:18:51","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3187:2:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"3238:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3247:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3250:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3240:6:51"},"nodeType":"YulFunctionCall","src":"3240:12:51"},"nodeType":"YulExpressionStatement","src":"3240:12:51"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3226:6:51"},{"name":"_1","nodeType":"YulIdentifier","src":"3234:2:51"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3223:2:51"},"nodeType":"YulFunctionCall","src":"3223:14:51"},"nodeType":"YulIf","src":"3220:34:51"},{"nodeType":"YulAssignment","src":"3263:59:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3294:9:51"},{"name":"offset","nodeType":"YulIdentifier","src":"3305:6:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3290:3:51"},"nodeType":"YulFunctionCall","src":"3290:22:51"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3314:7:51"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"3273:16:51"},"nodeType":"YulFunctionCall","src":"3273:49:51"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"3263:6:51"}]},{"nodeType":"YulVariableDeclaration","src":"3331:49:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3364:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"3375:3:51","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3360:3:51"},"nodeType":"YulFunctionCall","src":"3360:19:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3347:12:51"},"nodeType":"YulFunctionCall","src":"3347:33:51"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"3335:8:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"3409:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3418:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3421:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3411:6:51"},"nodeType":"YulFunctionCall","src":"3411:12:51"},"nodeType":"YulExpressionStatement","src":"3411:12:51"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"3395:8:51"},{"name":"_1","nodeType":"YulIdentifier","src":"3405:2:51"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3392:2:51"},"nodeType":"YulFunctionCall","src":"3392:16:51"},"nodeType":"YulIf","src":"3389:36:51"},{"nodeType":"YulAssignment","src":"3434:61:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3465:9:51"},{"name":"offset_1","nodeType":"YulIdentifier","src":"3476:8:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3461:3:51"},"nodeType":"YulFunctionCall","src":"3461:24:51"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3487:7:51"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"3444:16:51"},"nodeType":"YulFunctionCall","src":"3444:51:51"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"3434:6:51"}]},{"nodeType":"YulVariableDeclaration","src":"3504:49:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3537:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"3548:3:51","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3533:3:51"},"nodeType":"YulFunctionCall","src":"3533:19:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3520:12:51"},"nodeType":"YulFunctionCall","src":"3520:33:51"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"3508:8:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"3582:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3591:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3594:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3584:6:51"},"nodeType":"YulFunctionCall","src":"3584:12:51"},"nodeType":"YulExpressionStatement","src":"3584:12:51"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"3568:8:51"},{"name":"_1","nodeType":"YulIdentifier","src":"3578:2:51"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3565:2:51"},"nodeType":"YulFunctionCall","src":"3565:16:51"},"nodeType":"YulIf","src":"3562:36:51"},{"nodeType":"YulAssignment","src":"3607:61:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3638:9:51"},{"name":"offset_2","nodeType":"YulIdentifier","src":"3649:8:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3634:3:51"},"nodeType":"YulFunctionCall","src":"3634:24:51"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3660:7:51"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"3617:16:51"},"nodeType":"YulFunctionCall","src":"3617:51:51"},"variableNames":[{"name":"value8","nodeType":"YulIdentifier","src":"3607:6:51"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_bytes32t_uint256t_uint256t_bytes32t_bytes_memory_ptrt_bytes_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2646:9:51","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2657:7:51","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2669:6:51","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2677:6:51","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2685:6:51","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2693:6:51","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2701:6:51","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2709:6:51","type":""},{"name":"value6","nodeType":"YulTypedName","src":"2717:6:51","type":""},{"name":"value7","nodeType":"YulTypedName","src":"2725:6:51","type":""},{"name":"value8","nodeType":"YulTypedName","src":"2733:6:51","type":""}],"src":"2511:1163:51"},{"body":{"nodeType":"YulBlock","src":"3852:708:51","statements":[{"body":{"nodeType":"YulBlock","src":"3899:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3908:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3911:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3901:6:51"},"nodeType":"YulFunctionCall","src":"3901:12:51"},"nodeType":"YulExpressionStatement","src":"3901:12:51"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3873:7:51"},{"name":"headStart","nodeType":"YulIdentifier","src":"3882:9:51"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3869:3:51"},"nodeType":"YulFunctionCall","src":"3869:23:51"},{"kind":"number","nodeType":"YulLiteral","src":"3894:3:51","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3865:3:51"},"nodeType":"YulFunctionCall","src":"3865:33:51"},"nodeType":"YulIf","src":"3862:53:51"},{"nodeType":"YulVariableDeclaration","src":"3924:36:51","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3950:9:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3937:12:51"},"nodeType":"YulFunctionCall","src":"3937:23:51"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3928:5:51","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3994:5:51"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3969:24:51"},"nodeType":"YulFunctionCall","src":"3969:31:51"},"nodeType":"YulExpressionStatement","src":"3969:31:51"},{"nodeType":"YulAssignment","src":"4009:15:51","value":{"name":"value","nodeType":"YulIdentifier","src":"4019:5:51"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4009:6:51"}]},{"nodeType":"YulAssignment","src":"4033:42:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4060:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"4071:2:51","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4056:3:51"},"nodeType":"YulFunctionCall","src":"4056:18:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4043:12:51"},"nodeType":"YulFunctionCall","src":"4043:32:51"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4033:6:51"}]},{"nodeType":"YulAssignment","src":"4084:42:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4111:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"4122:2:51","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4107:3:51"},"nodeType":"YulFunctionCall","src":"4107:18:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4094:12:51"},"nodeType":"YulFunctionCall","src":"4094:32:51"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4084:6:51"}]},{"nodeType":"YulAssignment","src":"4135:42:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4162:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"4173:2:51","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4158:3:51"},"nodeType":"YulFunctionCall","src":"4158:18:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4145:12:51"},"nodeType":"YulFunctionCall","src":"4145:32:51"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4135:6:51"}]},{"nodeType":"YulVariableDeclaration","src":"4186:47:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4217:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"4228:3:51","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4213:3:51"},"nodeType":"YulFunctionCall","src":"4213:19:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4200:12:51"},"nodeType":"YulFunctionCall","src":"4200:33:51"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4190:6:51","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4242:28:51","value":{"kind":"number","nodeType":"YulLiteral","src":"4252:18:51","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4246:2:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"4297:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4306:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4309:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4299:6:51"},"nodeType":"YulFunctionCall","src":"4299:12:51"},"nodeType":"YulExpressionStatement","src":"4299:12:51"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4285:6:51"},{"name":"_1","nodeType":"YulIdentifier","src":"4293:2:51"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4282:2:51"},"nodeType":"YulFunctionCall","src":"4282:14:51"},"nodeType":"YulIf","src":"4279:34:51"},{"nodeType":"YulAssignment","src":"4322:59:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4353:9:51"},{"name":"offset","nodeType":"YulIdentifier","src":"4364:6:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4349:3:51"},"nodeType":"YulFunctionCall","src":"4349:22:51"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4373:7:51"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"4332:16:51"},"nodeType":"YulFunctionCall","src":"4332:49:51"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4322:6:51"}]},{"nodeType":"YulVariableDeclaration","src":"4390:49:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4423:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"4434:3:51","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4419:3:51"},"nodeType":"YulFunctionCall","src":"4419:19:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4406:12:51"},"nodeType":"YulFunctionCall","src":"4406:33:51"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"4394:8:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"4468:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4477:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4480:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4470:6:51"},"nodeType":"YulFunctionCall","src":"4470:12:51"},"nodeType":"YulExpressionStatement","src":"4470:12:51"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"4454:8:51"},{"name":"_1","nodeType":"YulIdentifier","src":"4464:2:51"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4451:2:51"},"nodeType":"YulFunctionCall","src":"4451:16:51"},"nodeType":"YulIf","src":"4448:36:51"},{"nodeType":"YulAssignment","src":"4493:61:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4524:9:51"},{"name":"offset_1","nodeType":"YulIdentifier","src":"4535:8:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4520:3:51"},"nodeType":"YulFunctionCall","src":"4520:24:51"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4546:7:51"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"4503:16:51"},"nodeType":"YulFunctionCall","src":"4503:51:51"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"4493:6:51"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes32t_bytes_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3778:9:51","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3789:7:51","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3801:6:51","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3809:6:51","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3817:6:51","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3825:6:51","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3833:6:51","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3841:6:51","type":""}],"src":"3679:881:51"},{"body":{"nodeType":"YulBlock","src":"4631:184:51","statements":[{"nodeType":"YulVariableDeclaration","src":"4641:10:51","value":{"kind":"number","nodeType":"YulLiteral","src":"4650:1:51","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4645:1:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"4710:63:51","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4735:3:51"},{"name":"i","nodeType":"YulIdentifier","src":"4740:1:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4731:3:51"},"nodeType":"YulFunctionCall","src":"4731:11:51"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4754:3:51"},{"name":"i","nodeType":"YulIdentifier","src":"4759:1:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4750:3:51"},"nodeType":"YulFunctionCall","src":"4750:11:51"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4744:5:51"},"nodeType":"YulFunctionCall","src":"4744:18:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4724:6:51"},"nodeType":"YulFunctionCall","src":"4724:39:51"},"nodeType":"YulExpressionStatement","src":"4724:39:51"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4671:1:51"},{"name":"length","nodeType":"YulIdentifier","src":"4674:6:51"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4668:2:51"},"nodeType":"YulFunctionCall","src":"4668:13:51"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4682:19:51","statements":[{"nodeType":"YulAssignment","src":"4684:15:51","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4693:1:51"},{"kind":"number","nodeType":"YulLiteral","src":"4696:2:51","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4689:3:51"},"nodeType":"YulFunctionCall","src":"4689:10:51"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4684:1:51"}]}]},"pre":{"nodeType":"YulBlock","src":"4664:3:51","statements":[]},"src":"4660:113:51"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4793:3:51"},{"name":"length","nodeType":"YulIdentifier","src":"4798:6:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4789:3:51"},"nodeType":"YulFunctionCall","src":"4789:16:51"},{"kind":"number","nodeType":"YulLiteral","src":"4807:1:51","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4782:6:51"},"nodeType":"YulFunctionCall","src":"4782:27:51"},"nodeType":"YulExpressionStatement","src":"4782:27:51"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4609:3:51","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4614:3:51","type":""},{"name":"length","nodeType":"YulTypedName","src":"4619:6:51","type":""}],"src":"4565:250:51"},{"body":{"nodeType":"YulBlock","src":"4869:221:51","statements":[{"nodeType":"YulVariableDeclaration","src":"4879:26:51","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4899:5:51"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4893:5:51"},"nodeType":"YulFunctionCall","src":"4893:12:51"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4883:6:51","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4921:3:51"},{"name":"length","nodeType":"YulIdentifier","src":"4926:6:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4914:6:51"},"nodeType":"YulFunctionCall","src":"4914:19:51"},"nodeType":"YulExpressionStatement","src":"4914:19:51"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4981:5:51"},{"kind":"number","nodeType":"YulLiteral","src":"4988:4:51","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4977:3:51"},"nodeType":"YulFunctionCall","src":"4977:16:51"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4999:3:51"},{"kind":"number","nodeType":"YulLiteral","src":"5004:4:51","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4995:3:51"},"nodeType":"YulFunctionCall","src":"4995:14:51"},{"name":"length","nodeType":"YulIdentifier","src":"5011:6:51"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4942:34:51"},"nodeType":"YulFunctionCall","src":"4942:76:51"},"nodeType":"YulExpressionStatement","src":"4942:76:51"},{"nodeType":"YulAssignment","src":"5027:57:51","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5042:3:51"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5055:6:51"},{"kind":"number","nodeType":"YulLiteral","src":"5063:2:51","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5051:3:51"},"nodeType":"YulFunctionCall","src":"5051:15:51"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5072:2:51","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5068:3:51"},"nodeType":"YulFunctionCall","src":"5068:7:51"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5047:3:51"},"nodeType":"YulFunctionCall","src":"5047:29:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5038:3:51"},"nodeType":"YulFunctionCall","src":"5038:39:51"},{"kind":"number","nodeType":"YulLiteral","src":"5079:4:51","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5034:3:51"},"nodeType":"YulFunctionCall","src":"5034:50:51"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5027:3:51"}]}]},"name":"abi_encode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4846:5:51","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4853:3:51","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4861:3:51","type":""}],"src":"4820:270:51"},{"body":{"nodeType":"YulBlock","src":"5214:98:51","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5231:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"5242:2:51","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5224:6:51"},"nodeType":"YulFunctionCall","src":"5224:21:51"},"nodeType":"YulExpressionStatement","src":"5224:21:51"},{"nodeType":"YulAssignment","src":"5254:52:51","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5279:6:51"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5291:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"5302:2:51","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5287:3:51"},"nodeType":"YulFunctionCall","src":"5287:18:51"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"5262:16:51"},"nodeType":"YulFunctionCall","src":"5262:44:51"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5254:4:51"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5183:9:51","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5194:6:51","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5205:4:51","type":""}],"src":"5095:217:51"},{"body":{"nodeType":"YulBlock","src":"5524:885:51","statements":[{"body":{"nodeType":"YulBlock","src":"5571:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5580:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5583:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5573:6:51"},"nodeType":"YulFunctionCall","src":"5573:12:51"},"nodeType":"YulExpressionStatement","src":"5573:12:51"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5545:7:51"},{"name":"headStart","nodeType":"YulIdentifier","src":"5554:9:51"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5541:3:51"},"nodeType":"YulFunctionCall","src":"5541:23:51"},{"kind":"number","nodeType":"YulLiteral","src":"5566:3:51","type":"","value":"256"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5537:3:51"},"nodeType":"YulFunctionCall","src":"5537:33:51"},"nodeType":"YulIf","src":"5534:53:51"},{"nodeType":"YulVariableDeclaration","src":"5596:36:51","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5622:9:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5609:12:51"},"nodeType":"YulFunctionCall","src":"5609:23:51"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5600:5:51","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5666:5:51"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5641:24:51"},"nodeType":"YulFunctionCall","src":"5641:31:51"},"nodeType":"YulExpressionStatement","src":"5641:31:51"},{"nodeType":"YulAssignment","src":"5681:15:51","value":{"name":"value","nodeType":"YulIdentifier","src":"5691:5:51"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5681:6:51"}]},{"nodeType":"YulAssignment","src":"5705:42:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5732:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"5743:2:51","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5728:3:51"},"nodeType":"YulFunctionCall","src":"5728:18:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5715:12:51"},"nodeType":"YulFunctionCall","src":"5715:32:51"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5705:6:51"}]},{"nodeType":"YulAssignment","src":"5756:42:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5783:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"5794:2:51","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5779:3:51"},"nodeType":"YulFunctionCall","src":"5779:18:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5766:12:51"},"nodeType":"YulFunctionCall","src":"5766:32:51"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5756:6:51"}]},{"nodeType":"YulVariableDeclaration","src":"5807:47:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5839:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"5850:2:51","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5835:3:51"},"nodeType":"YulFunctionCall","src":"5835:18:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5822:12:51"},"nodeType":"YulFunctionCall","src":"5822:32:51"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"5811:7:51","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"5888:7:51"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5863:24:51"},"nodeType":"YulFunctionCall","src":"5863:33:51"},"nodeType":"YulExpressionStatement","src":"5863:33:51"},{"nodeType":"YulAssignment","src":"5905:17:51","value":{"name":"value_1","nodeType":"YulIdentifier","src":"5915:7:51"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5905:6:51"}]},{"nodeType":"YulAssignment","src":"5931:43:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5958:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"5969:3:51","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5954:3:51"},"nodeType":"YulFunctionCall","src":"5954:19:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5941:12:51"},"nodeType":"YulFunctionCall","src":"5941:33:51"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"5931:6:51"}]},{"nodeType":"YulAssignment","src":"5983:43:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6010:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"6021:3:51","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6006:3:51"},"nodeType":"YulFunctionCall","src":"6006:19:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5993:12:51"},"nodeType":"YulFunctionCall","src":"5993:33:51"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"5983:6:51"}]},{"nodeType":"YulVariableDeclaration","src":"6035:47:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6066:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"6077:3:51","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6062:3:51"},"nodeType":"YulFunctionCall","src":"6062:19:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6049:12:51"},"nodeType":"YulFunctionCall","src":"6049:33:51"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6039:6:51","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6091:28:51","value":{"kind":"number","nodeType":"YulLiteral","src":"6101:18:51","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6095:2:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"6146:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6155:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6158:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6148:6:51"},"nodeType":"YulFunctionCall","src":"6148:12:51"},"nodeType":"YulExpressionStatement","src":"6148:12:51"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6134:6:51"},{"name":"_1","nodeType":"YulIdentifier","src":"6142:2:51"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6131:2:51"},"nodeType":"YulFunctionCall","src":"6131:14:51"},"nodeType":"YulIf","src":"6128:34:51"},{"nodeType":"YulAssignment","src":"6171:59:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6202:9:51"},{"name":"offset","nodeType":"YulIdentifier","src":"6213:6:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6198:3:51"},"nodeType":"YulFunctionCall","src":"6198:22:51"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6222:7:51"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"6181:16:51"},"nodeType":"YulFunctionCall","src":"6181:49:51"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"6171:6:51"}]},{"nodeType":"YulVariableDeclaration","src":"6239:49:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6272:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"6283:3:51","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6268:3:51"},"nodeType":"YulFunctionCall","src":"6268:19:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6255:12:51"},"nodeType":"YulFunctionCall","src":"6255:33:51"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"6243:8:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"6317:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6326:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6329:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6319:6:51"},"nodeType":"YulFunctionCall","src":"6319:12:51"},"nodeType":"YulExpressionStatement","src":"6319:12:51"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"6303:8:51"},{"name":"_1","nodeType":"YulIdentifier","src":"6313:2:51"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6300:2:51"},"nodeType":"YulFunctionCall","src":"6300:16:51"},"nodeType":"YulIf","src":"6297:36:51"},{"nodeType":"YulAssignment","src":"6342:61:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6373:9:51"},{"name":"offset_1","nodeType":"YulIdentifier","src":"6384:8:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6369:3:51"},"nodeType":"YulFunctionCall","src":"6369:24:51"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6395:7:51"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"6352:16:51"},"nodeType":"YulFunctionCall","src":"6352:51:51"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"6342:6:51"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_addresst_bytes32t_bytes32t_bytes_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5434:9:51","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5445:7:51","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5457:6:51","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5465:6:51","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5473:6:51","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5481:6:51","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5489:6:51","type":""},{"name":"value5","nodeType":"YulTypedName","src":"5497:6:51","type":""},{"name":"value6","nodeType":"YulTypedName","src":"5505:6:51","type":""},{"name":"value7","nodeType":"YulTypedName","src":"5513:6:51","type":""}],"src":"5317:1092:51"},{"body":{"nodeType":"YulBlock","src":"6613:881:51","statements":[{"body":{"nodeType":"YulBlock","src":"6660:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6669:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6672:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6662:6:51"},"nodeType":"YulFunctionCall","src":"6662:12:51"},"nodeType":"YulExpressionStatement","src":"6662:12:51"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6634:7:51"},{"name":"headStart","nodeType":"YulIdentifier","src":"6643:9:51"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6630:3:51"},"nodeType":"YulFunctionCall","src":"6630:23:51"},{"kind":"number","nodeType":"YulLiteral","src":"6655:3:51","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6626:3:51"},"nodeType":"YulFunctionCall","src":"6626:33:51"},"nodeType":"YulIf","src":"6623:53:51"},{"nodeType":"YulVariableDeclaration","src":"6685:36:51","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6711:9:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6698:12:51"},"nodeType":"YulFunctionCall","src":"6698:23:51"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6689:5:51","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6755:5:51"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"6730:24:51"},"nodeType":"YulFunctionCall","src":"6730:31:51"},"nodeType":"YulExpressionStatement","src":"6730:31:51"},{"nodeType":"YulAssignment","src":"6770:15:51","value":{"name":"value","nodeType":"YulIdentifier","src":"6780:5:51"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6770:6:51"}]},{"nodeType":"YulAssignment","src":"6794:42:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6821:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"6832:2:51","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6817:3:51"},"nodeType":"YulFunctionCall","src":"6817:18:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6804:12:51"},"nodeType":"YulFunctionCall","src":"6804:32:51"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6794:6:51"}]},{"nodeType":"YulAssignment","src":"6845:42:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6872:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"6883:2:51","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6868:3:51"},"nodeType":"YulFunctionCall","src":"6868:18:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6855:12:51"},"nodeType":"YulFunctionCall","src":"6855:32:51"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6845:6:51"}]},{"nodeType":"YulAssignment","src":"6896:42:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6923:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"6934:2:51","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6919:3:51"},"nodeType":"YulFunctionCall","src":"6919:18:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6906:12:51"},"nodeType":"YulFunctionCall","src":"6906:32:51"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6896:6:51"}]},{"nodeType":"YulVariableDeclaration","src":"6947:47:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6978:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"6989:3:51","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6974:3:51"},"nodeType":"YulFunctionCall","src":"6974:19:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6961:12:51"},"nodeType":"YulFunctionCall","src":"6961:33:51"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6951:6:51","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7003:28:51","value":{"kind":"number","nodeType":"YulLiteral","src":"7013:18:51","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7007:2:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"7058:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7067:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7070:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7060:6:51"},"nodeType":"YulFunctionCall","src":"7060:12:51"},"nodeType":"YulExpressionStatement","src":"7060:12:51"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7046:6:51"},{"name":"_1","nodeType":"YulIdentifier","src":"7054:2:51"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7043:2:51"},"nodeType":"YulFunctionCall","src":"7043:14:51"},"nodeType":"YulIf","src":"7040:34:51"},{"nodeType":"YulAssignment","src":"7083:59:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7114:9:51"},{"name":"offset","nodeType":"YulIdentifier","src":"7125:6:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7110:3:51"},"nodeType":"YulFunctionCall","src":"7110:22:51"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7134:7:51"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"7093:16:51"},"nodeType":"YulFunctionCall","src":"7093:49:51"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7083:6:51"}]},{"nodeType":"YulVariableDeclaration","src":"7151:49:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7184:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"7195:3:51","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7180:3:51"},"nodeType":"YulFunctionCall","src":"7180:19:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7167:12:51"},"nodeType":"YulFunctionCall","src":"7167:33:51"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"7155:8:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"7229:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7238:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7241:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7231:6:51"},"nodeType":"YulFunctionCall","src":"7231:12:51"},"nodeType":"YulExpressionStatement","src":"7231:12:51"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"7215:8:51"},{"name":"_1","nodeType":"YulIdentifier","src":"7225:2:51"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7212:2:51"},"nodeType":"YulFunctionCall","src":"7212:16:51"},"nodeType":"YulIf","src":"7209:36:51"},{"nodeType":"YulAssignment","src":"7254:61:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7285:9:51"},{"name":"offset_1","nodeType":"YulIdentifier","src":"7296:8:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7281:3:51"},"nodeType":"YulFunctionCall","src":"7281:24:51"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7307:7:51"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"7264:16:51"},"nodeType":"YulFunctionCall","src":"7264:51:51"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"7254:6:51"}]},{"nodeType":"YulVariableDeclaration","src":"7324:49:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7357:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"7368:3:51","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7353:3:51"},"nodeType":"YulFunctionCall","src":"7353:19:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7340:12:51"},"nodeType":"YulFunctionCall","src":"7340:33:51"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"7328:8:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"7402:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7411:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7414:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7404:6:51"},"nodeType":"YulFunctionCall","src":"7404:12:51"},"nodeType":"YulExpressionStatement","src":"7404:12:51"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"7388:8:51"},{"name":"_1","nodeType":"YulIdentifier","src":"7398:2:51"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7385:2:51"},"nodeType":"YulFunctionCall","src":"7385:16:51"},"nodeType":"YulIf","src":"7382:36:51"},{"nodeType":"YulAssignment","src":"7427:61:51","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7458:9:51"},{"name":"offset_2","nodeType":"YulIdentifier","src":"7469:8:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7454:3:51"},"nodeType":"YulFunctionCall","src":"7454:24:51"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7480:7:51"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"7437:16:51"},"nodeType":"YulFunctionCall","src":"7437:51:51"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"7427:6:51"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes32t_bytes_memory_ptrt_bytes_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6531:9:51","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6542:7:51","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6554:6:51","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6562:6:51","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6570:6:51","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6578:6:51","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6586:6:51","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6594:6:51","type":""},{"name":"value6","nodeType":"YulTypedName","src":"6602:6:51","type":""}],"src":"6414:1080:51"},{"body":{"nodeType":"YulBlock","src":"7569:177:51","statements":[{"body":{"nodeType":"YulBlock","src":"7615:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7624:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7627:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7617:6:51"},"nodeType":"YulFunctionCall","src":"7617:12:51"},"nodeType":"YulExpressionStatement","src":"7617:12:51"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7590:7:51"},{"name":"headStart","nodeType":"YulIdentifier","src":"7599:9:51"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7586:3:51"},"nodeType":"YulFunctionCall","src":"7586:23:51"},{"kind":"number","nodeType":"YulLiteral","src":"7611:2:51","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7582:3:51"},"nodeType":"YulFunctionCall","src":"7582:32:51"},"nodeType":"YulIf","src":"7579:52:51"},{"nodeType":"YulVariableDeclaration","src":"7640:36:51","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7666:9:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7653:12:51"},"nodeType":"YulFunctionCall","src":"7653:23:51"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7644:5:51","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7710:5:51"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"7685:24:51"},"nodeType":"YulFunctionCall","src":"7685:31:51"},"nodeType":"YulExpressionStatement","src":"7685:31:51"},{"nodeType":"YulAssignment","src":"7725:15:51","value":{"name":"value","nodeType":"YulIdentifier","src":"7735:5:51"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7725:6:51"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7535:9:51","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7546:7:51","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7558:6:51","type":""}],"src":"7499:247:51"},{"body":{"nodeType":"YulBlock","src":"7872:98:51","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7889:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"7900:2:51","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7882:6:51"},"nodeType":"YulFunctionCall","src":"7882:21:51"},"nodeType":"YulExpressionStatement","src":"7882:21:51"},{"nodeType":"YulAssignment","src":"7912:52:51","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7937:6:51"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7949:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"7960:2:51","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7945:3:51"},"nodeType":"YulFunctionCall","src":"7945:18:51"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"7920:16:51"},"nodeType":"YulFunctionCall","src":"7920:44:51"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7912:4:51"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7841:9:51","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7852:6:51","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7863:4:51","type":""}],"src":"7751:219:51"},{"body":{"nodeType":"YulBlock","src":"8140:338:51","statements":[{"nodeType":"YulVariableDeclaration","src":"8150:16:51","value":{"name":"pos","nodeType":"YulIdentifier","src":"8163:3:51"},"variables":[{"name":"pos_1","nodeType":"YulTypedName","src":"8154:5:51","type":""}]},{"nodeType":"YulAssignment","src":"8175:12:51","value":{"name":"pos","nodeType":"YulIdentifier","src":"8184:3:51"},"variableNames":[{"name":"pos_1","nodeType":"YulIdentifier","src":"8175:5:51"}]},{"nodeType":"YulVariableDeclaration","src":"8196:20:51","value":{"name":"value0","nodeType":"YulIdentifier","src":"8210:6:51"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"8200:6:51","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8225:10:51","value":{"kind":"number","nodeType":"YulLiteral","src":"8234:1:51","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8229:1:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"8291:153:51","statements":[{"expression":{"arguments":[{"name":"pos_1","nodeType":"YulIdentifier","src":"8312:5:51"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8325:6:51"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8319:5:51"},"nodeType":"YulFunctionCall","src":"8319:13:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8305:6:51"},"nodeType":"YulFunctionCall","src":"8305:28:51"},"nodeType":"YulExpressionStatement","src":"8305:28:51"},{"nodeType":"YulVariableDeclaration","src":"8346:14:51","value":{"kind":"number","nodeType":"YulLiteral","src":"8356:4:51","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8350:2:51","type":""}]},{"nodeType":"YulAssignment","src":"8373:23:51","value":{"arguments":[{"name":"pos_1","nodeType":"YulIdentifier","src":"8386:5:51"},{"name":"_1","nodeType":"YulIdentifier","src":"8393:2:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8382:3:51"},"nodeType":"YulFunctionCall","src":"8382:14:51"},"variableNames":[{"name":"pos_1","nodeType":"YulIdentifier","src":"8373:5:51"}]},{"nodeType":"YulAssignment","src":"8409:25:51","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8423:6:51"},{"name":"_1","nodeType":"YulIdentifier","src":"8431:2:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8419:3:51"},"nodeType":"YulFunctionCall","src":"8419:15:51"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"8409:6:51"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8255:1:51"},{"kind":"number","nodeType":"YulLiteral","src":"8258:4:51","type":"","value":"0x02"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8252:2:51"},"nodeType":"YulFunctionCall","src":"8252:11:51"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8264:18:51","statements":[{"nodeType":"YulAssignment","src":"8266:14:51","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8275:1:51"},{"kind":"number","nodeType":"YulLiteral","src":"8278:1:51","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8271:3:51"},"nodeType":"YulFunctionCall","src":"8271:9:51"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8266:1:51"}]}]},"pre":{"nodeType":"YulBlock","src":"8248:3:51","statements":[]},"src":"8244:200:51"},{"nodeType":"YulAssignment","src":"8453:19:51","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8464:3:51"},{"kind":"number","nodeType":"YulLiteral","src":"8469:2:51","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8460:3:51"},"nodeType":"YulFunctionCall","src":"8460:12:51"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8453:3:51"}]}]},"name":"abi_encode_tuple_packed_t_array$_t_bytes32_$2_memory_ptr__to_t_array$_t_bytes32_$2_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8116:3:51","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8121:6:51","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8132:3:51","type":""}],"src":"7975:503:51"},{"body":{"nodeType":"YulBlock","src":"8602:63:51","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8619:3:51"},{"name":"value0","nodeType":"YulIdentifier","src":"8624:6:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8612:6:51"},"nodeType":"YulFunctionCall","src":"8612:19:51"},"nodeType":"YulExpressionStatement","src":"8612:19:51"},{"nodeType":"YulAssignment","src":"8640:19:51","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8651:3:51"},{"kind":"number","nodeType":"YulLiteral","src":"8656:2:51","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8647:3:51"},"nodeType":"YulFunctionCall","src":"8647:12:51"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8640:3:51"}]}]},"name":"abi_encode_tuple_packed_t_uint256__to_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8578:3:51","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8583:6:51","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8594:3:51","type":""}],"src":"8483:182:51"},{"body":{"nodeType":"YulBlock","src":"9057:851:51","statements":[{"nodeType":"YulVariableDeclaration","src":"9067:41:51","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9081:26:51","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9077:3:51"},"nodeType":"YulFunctionCall","src":"9077:31:51"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9071:2:51","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9124:3:51"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9133:6:51"},{"name":"_1","nodeType":"YulIdentifier","src":"9141:2:51"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9129:3:51"},"nodeType":"YulFunctionCall","src":"9129:15:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9117:6:51"},"nodeType":"YulFunctionCall","src":"9117:28:51"},"nodeType":"YulExpressionStatement","src":"9117:28:51"},{"nodeType":"YulVariableDeclaration","src":"9154:27:51","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9174:6:51"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9168:5:51"},"nodeType":"YulFunctionCall","src":"9168:13:51"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9158:6:51","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9229:6:51"},{"kind":"number","nodeType":"YulLiteral","src":"9237:4:51","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9225:3:51"},"nodeType":"YulFunctionCall","src":"9225:17:51"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9248:3:51"},{"kind":"number","nodeType":"YulLiteral","src":"9253:2:51","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9244:3:51"},"nodeType":"YulFunctionCall","src":"9244:12:51"},{"name":"length","nodeType":"YulIdentifier","src":"9258:6:51"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"9190:34:51"},"nodeType":"YulFunctionCall","src":"9190:75:51"},"nodeType":"YulExpressionStatement","src":"9190:75:51"},{"nodeType":"YulVariableDeclaration","src":"9274:26:51","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9288:3:51"},{"name":"length","nodeType":"YulIdentifier","src":"9293:6:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9284:3:51"},"nodeType":"YulFunctionCall","src":"9284:16:51"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"9278:2:51","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9309:29:51","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9331:6:51"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9325:5:51"},"nodeType":"YulFunctionCall","src":"9325:13:51"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"9313:8:51","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9386:6:51"},{"kind":"number","nodeType":"YulLiteral","src":"9394:4:51","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9382:3:51"},"nodeType":"YulFunctionCall","src":"9382:17:51"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"9405:2:51"},{"kind":"number","nodeType":"YulLiteral","src":"9409:2:51","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9401:3:51"},"nodeType":"YulFunctionCall","src":"9401:11:51"},{"name":"length_1","nodeType":"YulIdentifier","src":"9414:8:51"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"9347:34:51"},"nodeType":"YulFunctionCall","src":"9347:76:51"},"nodeType":"YulExpressionStatement","src":"9347:76:51"},{"nodeType":"YulVariableDeclaration","src":"9432:27:51","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"9446:2:51"},{"name":"length_1","nodeType":"YulIdentifier","src":"9450:8:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9442:3:51"},"nodeType":"YulFunctionCall","src":"9442:17:51"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"9436:2:51","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"9479:2:51"},{"kind":"number","nodeType":"YulLiteral","src":"9483:2:51","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9475:3:51"},"nodeType":"YulFunctionCall","src":"9475:11:51"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"9492:6:51"},{"name":"_1","nodeType":"YulIdentifier","src":"9500:2:51"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9488:3:51"},"nodeType":"YulFunctionCall","src":"9488:15:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9468:6:51"},"nodeType":"YulFunctionCall","src":"9468:36:51"},"nodeType":"YulExpressionStatement","src":"9468:36:51"},{"expression":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"9524:2:51"},{"kind":"number","nodeType":"YulLiteral","src":"9528:2:51","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9520:3:51"},"nodeType":"YulFunctionCall","src":"9520:11:51"},{"name":"value4","nodeType":"YulIdentifier","src":"9533:6:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9513:6:51"},"nodeType":"YulFunctionCall","src":"9513:27:51"},"nodeType":"YulExpressionStatement","src":"9513:27:51"},{"nodeType":"YulVariableDeclaration","src":"9549:29:51","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"9571:6:51"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9565:5:51"},"nodeType":"YulFunctionCall","src":"9565:13:51"},"variables":[{"name":"length_2","nodeType":"YulTypedName","src":"9553:8:51","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"9626:6:51"},{"kind":"number","nodeType":"YulLiteral","src":"9634:4:51","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9622:3:51"},"nodeType":"YulFunctionCall","src":"9622:17:51"},{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"9645:2:51"},{"kind":"number","nodeType":"YulLiteral","src":"9649:2:51","type":"","value":"72"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9641:3:51"},"nodeType":"YulFunctionCall","src":"9641:11:51"},{"name":"length_2","nodeType":"YulIdentifier","src":"9654:8:51"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"9587:34:51"},"nodeType":"YulFunctionCall","src":"9587:76:51"},"nodeType":"YulExpressionStatement","src":"9587:76:51"},{"nodeType":"YulVariableDeclaration","src":"9672:27:51","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"9686:2:51"},{"name":"length_2","nodeType":"YulIdentifier","src":"9690:8:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9682:3:51"},"nodeType":"YulFunctionCall","src":"9682:17:51"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"9676:2:51","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"9719:2:51"},{"kind":"number","nodeType":"YulLiteral","src":"9723:2:51","type":"","value":"72"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9715:3:51"},"nodeType":"YulFunctionCall","src":"9715:11:51"},{"name":"value6","nodeType":"YulIdentifier","src":"9728:6:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9708:6:51"},"nodeType":"YulFunctionCall","src":"9708:27:51"},"nodeType":"YulExpressionStatement","src":"9708:27:51"},{"nodeType":"YulVariableDeclaration","src":"9744:29:51","value":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"9766:6:51"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9760:5:51"},"nodeType":"YulFunctionCall","src":"9760:13:51"},"variables":[{"name":"length_3","nodeType":"YulTypedName","src":"9748:8:51","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"9821:6:51"},{"kind":"number","nodeType":"YulLiteral","src":"9829:4:51","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9817:3:51"},"nodeType":"YulFunctionCall","src":"9817:17:51"},{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"9840:2:51"},{"kind":"number","nodeType":"YulLiteral","src":"9844:3:51","type":"","value":"104"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9836:3:51"},"nodeType":"YulFunctionCall","src":"9836:12:51"},{"name":"length_3","nodeType":"YulIdentifier","src":"9850:8:51"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"9782:34:51"},"nodeType":"YulFunctionCall","src":"9782:77:51"},"nodeType":"YulExpressionStatement","src":"9782:77:51"},{"nodeType":"YulAssignment","src":"9868:34:51","value":{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"9883:2:51"},{"name":"length_3","nodeType":"YulIdentifier","src":"9887:8:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9879:3:51"},"nodeType":"YulFunctionCall","src":"9879:17:51"},{"kind":"number","nodeType":"YulLiteral","src":"9898:3:51","type":"","value":"104"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9875:3:51"},"nodeType":"YulFunctionCall","src":"9875:27:51"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9868:3:51"}]}]},"name":"abi_encode_tuple_packed_t_bytes20_t_bytes_memory_ptr_t_bytes_memory_ptr_t_bytes20_t_bytes32_t_bytes_memory_ptr_t_bytes32_t_bytes_memory_ptr__to_t_bytes20_t_bytes_memory_ptr_t_bytes_memory_ptr_t_bytes20_t_bytes32_t_bytes_memory_ptr_t_bytes32_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8977:3:51","type":""},{"name":"value7","nodeType":"YulTypedName","src":"8982:6:51","type":""},{"name":"value6","nodeType":"YulTypedName","src":"8990:6:51","type":""},{"name":"value5","nodeType":"YulTypedName","src":"8998:6:51","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9006:6:51","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9014:6:51","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9022:6:51","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9030:6:51","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9038:6:51","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9049:3:51","type":""}],"src":"8670:1238:51"},{"body":{"nodeType":"YulBlock","src":"10014:76:51","statements":[{"nodeType":"YulAssignment","src":"10024:26:51","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10036:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"10047:2:51","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10032:3:51"},"nodeType":"YulFunctionCall","src":"10032:18:51"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10024:4:51"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10066:9:51"},{"name":"value0","nodeType":"YulIdentifier","src":"10077:6:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10059:6:51"},"nodeType":"YulFunctionCall","src":"10059:25:51"},"nodeType":"YulExpressionStatement","src":"10059:25:51"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9983:9:51","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9994:6:51","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10005:4:51","type":""}],"src":"9913:177:51"},{"body":{"nodeType":"YulBlock","src":"10176:170:51","statements":[{"body":{"nodeType":"YulBlock","src":"10222:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10231:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10234:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10224:6:51"},"nodeType":"YulFunctionCall","src":"10224:12:51"},"nodeType":"YulExpressionStatement","src":"10224:12:51"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10197:7:51"},{"name":"headStart","nodeType":"YulIdentifier","src":"10206:9:51"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10193:3:51"},"nodeType":"YulFunctionCall","src":"10193:23:51"},{"kind":"number","nodeType":"YulLiteral","src":"10218:2:51","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10189:3:51"},"nodeType":"YulFunctionCall","src":"10189:32:51"},"nodeType":"YulIf","src":"10186:52:51"},{"nodeType":"YulVariableDeclaration","src":"10247:29:51","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10266:9:51"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10260:5:51"},"nodeType":"YulFunctionCall","src":"10260:16:51"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10251:5:51","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10310:5:51"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"10285:24:51"},"nodeType":"YulFunctionCall","src":"10285:31:51"},"nodeType":"YulExpressionStatement","src":"10285:31:51"},{"nodeType":"YulAssignment","src":"10325:15:51","value":{"name":"value","nodeType":"YulIdentifier","src":"10335:5:51"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10325:6:51"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10142:9:51","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10153:7:51","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10165:6:51","type":""}],"src":"10095:251:51"},{"body":{"nodeType":"YulBlock","src":"10570:255:51","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10587:9:51"},{"name":"value0","nodeType":"YulIdentifier","src":"10598:6:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10580:6:51"},"nodeType":"YulFunctionCall","src":"10580:25:51"},"nodeType":"YulExpressionStatement","src":"10580:25:51"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10625:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"10636:2:51","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10621:3:51"},"nodeType":"YulFunctionCall","src":"10621:18:51"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10645:6:51"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10661:3:51","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"10666:1:51","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10657:3:51"},"nodeType":"YulFunctionCall","src":"10657:11:51"},{"kind":"number","nodeType":"YulLiteral","src":"10670:1:51","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10653:3:51"},"nodeType":"YulFunctionCall","src":"10653:19:51"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10641:3:51"},"nodeType":"YulFunctionCall","src":"10641:32:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10614:6:51"},"nodeType":"YulFunctionCall","src":"10614:60:51"},"nodeType":"YulExpressionStatement","src":"10614:60:51"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10694:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"10705:2:51","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10690:3:51"},"nodeType":"YulFunctionCall","src":"10690:18:51"},{"name":"value2","nodeType":"YulIdentifier","src":"10710:6:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10683:6:51"},"nodeType":"YulFunctionCall","src":"10683:34:51"},"nodeType":"YulExpressionStatement","src":"10683:34:51"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10737:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"10748:2:51","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10733:3:51"},"nodeType":"YulFunctionCall","src":"10733:18:51"},{"kind":"number","nodeType":"YulLiteral","src":"10753:3:51","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10726:6:51"},"nodeType":"YulFunctionCall","src":"10726:31:51"},"nodeType":"YulExpressionStatement","src":"10726:31:51"},{"nodeType":"YulAssignment","src":"10766:53:51","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"10791:6:51"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10803:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"10814:3:51","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10799:3:51"},"nodeType":"YulFunctionCall","src":"10799:19:51"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"10774:16:51"},"nodeType":"YulFunctionCall","src":"10774:45:51"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10766:4:51"}]}]},"name":"abi_encode_tuple_t_rational_0_by_1_t_address_t_rational_0_by_1_t_bytes_memory_ptr__to_t_uint256_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10515:9:51","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10526:6:51","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10534:6:51","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10542:6:51","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10550:6:51","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10561:4:51","type":""}],"src":"10351:474:51"},{"body":{"nodeType":"YulBlock","src":"10920:557:51","statements":[{"body":{"nodeType":"YulBlock","src":"10966:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10975:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10978:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10968:6:51"},"nodeType":"YulFunctionCall","src":"10968:12:51"},"nodeType":"YulExpressionStatement","src":"10968:12:51"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10941:7:51"},{"name":"headStart","nodeType":"YulIdentifier","src":"10950:9:51"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10937:3:51"},"nodeType":"YulFunctionCall","src":"10937:23:51"},{"kind":"number","nodeType":"YulLiteral","src":"10962:2:51","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10933:3:51"},"nodeType":"YulFunctionCall","src":"10933:32:51"},"nodeType":"YulIf","src":"10930:52:51"},{"nodeType":"YulVariableDeclaration","src":"10991:30:51","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11011:9:51"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11005:5:51"},"nodeType":"YulFunctionCall","src":"11005:16:51"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10995:6:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"11064:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11073:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11076:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11066:6:51"},"nodeType":"YulFunctionCall","src":"11066:12:51"},"nodeType":"YulExpressionStatement","src":"11066:12:51"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11036:6:51"},{"kind":"number","nodeType":"YulLiteral","src":"11044:18:51","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11033:2:51"},"nodeType":"YulFunctionCall","src":"11033:30:51"},"nodeType":"YulIf","src":"11030:50:51"},{"nodeType":"YulVariableDeclaration","src":"11089:32:51","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11103:9:51"},{"name":"offset","nodeType":"YulIdentifier","src":"11114:6:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11099:3:51"},"nodeType":"YulFunctionCall","src":"11099:22:51"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11093:2:51","type":""}]},{"body":{"nodeType":"YulBlock","src":"11169:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11178:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11181:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11171:6:51"},"nodeType":"YulFunctionCall","src":"11171:12:51"},"nodeType":"YulExpressionStatement","src":"11171:12:51"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"11148:2:51"},{"kind":"number","nodeType":"YulLiteral","src":"11152:4:51","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11144:3:51"},"nodeType":"YulFunctionCall","src":"11144:13:51"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11159:7:51"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11140:3:51"},"nodeType":"YulFunctionCall","src":"11140:27:51"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11133:6:51"},"nodeType":"YulFunctionCall","src":"11133:35:51"},"nodeType":"YulIf","src":"11130:55:51"},{"nodeType":"YulVariableDeclaration","src":"11194:19:51","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"11210:2:51"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11204:5:51"},"nodeType":"YulFunctionCall","src":"11204:9:51"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"11198:2:51","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11222:61:51","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"11279:2:51"}],"functionName":{"name":"array_allocation_size_bytes","nodeType":"YulIdentifier","src":"11251:27:51"},"nodeType":"YulFunctionCall","src":"11251:31:51"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"11235:15:51"},"nodeType":"YulFunctionCall","src":"11235:48:51"},"variables":[{"name":"array","nodeType":"YulTypedName","src":"11226:5:51","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11299:5:51"},{"name":"_2","nodeType":"YulIdentifier","src":"11306:2:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11292:6:51"},"nodeType":"YulFunctionCall","src":"11292:17:51"},"nodeType":"YulExpressionStatement","src":"11292:17:51"},{"body":{"nodeType":"YulBlock","src":"11355:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11364:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11367:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11357:6:51"},"nodeType":"YulFunctionCall","src":"11357:12:51"},"nodeType":"YulExpressionStatement","src":"11357:12:51"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"11332:2:51"},{"name":"_2","nodeType":"YulIdentifier","src":"11336:2:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11328:3:51"},"nodeType":"YulFunctionCall","src":"11328:11:51"},{"kind":"number","nodeType":"YulLiteral","src":"11341:2:51","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11324:3:51"},"nodeType":"YulFunctionCall","src":"11324:20:51"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11346:7:51"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11321:2:51"},"nodeType":"YulFunctionCall","src":"11321:33:51"},"nodeType":"YulIf","src":"11318:53:51"},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"11419:2:51"},{"kind":"number","nodeType":"YulLiteral","src":"11423:2:51","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11415:3:51"},"nodeType":"YulFunctionCall","src":"11415:11:51"},{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11432:5:51"},{"kind":"number","nodeType":"YulLiteral","src":"11439:2:51","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11428:3:51"},"nodeType":"YulFunctionCall","src":"11428:14:51"},{"name":"_2","nodeType":"YulIdentifier","src":"11444:2:51"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"11380:34:51"},"nodeType":"YulFunctionCall","src":"11380:67:51"},"nodeType":"YulExpressionStatement","src":"11380:67:51"},{"nodeType":"YulAssignment","src":"11456:15:51","value":{"name":"array","nodeType":"YulIdentifier","src":"11466:5:51"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11456:6:51"}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10886:9:51","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10897:7:51","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10909:6:51","type":""}],"src":"10830:647:51"},{"body":{"nodeType":"YulBlock","src":"11575:263:51","statements":[{"nodeType":"YulVariableDeclaration","src":"11585:26:51","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11605:5:51"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11599:5:51"},"nodeType":"YulFunctionCall","src":"11599:12:51"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11589:6:51","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11620:33:51","value":{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11640:5:51"},{"kind":"number","nodeType":"YulLiteral","src":"11647:4:51","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11636:3:51"},"nodeType":"YulFunctionCall","src":"11636:16:51"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11630:5:51"},"nodeType":"YulFunctionCall","src":"11630:23:51"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11624:2:51","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11662:25:51","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11676:3:51","type":"","value":"240"},{"kind":"number","nodeType":"YulLiteral","src":"11681:5:51","type":"","value":"65535"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11672:3:51"},"nodeType":"YulFunctionCall","src":"11672:15:51"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"11666:2:51","type":""}]},{"nodeType":"YulAssignment","src":"11696:20:51","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"11709:2:51"},{"name":"_2","nodeType":"YulIdentifier","src":"11713:2:51"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11705:3:51"},"nodeType":"YulFunctionCall","src":"11705:11:51"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11696:5:51"}]},{"body":{"nodeType":"YulBlock","src":"11750:82:51","statements":[{"nodeType":"YulAssignment","src":"11764:58:51","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"11781:2:51"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11793:1:51","type":"","value":"3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11800:1:51","type":"","value":"2"},{"name":"length","nodeType":"YulIdentifier","src":"11803:6:51"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11796:3:51"},"nodeType":"YulFunctionCall","src":"11796:14:51"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11789:3:51"},"nodeType":"YulFunctionCall","src":"11789:22:51"},{"name":"_2","nodeType":"YulIdentifier","src":"11813:2:51"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11785:3:51"},"nodeType":"YulFunctionCall","src":"11785:31:51"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11777:3:51"},"nodeType":"YulFunctionCall","src":"11777:40:51"},{"name":"_2","nodeType":"YulIdentifier","src":"11819:2:51"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11773:3:51"},"nodeType":"YulFunctionCall","src":"11773:49:51"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11764:5:51"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11731:6:51"},{"kind":"number","nodeType":"YulLiteral","src":"11739:1:51","type":"","value":"2"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11728:2:51"},"nodeType":"YulFunctionCall","src":"11728:13:51"},"nodeType":"YulIf","src":"11725:107:51"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes2","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"11555:5:51","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"11565:5:51","type":""}],"src":"11482:356:51"},{"body":{"nodeType":"YulBlock","src":"11990:141:51","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12007:9:51"},{"name":"value0","nodeType":"YulIdentifier","src":"12018:6:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12000:6:51"},"nodeType":"YulFunctionCall","src":"12000:25:51"},"nodeType":"YulExpressionStatement","src":"12000:25:51"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12045:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"12056:2:51","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12041:3:51"},"nodeType":"YulFunctionCall","src":"12041:18:51"},{"kind":"number","nodeType":"YulLiteral","src":"12061:2:51","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12034:6:51"},"nodeType":"YulFunctionCall","src":"12034:30:51"},"nodeType":"YulExpressionStatement","src":"12034:30:51"},{"nodeType":"YulAssignment","src":"12073:52:51","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12098:6:51"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12110:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"12121:2:51","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12106:3:51"},"nodeType":"YulFunctionCall","src":"12106:18:51"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"12081:16:51"},"nodeType":"YulFunctionCall","src":"12081:44:51"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12073:4:51"}]}]},"name":"abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11951:9:51","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11962:6:51","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11970:6:51","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11981:4:51","type":""}],"src":"11843:288:51"},{"body":{"nodeType":"YulBlock","src":"12467:747:51","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12484:3:51"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12493:6:51"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12505:26:51","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12501:3:51"},"nodeType":"YulFunctionCall","src":"12501:31:51"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12489:3:51"},"nodeType":"YulFunctionCall","src":"12489:44:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12477:6:51"},"nodeType":"YulFunctionCall","src":"12477:57:51"},"nodeType":"YulExpressionStatement","src":"12477:57:51"},{"nodeType":"YulVariableDeclaration","src":"12543:27:51","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12563:6:51"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12557:5:51"},"nodeType":"YulFunctionCall","src":"12557:13:51"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12547:6:51","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12618:6:51"},{"kind":"number","nodeType":"YulLiteral","src":"12626:4:51","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12614:3:51"},"nodeType":"YulFunctionCall","src":"12614:17:51"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12637:3:51"},{"kind":"number","nodeType":"YulLiteral","src":"12642:2:51","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12633:3:51"},"nodeType":"YulFunctionCall","src":"12633:12:51"},{"name":"length","nodeType":"YulIdentifier","src":"12647:6:51"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"12579:34:51"},"nodeType":"YulFunctionCall","src":"12579:75:51"},"nodeType":"YulExpressionStatement","src":"12579:75:51"},{"nodeType":"YulVariableDeclaration","src":"12663:26:51","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12677:3:51"},{"name":"length","nodeType":"YulIdentifier","src":"12682:6:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12673:3:51"},"nodeType":"YulFunctionCall","src":"12673:16:51"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"12667:2:51","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12698:29:51","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12720:6:51"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12714:5:51"},"nodeType":"YulFunctionCall","src":"12714:13:51"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"12702:8:51","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12775:6:51"},{"kind":"number","nodeType":"YulLiteral","src":"12783:4:51","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12771:3:51"},"nodeType":"YulFunctionCall","src":"12771:17:51"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"12794:2:51"},{"kind":"number","nodeType":"YulLiteral","src":"12798:2:51","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12790:3:51"},"nodeType":"YulFunctionCall","src":"12790:11:51"},{"name":"length_1","nodeType":"YulIdentifier","src":"12803:8:51"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"12736:34:51"},"nodeType":"YulFunctionCall","src":"12736:76:51"},"nodeType":"YulExpressionStatement","src":"12736:76:51"},{"nodeType":"YulVariableDeclaration","src":"12821:27:51","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"12835:2:51"},{"name":"length_1","nodeType":"YulIdentifier","src":"12839:8:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12831:3:51"},"nodeType":"YulFunctionCall","src":"12831:17:51"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"12825:2:51","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"12868:2:51"},{"kind":"number","nodeType":"YulLiteral","src":"12872:2:51","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12864:3:51"},"nodeType":"YulFunctionCall","src":"12864:11:51"},{"name":"value3","nodeType":"YulIdentifier","src":"12877:6:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12857:6:51"},"nodeType":"YulFunctionCall","src":"12857:27:51"},"nodeType":"YulExpressionStatement","src":"12857:27:51"},{"nodeType":"YulVariableDeclaration","src":"12893:29:51","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"12915:6:51"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12909:5:51"},"nodeType":"YulFunctionCall","src":"12909:13:51"},"variables":[{"name":"length_2","nodeType":"YulTypedName","src":"12897:8:51","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"12970:6:51"},{"kind":"number","nodeType":"YulLiteral","src":"12978:4:51","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12966:3:51"},"nodeType":"YulFunctionCall","src":"12966:17:51"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"12989:2:51"},{"kind":"number","nodeType":"YulLiteral","src":"12993:2:51","type":"","value":"52"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12985:3:51"},"nodeType":"YulFunctionCall","src":"12985:11:51"},{"name":"length_2","nodeType":"YulIdentifier","src":"12998:8:51"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"12931:34:51"},"nodeType":"YulFunctionCall","src":"12931:76:51"},"nodeType":"YulExpressionStatement","src":"12931:76:51"},{"nodeType":"YulVariableDeclaration","src":"13016:27:51","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"13030:2:51"},{"name":"length_2","nodeType":"YulIdentifier","src":"13034:8:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13026:3:51"},"nodeType":"YulFunctionCall","src":"13026:17:51"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"13020:2:51","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13052:29:51","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"13074:6:51"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13068:5:51"},"nodeType":"YulFunctionCall","src":"13068:13:51"},"variables":[{"name":"length_3","nodeType":"YulTypedName","src":"13056:8:51","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"13129:6:51"},{"kind":"number","nodeType":"YulLiteral","src":"13137:4:51","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13125:3:51"},"nodeType":"YulFunctionCall","src":"13125:17:51"},{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"13148:2:51"},{"kind":"number","nodeType":"YulLiteral","src":"13152:2:51","type":"","value":"52"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13144:3:51"},"nodeType":"YulFunctionCall","src":"13144:11:51"},{"name":"length_3","nodeType":"YulIdentifier","src":"13157:8:51"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"13090:34:51"},"nodeType":"YulFunctionCall","src":"13090:76:51"},"nodeType":"YulExpressionStatement","src":"13090:76:51"},{"nodeType":"YulAssignment","src":"13175:33:51","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"13190:2:51"},{"name":"length_3","nodeType":"YulIdentifier","src":"13194:8:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13186:3:51"},"nodeType":"YulFunctionCall","src":"13186:17:51"},{"kind":"number","nodeType":"YulLiteral","src":"13205:2:51","type":"","value":"52"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13182:3:51"},"nodeType":"YulFunctionCall","src":"13182:26:51"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13175:3:51"}]}]},"name":"abi_encode_tuple_packed_t_bytes20_t_bytes_memory_ptr_t_bytes_memory_ptr_t_bytes32_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes20_t_bytes_memory_ptr_t_bytes_memory_ptr_t_bytes32_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12403:3:51","type":""},{"name":"value5","nodeType":"YulTypedName","src":"12408:6:51","type":""},{"name":"value4","nodeType":"YulTypedName","src":"12416:6:51","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12424:6:51","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12432:6:51","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12440:6:51","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12448:6:51","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12459:3:51","type":""}],"src":"12136:1078:51"},{"body":{"nodeType":"YulBlock","src":"13393:228:51","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13410:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"13421:2:51","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13403:6:51"},"nodeType":"YulFunctionCall","src":"13403:21:51"},"nodeType":"YulExpressionStatement","src":"13403:21:51"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13444:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"13455:2:51","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13440:3:51"},"nodeType":"YulFunctionCall","src":"13440:18:51"},{"kind":"number","nodeType":"YulLiteral","src":"13460:2:51","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13433:6:51"},"nodeType":"YulFunctionCall","src":"13433:30:51"},"nodeType":"YulExpressionStatement","src":"13433:30:51"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13483:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"13494:2:51","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13479:3:51"},"nodeType":"YulFunctionCall","src":"13479:18:51"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"13499:34:51","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13472:6:51"},"nodeType":"YulFunctionCall","src":"13472:62:51"},"nodeType":"YulExpressionStatement","src":"13472:62:51"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13554:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"13565:2:51","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13550:3:51"},"nodeType":"YulFunctionCall","src":"13550:18:51"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"13570:8:51","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13543:6:51"},"nodeType":"YulFunctionCall","src":"13543:36:51"},"nodeType":"YulExpressionStatement","src":"13543:36:51"},{"nodeType":"YulAssignment","src":"13588:27:51","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13600:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"13611:3:51","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13596:3:51"},"nodeType":"YulFunctionCall","src":"13596:19:51"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13588:4:51"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13370:9:51","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13384:4:51","type":""}],"src":"13219:402:51"},{"body":{"nodeType":"YulBlock","src":"13800:182:51","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13817:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"13828:2:51","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13810:6:51"},"nodeType":"YulFunctionCall","src":"13810:21:51"},"nodeType":"YulExpressionStatement","src":"13810:21:51"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13851:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"13862:2:51","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13847:3:51"},"nodeType":"YulFunctionCall","src":"13847:18:51"},{"kind":"number","nodeType":"YulLiteral","src":"13867:2:51","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13840:6:51"},"nodeType":"YulFunctionCall","src":"13840:30:51"},"nodeType":"YulExpressionStatement","src":"13840:30:51"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13890:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"13901:2:51","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13886:3:51"},"nodeType":"YulFunctionCall","src":"13886:18:51"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"13906:34:51","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13879:6:51"},"nodeType":"YulFunctionCall","src":"13879:62:51"},"nodeType":"YulExpressionStatement","src":"13879:62:51"},{"nodeType":"YulAssignment","src":"13950:26:51","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13962:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"13973:2:51","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13958:3:51"},"nodeType":"YulFunctionCall","src":"13958:18:51"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13950:4:51"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13777:9:51","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13791:4:51","type":""}],"src":"13626:356:51"},{"body":{"nodeType":"YulBlock","src":"14124:150:51","statements":[{"nodeType":"YulVariableDeclaration","src":"14134:27:51","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14154:6:51"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14148:5:51"},"nodeType":"YulFunctionCall","src":"14148:13:51"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14138:6:51","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14209:6:51"},{"kind":"number","nodeType":"YulLiteral","src":"14217:4:51","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14205:3:51"},"nodeType":"YulFunctionCall","src":"14205:17:51"},{"name":"pos","nodeType":"YulIdentifier","src":"14224:3:51"},{"name":"length","nodeType":"YulIdentifier","src":"14229:6:51"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"14170:34:51"},"nodeType":"YulFunctionCall","src":"14170:66:51"},"nodeType":"YulExpressionStatement","src":"14170:66:51"},{"nodeType":"YulAssignment","src":"14245:23:51","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14256:3:51"},{"name":"length","nodeType":"YulIdentifier","src":"14261:6:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14252:3:51"},"nodeType":"YulFunctionCall","src":"14252:16:51"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14245:3:51"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14100:3:51","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14105:6:51","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14116:3:51","type":""}],"src":"13987:287:51"},{"body":{"nodeType":"YulBlock","src":"14360:103:51","statements":[{"body":{"nodeType":"YulBlock","src":"14406:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14415:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14418:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14408:6:51"},"nodeType":"YulFunctionCall","src":"14408:12:51"},"nodeType":"YulExpressionStatement","src":"14408:12:51"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14381:7:51"},{"name":"headStart","nodeType":"YulIdentifier","src":"14390:9:51"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14377:3:51"},"nodeType":"YulFunctionCall","src":"14377:23:51"},{"kind":"number","nodeType":"YulLiteral","src":"14402:2:51","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14373:3:51"},"nodeType":"YulFunctionCall","src":"14373:32:51"},"nodeType":"YulIf","src":"14370:52:51"},{"nodeType":"YulAssignment","src":"14431:26:51","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14447:9:51"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14441:5:51"},"nodeType":"YulFunctionCall","src":"14441:16:51"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14431:6:51"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14326:9:51","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14337:7:51","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14349:6:51","type":""}],"src":"14279:184:51"},{"body":{"nodeType":"YulBlock","src":"14500:95:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14517:1:51","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14524:3:51","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"14529:10:51","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14520:3:51"},"nodeType":"YulFunctionCall","src":"14520:20:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14510:6:51"},"nodeType":"YulFunctionCall","src":"14510:31:51"},"nodeType":"YulExpressionStatement","src":"14510:31:51"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14557:1:51","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14560:4:51","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14550:6:51"},"nodeType":"YulFunctionCall","src":"14550:15:51"},"nodeType":"YulExpressionStatement","src":"14550:15:51"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14581:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14584:4:51","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14574:6:51"},"nodeType":"YulFunctionCall","src":"14574:15:51"},"nodeType":"YulExpressionStatement","src":"14574:15:51"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"14468:127:51"},{"body":{"nodeType":"YulBlock","src":"14649:176:51","statements":[{"nodeType":"YulAssignment","src":"14659:17:51","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14671:1:51"},{"name":"y","nodeType":"YulIdentifier","src":"14674:1:51"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14667:3:51"},"nodeType":"YulFunctionCall","src":"14667:9:51"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"14659:4:51"}]},{"body":{"nodeType":"YulBlock","src":"14708:111:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14729:1:51","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14736:3:51","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"14741:10:51","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14732:3:51"},"nodeType":"YulFunctionCall","src":"14732:20:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14722:6:51"},"nodeType":"YulFunctionCall","src":"14722:31:51"},"nodeType":"YulExpressionStatement","src":"14722:31:51"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14773:1:51","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14776:4:51","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14766:6:51"},"nodeType":"YulFunctionCall","src":"14766:15:51"},"nodeType":"YulExpressionStatement","src":"14766:15:51"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14801:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14804:4:51","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14794:6:51"},"nodeType":"YulFunctionCall","src":"14794:15:51"},"nodeType":"YulExpressionStatement","src":"14794:15:51"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"14691:4:51"},{"name":"x","nodeType":"YulIdentifier","src":"14697:1:51"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14688:2:51"},"nodeType":"YulFunctionCall","src":"14688:11:51"},"nodeType":"YulIf","src":"14685:134:51"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14631:1:51","type":""},{"name":"y","nodeType":"YulTypedName","src":"14634:1:51","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"14640:4:51","type":""}],"src":"14600:225:51"},{"body":{"nodeType":"YulBlock","src":"14960:201:51","statements":[{"body":{"nodeType":"YulBlock","src":"14998:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15007:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15010:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15000:6:51"},"nodeType":"YulFunctionCall","src":"15000:12:51"},"nodeType":"YulExpressionStatement","src":"15000:12:51"}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"14976:10:51"},{"name":"endIndex","nodeType":"YulIdentifier","src":"14988:8:51"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14973:2:51"},"nodeType":"YulFunctionCall","src":"14973:24:51"},"nodeType":"YulIf","src":"14970:44:51"},{"body":{"nodeType":"YulBlock","src":"15047:16:51","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15056:1:51","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15059:1:51","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15049:6:51"},"nodeType":"YulFunctionCall","src":"15049:12:51"},"nodeType":"YulExpressionStatement","src":"15049:12:51"}]},"condition":{"arguments":[{"name":"endIndex","nodeType":"YulIdentifier","src":"15029:8:51"},{"name":"length","nodeType":"YulIdentifier","src":"15039:6:51"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15026:2:51"},"nodeType":"YulFunctionCall","src":"15026:20:51"},"nodeType":"YulIf","src":"15023:40:51"},{"nodeType":"YulAssignment","src":"15072:36:51","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15089:6:51"},{"name":"startIndex","nodeType":"YulIdentifier","src":"15097:10:51"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15085:3:51"},"nodeType":"YulFunctionCall","src":"15085:23:51"},"variableNames":[{"name":"offsetOut","nodeType":"YulIdentifier","src":"15072:9:51"}]},{"nodeType":"YulAssignment","src":"15117:38:51","value":{"arguments":[{"name":"endIndex","nodeType":"YulIdentifier","src":"15134:8:51"},{"name":"startIndex","nodeType":"YulIdentifier","src":"15144:10:51"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15130:3:51"},"nodeType":"YulFunctionCall","src":"15130:25:51"},"variableNames":[{"name":"lengthOut","nodeType":"YulIdentifier","src":"15117:9:51"}]}]},"name":"calldata_array_index_range_access_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14894:6:51","type":""},{"name":"length","nodeType":"YulTypedName","src":"14902:6:51","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"14910:10:51","type":""},{"name":"endIndex","nodeType":"YulTypedName","src":"14922:8:51","type":""}],"returnVariables":[{"name":"offsetOut","nodeType":"YulTypedName","src":"14935:9:51","type":""},{"name":"lengthOut","nodeType":"YulTypedName","src":"14946:9:51","type":""}],"src":"14830:331:51"},{"body":{"nodeType":"YulBlock","src":"15267:154:51","statements":[{"nodeType":"YulAssignment","src":"15277:28:51","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"15299:5:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15286:12:51"},"nodeType":"YulFunctionCall","src":"15286:19:51"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15277:5:51"}]},{"body":{"nodeType":"YulBlock","src":"15337:78:51","statements":[{"nodeType":"YulAssignment","src":"15351:54:51","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15364:5:51"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15379:1:51","type":"","value":"3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15386:2:51","type":"","value":"32"},{"name":"len","nodeType":"YulIdentifier","src":"15390:3:51"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15382:3:51"},"nodeType":"YulFunctionCall","src":"15382:12:51"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15375:3:51"},"nodeType":"YulFunctionCall","src":"15375:20:51"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15401:1:51","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"15397:3:51"},"nodeType":"YulFunctionCall","src":"15397:6:51"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15371:3:51"},"nodeType":"YulFunctionCall","src":"15371:33:51"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15360:3:51"},"nodeType":"YulFunctionCall","src":"15360:45:51"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15351:5:51"}]}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"15320:3:51"},{"kind":"number","nodeType":"YulLiteral","src":"15325:2:51","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15317:2:51"},"nodeType":"YulFunctionCall","src":"15317:11:51"},"nodeType":"YulIf","src":"15314:101:51"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"15242:5:51","type":""},{"name":"len","nodeType":"YulTypedName","src":"15249:3:51","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"15257:5:51","type":""}],"src":"15166:255:51"},{"body":{"nodeType":"YulBlock","src":"15527:236:51","statements":[{"nodeType":"YulVariableDeclaration","src":"15537:29:51","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"15560:5:51"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15547:12:51"},"nodeType":"YulFunctionCall","src":"15547:19:51"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"15541:2:51","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15575:41:51","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15589:26:51","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"15585:3:51"},"nodeType":"YulFunctionCall","src":"15585:31:51"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"15579:2:51","type":""}]},{"nodeType":"YulAssignment","src":"15625:20:51","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"15638:2:51"},{"name":"_2","nodeType":"YulIdentifier","src":"15642:2:51"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15634:3:51"},"nodeType":"YulFunctionCall","src":"15634:11:51"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15625:5:51"}]},{"body":{"nodeType":"YulBlock","src":"15677:80:51","statements":[{"nodeType":"YulAssignment","src":"15691:56:51","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"15708:2:51"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15720:1:51","type":"","value":"3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15727:2:51","type":"","value":"20"},{"name":"len","nodeType":"YulIdentifier","src":"15731:3:51"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15723:3:51"},"nodeType":"YulFunctionCall","src":"15723:12:51"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15716:3:51"},"nodeType":"YulFunctionCall","src":"15716:20:51"},{"name":"_2","nodeType":"YulIdentifier","src":"15738:2:51"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15712:3:51"},"nodeType":"YulFunctionCall","src":"15712:29:51"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15704:3:51"},"nodeType":"YulFunctionCall","src":"15704:38:51"},{"name":"_2","nodeType":"YulIdentifier","src":"15744:2:51"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15700:3:51"},"nodeType":"YulFunctionCall","src":"15700:47:51"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15691:5:51"}]}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"15660:3:51"},{"kind":"number","nodeType":"YulLiteral","src":"15665:2:51","type":"","value":"20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15657:2:51"},"nodeType":"YulFunctionCall","src":"15657:11:51"},"nodeType":"YulIf","src":"15654:103:51"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes20","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"15502:5:51","type":""},{"name":"len","nodeType":"YulTypedName","src":"15509:3:51","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"15517:5:51","type":""}],"src":"15426:337:51"},{"body":{"nodeType":"YulBlock","src":"15949:217:51","statements":[{"nodeType":"YulAssignment","src":"15959:27:51","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15971:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"15982:3:51","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15967:3:51"},"nodeType":"YulFunctionCall","src":"15967:19:51"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15959:4:51"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16002:9:51"},{"name":"value0","nodeType":"YulIdentifier","src":"16013:6:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15995:6:51"},"nodeType":"YulFunctionCall","src":"15995:25:51"},"nodeType":"YulExpressionStatement","src":"15995:25:51"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16040:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"16051:2:51","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16036:3:51"},"nodeType":"YulFunctionCall","src":"16036:18:51"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16060:6:51"},{"kind":"number","nodeType":"YulLiteral","src":"16068:4:51","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16056:3:51"},"nodeType":"YulFunctionCall","src":"16056:17:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16029:6:51"},"nodeType":"YulFunctionCall","src":"16029:45:51"},"nodeType":"YulExpressionStatement","src":"16029:45:51"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16094:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"16105:2:51","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16090:3:51"},"nodeType":"YulFunctionCall","src":"16090:18:51"},{"name":"value2","nodeType":"YulIdentifier","src":"16110:6:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16083:6:51"},"nodeType":"YulFunctionCall","src":"16083:34:51"},"nodeType":"YulExpressionStatement","src":"16083:34:51"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16137:9:51"},{"kind":"number","nodeType":"YulLiteral","src":"16148:2:51","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16133:3:51"},"nodeType":"YulFunctionCall","src":"16133:18:51"},{"name":"value3","nodeType":"YulIdentifier","src":"16153:6:51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16126:6:51"},"nodeType":"YulFunctionCall","src":"16126:34:51"},"nodeType":"YulExpressionStatement","src":"16126:34:51"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15894:9:51","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15905:6:51","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15913:6:51","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15921:6:51","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15929:6:51","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15940:4:51","type":""}],"src":"15768:398:51"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_tuple_t_addresst_addresst_bytes32(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_bytes(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(and(add(length, 31), not(31)), 0x20)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let array_1 := allocate_memory(array_allocation_size_bytes(_1))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_bytes32t_uint256t_uint256t_bytes32t_bytes_memory_ptrt_bytes_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8\n    {\n        if slt(sub(dataEnd, headStart), 288) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        let offset := calldataload(add(headStart, 192))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value6 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 224))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value7 := abi_decode_bytes(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 256))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value8 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_bytes32t_bytes_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 160))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value5 := abi_decode_bytes(add(headStart, offset_1), dataEnd)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_addresst_bytes32t_bytes32t_bytes_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_address(value_1)\n        value3 := value_1\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        let offset := calldataload(add(headStart, 192))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value6 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 224))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value7 := abi_decode_bytes(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_bytes32t_bytes_memory_ptrt_bytes_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 160))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value5 := abi_decode_bytes(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 192))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value6 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_packed_t_array$_t_bytes32_$2_memory_ptr__to_t_array$_t_bytes32_$2_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let pos_1 := pos\n        pos_1 := pos\n        let srcPtr := value0\n        let i := 0\n        for { } lt(i, 0x02) { i := add(i, 1) }\n        {\n            mstore(pos_1, mload(srcPtr))\n            let _1 := 0x20\n            pos_1 := add(pos_1, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := add(pos, 64)\n    }\n    function abi_encode_tuple_packed_t_uint256__to_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, value0)\n        end := add(pos, 32)\n    }\n    function abi_encode_tuple_packed_t_bytes20_t_bytes_memory_ptr_t_bytes_memory_ptr_t_bytes20_t_bytes32_t_bytes_memory_ptr_t_bytes32_t_bytes_memory_ptr__to_t_bytes20_t_bytes_memory_ptr_t_bytes_memory_ptr_t_bytes20_t_bytes32_t_bytes_memory_ptr_t_bytes32_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value7, value6, value5, value4, value3, value2, value1, value0) -> end\n    {\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(pos, and(value0, _1))\n        let length := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(pos, 20), length)\n        let _2 := add(pos, length)\n        let length_1 := mload(value2)\n        copy_memory_to_memory_with_cleanup(add(value2, 0x20), add(_2, 20), length_1)\n        let _3 := add(_2, length_1)\n        mstore(add(_3, 20), and(value3, _1))\n        mstore(add(_3, 40), value4)\n        let length_2 := mload(value5)\n        copy_memory_to_memory_with_cleanup(add(value5, 0x20), add(_3, 72), length_2)\n        let _4 := add(_3, length_2)\n        mstore(add(_4, 72), value6)\n        let length_3 := mload(value7)\n        copy_memory_to_memory_with_cleanup(add(value7, 0x20), add(_4, 104), length_3)\n        end := add(add(_4, length_3), 104)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_rational_0_by_1_t_address_t_rational_0_by_1_t_bytes_memory_ptr__to_t_uint256_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_bytes(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let _2 := mload(_1)\n        let array := allocate_memory(array_allocation_size_bytes(_2))\n        mstore(array, _2)\n        if gt(add(add(_1, _2), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(_1, 32), add(array, 32), _2)\n        value0 := array\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes2(array) -> value\n    {\n        let length := mload(array)\n        let _1 := mload(add(array, 0x20))\n        let _2 := shl(240, 65535)\n        value := and(_1, _2)\n        if lt(length, 2)\n        {\n            value := and(and(_1, shl(shl(3, sub(2, length)), _2)), _2)\n        }\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_packed_t_bytes20_t_bytes_memory_ptr_t_bytes_memory_ptr_t_bytes32_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes20_t_bytes_memory_ptr_t_bytes_memory_ptr_t_bytes32_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value5, value4, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, and(value0, not(0xffffffffffffffffffffffff)))\n        let length := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(pos, 20), length)\n        let _1 := add(pos, length)\n        let length_1 := mload(value2)\n        copy_memory_to_memory_with_cleanup(add(value2, 0x20), add(_1, 20), length_1)\n        let _2 := add(_1, length_1)\n        mstore(add(_2, 20), value3)\n        let length_2 := mload(value4)\n        copy_memory_to_memory_with_cleanup(add(value4, 0x20), add(_2, 52), length_2)\n        let _3 := add(_2, length_2)\n        let length_3 := mload(value5)\n        copy_memory_to_memory_with_cleanup(add(value5, 0x20), add(_3, 52), length_3)\n        end := add(add(_3, length_3), 52)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function calldata_array_index_range_access_t_bytes_calldata_ptr(offset, length, startIndex, endIndex) -> offsetOut, lengthOut\n    {\n        if gt(startIndex, endIndex) { revert(0, 0) }\n        if gt(endIndex, length) { revert(0, 0) }\n        offsetOut := add(offset, startIndex)\n        lengthOut := sub(endIndex, startIndex)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes32(array, len) -> value\n    {\n        value := calldataload(array)\n        if lt(len, 32)\n        {\n            value := and(value, shl(shl(3, sub(32, len)), not(0)))\n        }\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_calldata_ptr_to_t_bytes20(array, len) -> value\n    {\n        let _1 := calldataload(array)\n        let _2 := not(0xffffffffffffffffffffffff)\n        value := and(_1, _2)\n        if lt(len, 20)\n        {\n            value := and(and(_1, shl(shl(3, sub(20, len)), _2)), _2)\n        }\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n}","id":51,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c8063bfb6e08b11610071578063bfb6e08b14610121578063d5212e3c14610141578063db1e3ef314610154578063ea1b495f14610167578063f2fde38b1461017a578063ffa1ad741461018d57600080fd5b806301ffc9a7146100ae578063285ac885146100d6578063715018a6146100e95780638da5cb5b146100f3578063bbb9ddd31461010e575b600080fd5b6100c16100bc366004610fac565b6101b2565b60405190151581526020015b60405180910390f35b6100c16100e4366004610ff6565b6101e9565b6100f1610262565b005b6000546040516001600160a01b0390911681526020016100cd565b6100f161011c3660046110fa565b610276565b61013461012f3660046111ca565b610761565b6040516100cd91906112ab565b61013461014f3660046112be565b6107d3565b6100f161016236600461136d565b610850565b6100f1610175366004611424565b610a85565b6100f1610188366004611424565b610ae1565b610134604051806040016040528060068152602001650302e31352e360d41b81525081565b60006001600160e01b0319821663033b9e2d60e61b14806101e357506301ffc9a760e01b6001600160e01b03198316145b92915050565b60008060405180604001604052808560601b6001600160601b03191681526020018481525060405160200161021e9190611441565b60408051601f1981840301815291815281516020928301206001600160a01b0388166000908152600390935291209091506102599082610b5f565b95945050505050565b61026a610b7a565b6102746000610bd4565b565b60008960601b8760405160200161028f91815260200190565b60408051601f19818403018152828252602083018a905291016040516020818303038152906040528b60601b8b868a8a6040516020016102d6989796959493929190611475565b604051602081830303815290604052905060006102f98280519060200120610c24565b6001549091506001600160a01b0316331461032757604051633ed2200160e11b815260040160405180910390fd5b8643111561034857604051631d389b0b60e11b815260040160405180910390fd5b630b135d3f60e11b61035a8286610c57565b6001600160e01b0319161461038257604051638baa579f60e01b815260040160405180910390fd5b8761038b610df1565b146103a957604051636956f2ab60e11b815260040160405180910390fd5b60008681526002602052604090205460ff16156103d957604051633ab3447f60e11b815260040160405180910390fd5b604051630217b22760e41b8152600481018a90526000906001600160a01b038c169063217b227090602401602060405180830381865afa158015610421573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104459190611505565b905061044f610e19565b6001600160a01b0316816001600160a01b0316146104805760405163f458de7160e01b815260040160405180910390fd5b600060405180604001604052808e60601b6001600160601b03191681526020018c8152506040516020016104b49190611441565b60408051601f1981840301815291815281516020928301206001600160a01b038f166000908152600390935291209091506104ef9082610b5f565b1561050d5760405163f4249fb360e01b815260040160405180910390fd5b6001600160a01b038c16600090815260036020526040902061052f9082610e52565b50600160009054906101000a90046001600160a01b03166001600160a01b03166344c028fe60008f60008b6040518563ffffffff1660e01b81526004016105799493929190611522565b6000604051808303816000875af1158015610598573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105c09190810190611559565b5060008881526002602052604090819020805460ff19166001179055517fe4a6407979da9518dfbc88bfe7f0f53a52c4c16e1f54a90bf1ff721d341ef4439061060a9087906112ab565b60405180910390a160408051808201909152600c81526b4275726e416674657255736560a01b60209091015260007ffbdb7422394d0d1e5a42ce23325710e31f051fe0ac8874d7818c181a294a86316040516354f6127f60e01b8152600481018290529091506000906001600160a01b038f16906354f6127f90602401600060405180830381865afa1580156106a4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106cc9190810190611559565b90506001600160f01b03196106e0826115c6565b6001600160f01b03191603610750578d6001600160a01b0316636c79b70b8e896040518363ffffffff1660e01b815260040161071d9291906115fd565b600060405180830381600087803b15801561073757600080fd5b505af115801561074b573d6000803e3d6000fd5b505050505b505050505050505050505050505050565b60608660601b8660405160200161077a91815260200190565b60408051601f1981840301815282825260208301899052910160408051601f19818403018152908290526107b893929188908890889060200161161e565b60405160208183030381529060405290509695505050505050565b60608860601b886040516020016107ec91815260200190565b60408051601f19818403018152828252602083018b905291016040516020818303038152906040528860601b88868989604051602001610833989796959493929190611475565b604051602081830303815290604052905098975050505050505050565b60008760601b8760405160200161086991815260200190565b60408051601f19818403018152828252602083018a9052910160408051601f19818403018152908290526108a793929189908990889060200161161e565b604051602081830303815290604052905060006108ca8280519060200120610c24565b6001549091506001600160a01b031633146108f857604051633ed2200160e11b815260040160405180910390fd5b8643111561091957604051631d389b0b60e11b815260040160405180910390fd5b630b135d3f60e11b61092b8286610c57565b6001600160e01b0319161461095357604051638baa579f60e01b815260040160405180910390fd5b8761095c610df1565b1461097a57604051636956f2ab60e11b815260040160405180910390fd5b60008681526002602052604090205460ff16156109aa57604051633ab3447f60e11b815260040160405180910390fd5b600154604051632260147f60e11b81526001600160a01b03909116906344c028fe906109e1906000908d9082908b90600401611522565b6000604051808303816000875af1158015610a00573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a289190810190611559565b5060008681526002602052604090819020805460ff19166001179055517fe4a6407979da9518dfbc88bfe7f0f53a52c4c16e1f54a90bf1ff721d341ef44390610a729085906112ab565b60405180910390a1505050505050505050565b610a8d610b7a565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f7f8cffd58ac96898bdd25ab64868bd933141d15ad1cd4a0df228fd3fcba2a26d9060200160405180910390a150565b610ae9610b7a565b6001600160a01b038116610b535760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610b5c81610bd4565b50565b600081815260018301602052604081205415155b9392505050565b6000546001600160a01b031633146102745760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b4a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c902090565b6001546000906001600160a01b03163b15610d7e5760015460405160009182916001600160a01b0390911690630b135d3f60e11b90610c9c90889088906024016115fd565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610cda9190611698565b600060405180830381855afa9150503d8060008114610d15576040519150601f19603f3d011682016040523d82523d6000602084013e610d1a565b606091505b50915091506000828015610d2f575081516020145b8015610d5657508151630b135d3f60e11b90610d5490840160209081019085016116b4565b145b905080610d6b576001600160e01b0319610d74565b630b135d3f60e11b5b93505050506101e3565b600080610d8b8585610e5e565b90925090506000816004811115610da457610da46116cd565b14610dbc57506001600160e01b031991506101e39050565b6001546001600160a01b03838116911614610ddf576001600160e01b0319610de8565b630b135d3f60e11b5b925050506101e3565b60008036610e006020826116e3565b610e0b928290611704565b610e149161172e565b919050565b60008036610e286034826116e3565b90610e346020366116e3565b92610e4193929190611704565b610e4a9161174c565b60601c905090565b6000610b738383610ea3565b6000808251604103610e945760208301516040840151606085015160001a610e8887828585610ef2565b94509450505050610e9c565b506000905060025b9250929050565b6000818152600183016020526040812054610eea575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556101e3565b5060006101e3565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b03831115610f1f5750600090506003610fa3565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610f73573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610f9c57600060019250925050610fa3565b9150600090505b94509492505050565b600060208284031215610fbe57600080fd5b81356001600160e01b031981168114610b7357600080fd5b6001600160a01b0381168114610b5c57600080fd5b8035610e1481610fd6565b60008060006060848603121561100b57600080fd5b833561101681610fd6565b9250602084013561102681610fd6565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561107557611075611037565b604052919050565b60006001600160401b0382111561109657611096611037565b50601f01601f191660200190565b600082601f8301126110b557600080fd5b81356110c86110c38261107d565b61104d565b8181528460208386010111156110dd57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060008060008060006101208a8c03121561111957600080fd5b6111228a610feb565b985061113060208b01610feb565b975060408a0135965060608a0135955060808a0135945060a08a0135935060c08a01356001600160401b038082111561116857600080fd5b6111748d838e016110a4565b945060e08c013591508082111561118a57600080fd5b6111968d838e016110a4565b93506101008c01359150808211156111ad57600080fd5b506111ba8c828d016110a4565b9150509295985092959850929598565b60008060008060008060c087890312156111e357600080fd5b86356111ee81610fd6565b955060208701359450604087013593506060870135925060808701356001600160401b038082111561121f57600080fd5b61122b8a838b016110a4565b935060a089013591508082111561124157600080fd5b5061124e89828a016110a4565b9150509295509295509295565b60005b8381101561127657818101518382015260200161125e565b50506000910152565b6000815180845261129781602086016020860161125b565b601f01601f19169290920160200192915050565b602081526000610b73602083018461127f565b600080600080600080600080610100898b0312156112db57600080fd5b88356112e681610fd6565b97506020890135965060408901359550606089013561130481610fd6565b94506080890135935060a0890135925060c08901356001600160401b038082111561132e57600080fd5b61133a8c838d016110a4565b935060e08b013591508082111561135057600080fd5b5061135d8b828c016110a4565b9150509295985092959890939650565b600080600080600080600060e0888a03121561138857600080fd5b873561139381610fd6565b965060208801359550604088013594506060880135935060808801356001600160401b03808211156113c457600080fd5b6113d08b838c016110a4565b945060a08a01359150808211156113e657600080fd5b6113f28b838c016110a4565b935060c08a013591508082111561140857600080fd5b506114158a828b016110a4565b91505092959891949750929550565b60006020828403121561143657600080fd5b8135610b7381610fd6565b60008183825b6002811015611466578151835260209283019290910190600101611447565b50505060408201905092915050565b60006001600160601b0319808b1683528951611498816014860160208e0161125b565b8951908401906114af816014840160208e0161125b565b8082019150508189166014820152876028820152865191506114d8826048830160208a0161125b565b016048810185905283516114f381606884016020880161125b565b016068019a9950505050505050505050565b60006020828403121561151757600080fd5b8151610b7381610fd6565b84815260018060a01b038416602082015282604082015260806060820152600061154f608083018461127f565b9695505050505050565b60006020828403121561156b57600080fd5b81516001600160401b0381111561158157600080fd5b8201601f8101841361159257600080fd5b80516115a06110c38261107d565b8181528560208385010111156115b557600080fd5b61025982602083016020860161125b565b805160208201516001600160f01b031980821692919060028310156115f55780818460020360031b1b83161693505b505050919050565b828152604060208201526000611616604083018461127f565b949350505050565b6001600160601b03198716815260008651611640816014850160208b0161125b565b865190830190611657816014840160208b0161125b565b0160148101869052845161167281603484016020890161125b565b845191019061168881603484016020880161125b565b0160340198975050505050505050565b600082516116aa81846020870161125b565b9190910192915050565b6000602082840312156116c657600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fd5b818103818111156101e357634e487b7160e01b600052601160045260246000fd5b6000808585111561171457600080fd5b8386111561172157600080fd5b5050820193919092039150565b803560208310156101e357600019602084900360031b1b1692915050565b6bffffffffffffffffffffffff1981358181169160148510156117795780818660140360031b1b83161692505b50509291505056fea264697066735822122086b76df625392d2a15b7336dde345a87d95e9f60c3e9729323d922b53fcc4f8564736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBFB6E08B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBFB6E08B EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0xD5212E3C EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0xDB1E3EF3 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xEA1B495F EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xFFA1AD74 EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x285AC885 EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0xBBB9DDD3 EQ PUSH2 0x10E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0xFAC JUMP JUMPDEST PUSH2 0x1B2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH2 0xE4 CALLDATASIZE PUSH1 0x4 PUSH2 0xFF6 JUMP JUMPDEST PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x262 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCD JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x11C CALLDATASIZE PUSH1 0x4 PUSH2 0x10FA JUMP JUMPDEST PUSH2 0x276 JUMP JUMPDEST PUSH2 0x134 PUSH2 0x12F CALLDATASIZE PUSH1 0x4 PUSH2 0x11CA JUMP JUMPDEST PUSH2 0x761 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x12AB JUMP JUMPDEST PUSH2 0x134 PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0x12BE JUMP JUMPDEST PUSH2 0x7D3 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x162 CALLDATASIZE PUSH1 0x4 PUSH2 0x136D JUMP JUMPDEST PUSH2 0x850 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0xA85 JUMP JUMPDEST PUSH2 0xF1 PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0x134 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x302E31352E3 PUSH1 0xD4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x33B9E2D PUSH1 0xE6 SHL EQ DUP1 PUSH2 0x1E3 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SWAP1 SWAP2 POP PUSH2 0x259 SWAP1 DUP3 PUSH2 0xB5F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x26A PUSH2 0xB7A JUMP JUMPDEST PUSH2 0x274 PUSH1 0x0 PUSH2 0xBD4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP10 PUSH1 0x60 SHL DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x28F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE PUSH1 0x20 DUP4 ADD DUP11 SWAP1 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP12 PUSH1 0x60 SHL DUP12 DUP7 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2D6 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1475 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x2F9 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0xC24 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x327 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3ED22001 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 NUMBER GT ISZERO PUSH2 0x348 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1D389B0B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xB135D3F PUSH1 0xE1 SHL PUSH2 0x35A DUP3 DUP7 PUSH2 0xC57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0x382 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8BAA579F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 PUSH2 0x38B PUSH2 0xDF1 JUMP JUMPDEST EQ PUSH2 0x3A9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6956F2AB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3AB3447F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x217B227 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP1 PUSH4 0x217B2270 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x421 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x1505 JUMP JUMPDEST SWAP1 POP PUSH2 0x44F PUSH2 0xE19 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x480 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF458DE71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP15 PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP13 DUP2 MSTORE POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SWAP1 SWAP2 POP PUSH2 0x4EF SWAP1 DUP3 PUSH2 0xB5F JUMP JUMPDEST ISZERO PUSH2 0x50D JUMPI PUSH1 0x40 MLOAD PUSH4 0xF4249FB3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x52F SWAP1 DUP3 PUSH2 0xE52 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x44C028FE PUSH1 0x0 DUP16 PUSH1 0x0 DUP12 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x579 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1522 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x598 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x5C0 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1559 JUMP JUMPDEST POP PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0xE4A6407979DA9518DFBC88BFE7F0F53A52C4C16E1F54A90BF1FF721D341EF443 SWAP1 PUSH2 0x60A SWAP1 DUP8 SWAP1 PUSH2 0x12AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xC DUP2 MSTORE PUSH12 0x4275726E4166746572557365 PUSH1 0xA0 SHL PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE PUSH1 0x0 PUSH32 0xFBDB7422394D0D1E5A42CE23325710E31F051FE0AC8874D7818C181A294A8631 PUSH1 0x40 MLOAD PUSH4 0x54F6127F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND SWAP1 PUSH4 0x54F6127F SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x6CC SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1559 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xF0 SHL SUB NOT PUSH2 0x6E0 DUP3 PUSH2 0x15C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xF0 SHL SUB NOT AND SUB PUSH2 0x750 JUMPI DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6C79B70B DUP15 DUP10 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71D SWAP3 SWAP2 SWAP1 PUSH2 0x15FD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x737 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x74B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP7 PUSH1 0x60 SHL DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x77A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE PUSH1 0x20 DUP4 ADD DUP10 SWAP1 MSTORE SWAP2 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x7B8 SWAP4 SWAP3 SWAP2 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x20 ADD PUSH2 0x161E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP9 PUSH1 0x60 SHL DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7EC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE PUSH1 0x20 DUP4 ADD DUP12 SWAP1 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP9 PUSH1 0x60 SHL DUP9 DUP7 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x833 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1475 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP8 PUSH1 0x60 SHL DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x869 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE PUSH1 0x20 DUP4 ADD DUP11 SWAP1 MSTORE SWAP2 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x8A7 SWAP4 SWAP3 SWAP2 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 PUSH1 0x20 ADD PUSH2 0x161E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x8CA DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0xC24 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8F8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3ED22001 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 NUMBER GT ISZERO PUSH2 0x919 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1D389B0B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0xB135D3F PUSH1 0xE1 SHL PUSH2 0x92B DUP3 DUP7 PUSH2 0xC57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ PUSH2 0x953 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8BAA579F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 PUSH2 0x95C PUSH2 0xDF1 JUMP JUMPDEST EQ PUSH2 0x97A JUMPI PUSH1 0x40 MLOAD PUSH4 0x6956F2AB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x9AA JUMPI PUSH1 0x40 MLOAD PUSH4 0x3AB3447F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2260147F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x44C028FE SWAP1 PUSH2 0x9E1 SWAP1 PUSH1 0x0 SWAP1 DUP14 SWAP1 DUP3 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x1522 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA00 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xA28 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1559 JUMP JUMPDEST POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD PUSH32 0xE4A6407979DA9518DFBC88BFE7F0F53A52C4C16E1F54A90BF1FF721D341EF443 SWAP1 PUSH2 0xA72 SWAP1 DUP6 SWAP1 PUSH2 0x12AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA8D PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x7F8CFFD58AC96898BDD25AB64868BD933141D15AD1CD4A0DF228FD3FCBA2A26D SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xAE9 PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB5C DUP2 PUSH2 0xBD4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB4A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3C SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO PUSH2 0xD7E JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xB135D3F PUSH1 0xE1 SHL SWAP1 PUSH2 0xC9C SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x24 ADD PUSH2 0x15FD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0xCDA SWAP2 SWAP1 PUSH2 0x1698 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xD15 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD1A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x0 DUP3 DUP1 ISZERO PUSH2 0xD2F JUMPI POP DUP2 MLOAD PUSH1 0x20 EQ JUMPDEST DUP1 ISZERO PUSH2 0xD56 JUMPI POP DUP2 MLOAD PUSH4 0xB135D3F PUSH1 0xE1 SHL SWAP1 PUSH2 0xD54 SWAP1 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP1 DUP6 ADD PUSH2 0x16B4 JUMP JUMPDEST EQ JUMPDEST SWAP1 POP DUP1 PUSH2 0xD6B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH2 0xD74 JUMP JUMPDEST PUSH4 0xB135D3F PUSH1 0xE1 SHL JUMPDEST SWAP4 POP POP POP POP PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD8B DUP6 DUP6 PUSH2 0xE5E JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xDA4 JUMPI PUSH2 0xDA4 PUSH2 0x16CD JUMP JUMPDEST EQ PUSH2 0xDBC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP2 POP PUSH2 0x1E3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ PUSH2 0xDDF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH2 0xDE8 JUMP JUMPDEST PUSH4 0xB135D3F PUSH1 0xE1 SHL JUMPDEST SWAP3 POP POP POP PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLDATASIZE PUSH2 0xE00 PUSH1 0x20 DUP3 PUSH2 0x16E3 JUMP JUMPDEST PUSH2 0xE0B SWAP3 DUP3 SWAP1 PUSH2 0x1704 JUMP JUMPDEST PUSH2 0xE14 SWAP2 PUSH2 0x172E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLDATASIZE PUSH2 0xE28 PUSH1 0x34 DUP3 PUSH2 0x16E3 JUMP JUMPDEST SWAP1 PUSH2 0xE34 PUSH1 0x20 CALLDATASIZE PUSH2 0x16E3 JUMP JUMPDEST SWAP3 PUSH2 0xE41 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1704 JUMP JUMPDEST PUSH2 0xE4A SWAP2 PUSH2 0x174C JUMP JUMPDEST PUSH1 0x60 SHR SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB73 DUP4 DUP4 PUSH2 0xEA3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x41 SUB PUSH2 0xE94 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0xE88 DUP8 DUP3 DUP6 DUP6 PUSH2 0xEF2 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0xE9C JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP PUSH1 0x2 JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xEEA JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x1E3 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH16 0xA2A8918CA85BAFE22016D0B997E4DF60 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP4 GT ISZERO PUSH2 0xF1F JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0xFA3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF73 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF9C JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0xFA3 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xB73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0xE14 DUP2 PUSH2 0xFD6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x100B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1016 DUP2 PUSH2 0xFD6 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1026 DUP2 PUSH2 0xFD6 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1075 JUMPI PUSH2 0x1075 PUSH2 0x1037 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1096 JUMPI PUSH2 0x1096 PUSH2 0x1037 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x10B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x10C8 PUSH2 0x10C3 DUP3 PUSH2 0x107D JUMP JUMPDEST PUSH2 0x104D JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x10DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x1119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1122 DUP11 PUSH2 0xFEB JUMP JUMPDEST SWAP9 POP PUSH2 0x1130 PUSH1 0x20 DUP12 ADD PUSH2 0xFEB JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP7 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP6 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP5 POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1174 DUP14 DUP4 DUP15 ADD PUSH2 0x10A4 JUMP JUMPDEST SWAP5 POP PUSH1 0xE0 DUP13 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x118A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1196 DUP14 DUP4 DUP15 ADD PUSH2 0x10A4 JUMP JUMPDEST SWAP4 POP PUSH2 0x100 DUP13 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x11AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11BA DUP13 DUP3 DUP14 ADD PUSH2 0x10A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x11E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x11EE DUP2 PUSH2 0xFD6 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x121F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x122B DUP11 DUP4 DUP12 ADD PUSH2 0x10A4 JUMP JUMPDEST SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x124E DUP10 DUP3 DUP11 ADD PUSH2 0x10A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1276 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x125E JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1297 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x125B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xB73 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x127F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x12DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD PUSH2 0x12E6 DUP2 PUSH2 0xFD6 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH2 0x1304 DUP2 PUSH2 0xFD6 JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD SWAP3 POP PUSH1 0xC0 DUP10 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x132E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x133A DUP13 DUP4 DUP14 ADD PUSH2 0x10A4 JUMP JUMPDEST SWAP4 POP PUSH1 0xE0 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x135D DUP12 DUP3 DUP13 ADD PUSH2 0x10A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x1393 DUP2 PUSH2 0xFD6 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x13C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13D0 DUP12 DUP4 DUP13 ADD PUSH2 0x10A4 JUMP JUMPDEST SWAP5 POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x13E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13F2 DUP12 DUP4 DUP13 ADD PUSH2 0x10A4 JUMP JUMPDEST SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1415 DUP11 DUP3 DUP12 ADD PUSH2 0x10A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB73 DUP2 PUSH2 0xFD6 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 DUP3 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x1466 JUMPI DUP2 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1447 JUMP JUMPDEST POP POP POP PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT DUP1 DUP12 AND DUP4 MSTORE DUP10 MLOAD PUSH2 0x1498 DUP2 PUSH1 0x14 DUP7 ADD PUSH1 0x20 DUP15 ADD PUSH2 0x125B JUMP JUMPDEST DUP10 MLOAD SWAP1 DUP5 ADD SWAP1 PUSH2 0x14AF DUP2 PUSH1 0x14 DUP5 ADD PUSH1 0x20 DUP15 ADD PUSH2 0x125B JUMP JUMPDEST DUP1 DUP3 ADD SWAP2 POP POP DUP2 DUP10 AND PUSH1 0x14 DUP3 ADD MSTORE DUP8 PUSH1 0x28 DUP3 ADD MSTORE DUP7 MLOAD SWAP2 POP PUSH2 0x14D8 DUP3 PUSH1 0x48 DUP4 ADD PUSH1 0x20 DUP11 ADD PUSH2 0x125B JUMP JUMPDEST ADD PUSH1 0x48 DUP2 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD PUSH2 0x14F3 DUP2 PUSH1 0x68 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x125B JUMP JUMPDEST ADD PUSH1 0x68 ADD SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1517 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB73 DUP2 PUSH2 0xFD6 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x154F PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x127F JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x156B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1581 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x15A0 PUSH2 0x10C3 DUP3 PUSH2 0x107D JUMP JUMPDEST DUP2 DUP2 MSTORE DUP6 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x15B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x259 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x125B JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF0 SHL SUB NOT DUP1 DUP3 AND SWAP3 SWAP2 SWAP1 PUSH1 0x2 DUP4 LT ISZERO PUSH2 0x15F5 JUMPI DUP1 DUP2 DUP5 PUSH1 0x2 SUB PUSH1 0x3 SHL SHL DUP4 AND AND SWAP4 POP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1616 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x127F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT DUP8 AND DUP2 MSTORE PUSH1 0x0 DUP7 MLOAD PUSH2 0x1640 DUP2 PUSH1 0x14 DUP6 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x125B JUMP JUMPDEST DUP7 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1657 DUP2 PUSH1 0x14 DUP5 ADD PUSH1 0x20 DUP12 ADD PUSH2 0x125B JUMP JUMPDEST ADD PUSH1 0x14 DUP2 ADD DUP7 SWAP1 MSTORE DUP5 MLOAD PUSH2 0x1672 DUP2 PUSH1 0x34 DUP5 ADD PUSH1 0x20 DUP10 ADD PUSH2 0x125B JUMP JUMPDEST DUP5 MLOAD SWAP2 ADD SWAP1 PUSH2 0x1688 DUP2 PUSH1 0x34 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x125B JUMP JUMPDEST ADD PUSH1 0x34 ADD SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x16AA DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x125B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1E3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x1714 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x1721 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x20 DUP4 LT ISZERO PUSH2 0x1E3 JUMPI PUSH1 0x0 NOT PUSH1 0x20 DUP5 SWAP1 SUB PUSH1 0x3 SHL SHL AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 CALLDATALOAD DUP2 DUP2 AND SWAP2 PUSH1 0x14 DUP6 LT ISZERO PUSH2 0x1779 JUMPI DUP1 DUP2 DUP7 PUSH1 0x14 SUB PUSH1 0x3 SHL SHL DUP4 AND AND SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0xB7 PUSH14 0xF625392D2A15B7336DDE345A87D9 0x5E SWAP16 PUSH1 0xC3 0xE9 PUSH19 0x9323D922B53FCC4F8564736F6C634300081400 CALLER ","sourceMap":"1104:6898:48:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;662:236:22;;;;;;:::i;:::-;;:::i;:::-;;;470:14:51;;463:22;445:41;;433:2;418:18;662:236:22;;;;;;;;6150:285:48;;;;;;:::i;:::-;;:::i;1824:101:35:-;;;:::i;:::-;;1201:85;1247:7;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:35;;;1379:51:51;;1367:2;1352:18;1201:85:35;1233:203:51;2751:2080:48;;;;;;:::i;:::-;;:::i;1703:457::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2166:579::-;;;;;;:::i;:::-;;:::i;4837:1165::-;;;;;;:::i;:::-;;:::i;6008:136::-;;;;;;:::i;:::-;;:::i;2074:198:35:-;;;;;;:::i;:::-;;:::i;408:41:23:-;;;;;;;;;;;;;;;-1:-1:-1;;;408:41:23;;;;;662:236:22;761:4;-1:-1:-1;;;;;;796:43:22;;-1:-1:-1;;;796:43:22;;:95;;-1:-1:-1;;;;;;;;;;937:40:42;;;855:36:22;777:114;662:236;-1:-1:-1;;662:236:22:o;6150:285:48:-;6256:4;6272:23;6308:52;;;;;;;;6334:10;6326:19;;-1:-1:-1;;;;;6308:52:48;;;;;;6347:11;6308:52;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6308:52:48;;;;;;;;;6298:63;;6308:52;6298:63;;;;-1:-1:-1;;;;;6379:23:48;;;;;;:10;:23;;;;;6298:63;;-1:-1:-1;6379:49:48;;6298:63;6379:32;:49::i;:::-;6372:56;6150:285;-1:-1:-1;;;;;6150:285:48:o;1824:101:35:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;2751:2080:48:-;3047:20;3104:10;3096:19;;3146:5;3129:23;;;;;;8612:19:51;;8656:2;8647:12;;8483:182;3129:23:48;;;;-1:-1:-1;;3129:23:48;;;;;;;;;;3166:32;;8612:19:51;;;3129:23:48;8647:12:51;3166:32:48;;;;;;;;;;;;3220:11;3212:20;;3246:11;3271:7;3292:5;3311:4;3070:255;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3047:278;;3335:19;3357:48;3396:7;3386:18;;;;;;3357:28;:48::i;:::-;3434:6;;3335:70;;-1:-1:-1;;;;;;3434:6:48;3420:10;:20;3416:75;;3463:17;;-1:-1:-1;;;3463:17:48;;;;;;;;;;;3416:75;3520:14;3505:12;:29;3501:90;;;3557:23;;-1:-1:-1;;;3557:23:48;;;;;;;;;;;3501:90;-1:-1:-1;;;3605:41:48;3623:11;3636:9;3605:17;:41::i;:::-;-1:-1:-1;;;;;;3605:64:48;;3601:120;;3692:18;;-1:-1:-1;;;3692:18:48;;;;;;;;;;;3601:120;3760:5;3735:21;:19;:21::i;:::-;:30;3731:84;;3788:16;;-1:-1:-1;;;3788:16:48;;;;;;;;;;;3731:84;3829:14;;;;:7;:14;;;;;;;;:23;3825:75;;3875:14;;-1:-1:-1;;;3875:14:48;;;;;;;;;;;3825:75;3930:81;;-1:-1:-1;;;3930:81:48;;;;;10059:25:51;;;3910:17:48;;-1:-1:-1;;;;;3930:68:48;;;;;10032:18:51;;3930:81:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3910:101;;4039:22;:20;:22::i;:::-;-1:-1:-1;;;;;4026:35:48;:9;-1:-1:-1;;;;;4026:35:48;;4022:92;;4083:20;;-1:-1:-1;;;4083:20:48;;;;;;;;;;;4022:92;4124:23;4160:52;;;;;;;;4186:10;4178:19;;-1:-1:-1;;;;;4160:52:48;;;;;;4199:11;4160:52;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4160:52:48;;;;;;;;;4150:63;;4160:52;4150:63;;;;-1:-1:-1;;;;;4227:23:48;;;;;;:10;:23;;;;;4150:63;;-1:-1:-1;4227:49:48;;4150:63;4227:32;:49::i;:::-;4223:107;;;4299:20;;-1:-1:-1;;;4299:20:48;;;;;;;;;;;4223:107;-1:-1:-1;;;;;4340:23:48;;;;;;:10;:23;;;;;:44;;4368:15;4340:27;:44::i;:::-;;4404:6;;;;;;;;;-1:-1:-1;;;;;4404:6:48;-1:-1:-1;;;;;4395:24:48;;4420:1;4423:10;4435:1;4438:4;4395:48;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4395:48:48;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4454:14:48;;;;:7;:14;;;;;;;:21;;-1:-1:-1;;4454:21:48;4471:4;4454:21;;;4490;;;;;4503:7;;4490:21;:::i;:::-;;;;;;;;4540:46;;;;;;;;;;;;-1:-1:-1;;;4540:46:48;;;;;4522:15;946:25:24;4624:59:48;;-1:-1:-1;;;4624:59:48;;;;;10059:25:51;;;4522:64:48;;-1:-1:-1;4596:25:48;;-1:-1:-1;;;;;4624:50:48;;;;;10032:18:51;;4624:59:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4624:59:48;;;;;;;;;;;;:::i;:::-;4596:87;-1:-1:-1;;;;;;;4698:20:48;4596:87;4698:20;:::i;:::-;-1:-1:-1;;;;;;4698:39:48;;4694:131;;4774:11;-1:-1:-1;;;;;4753:39:48;;4793:11;4806:7;4753:61;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4694:131;3037:1794;;;;;;2751:2080;;;;;;;;;:::o;1703:457::-;1915:20;1991:10;1983:19;;2033:5;2016:23;;;;;;8612:19:51;;8656:2;8647:12;;8483:182;2016:23:48;;;;-1:-1:-1;;2016:23:48;;;;;;;;;;2053:32;;8612:19:51;;;2016:23:48;8647:12:51;2053:32:48;;;-1:-1:-1;;2053:32:48;;;;;;;;;;1957:196;;;;2099:5;;2118:4;;2136:7;;2053:32;1957:196;;:::i;:::-;;;;;;;;;;;;;1947:206;;1703:457;;;;;;;;:::o;2166:579::-;2441:20;2517:10;2509:19;;2559:5;2542:23;;;;;;8612:19:51;;8656:2;8647:12;;8483:182;2542:23:48;;;;-1:-1:-1;;2542:23:48;;;;;;;;;;2579:32;;8612:19:51;;;2542:23:48;8647:12:51;2579:32:48;;;;;;;;;;;;2633:11;2625:20;;2659:11;2684:7;2705:5;2724:4;2483:255;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2473:265;;2166:579;;;;;;;;;;:::o;4837:1165::-;5075:20;5132:10;5124:19;;5174:5;5157:23;;;;;;8612:19:51;;8656:2;8647:12;;8483:182;5157:23:48;;;;-1:-1:-1;;5157:23:48;;;;;;;;;;5194:32;;8612:19:51;;;5157:23:48;8647:12:51;5194:32:48;;;-1:-1:-1;;5194:32:48;;;;;;;;;;5098:196;;;;5240:5;;5259:4;;5277:7;;5194:32;5098:196;;:::i;:::-;;;;;;;;;;;;;5075:219;;5304:19;5326:48;5365:7;5355:18;;;;;;5326:28;:48::i;:::-;5403:6;;5304:70;;-1:-1:-1;;;;;;5403:6:48;5389:10;:20;5385:75;;5432:17;;-1:-1:-1;;;5432:17:48;;;;;;;;;;;5385:75;5489:14;5474:12;:29;5470:90;;;5526:23;;-1:-1:-1;;;5526:23:48;;;;;;;;;;;5470:90;-1:-1:-1;;;5574:41:48;5592:11;5605:9;5574:17;:41::i;:::-;-1:-1:-1;;;;;;5574:64:48;;5570:120;;5661:18;;-1:-1:-1;;;5661:18:48;;;;;;;;;;;5570:120;5729:5;5704:21;:19;:21::i;:::-;:30;5700:84;;5757:16;;-1:-1:-1;;;5757:16:48;;;;;;;;;;;5700:84;5798:14;;;;:7;:14;;;;;;;;:23;5794:75;;5844:14;;-1:-1:-1;;;5844:14:48;;;;;;;;;;;5794:75;5888:6;;5879:48;;-1:-1:-1;;;5879:48:48;;-1:-1:-1;;;;;5888:6:48;;;;5879:24;;:48;;5888:6;;5907:10;;5888:6;;5922:4;;5879:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5879:48:48;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5938:14:48;;;;:7;:14;;;;;;;:21;;-1:-1:-1;;5938:21:48;5955:4;5938:21;;;5974;;;;;5987:7;;5974:21;:::i;:::-;;;;;;;;5065:937;;4837:1165;;;;;;;:::o;6008:136::-;1094:13:35;:11;:13::i;:::-;6077:6:48::1;:19:::0;;-1:-1:-1;;;;;;6077:19:48::1;-1:-1:-1::0;;;;;6077:19:48;::::1;::::0;;::::1;::::0;;;6112:25:::1;::::0;1379:51:51;;;6112:25:48::1;::::0;1367:2:51;1352:18;6112:25:48::1;;;;;;;6008:136:::0;:::o;2074:198:35:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:35;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:35;;13421:2:51;2154:73:35::1;::::0;::::1;13403:21:51::0;13460:2;13440:18;;;13433:30;13499:34;13479:18;;;13472:62;-1:-1:-1;;;13550:18:51;;;13543:36;13596:19;;2154:73:35::1;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;6420:138:47:-;6500:4;4351:19;;;:12;;;:19;;;;;;:24;;6523:28;6516:35;6420:138;-1:-1:-1;;;6420:138:47:o;1359:130:35:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:35;719:10:38;1422:23:35;1414:68;;;;-1:-1:-1;;;1414:68:35;;13828:2:51;1414:68:35;;;13810:21:51;;;13847:18;;;13840:30;13906:34;13886:18;;;13879:62;13958:18;;1414:68:35;13626:356:51;2426:187:35;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:35;;;-1:-1:-1;;;;;;2534:17:35;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;7120:396:41:-;7389:34;7189:15;7376:48;;;7444:4;7437:18;;;;7495:4;7479:21;;;7120:396::o;6441:1559:48:-;6622:6;;6555:17;;-1:-1:-1;;;;;6622:6:48;:18;:22;6618:1376;;6698:6;;6733:157;;6661:12;;;;-1:-1:-1;;;;;6698:6:48;;;;-1:-1:-1;;;6777:34:48;6733:157;;6833:8;;6863:9;;6733:157;;;:::i;:::-;;;;-1:-1:-1;;6733:157:48;;;;;;;;;;;;;;-1:-1:-1;;;;;6733:157:48;-1:-1:-1;;;;;;6733:157:48;;;;;;;;;;6698:206;;;;6733:157;6698:206;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6660:244;;;;6919:12;6935:7;:46;;;;;6962:6;:13;6979:2;6962:19;6935:46;:127;;;;-1:-1:-1;7001:29:48;;-1:-1:-1;;;7042:19:48;7001:29;;;;;;;;;;;;:::i;:::-;:61;6935:127;6919:144;;7085:7;:50;;-1:-1:-1;;;;;;7085:50:48;;;-1:-1:-1;;;7085:50:48;7078:57;;;;;;;6618:1376;7284:24;7310:32;7346:54;7380:8;7390:9;7346:33;:54::i;:::-;7283:117;;-1:-1:-1;7283:117:48;-1:-1:-1;7504:26:48;7487:13;:43;;;;;;;;:::i;:::-;;7483:90;;-1:-1:-1;;;;;;;7555:18:48;-1:-1:-1;7548:25:48;;-1:-1:-1;7548:25:48;7483:90;7894:6;;-1:-1:-1;;;;;7874:26:48;;;7894:6;;7874:26;:109;;-1:-1:-1;;;;;;7874:109:48;;;-1:-1:-1;;;7874:109:48;7851:132;;;;;;1632:144:22;1694:7;;1736:8;1745:20;1763:2;1736:8;1745:20;:::i;:::-;1736:31;;;;;:::i;:::-;1728:40;;;:::i;:::-;1720:49;1632:144;-1:-1:-1;1632:144:22:o;1325:207::-;1388:7;;1459:8;1468:20;1486:2;1459:8;1468:20;:::i;:::-;1459:51;1489:20;1507:2;1489:8;:20;:::i;:::-;1459:51;;;;;;;:::i;:::-;1451:60;;;:::i;:::-;1426:99;;1407:118;;1325:207;:::o;5919:123:47:-;5989:4;6012:23;6017:3;6029:5;6012:4;:23::i;2145:730:41:-;2226:7;2235:12;2263:9;:16;2283:2;2263:22;2259:610;;2599:4;2584:20;;2578:27;2648:4;2633:20;;2627:27;2705:4;2690:20;;2684:27;2301:9;2676:36;2746:25;2757:4;2676:36;2578:27;2627;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;-1:-1:-1;2818:1:41;;-1:-1:-1;2822:35:41;2259:610;2145:730;;;;;:::o;2214:404:47:-;2277:4;4351:19;;;:12;;;:19;;;;;;2293:319;;-1:-1:-1;2335:23:47;;;;;;;;:11;:23;;;;;;;;;;;;;2515:18;;2493:19;;;:12;;;:19;;;;;;:40;;;;2547:11;;2293:319;-1:-1:-1;2596:5:47;2589:12;;5009:1456:41;5097:7;;-1:-1:-1;;;;;6008:79:41;;6004:161;;;-1:-1:-1;6119:1:41;;-1:-1:-1;6123:30:41;6103:51;;6004:161;6276:24;;;6259:14;6276:24;;;;;;;;;15995:25:51;;;16068:4;16056:17;;16036:18;;;16029:45;;;;16090:18;;;16083:34;;;16133:18;;;16126:34;;;6276:24:41;;15967:19:51;;6276:24:41;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6276:24:41;;-1:-1:-1;;6276:24:41;;;-1:-1:-1;;;;;;;6314:20:41;;6310:101;;6366:1;6370:29;6350:50;;;;;;;6310:101;6429:6;-1:-1:-1;6437:20:41;;-1:-1:-1;5009:1456:41;;;;;;;;:::o;14:286:51:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:51;;209:43;;199:71;;266:1;263;256:12;497:131;-1:-1:-1;;;;;572:31:51;;562:42;;552:70;;618:1;615;608:12;633:134;701:20;;730:31;701:20;730:31;:::i;772:456::-;849:6;857;865;918:2;906:9;897:7;893:23;889:32;886:52;;;934:1;931;924:12;886:52;973:9;960:23;992:31;1017:5;992:31;:::i;:::-;1042:5;-1:-1:-1;1099:2:51;1084:18;;1071:32;1112:33;1071:32;1112:33;:::i;:::-;772:456;;1164:7;;-1:-1:-1;;;1218:2:51;1203:18;;;;1190:32;;772:456::o;1441:127::-;1502:10;1497:3;1493:20;1490:1;1483:31;1533:4;1530:1;1523:15;1557:4;1554:1;1547:15;1573:275;1644:2;1638:9;1709:2;1690:13;;-1:-1:-1;;1686:27:51;1674:40;;-1:-1:-1;;;;;1729:34:51;;1765:22;;;1726:62;1723:88;;;1791:18;;:::i;:::-;1827:2;1820:22;1573:275;;-1:-1:-1;1573:275:51:o;1853:186::-;1901:4;-1:-1:-1;;;;;1926:6:51;1923:30;1920:56;;;1956:18;;:::i;:::-;-1:-1:-1;2022:2:51;2001:15;-1:-1:-1;;1997:29:51;2028:4;1993:40;;1853:186::o;2044:462::-;2086:5;2139:3;2132:4;2124:6;2120:17;2116:27;2106:55;;2157:1;2154;2147:12;2106:55;2193:6;2180:20;2224:48;2240:31;2268:2;2240:31;:::i;:::-;2224:48;:::i;:::-;2297:2;2288:7;2281:19;2343:3;2336:4;2331:2;2323:6;2319:15;2315:26;2312:35;2309:55;;;2360:1;2357;2350:12;2309:55;2425:2;2418:4;2410:6;2406:17;2399:4;2390:7;2386:18;2373:55;2473:1;2448:16;;;2466:4;2444:27;2437:38;;;;2452:7;2044:462;-1:-1:-1;;;2044:462:51:o;2511:1163::-;2669:6;2677;2685;2693;2701;2709;2717;2725;2733;2786:3;2774:9;2765:7;2761:23;2757:33;2754:53;;;2803:1;2800;2793:12;2754:53;2826:29;2845:9;2826:29;:::i;:::-;2816:39;;2874:38;2908:2;2897:9;2893:18;2874:38;:::i;:::-;2864:48;;2959:2;2948:9;2944:18;2931:32;2921:42;;3010:2;2999:9;2995:18;2982:32;2972:42;;3061:3;3050:9;3046:19;3033:33;3023:43;;3113:3;3102:9;3098:19;3085:33;3075:43;;3169:3;3158:9;3154:19;3141:33;-1:-1:-1;;;;;3234:2:51;3226:6;3223:14;3220:34;;;3250:1;3247;3240:12;3220:34;3273:49;3314:7;3305:6;3294:9;3290:22;3273:49;:::i;:::-;3263:59;;3375:3;3364:9;3360:19;3347:33;3331:49;;3405:2;3395:8;3392:16;3389:36;;;3421:1;3418;3411:12;3389:36;3444:51;3487:7;3476:8;3465:9;3461:24;3444:51;:::i;:::-;3434:61;;3548:3;3537:9;3533:19;3520:33;3504:49;;3578:2;3568:8;3565:16;3562:36;;;3594:1;3591;3584:12;3562:36;;3617:51;3660:7;3649:8;3638:9;3634:24;3617:51;:::i;:::-;3607:61;;;2511:1163;;;;;;;;;;;:::o;3679:881::-;3801:6;3809;3817;3825;3833;3841;3894:3;3882:9;3873:7;3869:23;3865:33;3862:53;;;3911:1;3908;3901:12;3862:53;3950:9;3937:23;3969:31;3994:5;3969:31;:::i;:::-;4019:5;-1:-1:-1;4071:2:51;4056:18;;4043:32;;-1:-1:-1;4122:2:51;4107:18;;4094:32;;-1:-1:-1;4173:2:51;4158:18;;4145:32;;-1:-1:-1;4228:3:51;4213:19;;4200:33;-1:-1:-1;;;;;4282:14:51;;;4279:34;;;4309:1;4306;4299:12;4279:34;4332:49;4373:7;4364:6;4353:9;4349:22;4332:49;:::i;:::-;4322:59;;4434:3;4423:9;4419:19;4406:33;4390:49;;4464:2;4454:8;4451:16;4448:36;;;4480:1;4477;4470:12;4448:36;;4503:51;4546:7;4535:8;4524:9;4520:24;4503:51;:::i;:::-;4493:61;;;3679:881;;;;;;;;:::o;4565:250::-;4650:1;4660:113;4674:6;4671:1;4668:13;4660:113;;;4750:11;;;4744:18;4731:11;;;4724:39;4696:2;4689:10;4660:113;;;-1:-1:-1;;4807:1:51;4789:16;;4782:27;4565:250::o;4820:270::-;4861:3;4899:5;4893:12;4926:6;4921:3;4914:19;4942:76;5011:6;5004:4;4999:3;4995:14;4988:4;4981:5;4977:16;4942:76;:::i;:::-;5072:2;5051:15;-1:-1:-1;;5047:29:51;5038:39;;;;5079:4;5034:50;;4820:270;-1:-1:-1;;4820:270:51:o;5095:217::-;5242:2;5231:9;5224:21;5205:4;5262:44;5302:2;5291:9;5287:18;5279:6;5262:44;:::i;5317:1092::-;5457:6;5465;5473;5481;5489;5497;5505;5513;5566:3;5554:9;5545:7;5541:23;5537:33;5534:53;;;5583:1;5580;5573:12;5534:53;5622:9;5609:23;5641:31;5666:5;5641:31;:::i;:::-;5691:5;-1:-1:-1;5743:2:51;5728:18;;5715:32;;-1:-1:-1;5794:2:51;5779:18;;5766:32;;-1:-1:-1;5850:2:51;5835:18;;5822:32;5863:33;5822:32;5863:33;:::i;:::-;5915:7;-1:-1:-1;5969:3:51;5954:19;;5941:33;;-1:-1:-1;6021:3:51;6006:19;;5993:33;;-1:-1:-1;6077:3:51;6062:19;;6049:33;-1:-1:-1;;;;;6131:14:51;;;6128:34;;;6158:1;6155;6148:12;6128:34;6181:49;6222:7;6213:6;6202:9;6198:22;6181:49;:::i;:::-;6171:59;;6283:3;6272:9;6268:19;6255:33;6239:49;;6313:2;6303:8;6300:16;6297:36;;;6329:1;6326;6319:12;6297:36;;6352:51;6395:7;6384:8;6373:9;6369:24;6352:51;:::i;:::-;6342:61;;;5317:1092;;;;;;;;;;;:::o;6414:1080::-;6554:6;6562;6570;6578;6586;6594;6602;6655:3;6643:9;6634:7;6630:23;6626:33;6623:53;;;6672:1;6669;6662:12;6623:53;6711:9;6698:23;6730:31;6755:5;6730:31;:::i;:::-;6780:5;-1:-1:-1;6832:2:51;6817:18;;6804:32;;-1:-1:-1;6883:2:51;6868:18;;6855:32;;-1:-1:-1;6934:2:51;6919:18;;6906:32;;-1:-1:-1;6989:3:51;6974:19;;6961:33;-1:-1:-1;;;;;7043:14:51;;;7040:34;;;7070:1;7067;7060:12;7040:34;7093:49;7134:7;7125:6;7114:9;7110:22;7093:49;:::i;:::-;7083:59;;7195:3;7184:9;7180:19;7167:33;7151:49;;7225:2;7215:8;7212:16;7209:36;;;7241:1;7238;7231:12;7209:36;7264:51;7307:7;7296:8;7285:9;7281:24;7264:51;:::i;:::-;7254:61;;7368:3;7357:9;7353:19;7340:33;7324:49;;7398:2;7388:8;7385:16;7382:36;;;7414:1;7411;7404:12;7382:36;;7437:51;7480:7;7469:8;7458:9;7454:24;7437:51;:::i;:::-;7427:61;;;6414:1080;;;;;;;;;;:::o;7499:247::-;7558:6;7611:2;7599:9;7590:7;7586:23;7582:32;7579:52;;;7627:1;7624;7617:12;7579:52;7666:9;7653:23;7685:31;7710:5;7685:31;:::i;7975:503::-;8132:3;8163;8210:6;8132:3;8244:200;8258:4;8255:1;8252:11;8244:200;;;8319:13;;8305:28;;8356:4;8382:14;;;;8419:15;;;;8278:1;8271:9;8244:200;;;8248:3;;;8469:2;8464:3;8460:12;8453:19;;7975:503;;;;:::o;8670:1238::-;9049:3;-1:-1:-1;;;;;9077:31:51;9141:2;9133:6;9129:15;9124:3;9117:28;9174:6;9168:13;9190:75;9258:6;9253:2;9248:3;9244:12;9237:4;9229:6;9225:17;9190:75;:::i;:::-;9325:13;;9284:16;;;;9347:76;9325:13;9409:2;9401:11;;9394:4;9382:17;;9347:76;:::i;:::-;9450:8;9446:2;9442:17;9432:27;;;9500:2;9492:6;9488:15;9483:2;9479;9475:11;9468:36;9533:6;9528:2;9524;9520:11;9513:27;9571:6;9565:13;9549:29;;9587:76;9654:8;9649:2;9645;9641:11;9634:4;9626:6;9622:17;9587:76;:::i;:::-;9682:17;9723:2;9715:11;;9708:27;;;9760:13;;9782:77;9760:13;9844:3;9836:12;;9829:4;9817:17;;9782:77;:::i;:::-;9879:17;9898:3;9875:27;;8670:1238;-1:-1:-1;;;;;;;;;;8670:1238:51:o;10095:251::-;10165:6;10218:2;10206:9;10197:7;10193:23;10189:32;10186:52;;;10234:1;10231;10224:12;10186:52;10266:9;10260:16;10285:31;10310:5;10285:31;:::i;10351:474::-;10598:6;10587:9;10580:25;10670:1;10666;10661:3;10657:11;10653:19;10645:6;10641:32;10636:2;10625:9;10621:18;10614:60;10710:6;10705:2;10694:9;10690:18;10683:34;10753:3;10748:2;10737:9;10733:18;10726:31;10561:4;10774:45;10814:3;10803:9;10799:19;10791:6;10774:45;:::i;:::-;10766:53;10351:474;-1:-1:-1;;;;;;10351:474:51:o;10830:647::-;10909:6;10962:2;10950:9;10941:7;10937:23;10933:32;10930:52;;;10978:1;10975;10968:12;10930:52;11011:9;11005:16;-1:-1:-1;;;;;11036:6:51;11033:30;11030:50;;;11076:1;11073;11066:12;11030:50;11099:22;;11152:4;11144:13;;11140:27;-1:-1:-1;11130:55:51;;11181:1;11178;11171:12;11130:55;11210:2;11204:9;11235:48;11251:31;11279:2;11251:31;:::i;11235:48::-;11306:2;11299:5;11292:17;11346:7;11341:2;11336;11332;11328:11;11324:20;11321:33;11318:53;;;11367:1;11364;11357:12;11318:53;11380:67;11444:2;11439;11432:5;11428:14;11423:2;11419;11415:11;11380:67;:::i;11482:356::-;11599:12;;11647:4;11636:16;;11630:23;-1:-1:-1;;;;;;11705:11:51;;;;11599:12;11630:23;11739:1;11728:13;;11725:107;;;11819:2;11813;11803:6;11800:1;11796:14;11793:1;11789:22;11785:31;11781:2;11777:40;11773:49;11764:58;;11725:107;;;;11482:356;;;:::o;11843:288::-;12018:6;12007:9;12000:25;12061:2;12056;12045:9;12041:18;12034:30;11981:4;12081:44;12121:2;12110:9;12106:18;12098:6;12081:44;:::i;:::-;12073:52;11843:288;-1:-1:-1;;;;11843:288:51:o;12136:1078::-;-1:-1:-1;;;;;12501:31:51;12493:6;12489:44;12484:3;12477:57;12459:3;12563:6;12557:13;12579:75;12647:6;12642:2;12637:3;12633:12;12626:4;12618:6;12614:17;12579:75;:::i;:::-;12714:13;;12673:16;;;;12736:76;12714:13;12798:2;12790:11;;12783:4;12771:17;;12736:76;:::i;:::-;12831:17;12872:2;12864:11;;12857:27;;;12909:13;;12931:76;12909:13;12993:2;12985:11;;12978:4;12966:17;;12931:76;:::i;:::-;13068:13;;13026:17;;;13090:76;13068:13;13152:2;13144:11;;13137:4;13125:17;;13090:76;:::i;:::-;13186:17;13205:2;13182:26;;12136:1078;-1:-1:-1;;;;;;;;12136:1078:51:o;13987:287::-;14116:3;14154:6;14148:13;14170:66;14229:6;14224:3;14217:4;14209:6;14205:17;14170:66;:::i;:::-;14252:16;;;;;13987:287;-1:-1:-1;;13987:287:51:o;14279:184::-;14349:6;14402:2;14390:9;14381:7;14377:23;14373:32;14370:52;;;14418:1;14415;14408:12;14370:52;-1:-1:-1;14441:16:51;;14279:184;-1:-1:-1;14279:184:51:o;14468:127::-;14529:10;14524:3;14520:20;14517:1;14510:31;14560:4;14557:1;14550:15;14584:4;14581:1;14574:15;14600:225;14667:9;;;14688:11;;;14685:134;;;14741:10;14736:3;14732:20;14729:1;14722:31;14776:4;14773:1;14766:15;14804:4;14801:1;14794:15;14830:331;14935:9;14946;14988:8;14976:10;14973:24;14970:44;;;15010:1;15007;15000:12;14970:44;15039:6;15029:8;15026:20;15023:40;;;15059:1;15056;15049:12;15023:40;-1:-1:-1;;15085:23:51;;;15130:25;;;;;-1:-1:-1;14830:331:51:o;15166:255::-;15286:19;;15325:2;15317:11;;15314:101;;;-1:-1:-1;;15386:2:51;15382:12;;;15379:1;15375:20;15371:33;15360:45;15166:255;;;;:::o;15426:337::-;-1:-1:-1;;15547:19:51;;15634:11;;;;15665:2;15657:11;;15654:103;;;15744:2;15738;15731:3;15727:2;15723:12;15720:1;15716:20;15712:29;15708:2;15704:38;15700:47;15691:56;;15654:103;;;15426:337;;;;:::o"},"methodIdentifiers":{"VERSION()":"ffa1ad74","getOrderHash(address,uint256,uint256,bytes32,bytes,bytes)":"bfb6e08b","getRedeemPerkHash(address,uint256,uint256,address,bytes32,bytes32,bytes,bytes)":"d5212e3c","isPerkClaimed(address,address,bytes32)":"285ac885","owner()":"8da5cb5b","placeOrder(address,uint256,uint256,bytes32,bytes,bytes,bytes)":"db1e3ef3","redeemPerk(address,address,bytes32,uint256,uint256,bytes32,bytes,bytes,bytes)":"bbb9ddd3","renounceOwnership()":"715018a6","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b","updateTarget(address)":"ea1b495f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BlockAlreadyConfirmed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CallerNotPerkOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CallerNotTarget\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PerkAlreadyClaimed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"orderId\",\"type\":\"bytes\"}],\"name\":\"OrderCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newTarget\",\"type\":\"address\"}],\"name\":\"TargetChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBlockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"orderId\",\"type\":\"bytes\"}],\"name\":\"getOrderHash\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBlockNumber\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"perkAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"perkTokenId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"orderId\",\"type\":\"bytes\"}],\"name\":\"getRedeemPerkHash\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"perkAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"perkTokenId\",\"type\":\"bytes32\"}],\"name\":\"isPerkClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBlockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"orderId\",\"type\":\"bytes\"}],\"name\":\"placeOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"perkAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"perkTokenId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBlockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"orderId\",\"type\":\"bytes\"}],\"name\":\"redeemPerk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newTarget\",\"type\":\"address\"}],\"name\":\"updateTarget\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"VERSION()\":{\"notice\":\"Contract version.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OrderExtension.sol\":\"OrderExtension\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@erc725/smart-contracts/contracts/ERC725XCore.sol\":{\"keccak256\":\"0xc86aae7d79e9536e0f81887c4d2ca4b834b55a2678cdd55b6ad05588175a247c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5ac10ef4d545fa962b0ea1d83793cac527a3b83c24a98638108da177faedc5de\",\"dweb:/ipfs/QmaUZraSBuxzoGeGJoUzZUU6uD3nLS1oubsicVZx4btBVX\"]},\"@erc725/smart-contracts/contracts/ERC725Y.sol\":{\"keccak256\":\"0xeab1c553ab3ef1d83b99d2d93dacbb03af8ef43eca7df4ac91cdf5b15882abcc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://492663e0fedaea5fc7f008ba780d160e290fa4bd455f3af78e456d2188835533\",\"dweb:/ipfs/QmSoMLfrXAjHnTzBerxDiZ5X9wq6RPfSpvqUJ3brKS4Y4s\"]},\"@erc725/smart-contracts/contracts/ERC725YCore.sol\":{\"keccak256\":\"0x54b779c764317ccecb181608112ff7440bb28ef8c0770e7340bc5cac4fc7d0f9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cacac6f06bde5d7cd9852e45ef2baa949dc21a89b3224194bdb1490857cfb08b\",\"dweb:/ipfs/QmPHnXHiB65UZPk7thKvW2C1DpxCJ2UeBsj7u78r2HLTJG\"]},\"@erc725/smart-contracts/contracts/constants.sol\":{\"keccak256\":\"0x37da1619e580b6af6a68e91b4784f7945ee2344fad3a96b6dfb2592e35fedb60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fb9436bd587d7b38c532f317dbd4bc5f178b50906b1a5e29adf24908f27b2c47\",\"dweb:/ipfs/QmW2vTCNM7Mr4vW5t9yBK7Zmh1FtaVjPwdAbyFcPNBSZYL\"]},\"@erc725/smart-contracts/contracts/custom/OwnableUnset.sol\":{\"keccak256\":\"0xb198a56711fbe79cce967068f9c7f41760cee018b9ce330a82e8cca8ed7909a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5108bd75251da5980d5021cb6114d7d706eaa82d269fa96adb40709d440f683\",\"dweb:/ipfs/QmdWj75HZYdJLahnmiPEAshFjempzGR7hjj5gGi9LSqnqj\"]},\"@erc725/smart-contracts/contracts/errors.sol\":{\"keccak256\":\"0x8b5760e40f04b9ec9de9339136a481fb3cd4fe29f5528fa6756320cd256d58fb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://28211f3a6bb2c6bf3d7dbb855d9eb46099ecc132213688e550ad314c619e8bf8\",\"dweb:/ipfs/QmUcuXAELqMDFmSxKWbhiBmuEKzw92h7U1ev3pgeDX4xm7\"]},\"@erc725/smart-contracts/contracts/interfaces/IERC725X.sol\":{\"keccak256\":\"0x2864f62b1f5a40a79b50c438d737ea5cb15d36265fbc7239dcfb62f494de8278\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://6b5b237cdc86b254b2c27e015f0a402f7f38ef36bbb98ca45636f1cee781264e\",\"dweb:/ipfs/QmbzeRMW8R5kRA4d6JAC596oSp78et64iwiYM8gJUaBFNr\"]},\"@erc725/smart-contracts/contracts/interfaces/IERC725Y.sol\":{\"keccak256\":\"0xa47c9e3eba0c733a1685b9fa309f753540c89ad2dca73236a2c953e7f5680e7b\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://59076395f660838919a2068cb7792c0fa70533642bbc5b4e3cc3cbb2c9ec7b50\",\"dweb:/ipfs/QmQqew3mDuyHCBdd4v1JiwRiKEbzk3LeHchzTHSdyhYg5b\"]},\"@lukso/lsp-smart-contracts/contracts/LSP0ERC725Account/ILSP0ERC725Account.sol\":{\"keccak256\":\"0x19236aa0c4ca21b9bf0193f950f84009768798acd65996941ca9ea5562824627\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a359b52887f4109a95d693ef0a86420d806355f043904135105f2ac82dc33b9\",\"dweb:/ipfs/QmULBQsH4f8SoemixmbqkWvG8kbpXyzbYHSKudtHQTbJbW\"]},\"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Constants.sol\":{\"keccak256\":\"0xd5bc3dddd8f8d9d7bee4cc9ce9910c555683de1111893cbaab627bf18942d37f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://957b4c7ac26896d8660b01becae3fc6243dad70195af88e0a01d2f189dcb7ed7\",\"dweb:/ipfs/QmWwzgF8BAhDQFXahKAdopgxoMbTeQ4YyYWLQv5Y4AVQU6\"]},\"@lukso/lsp-smart-contracts/contracts/LSP17ContractExtension/LSP17Extension.sol\":{\"keccak256\":\"0x1cd481a4a1d276a72ee175efca1d48a4cfb239baa69811666e479688eec5ed5b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://275c56093fb45853e1972985dc6d390a49a2496ac22afb8db35d4034c71dbec9\",\"dweb:/ipfs/QmZEMavRja29bwfSfomjUSMGvh77kb36YdUm3sdPPr2Wg1\"]},\"@lukso/lsp-smart-contracts/contracts/LSP4DigitalAssetMetadata/LSP4Constants.sol\":{\"keccak256\":\"0x8e74b1641a18f28523b07198d9a0c78aecbe1643c0a22bf31df974b48b183823\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f917edde190ef4ed34e85ed42ff5bb13d5dc0a881f9bac34211394210c2afdd3\",\"dweb:/ipfs/QmZmNy3dWpw2c9xfLae2dgDtysUs9LpwDdBLe436P8giMs\"]},\"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/ILSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0xf24c0f30ffdc2540755ae809effdba80029f8418e2b0c9f72b878aad50ba1b72\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://599f63e424232f92d566b3294729d24b3e06e33a7b721590600e721a728919e4\",\"dweb:/ipfs/QmW4DX8gxXpPGrZdEk2iwQJMHyVgBaEwbb3QZkLyowMCCD\"]},\"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/LSP8Constants.sol\":{\"keccak256\":\"0xa2991269c572f88fa8221063526eee5e16469a49d67f69b1761f62541f9bbf83\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://806e997219d80207df81e55eebefab758ac7a02aec9813a493d7e3b5ce01b13b\",\"dweb:/ipfs/QmdLYupu1s4fFsbbZdz64bFyHgJeGAko868faoLsLPuidk\"]},\"@lukso/lsp-smart-contracts/contracts/LSP8IdentifiableDigitalAsset/extensions/LSP8Burnable.sol\":{\"keccak256\":\"0x33f5e37c245a8c71cf401b096a3b0660b5b0423ce581b8adf205b75e7ecfc651\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://13686e9d1d8614a922d8397f28796e78350dc581cfa4d4418c343cd5ec900c6c\",\"dweb:/ipfs/QmcqRthEcbwdpMvtLA9yUDrsK3fUeZRjZjyqkpWSqNk77M\"]},\"@lukso/lsp0-contracts/contracts/ILSP0ERC725Account.sol\":{\"keccak256\":\"0x8a8baf99256d7af9389700213dff72587e3a7083da9f25fbe20940244da58a8e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b203d51255de422125cfbe57c6acd8f8730d1df430b8cc838b8773e64e952f6d\",\"dweb:/ipfs/QmNMjDiUrgMAaRWM3PjZkRTQSgTQS1GRinwBDPESbvW2ER\"]},\"@lukso/lsp1-contracts/contracts/ILSP1UniversalReceiver.sol\":{\"keccak256\":\"0x5b8764a678dc9d6673eafa8ad0ee6053cdea30acb58015bdf9c93f9f1788b49b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0e26dcf5d66120b7a0895ddcaec92207e17c63344fca885d2b7e3fe953ec027c\",\"dweb:/ipfs/QmetAuz9etfz9BG9oPJCwMthnhfd8XvZYLBmMfrPNUm3qV\"]},\"@lukso/lsp1-contracts/contracts/LSP1Constants.sol\":{\"keccak256\":\"0x0f87fc38243fc70316e22814f5a79d9c0770a39f64077cbc6fb5fddfa1d4c23c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c7d83f054b71dfa5ca48a9a811e6a985ff6b38a9e5f4c220ea2ec3a322cce7cf\",\"dweb:/ipfs/QmaehpHpqc5dtRCm9BoU8vCY59AeEnmGvmmwPirVr47oGp\"]},\"@lukso/lsp1-contracts/contracts/LSP1Utils.sol\":{\"keccak256\":\"0xa81bf1910c3b56b43bf58d0be2105c434ed3b65cfb3674e282b5aba3fd35afb0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://374e7bef39522d65cf8e45c365178eb54d159b9267d0c2a2b97dfea10e52d41f\",\"dweb:/ipfs/QmfVYVnVSTRVAAifFSyFk8icePgw3eeqpjAKWAwfHMu6vX\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Constants.sol\":{\"keccak256\":\"0x6d4bb208587872ad563fef31655c44f7de03baa5b4a513910c0003aea0c04036\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://880c3b21e2090a14e7bba94ac5c8d4633e8a81d93c6f619454167a01dcc866d8\",\"dweb:/ipfs/QmZp6YVM4Eor5XtuXXqGRaPAJ3u5KCmLwuNRAGf4JY7sK1\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Errors.sol\":{\"keccak256\":\"0x75a0159f76a3c5bf26b13aa404aca2f588ea41928eb1483683e29d2031fe5abf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f1b93e7eb5a88a2f42a9dfa061ca5e93e7650cd9114010faa18faf0a5508f579\",\"dweb:/ipfs/QmXmLhf1ejsF7G1FZnvpTBRS9oQ9ZTuqCBRT1im3vAuUYW\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Extendable.sol\":{\"keccak256\":\"0x5983e916a4cb604a45b585d7f745f5ac8bf69ef51fbc78cf8e70408e29e008c2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e1e9a7b8dc210030d35b4e2c3dbb7107f51c063256f7e6120997ed638f033db1\",\"dweb:/ipfs/QmRQgkaDnC9sAb9mZJtVgBsAR1xfmcTA2erCVUiyszy15o\"]},\"@lukso/lsp17contractextension-contracts/contracts/LSP17Extension.sol\":{\"keccak256\":\"0xf7c32664318c67cc6e8da0c4fa5e0ffc0fc5d6f3f61e246ec76d4efb683f8f5d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f23d68359b81686c6fe7e31e1a9d6f88d9686ed6c1e4089154d0223d2c131677\",\"dweb:/ipfs/QmP7ybjTzGjYokLV8Fvr66P9MLbLD4WkEwYMr3j4DrU59c\"]},\"@lukso/lsp17contractextension-contracts/contracts/Version.sol\":{\"keccak256\":\"0xa9f8166be1961869bdcda4d7f87a71dd35c7159b2d8255bb89be21a6038664c8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3466bfba099b86dfbfa61ddbffec7167d29bb23017231ff6b079502f966caee4\",\"dweb:/ipfs/QmfUDAk1vU28XE2kX9dpSz6hzGB3aRsJ43zXjgNzR6a1du\"]},\"@lukso/lsp2-contracts/contracts/LSP2Utils.sol\":{\"keccak256\":\"0x86ce8a85d12c79b76db5413b05b9bff16cd865b395efdc0e85b06b3b5e17219b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7ebb6d1152f88b459b9e8fc3ef6361a9fb9d03bfa994148e6b125a2ee4025487\",\"dweb:/ipfs/QmX18bCecAtrjqKTyCPqRrUuvVYSW1XZZJUgvjfYnqfmEH\"]},\"@lukso/lsp4-contracts/contracts/LSP4Constants.sol\":{\"keccak256\":\"0xdf9b7c688d39a92cb3238136a9f56554245d5ae9b6568dcd6164d0e15c6f56c7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bb36a427cdfa0f394d2d78014f85152ab383499fc3c3d6285d4b801c656e7c3f\",\"dweb:/ipfs/QmZJehfeWKfHLyZLufhs9u4ZyVztGCUNWXzFgfZSU837vU\"]},\"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadata.sol\":{\"keccak256\":\"0xd120529845267176d7658eb3b610fd9412012ce58cfde05a42f7fcee1c371dce\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4e2919d97ff39ae203dc57f53a7ae6a4f1dfe9354e564744ee3752771687b796\",\"dweb:/ipfs/QmbNwNCDnLcD4jrboPJhAMXVEiVGbagBteXM5sVByZ8A1h\"]},\"@lukso/lsp4-contracts/contracts/LSP4DigitalAssetMetadataCore.sol\":{\"keccak256\":\"0xc442e52d34bb98acc1494675856b1f1d124af1375d8e23a9bfcc3b6c1865e1fc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://84254359ed929c1991136f9c3e934ddfa74cd85684de6c44cb70afa70d12f837\",\"dweb:/ipfs/QmWfmionUJJYyYDoeSQLGUHhou2sWxhWzwtU5GVjpumiSS\"]},\"@lukso/lsp4-contracts/contracts/LSP4Errors.sol\":{\"keccak256\":\"0x3db7fd252ed02ce27686141125c3d65d3ff682a32601e1e8611becd9357a57b5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5aded62a160ed7f9860996004d1656e8592b3f97d478d8597f8ad6afbe4f34b7\",\"dweb:/ipfs/QmcnmLVt8cmz1iRNaX5c6iNYckRgUXGz8YkjHW9T1KNB5A\"]},\"@lukso/lsp8-contracts/contracts/ILSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0x16dccaeb35168c4e61763a2c35b075eeed7505661b10fc9c16194af6eb3751ad\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://48f03e83068c241fb7f380b8ad31c8aa3c0f3de59df6ff4c4881b2589d7610b7\",\"dweb:/ipfs/QmW1wmc6kkUXF9gMdAwX7GxjrF4mLqUd7dognerLVRod4v\"]},\"@lukso/lsp8-contracts/contracts/LSP8Constants.sol\":{\"keccak256\":\"0x2372e7ec422a13ce3e7968e5fbb081b67816b5de974bd76ec61cfed787abbe1b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6d147e2f290ed60e36e9187dc7cce7d7ee1a62eee1c25c761e6090d88e3fa383\",\"dweb:/ipfs/Qmf9HEYCCjx2xBopvq7WhhtjvL9AEihvNcZ512751Wg6LN\"]},\"@lukso/lsp8-contracts/contracts/LSP8Errors.sol\":{\"keccak256\":\"0xff2c1791043272eb4a7c05bc77fa0a0234678991b0700f84d92edbd31fefd905\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://72b32242e8a4b7c12355de3f1c463437a81d8d5f8d34b3a8d25d726340b891c0\",\"dweb:/ipfs/Qmbhz53zdudSQbPwES2qMHqLHaph4GhigNETC481VWwK6J\"]},\"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAsset.sol\":{\"keccak256\":\"0xe8cc62169bfbf1e6472e217ab5833428dc8234a1db77f7cc65e360bea7ff89c9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4939ef03cba6fbb74d409ab712721017095542f100fd95666af7ace58fa176c8\",\"dweb:/ipfs/QmSau5c7tUcawWgGEqwe5U14dop6x9YkLDsaUWTzAktHik\"]},\"@lukso/lsp8-contracts/contracts/LSP8IdentifiableDigitalAssetCore.sol\":{\"keccak256\":\"0xe536b1021d51a20951a3d1446aee234c3ea558a008d023343a30c8d2fb83f4ad\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c9366d571daaf4dc1fef4820c4f7ea1e2546753f9b01aa8ff9926d7d96653da3\",\"dweb:/ipfs/QmTfJhHp5HK2oTAm1Ttr8bGcLGWHguj2dNqnvVqzGuWfb1\"]},\"@lukso/lsp8-contracts/contracts/extensions/LSP8Burnable.sol\":{\"keccak256\":\"0x516a83ea1433ca11c8e47848ec7bc800c3b03af44e992aadfa8a8018ad264d43\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://aa7883d7345ead14af97b77c84c959f610ab7d4d728ddcd84498af01b1794792\",\"dweb:/ipfs/QmSzUpZxhPbCzLHBevTAGjgFdPFdE1xzUoFXwgcGrBnFmA\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0x6e00f269073ffc4350e56b7e8153c9092d5f70bfba423299990514183101ef89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc5ff5c204604be7594ce2fa9100a0638f22b5aada6ebec1e165b0f50a48447\",\"dweb:/ipfs/QmfH7uWphPrq8jqwGvyh4pFnLEgEPmLwyGV2Bvx1Acjggh\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"contracts/OrderExtension.sol\":{\"keccak256\":\"0xd569338724dc89d286c2a0603c21c6132002e27ccf1b25648dcd92dcfcc8e7a1\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8abb8dafdada8fdaaeb6fe271c9344ad921529a76a7fabee2167680feb5f20e0\",\"dweb:/ipfs/QmREwLJeZs5pQrEnjhTt3czUEUkGcM9PSHSwhYmk8HPBTc\"]},\"contracts/constants.sol\":{\"keccak256\":\"0xc82f591c7250d760e2f95d53a404bd54462901735a09bc4f5cf8299a913d8e99\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5f592d0d3904607383879d1de941c6c2d8c7554003c3317329b8db003557c1a3\",\"dweb:/ipfs/QmSQFpcTGA7fKcoMBVru4qWApFeuWRsBs5ETLyZZdpdtWd\"]},\"solidity-bytes-utils/contracts/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]}},\"version\":1}"}},"solidity-bytes-utils/contracts/BytesLib.sol":{"BytesLib":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122010281201f4cd8d33317a63de6af85dbfc42033ec62b3c71910695eb68c9ae5be64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT 0x28 SLT ADD DELEGATECALL 0xCD DUP14 CALLER BALANCE PUSH27 0x63DE6AF85DBFC42033EC62B3C71910695EB68C9AE5BE64736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"370:18904:50:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;370:18904:50;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122010281201f4cd8d33317a63de6af85dbfc42033ec62b3c71910695eb68c9ae5be64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT 0x28 SLT ADD DELEGATECALL 0xCD DUP14 CALLER BALANCE PUSH27 0x63DE6AF85DBFC42033EC62B3C71910695EB68C9AE5BE64736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"370:18904:50:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"solidity-bytes-utils/contracts/BytesLib.sol\":\"BytesLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"solidity-bytes-utils/contracts/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]}},\"version\":1}"}}}}}