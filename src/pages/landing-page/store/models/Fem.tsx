/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 fem.glb -t -T
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    fem_1: THREE.Mesh
    fem_2: THREE.Mesh
    fem_3: THREE.Mesh
    fem_4: THREE.Mesh
    fem_5: THREE.Mesh
    fem_6: THREE.Mesh
    fem_7: THREE.Mesh
    fem_8: THREE.Mesh
    fem_9: THREE.Mesh
    fem_10: THREE.Mesh
    fem_11: THREE.Mesh
    fem_12: THREE.Mesh
    fem_13: THREE.Mesh
    fem_14: THREE.Mesh
    fem_15: THREE.Mesh
    fem_16: THREE.Mesh
    fem_17: THREE.Mesh
    fem_18: THREE.Mesh
    fem_19: THREE.Mesh
    fem_20: THREE.Mesh
  }
  materials: {
    Base_texture_FRONT_2299: THREE.MeshStandardMaterial
    Laces_FRONT_2287: THREE.MeshStandardMaterial
    pants_FRONT_131240: THREE.MeshStandardMaterial
    SKIN: THREE.MeshStandardMaterial
  }
}

export default function Female(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/fem-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group rotation={[Math.PI / 2, 0, 0]}>
        <mesh geometry={nodes.fem_1.geometry} material={materials.Base_texture_FRONT_2299} />
        <mesh geometry={nodes.fem_2.geometry} material={materials.Laces_FRONT_2287} />
        <mesh geometry={nodes.fem_3.geometry} material={materials.Laces_FRONT_2287} />
        <mesh geometry={nodes.fem_4.geometry} material={materials.pants_FRONT_131240} />
        <mesh geometry={nodes.fem_5.geometry} material={materials.SKIN} />
        <mesh geometry={nodes.fem_6.geometry} material={materials.SKIN} />
        <mesh geometry={nodes.fem_7.geometry} material={materials.SKIN} />
        <mesh geometry={nodes.fem_8.geometry} material={materials.SKIN} />
        <mesh geometry={nodes.fem_9.geometry} material={materials.SKIN} />
        <mesh geometry={nodes.fem_10.geometry} material={materials.SKIN} />
        <mesh geometry={nodes.fem_11.geometry} material={materials.SKIN} />
        <mesh geometry={nodes.fem_12.geometry} material={materials.SKIN} />
        <mesh geometry={nodes.fem_13.geometry} material={materials.SKIN} />
        <mesh geometry={nodes.fem_14.geometry} material={materials.SKIN} />
        <mesh geometry={nodes.fem_15.geometry} material={materials.SKIN} />
        <mesh geometry={nodes.fem_16.geometry} material={materials.SKIN} />
        <mesh geometry={nodes.fem_17.geometry} material={materials.SKIN} />
        <mesh geometry={nodes.fem_18.geometry} material={materials.SKIN} />
        <mesh geometry={nodes.fem_19.geometry} material={materials.SKIN} />
        <mesh geometry={nodes.fem_20.geometry} material={materials.SKIN} />
      </group>
    </group>
  )
}

useGLTF.preload('/fem-transformed.glb')
